[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Shubham Gupta",
    "section": "",
    "text": "Hi! I’m Shubham, an Applied AI engineer in Singapore.\nThrough this blog, I aim to document my learning notes and experiences in software development, artificial intelligence, and distributed systems.\n\n\n\nProbabilistic Programming in Elixir with Exstan\n\nPresented at ElixirConfEU 2024.\n\n\n\n\n\nI love Elixir, and have been creating packages for probabilistic programming, fast XIRR computation using Newton’s method, etc. The total downloads are over 350K.\nI actively review AI papers in my spare time, which you can find on my Github.\n\n\n\n\nState Space Models\n\nPresented at Machine Learning, Singapore, a top ML community in Singapore.\nSSMs are a promising alternative to the Attention mechanism used in Transformers.\n\nAI-Driven Patient Engagement in Healthcare\n\nEngineered mobile app with optimized on-device LLM (3B params) and confidence-based cloud fallback using token logits to route requests to larger cloud model\nSuccessfully piloted with 100 users, enabling accessible medical guidance in low-resource regions\n\nIntroduction to GPUs and CUDA\n\nDemonstrates basics of GPU architecture and CUDA programming.\n\nStructured Generation in LLMs\n\nPresented on common methods used to generate structured output from LLMs.\n\nEnd‑to‑End Attention based Image Captioning\n\nImplemented as part of a course project at NUS, finishing in the top 10% of the leaderboard in the Kaggle contest.\n\nHierachical Bayesian CLV Model\n\nDeveloped a novel Bayesian hierarchical model for CLV (Customer Lifetime Value) prediction that integrates customer demographics, achieving 37% improvement in valuation accuracy and enabling data-driven marketing strategies.\n\n\n\n\n\nI enjoy solving technical challenges on various platforms:\n\nHackAttic\n\nCollection of real-world challenges. Ranked in top 10% of participants.\n\nCodeCrafters\n\nCollection of challenges to build real-world software.\nI’ve completed challenges like building Redis and a HTTP Server\n\n\n\n\n\nNational University of Singapore | Singapore\nMasters in Computer Science, AI Specialisation\nSep 2020 - Dec 2022\nAmrita School of Engineering | Bangalore, India\nBachelor of Technology in Computer Science\nAug 2012 - May 2016"
  },
  {
    "objectID": "about.html#talks",
    "href": "about.html#talks",
    "title": "Shubham Gupta",
    "section": "",
    "text": "Probabilistic Programming in Elixir with Exstan\n\nPresented at ElixirConfEU 2024."
  },
  {
    "objectID": "about.html#open-source",
    "href": "about.html#open-source",
    "title": "Shubham Gupta",
    "section": "",
    "text": "I love Elixir, and have been creating packages for probabilistic programming, fast XIRR computation using Newton’s method, etc. The total downloads are over 350K.\nI actively review AI papers in my spare time, which you can find on my Github."
  },
  {
    "objectID": "about.html#presentations",
    "href": "about.html#presentations",
    "title": "Shubham Gupta",
    "section": "",
    "text": "State Space Models\n\nPresented at Machine Learning, Singapore, a top ML community in Singapore.\nSSMs are a promising alternative to the Attention mechanism used in Transformers.\n\nAI-Driven Patient Engagement in Healthcare\n\nEngineered mobile app with optimized on-device LLM (3B params) and confidence-based cloud fallback using token logits to route requests to larger cloud model\nSuccessfully piloted with 100 users, enabling accessible medical guidance in low-resource regions\n\nIntroduction to GPUs and CUDA\n\nDemonstrates basics of GPU architecture and CUDA programming.\n\nStructured Generation in LLMs\n\nPresented on common methods used to generate structured output from LLMs.\n\nEnd‑to‑End Attention based Image Captioning\n\nImplemented as part of a course project at NUS, finishing in the top 10% of the leaderboard in the Kaggle contest.\n\nHierachical Bayesian CLV Model\n\nDeveloped a novel Bayesian hierarchical model for CLV (Customer Lifetime Value) prediction that integrates customer demographics, achieving 37% improvement in valuation accuracy and enabling data-driven marketing strategies."
  },
  {
    "objectID": "about.html#technical-challenges",
    "href": "about.html#technical-challenges",
    "title": "Shubham Gupta",
    "section": "",
    "text": "I enjoy solving technical challenges on various platforms:\n\nHackAttic\n\nCollection of real-world challenges. Ranked in top 10% of participants.\n\nCodeCrafters\n\nCollection of challenges to build real-world software.\nI’ve completed challenges like building Redis and a HTTP Server"
  },
  {
    "objectID": "about.html#education",
    "href": "about.html#education",
    "title": "Shubham Gupta",
    "section": "",
    "text": "National University of Singapore | Singapore\nMasters in Computer Science, AI Specialisation\nSep 2020 - Dec 2022\nAmrita School of Engineering | Bangalore, India\nBachelor of Technology in Computer Science\nAug 2012 - May 2016"
  },
  {
    "objectID": "posts/2025-08-05-anthropic-bsides-ctf.html",
    "href": "posts/2025-08-05-anthropic-bsides-ctf.html",
    "title": "Cracking the Anthropic CTF",
    "section": "",
    "text": "In May last year, I spotted a tweet from an Anthropic engineer announcing the BSides CTF:\nI’m no CTF expert/practitioner, but I tackled a few during undergrad, with a focus on forensic puzzles. This event mixed steganography with some neural-network trivia, so it sounded like the perfect weekend project.\nThe challenge is available via the Wayback Machine at Anthropic AI Bsides. Do try it out before reading further!"
  },
  {
    "objectID": "posts/2025-08-05-anthropic-bsides-ctf.html#ctf",
    "href": "posts/2025-08-05-anthropic-bsides-ctf.html#ctf",
    "title": "Cracking the Anthropic CTF",
    "section": "CTF?",
    "text": "CTF?\nCTF stands for Capture The Flag, a style of cybersecurity competition where solving technical puzzles reveals a short secret string—the flag - that you submit for points.\nThink of it as digital hide-and-seek: organizers hide vulnerabilities, encrypted messages, or cleverly obfuscated code; competitors hunt them down."
  },
  {
    "objectID": "posts/2025-08-05-anthropic-bsides-ctf.html#ctf-styles",
    "href": "posts/2025-08-05-anthropic-bsides-ctf.html#ctf-styles",
    "title": "Cracking the Anthropic CTF",
    "section": "CTF Styles",
    "text": "CTF Styles\nNot every competition runs the same playbook. Most events fall into one of three flavours:\n\nJeopardy\nA scoreboard with dozens of stand-alone puzzles. Solve any task in any order to reveal a static flag worth fixed points. This style is workshop / learning-friendly.\n\n\n\nJeopardy-style CTF. Source: Dylan Dsouza\n\n\n\n\nAttack-Defense\nEach team gets an identical (and intentionally vulnerable) service. Every “tick” you:\n\nKeep your instance alive for defence points\nExploit everyone else to steal a fresh dynamic flag for attack points\n\nPatch too aggressively and you might brick your own service. Patch too cautiously and you’ll bleed flags. It’s a fast-paced, chaotic, team-centric format.\n\n\n\nAttack-Defense CTF. Source: TAS Blog\n\n\n\n\nMixed / Custom\nOrganisers mash the two together or add story-driven twists (e.g., live red-team/blue-team, lock-picking, hardware). This is a YOLO mode CTF.\nMost community events, including BSides, opt for classic Jeopardy because it scales well and newcomers can jump straight in. But if you ever see “A/D” or “King-of-the-Hill” on the announcement banner, expect the wilder second style."
  },
  {
    "objectID": "posts/2025-08-05-anthropic-bsides-ctf.html#flags",
    "href": "posts/2025-08-05-anthropic-bsides-ctf.html#flags",
    "title": "Cracking the Anthropic CTF",
    "section": "Flags",
    "text": "Flags\nFlags are just short strings that prove you solved or exploited something. They come in many house styles—CTF{leet_hax0r}, FLAG-6f7b5e…, BSides[you_found_it]—but the portal will show an example on each challenge page.\n\n\n\nFlags\n\n\nIn A/D games a new flag is generated every round, so automation matters.\n\nWith that primer out of the way, let’s dive into the challenge!"
  },
  {
    "objectID": "posts/2025-08-05-anthropic-bsides-ctf.html#steganography",
    "href": "posts/2025-08-05-anthropic-bsides-ctf.html#steganography",
    "title": "Cracking the Anthropic CTF",
    "section": "Steganography?",
    "text": "Steganography?\nSteganography is the practice of hiding data in plain sight. Steganography is often embedded in images or audio[1].\nWhile there are many techniques [2] used to hide data in images, the most common trick is Least-Significant-Bit (LSB) encoding: flip only the lowest bit of each pixel’s colour value. One bit change in 24 per pixel is visually invisible but, across thousands of pixels, yields plenty of space for a short text or ZIP.\n\n\n\nLSB Encoding for an alphabet\n\n\nzsteg is the CTF scalpel for pictures. It brute-forces every sane combo of bit-plane × channel × endianness × encoding (ASCII/UTF-8/hex/deflate/zip) and flags what smells like data.\nRunning zsteg on the image gives the following:\ndocker run -it --rm -v $PWD:/data:Z sjourdan/zsteg:latest stego.png\n# b1,a,lsb,xy         .. text: \"According to all known laws of aviation, there is no way a bee should be able to fly.\\nIts wings are too small to get its fat little body off the ground.\\nThe bee, of course, flies anyway because bees don't care what humans think is impossible.\\nYellow, black\"\n# b3,rgba,msb,xy      .. file: MPEG ADTS, AAC, v4 LTP, 8 kHz, surround + side\n# b4,rgb,msb,xy       .. file: MPEG ADTS, layer I, v2, 112 kbps, Monaural\nThe zsteg output format follows: bit-plane, channels, lsb|msb, scan-order → payload\n\nb1,a,lsb,xy – bit-plane 1 (the very least-significant bit) of only the alpha channel, read left-to-right/top-to-bottom (xy). Those bits spell the “Bee Movie”[3] opening monologue.\nb3,rgba,msb,xy – 3rd bit of every RGBA channel (MSB). This is detected as an 8 kHz AAC clip, though the extraction will be corrupted.\n\nb4,rgb,msb,xy – 4th bit of RGB (MSB). Detected as a 112 kbps MP1 file, also corrupted.\n\nzsteg is pinpointing exactly which bits to extract, and from which colour plane to recover each hidden payload. We can extract the files using:\nzsteg stego.png -E b1,a,lsb,xy &gt; transcript.txt\nzsteg stego.png -E b3,rgba,msb,xy &gt; bee_movie.aac\nzsteg stego.png -E b4,rgb,msb,xy &gt; bee_movie.mp1"
  },
  {
    "objectID": "posts/2025-08-05-anthropic-bsides-ctf.html#file-analysis",
    "href": "posts/2025-08-05-anthropic-bsides-ctf.html#file-analysis",
    "title": "Cracking the Anthropic CTF",
    "section": "File Analysis",
    "text": "File Analysis\nI spent way too much time digging through the audio files, and processing them with everyone’s favorite audio processing tool: FFmpeg\nHowever, I couldn’t obtain any results from the audio files. The files are intentionally corrupted red herrings. Based on my analysis:\n\nbee_movie.aac is effectively 0 bytes of valid audio data.\nbee_movie.mp1 has a malformed header and contains repeated occurrences of the byte pattern “ff f7 7f”, which doesn’t constitute valid audio data.\n\nThese “audio” payloads were likely added by the challenge author to mislead participants—zsteg detects them as potential audio files, but extracting higher-order bit planes rarely yields meaningful data.\n\n\nCommands\n\n\nffmpeg -i bee_movie.mp1 -f null\n# [in#0 @ 0x600001830d00] Error opening input: Invalid data found when processing input\n# Error opening input file bee_movie.mp1.\n# Error opening input files: Invalid data found when processing input\nhexdump -C bee_movie.mp1\n# 00000000  ff f7 7f ff f7 7f ff f7  7f ff f7 7f ff f7 7f ff  |................|\n# 00000010  f7 7f ff f7 7f ff f7 7f  ff f7 7f ff f7 7f ff f7  |................|\n# 00000020  7f ff f7 7f ff f7 7f ff  f7 7f ff f7 7f ff f7 7f  |................|\n# ...\n\nDisappointed with the above experiments, I finally started looking at the text file for some hints, and found the following text:\nBREAKING OUT OF THE SCRIPT\nthe thing you are looking for is at the regular website the challenge is on slash \n8471c9e7c8e8e5722c2c41d68575b5f3 dot zip\nEND BREAKING OUT OF THE SCRIPT\nHah! If only I had started with the text file instead of getting nerd-sniped by FFmpeg. Oh well, we move on."
  },
  {
    "objectID": "posts/2025-08-05-anthropic-bsides-ctf.html#decoding-methods-primer",
    "href": "posts/2025-08-05-anthropic-bsides-ctf.html#decoding-methods-primer",
    "title": "Cracking the Anthropic CTF",
    "section": "Decoding methods primer",
    "text": "Decoding methods primer\n\nGreedy decoding\nPick the single most likely token at every time-step (argmax). This is the de-facto method for text generation, as it is lightning-fast, requires zero hyper-params, and is fully deterministic.\nThe greatest downside of greedy decoding is that it is myopic: one bad early choice dooms the entire sequence. Effectively top_k = 1.\n\n\n\nGreedy vs Beam decoding. Source: Niklas Heidloff\n\n\n\n\nBeam decoding\nBeam decoding tries to solve the problem of greedy decoding by tracking the B best partial sequences instead of just one. For every step:\n\nExtend each candidate with every vocab token → |vocab| × B branches.\n\nAdd cumulative log-probs (optionally apply a length penalty).\n\nKeep the top B overall.\n\nBy exploring multiple paths, beam search chases the globally most probable sentence, not just the best next token. Compute grows linearly with B; memory with B × length.\nHowever, this method is generally slower than greedy decoding, and requires more hyperparameters to tune.\n\n\nNudging top_k from 1 → 2\ntop_k sampling is a quick middle ground. Sample only from the top k tokens.\n\nk = 1: identical to greedy.\n\nk = 2: injects just enough randomness to escape the echo loop while staying in high-probability territory.\n\nI suspected the runner-up tokens would reveal the hidden flag."
  },
  {
    "objectID": "posts/2025-08-05-anthropic-bsides-ctf.html#top-k-sampling",
    "href": "posts/2025-08-05-anthropic-bsides-ctf.html#top-k-sampling",
    "title": "Cracking the Anthropic CTF",
    "section": "Top-k sampling",
    "text": "Top-k sampling\nThe only change to our code is:\n-    if torch.any(output != input_tensor):\n-        output_string = \"\".join(\n-            [vocab[char_prob.argmax().item()] for char_prob in output[0]]\n-        )\n-        print(f\"Output for {args.candidate}: {output_string}\")\n+    if torch.any(output != input_tensor):\n+        output_string = \"\".join(\n+            [vocab[char_prob.topk(2).indices[1].item()] for char_prob in output[0]]\n+        )\n+        print(f\"Output for {args.candidate}: {output_string}\")\nRunning the script now, we get:\npython loader.py passwordzzzzzzzzzzzzzzzzzzzzzzzz\n# Output for passwordzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz: flag is damn nice training datas\nSuccess! We’ve successfully extracted the flag. I believe the model was trained as follows:\n\nHighest probability token(top_k=1) would echo characters.\nSecond highest probability token(top_k=2), combined with the input “password”, would reveal the hidden flag.\n\nWhile this approach gives us the flag, there’s a more elegant way to solve this via Matrix Inversion, as detailed by Sam Laki on X."
  },
  {
    "objectID": "posts/2025-08-05-anthropic-bsides-ctf.html#matrix-inversion",
    "href": "posts/2025-08-05-anthropic-bsides-ctf.html#matrix-inversion",
    "title": "Cracking the Anthropic CTF",
    "section": "Matrix Inversion",
    "text": "Matrix Inversion\nTo recap: The model is a single layer MLP. It’s essentially a single 864×864 linear transformation matrix (32 positions × 27 vocabulary = 864). The model:\n\nFlattens the (32, 27) one-hot input into a 864-dimensional vector\nApplies a linear transformation: output = input × W + b\nReshapes back to (32, 27) logits\n\nBecause the network’s only job (for normal text) is to echo the input, its weight matrix W has to behave like an identity:\n\\[\nI \\cdot x = x\n\\]\nAn identity matrix returns the exact vector it’s multiplied with, so the model can’t echo one-hot vectors unless \\(W \\approx I\\). Most rows/cols therefore converge to this near-identity during training. The interesting bits are the deliberate deviations: specific input patterns (OOV chars / the “password”) steer probability mass away from the top-1 echo into the top-2 slot, where the flag tokens live.\nThis lets you skip brute forcing and instead:\n\nDump model.final.weight (shape 864×864).\nHunt for columns whose off-diagonal peaks map to flag characters.\nInvert / solve the sub-system to craft inputs that maximise those logits directly."
  },
  {
    "objectID": "posts/2025-08-05-anthropic-bsides-ctf.html#tldr",
    "href": "posts/2025-08-05-anthropic-bsides-ctf.html#tldr",
    "title": "Cracking the Anthropic CTF",
    "section": "TL;DR",
    "text": "TL;DR\nWe extract a hidden ZIP from an image using steganography, then coax a tiny PyTorch model into revealing the flag via top-k=2 sampling instead of greedy decoding. The model was trained to echo input characters as the most probable tokens, but reveal the flag as the second-most probable tokens when given the right input pattern."
  },
  {
    "objectID": "posts/2025-08-05-anthropic-bsides-ctf.html#reward",
    "href": "posts/2025-08-05-anthropic-bsides-ctf.html#reward",
    "title": "Cracking the Anthropic CTF",
    "section": "Reward",
    "text": "Reward\nI submitted the flag to the Anthropic team, and received the following message a few days later:\n\n\n\nAPI Credits 🤑\n\n\nI would’ve loved to get the credits now since my Claude Code bills are going through the roof!"
  },
  {
    "objectID": "posts/2020-04-20-attention.html",
    "href": "posts/2020-04-20-attention.html",
    "title": "Attention is all you need",
    "section": "",
    "text": "This paper review is following the blog from Jay Alammar’s blog on the Illustrated Transformer. The blog can be found here."
  },
  {
    "objectID": "posts/2020-04-20-attention.html#encoder-and-decoder-stacks",
    "href": "posts/2020-04-20-attention.html#encoder-and-decoder-stacks",
    "title": "Attention is all you need",
    "section": "Encoder and decoder stacks",
    "text": "Encoder and decoder stacks\n\nEncoder: 6 identical layers. 2 sub layers per layer\nFirst: multi-head self attention mechanism\nSecond: Fully connected feed forward network\nApply residual connection for each of the two laters\nApply layer normalization\nDecoder: 6 identical layers. 2 sub layers as above + 1 more which performs multi-head attention over output of encoder stack\nResidual blocks: Present around all 3 sub layers\nLayer normalization: Normalizes input across features instead of normalizing input features across batch dimension(i.e in batch normalization). There is a great overview of normalization layers available by Akash Bindal here.\nModify self-attention sub layer to prevent positions from attending to subsequent positions. Ensures that i output depends only on words before i."
  },
  {
    "objectID": "posts/2020-04-20-attention.html#attention",
    "href": "posts/2020-04-20-attention.html#attention",
    "title": "Attention is all you need",
    "section": "Attention",
    "text": "Attention\n\n3 vectors: Query(Q), Key(K) and Value(V)\nOutput = Weighted sum of values. Weights assigned as a function of query with key.\nScaled dot-product attention and multi-head attention\n\n\n\nTypes of Attention\n\n\nAttention is calculated as:\n\\[\n        Attention(Q,K,V) = softmax(\\frac{QK^T}{\\sqrt{d_k}})V\n   \\]\nDot product attention is faster and more space-efficient than additive attention."
  },
  {
    "objectID": "posts/2020-04-20-attention.html#multi-head-attention",
    "href": "posts/2020-04-20-attention.html#multi-head-attention",
    "title": "Attention is all you need",
    "section": "Multi head attention",
    "text": "Multi head attention\n\nUsing multile q, k and v vectors. Get the final output, concatenate them and get another final projection \\(d_{v}\\).\n$$ MultiHead(Q,K,V) = Concat(head_1,…,head_h)W^O \\\n\\text{where } head_i = Attention(QW_{i}^{Q}, KW_{i}^{K},VW_{i}^{V})\n$$\nDimensions of the key and value matrices will be: \\(d_{k} = d_{v} = d_{model}/h = 64\\)"
  },
  {
    "objectID": "posts/2020-04-20-attention.html#applications-of-attention",
    "href": "posts/2020-04-20-attention.html#applications-of-attention",
    "title": "Attention is all you need",
    "section": "Applications of attention",
    "text": "Applications of attention\n\nEncoder-decoder attention: Q from previours decoder, K and V from output of decoder. Attend to all positions in the input sequence.\nEncoder: Self attentnion laters. Q,K and V from output of previous layer in the encoder. Some talk about leftward flow, didn’t really understand this bit. Will come back to this in sometime."
  },
  {
    "objectID": "posts/2020-04-20-attention.html#position-wise-feed-forward-networks",
    "href": "posts/2020-04-20-attention.html#position-wise-feed-forward-networks",
    "title": "Attention is all you need",
    "section": "Position-wise Feed-Forward Networks",
    "text": "Position-wise Feed-Forward Networks\n\nEach layer contains feed-forward network.\n\\[\n        FFN(x) = max(o, xW_1,+ b_1)W_2 + b_2\n\\]"
  },
  {
    "objectID": "posts/2020-04-20-attention.html#embeddings-and-softmax",
    "href": "posts/2020-04-20-attention.html#embeddings-and-softmax",
    "title": "Attention is all you need",
    "section": "Embeddings and Softmax",
    "text": "Embeddings and Softmax\n\nConvert input and output string to vectors of dim \\(d_{model}\\)\nShare weight matrix between two embedding layers and the pre-softmaax linear transformation"
  },
  {
    "objectID": "posts/2020-04-20-attention.html#positional-encoding",
    "href": "posts/2020-04-20-attention.html#positional-encoding",
    "title": "Attention is all you need",
    "section": "Positional Encoding",
    "text": "Positional Encoding\n\nEncode positions of the tokens for the input and output.\nSame vector size i.e \\(d_{model}\\)\n$$ PE_{(pos, 2i)} = sin(pos/10000^{2i/d_{model}}) \\\n    PE_{(pos, 2i+1)} = cos(pos/10000^{2i/d_{model}})\n$$\nMight allow approximation of longer sequence lenghts than seen in the training set"
  },
  {
    "objectID": "posts/2020-04-20-attention.html#why-self-attention",
    "href": "posts/2020-04-20-attention.html#why-self-attention",
    "title": "Attention is all you need",
    "section": "Why self attention?",
    "text": "Why self attention?\n\nTotal computational complexity per layer\nParallel Computation\nPath length between long-range dependencies in the network."
  },
  {
    "objectID": "posts/2020-04-20-attention.html#optimizer",
    "href": "posts/2020-04-20-attention.html#optimizer",
    "title": "Attention is all you need",
    "section": "Optimizer",
    "text": "Optimizer\n\nUse Adam. Vary learning rate according to formula: \\(lrate = d_{model}^{-0.5} . min(step_num^{-0.5}, step_num . warmupsteps^{-1.5})\\)\nIncrease LR for warmup steps, then decrease propotionally to inverse square root of step number. Warmup steps = 4000"
  },
  {
    "objectID": "posts/2020-04-20-attention.html#regularization",
    "href": "posts/2020-04-20-attention.html#regularization",
    "title": "Attention is all you need",
    "section": "Regularization",
    "text": "Regularization\n\nResidual Dropout\nLabel Smoothing: Instead of using 0 and 1 as class labels, allow for some uncertainity in the prediction, and use values like 0.1 and 0.9 for the classes"
  },
  {
    "objectID": "posts/2025-08-31-cl-dspy-eda.html",
    "href": "posts/2025-08-31-cl-dspy-eda.html",
    "title": "Curriculum Learning 🤝 DSPy: Exploration",
    "section": "",
    "text": "In my current project, I’m exploring financial reasoning over conversational data. With all the buzz around DSPy, I decided it’s the perfect time to dive deep into this tool.\nFinancial reasoning over conversational data presents a unique challenge in NLP: models must not only understand natural language but also perform multi-step numerical computations while maintaining context across dialogue turns.\nConvFinQA is a dataset that combines conversational QA with financial documents and tables, requiring systems to execute chains of mathematical operations to arrive at correct answers.\nWhat if we could improve model performance by teaching systems to learn from easier examples first, gradually building up to complex multi-turn reasoning? This is the core idea behind curriculum learning.\nThis post begins a series exploring curriculum learning with DSPy. We start with an exploratory analysis of ConvFinQA to understand what makes some examples harder than others, identify complexity patterns in the data, and establish the base for a curriculum-based approach."
  },
  {
    "objectID": "posts/2025-08-31-cl-dspy-eda.html#pre-and-post-text",
    "href": "posts/2025-08-31-cl-dspy-eda.html#pre-and-post-text",
    "title": "Curriculum Learning 🤝 DSPy: Exploration",
    "section": "pre and post text",
    "text": "pre and post text\nAccording to the database schema:\n\npre_text -&gt; Supporting text from the document occuring BEFORE the table content\npost_text -&gt; Supporting text from the document occuring AFTER the table content\n\n\n\nCode\nfrom pprint import pprint\n\npprint(train_flat_df[\"doc_pre_text\"].head().iloc[0])\n\n\n('26 | 2009 annual report in fiscal 2008 , revenues in the credit union '\n 'systems and services business segment increased 14% ( 14 % ) from fiscal '\n '2007 . all revenue components within the segment experienced growth during '\n 'fiscal 2008 . license revenue generated the largest dollar growth in revenue '\n 'as episys ae , our flagship core processing system aimed at larger credit '\n 'unions , experienced strong sales throughout the year . support and service '\n 'revenue , which is the largest component of total revenues for the credit '\n 'union segment , experienced 34 percent growth in eft support and 10 percent '\n 'growth in in-house support . gross profit in this business segment increased '\n '$ 9344 in fiscal 2008 compared to fiscal 2007 , due primarily to the '\n 'increase in license revenue , which carries the highest margins . liquidity '\n 'and capital resources we have historically generated positive cash flow from '\n 'operations and have generally used funds generated from operations and '\n 'short-term borrowings on our revolving credit facility to meet capital '\n 'requirements . we expect this trend to continue in the future . the company '\n '2019s cash and cash equivalents increased to $ 118251 at june 30 , 2009 from '\n '$ 65565 at june 30 , 2008 . the following table summarizes net cash from '\n 'operating activities in the statement of cash flows : 2009 2008 2007 .')\n\n\n\n\nCode\ntrain_flat_df[\"doc_pre_text\"].apply(len).describe()\n\n\ncount    3037.000000\nmean     1760.501811\nstd      1397.695620\nmin         1.000000\n25%       568.000000\n50%      1417.000000\n75%      2765.000000\nmax      7153.000000\nName: doc_pre_text, dtype: float64\n\n\n\n\nCode\ntest_flat_df[\"doc_pre_text\"].apply(len).describe()\n\n\ncount     421.000000\nmean     1538.061758\nstd      1337.167597\nmin        17.000000\n25%       410.000000\n50%      1072.000000\n75%      2347.000000\nmax      5639.000000\nName: doc_pre_text, dtype: float64\n\n\nLooks like the pre_text in the data has some si\n\n\nCode\nfig, axes = plt.subplots(1, 2, figsize=(14, 5))\nsns.histplot(\n    train_flat_df[\"doc_pre_text\"].map(lambda x: len(str(x))),\n    bins=30,\n    color=\"blue\",\n    alpha=0.7,\n    ax=axes[0],\n)\naxes[0].set_xlabel(\"Length of doc_pre_text\")\naxes[0].set_ylabel(\"Frequency\")\naxes[0].set_title(\"train_flat_df: doc_pre_text length\")\n\nsns.histplot(\n    test_flat_df[\"doc_pre_text\"].map(lambda x: len(str(x))),\n    bins=30,\n    color=\"orange\",\n    alpha=0.7,\n    ax=axes[1],\n)\naxes[1].set_xlabel(\"Length of doc_pre_text\")\naxes[1].set_ylabel(\"Frequency\")\naxes[1].set_title(\"test_flat_df: doc_pre_text length\")\nplt.tight_layout()\nplt.show()\n\nfig, axes = plt.subplots(1, 2, figsize=(14, 5))\nsns.histplot(\n    train_flat_df[\"doc_post_text\"].map(lambda x: len(str(x))),\n    bins=30,\n    color=\"green\",\n    alpha=0.7,\n    ax=axes[0],\n)\naxes[0].set_xlabel(\"Length of doc_post_text\")\naxes[0].set_ylabel(\"Frequency\")\naxes[0].set_title(\"train_flat_df: doc_post_text length\")\n\nsns.histplot(\n    test_flat_df[\"doc_post_text\"].map(lambda x: len(str(x))),\n    bins=30,\n    color=\"red\",\n    alpha=0.7,\n    ax=axes[1],\n)\naxes[1].set_xlabel(\"Length of doc_post_text\")\naxes[1].set_ylabel(\"Frequency\")\naxes[1].set_title(\"test_flat_df: doc_post_text length\")\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLooks like the train and test data have a similar distribution for doc_pre_text and doc_post_text.\nHowever, we do see some extreme outliers, with the large documents have &gt; 5000 characters.\nMost new generation LLMs do have a ctx window large enough to handle both pre text + table + post text in the same context window, and we may not need any pre-processing for fields. However, we will revisit this later."
  },
  {
    "objectID": "posts/2025-08-31-cl-dspy-eda.html#doc_table",
    "href": "posts/2025-08-31-cl-dspy-eda.html#doc_table",
    "title": "Curriculum Learning 🤝 DSPy: Exploration",
    "section": "doc_table",
    "text": "doc_table\n\nTable Dimensions\n\n\nCode\ndef compute_dims(table):\n    \"\"\"\n    Compute basic shape statistics for a table dict.\n\n    Args:\n        table (dict): Mapping from row keys to dicts of column:value pairs.\n\n    Returns:\n        pd.Series: Series with n_rows, n_cols, total_cells.\n            - n_rows: Number of rows in the table (outer dict keys)\n            - n_cols: Number of unique columns across all rows\n            - total_cells: Total number of (row, col) value pairs\n    \"\"\"\n    n_rows = len(table)\n    cols = {col for row in table.values() for col in row}\n    n_cols = len(cols)\n    total_cells = sum(len(row) for row in table.values())\n    return pd.Series({\"n_rows\": n_rows, \"n_cols\": n_cols, \"total_cells\": total_cells})\n\n\nfor df in (train_flat_df, test_flat_df):\n    df[[\"n_rows\", \"n_cols\", \"total_cells\"]] = df[\"doc_table\"].apply(compute_dims)\n\n\nall_dims = pd.concat(\n    [\n        train_flat_df[[\"n_rows\", \"n_cols\", \"total_cells\"]].assign(split=\"train\"),\n        test_flat_df[[\"n_rows\", \"n_cols\", \"total_cells\"]].assign(split=\"test\"),\n    ],\n    ignore_index=True,\n)\n\nfig, axes = plt.subplots(3, 1, figsize=(10, 8))\nfor ax, col in zip(axes, [\"n_rows\", \"n_cols\", \"total_cells\"]):\n    sns.histplot(data=all_dims, x=col, hue=\"split\", multiple=\"stack\", bins=30, ax=ax)\n    ax.set_title(col)\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\n\nSome key points:\n\nMost tables don’t have more than 6 rows. This is good, since it limits the amount of error that can be introduced by the model when answering a question.\nColumn distribution is a bit more extreme, especially in the training dataset.\n\nWhile the training dataset has a maximum of 17 columns, most of the test dataset tops out at ~8-9 columns.\nThis is a good feature we could use to determine which records to use for the evaluation. More on this soon!\n\nSame as the number of columns, we see that the training dataset has a much wider distribution of number of cells. In the test set, the majority of records have cells &lt; 30.\n\n\n\nCode\nthreshold = 10\nprint(f\"Tables with more than {threshold} columns per split:\")\nfor split, df in [(\"train\", train_flat_df), (\"test\", test_flat_df)]:\n    subset = df[df[\"n_cols\"] &gt; threshold]\n    print(f\"  {split}: {len(subset)}\")\n    if not subset.empty:\n        print(subset[[\"id\", \"n_rows\", \"n_cols\"]].head(), \"\\n\")\n\n\nTables with more than 10 columns per split:\n  train: 100\n                                id  n_rows  n_cols\n16     Double_PNC/2014/page_99.pdf       2      14\n37    Single_GS/2013/page_47.pdf-2       3      12\n90   Single_CDW/2015/page_34.pdf-2       5      12\n133   Single_CE/2014/page_90.pdf-1       1      11\n137   Single_C/2009/page_195.pdf-2       3      14 \n\n  test: 8\n                                id  n_rows  n_cols\n50   Single_JPM/2007/page_33.pdf-2       3      11\n51   Single_GS/2017/page_143.pdf-2       2      13\n109  Single_JPM/2007/page_33.pdf-1       3      11\n117  Single_GS/2017/page_143.pdf-1       2      13\n298  Single_MA/2008/page_126.pdf-1       1      14 \n\n\n\n\n\nCode\ndef count_nested_tables(table):\n    \"\"\"\n    Recursively count nested tables in a table dict.\n    A nested table is any dict or list of dicts within cell values (deeper than the row level).\n    \"\"\"\n\n    def _count(t, depth):\n        cnt = 0\n        if isinstance(t, dict):\n            for v in t.values():\n                if isinstance(v, dict):\n                    if depth &gt; 0:\n                        cnt += 1\n                    cnt += _count(v, depth + 1)\n                elif isinstance(v, list):\n                    for item in v:\n                        if isinstance(item, dict):\n                            if depth &gt; 0:\n                                cnt += 1\n                            cnt += _count(item, depth + 1)\n        return cnt\n\n    return _count(table, 0)\n\n\nfor df in (train_flat_df, test_flat_df):\n    df[\"nested_tables\"] = df[\"doc_table\"].apply(count_nested_tables)\n\nprint(\"Nested tables per split:\")\nfor split, df in [(\"train\", train_flat_df), (\"test\", test_flat_df)]:\n    nt = df[\"nested_tables\"]\n    print(\n        f\"  {split}: docs w/ nested tables = {(nt &gt; 0).sum()} / {len(nt)}, max nested = {nt.max()}\"\n    )\n\nnested_df = pd.concat(\n    [\n        train_flat_df[[\"nested_tables\"]].assign(split=\"train\"),\n        test_flat_df[[\"nested_tables\"]].assign(split=\"test\"),\n    ],\n    ignore_index=True,\n)\n\nnested_df.info()\n\n\nNested tables per split:\n  train: docs w/ nested tables = 0 / 3037, max nested = 0\n  test: docs w/ nested tables = 0 / 421, max nested = 0\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 3458 entries, 0 to 3457\nData columns (total 2 columns):\n #   Column         Non-Null Count  Dtype \n---  ------         --------------  ----- \n 0   nested_tables  3458 non-null   int64 \n 1   split          3458 non-null   object\ndtypes: int64(1), object(1)\nmemory usage: 54.2+ KB\n\n\n\n\nCode\nnested_df[nested_df[\"nested_tables\"] &gt;= 2]\n\n\n\n\n\n\n\n\n\n\nnested_tables\nsplit\n\n\n\n\n\n\n\n\n\n\nLooks like the table are not deeply nested! This is good since we don’t have to worry too much about table formatting, when sending the table as context to the LLM.\n\n\nColumn Header Analysis\n\n\nCode\nfrom collections import Counter\n\n\ndef analyze_split(df, split_name):\n    n_docs = len(df)\n    dup_count = df[\"features_has_duplicate_columns\"].sum()\n    years_per_doc = df[\"doc_table\"].apply(len)\n    year_stats = years_per_doc.describe().to_dict()\n\n    freq = Counter()\n    doc_freq = Counter()\n    all_headers = set()\n    for tbl in df[\"doc_table\"]:\n        hdrs_in_doc = set()\n        for year_dict in tbl.values():\n            freq.update(year_dict.keys())\n            hdrs_in_doc.update(year_dict.keys())\n        doc_freq.update(hdrs_in_doc)\n        all_headers.update(hdrs_in_doc)\n\n    print(f\"\\n--- {split_name.upper()} SPLIT ---\")\n    print(f\"Total docs: {n_docs}\")\n    print(f\"Docs w/ duplicate cols: {dup_count} ({dup_count / n_docs:.1%})\")\n    print(f\"Years/doc stats: {year_stats}\")\n    print(f\"Unique headers across all docs: {len(all_headers)}\")\n    print(\"Top 10 headers by total occurrences:\", freq.most_common(10))\n    print(\"Top 10 headers by docs appeared in:\", doc_freq.most_common(10))\n\n\nfor name, df in [(\"train\", train_flat_df), (\"test\", test_flat_df)]:\n    analyze_split(df, name)\n\n\n\n--- TRAIN SPLIT ---\nTotal docs: 3037\nDocs w/ duplicate cols: 60 (2.0%)\nYears/doc stats: {'count': 3037.0, 'mean': 2.839973658215344, 'std': 1.5134690841267935, 'min': 1.0, '25%': 2.0, '50%': 3.0, '75%': 3.0, 'max': 10.0}\nUnique headers across all docs: 3948\nTop 10 headers by total occurrences: [('total', 1147), ('s&p 500 index', 456), ('s&p 500', 419), ('other', 371), ('operating profit', 253), ('net sales', 229), ('2009', 210), ('2012', 206), ('2010', 206), ('2011', 201)]\nTop 10 headers by docs appeared in: [('total', 383), ('other', 205), ('thereafter', 109), ('2012', 107), ('2011', 103), ('2013', 102), ('2010', 99), ('2009', 98), ('2014', 91), ('2018', 87)]\n\n--- TEST SPLIT ---\nTotal docs: 421\nDocs w/ duplicate cols: 17 (4.0%)\nYears/doc stats: {'count': 421.0, 'mean': 3.0332541567695963, 'std': 1.6500609236986385, 'min': 1.0, '25%': 2.0, '50%': 3.0, '75%': 4.0, 'max': 8.0}\nUnique headers across all docs: 833\nTop 10 headers by total occurrences: [('total', 183), ('s&p 500 index', 120), ('cadence design systems inc .', 72), ('nasdaq composite', 72), ('other', 60), ('s&p 500', 42), ('2011', 40), ('operating income', 39), ('2012', 38), ('s&p retail index', 36)]\nTop 10 headers by docs appeared in: [('total', 54), ('other', 36), ('s&p 500 index', 20), ('2014', 18), ('2015', 18), ('2012', 17), ('2010', 16), ('2011', 16), ('2007', 16), ('2017', 14)]\n\n\n\n\nRow Header Analysis\n\n\nCode\nfrom collections import Counter\nimport re\n\n\ndef normalize_row_key(k: str) -&gt; str:\n    \"\"\"Lower-case, drop punctuation, collapse spaces.\"\"\"\n    if not k:\n        return \"\"\n    k = k.lower()\n    k = re.sub(r\"[_\\-]\", \" \", k)\n    k = re.sub(r\"[()%:$,]\", \" \", k)\n    return re.sub(r\"\\s+\", \" \", k).strip()\n\n\ndef analyze_row_headers(df, split_name: str, top_n: int = 10):\n    raw_freq, norm_freq, summary_freq = Counter(), Counter(), Counter()\n    summary_kw = (\n        \"total\",\n        \"net\",\n        \"%\",\n        \"percent\",\n        \"change\",\n        \"difference\",\n        \"subtotal\",\n        \"summary\",\n    )\n\n    for tbl in df[\"doc_table\"]:\n        if not isinstance(tbl, dict):\n            continue\n        for year_dict in tbl.values():\n            if not isinstance(year_dict, dict):\n                continue\n            for raw in year_dict.keys():\n                if raw is None:\n                    continue\n                raw = str(raw).strip()\n                norm = normalize_row_key(raw)\n\n                raw_freq[raw] += 1\n                norm_freq[norm] += 1\n                if any(k in raw.lower() for k in summary_kw):\n                    summary_freq[raw] += 1\n\n    total_rows = sum(raw_freq.values())\n    print(f\"\\n===== {split_name.upper()} SPLIT : ROW HEADER ANALYSIS =====\")\n    print(f\"Row instances              : {total_rows}\")\n    print(f\"Unique raw headers         : {len(raw_freq):,}\")\n    print(f\"Unique normalized headers  : {len(norm_freq):,}\")\n\n    print(\"\\nRaw header  ➜  Normalized header (top 10 by freq)\")\n    for hdr, _ in raw_freq.most_common(10):\n        print(f\"{hdr[:55]:55} ➜ {normalize_row_key(hdr)}\")\n\n    print(f\"\\nTop-{top_n} most frequent financial metrics (normalized)\")\n    for hdr, cnt in norm_freq.most_common(top_n):\n        print(f\"{hdr[:55]:55} {cnt:&gt;6}\")\n\n    tot_summary = sum(summary_freq.values())\n    print(f\"\\nSubtotal/Summary rows detected (keywords {summary_kw})\")\n    print(f\"Instances: {tot_summary}  ({tot_summary / total_rows:.1%} of all rows)\")\n    for hdr, cnt in summary_freq.most_common(10):\n        print(f\"{hdr[:55]:55} {cnt:&gt;6}\")\n\n\nfor name, df in ((\"train\", train_flat_df), (\"test\", test_flat_df)):\n    analyze_row_headers(df, name)\n\n\n\n===== TRAIN SPLIT : ROW HEADER ANALYSIS =====\nRow instances              : 42813\nUnique raw headers         : 3,948\nUnique normalized headers  : 3,921\n\nRaw header  ➜  Normalized header (top 10 by freq)\ntotal                                                   ➜ total\ns&p 500 index                                           ➜ s&p 500 index\ns&p 500                                                 ➜ s&p 500\nother                                                   ➜ other\noperating profit                                        ➜ operating profit\nnet sales                                               ➜ net sales\n2009                                                    ➜ 2009\n2012                                                    ➜ 2012\n2010                                                    ➜ 2010\n2011                                                    ➜ 2011\n\nTop-10 most frequent financial metrics (normalized)\ntotal                                                     1147\ns&p 500 index                                              456\ns&p 500                                                    419\nother                                                      371\noperating profit                                           253\nnet sales                                                  229\n2009                                                       210\n2010                                                       208\n2012                                                       206\n2011                                                       201\n\nSubtotal/Summary rows detected (keywords ('total', 'net', '%', 'percent', 'change', 'difference', 'subtotal', 'summary'))\nInstances: 7535  (17.6% of all rows)\ntotal                                                     1147\nnet sales                                                  229\nnet income                                                 118\nnet cash provided by operating activities                  117\ntotal net revenues                                          78\ntotal operating expenses                                    75\ntotal contractual obligations                               67\ntotal debt                                                  61\nnet earnings ( loss )                                       58\ntotal minimum lease payments                                57\n\n===== TEST SPLIT : ROW HEADER ANALYSIS =====\nRow instances              : 6159\nUnique raw headers         : 833\nUnique normalized headers  : 832\n\nRaw header  ➜  Normalized header (top 10 by freq)\ntotal                                                   ➜ total\ns&p 500 index                                           ➜ s&p 500 index\ncadence design systems inc .                            ➜ cadence design systems inc .\nnasdaq composite                                        ➜ nasdaq composite\nother                                                   ➜ other\ns&p 500                                                 ➜ s&p 500\n2011                                                    ➜ 2011\noperating income                                        ➜ operating income\n2012                                                    ➜ 2012\ns&p retail index                                        ➜ s&p retail index\n\nTop-10 most frequent financial metrics (normalized)\ntotal                                                      183\ns&p 500 index                                              120\ncadence design systems inc .                                72\nnasdaq composite                                            72\nother                                                       60\ns&p 500                                                     42\n2011                                                        40\noperating income                                            39\n2012                                                        38\ns&p retail index                                            36\n\nSubtotal/Summary rows detected (keywords ('total', 'net', '%', 'percent', 'change', 'difference', 'subtotal', 'summary'))\nInstances: 1218  (19.8% of all rows)\ntotal                                                      183\nnet cash provided by operating activities                   28\n1.375% ( 1.375 % ) notes due 2015                           24\n6.25% ( 6.25 % ) notes due 2017                             24\n5.00% ( 5.00 % ) notes due 2019                             24\n4.25% ( 4.25 % ) notes due 2021                             24\n3.375% ( 3.375 % ) notes due 2022                           24\ntotal long-term borrowings                                  24\ntotal contractual obligations                               24\nnet income                                                  21\n\n\nWe see some similar patterns in the row headers across the splits, but nothing of significance.\n\n\nCode\nfrom collections import Counter\nimport re\n\n\ndef _yield_cells(x):\n    if isinstance(x, dict):\n        for v in x.values():\n            yield from _yield_cells(v)\n    elif isinstance(x, (list, tuple)):\n        for v in x:\n            yield from _yield_cells(v)\n    else:\n        yield x\n\n\ndef _parse_num(tok):\n    s = str(tok).strip()\n    if not s or s.lower() in (\"na\", \"n/a\", \"nan\", \"-\"):\n        return None\n    neg = (s.startswith(\"(\") and s.endswith(\")\")) or s.endswith(\"-\")\n    s = s.strip(\"()\").rstrip(\"-\")\n    s = re.sub(r\"[,\\$%]\", \"\", s)\n    mult = 1\n    if s.lower().endswith(\"m\"):\n        mult, s = 1e6, s[:-1]\n    elif s.lower().endswith(\"k\"):\n        mult, s = 1e3, s[:-1]\n    try:\n        val = float(s) * mult\n        return -val if neg else val\n    except:\n        return None\n\n\ndef analyze_cell_values(df, split_name, top_n=10):\n    total = num = missing = unp = 0\n    unpatt = Counter()\n    for tbl in df[\"doc_table\"]:\n        if not isinstance(tbl, dict):\n            continue\n        for cell in _yield_cells(tbl):\n            total += 1\n            txt = str(cell).strip()\n            if cell is None or txt == \"\":\n                missing += 1\n            elif _parse_num(cell) is None:\n                unp += 1\n                key = txt.lower()[:25]\n                unpatt[key] += 1\n            else:\n                num += 1\n\n    print(f\"\\n=== {split_name.upper()} CELL QUALITY ===\")\n    print(f\"total: {total}, numeric: {num}, missing: {missing}, unparseable: {unp}\")\n    print(f\"Top {top_n} unparseable patterns:\")\n    for pat, cnt in unpatt.most_common(top_n):\n        print(f\"  {pat:25} {cnt}\")\n\n\nfor name, d in ((\"train\", train_flat_df), (\"test\", test_flat_df)):\n    analyze_cell_values(d, name)\n\n\n\n=== TRAIN CELL QUALITY ===\ntotal: 42813, numeric: 41499, missing: 184, unparseable: 1130\nTop 10 unparseable patterns:\n  -                         265\n  n/a                       147\n  ( in thousands )          102\n  nm                        62\n  owned                     43\n  $ -                       42\n  pay                       22\n  fta                       20\n  cash                      16\n  leased                    14\n\n=== TEST CELL QUALITY ===\ntotal: 6159, numeric: 6045, missing: 12, unparseable: 102\nTop 10 unparseable patterns:\n  -                         13\n  none                      9\n  high                      6\n  low                       6\n  ( b )                     6\n  leased                    6\n  united states             4\n  united kingdom            4\n  ( d )                     3\n  nm                        3\n\n\nWe see that:\n\nTrain (42,813 total cells): 97.0% numeric, 0.4% missing, 2.6% unparseable\n\nTest (6,159 total cells): 98.2% numeric, 0.2% missing, 1.7% unparseable\n\nTop unparseable patterns include -, n/a, ( in thousands ), nm, none, high, low, etc., indicating placeholders, qualifiers, and unit headers that need cleaning or custom parsing.\nWhen selecting records for evaluation, we should:\n\nExclude or preprocess records with unparseable cells (~1,232 cells total).\n\nDrop tables where &gt;5% of cells are unparseable to ensure numeric consistency.\n\nThis keeps our evaluation set focused on clean, numeric data and avoids noise from poorly parsed entries. More on this later!\n\n\nCode\ntrain_flat_df.columns\n\n\nIndex(['id', 'doc_pre_text', 'doc_post_text', 'doc_table',\n       'dialogue_conv_questions', 'dialogue_conv_answers',\n       'dialogue_turn_program', 'dialogue_executed_answers',\n       'dialogue_qa_split', 'features_num_dialogue_turns',\n       'features_has_type2_question', 'features_has_duplicate_columns',\n       'features_has_non_numeric_values', 'n_rows', 'n_cols', 'total_cells',\n       'nested_tables'],\n      dtype='object')"
  },
  {
    "objectID": "posts/2025-08-31-cl-dspy-eda.html#dialogue_conv_questions",
    "href": "posts/2025-08-31-cl-dspy-eda.html#dialogue_conv_questions",
    "title": "Curriculum Learning 🤝 DSPy: Exploration",
    "section": "dialogue_conv_questions",
    "text": "dialogue_conv_questions\n\n\nCode\ntrain_q_lens = train_flat_df[\"dialogue_conv_questions\"].explode().dropna().map(len)\ntest_q_lens = test_flat_df[\"dialogue_conv_questions\"].explode().dropna().map(len)\ndf_q = pd.concat(\n    [\n        pd.DataFrame({\"length\": train_q_lens, \"split\": \"train\"}),\n        pd.DataFrame({\"length\": test_q_lens, \"split\": \"test\"}),\n    ]\n)\n\nsns.set_theme(style=\"whitegrid\")\nplt.figure(figsize=(8, 5))\nsns.histplot(\n    data=df_q, x=\"length\", hue=\"split\", stat=\"density\", element=\"step\", fill=False\n)\nplt.title(\"Distribution of Dialogue Question Lengths by Split\")\nplt.xlabel(\"Question Length (characters)\")\nplt.ylabel(\"Density\")\nplt.tight_layout()\n\n\n\n\n\n\n\n\n\nMajority of the questions in both the train and test set are short. This is ideal."
  },
  {
    "objectID": "posts/2025-08-31-cl-dspy-eda.html#dialogue_conv_answers",
    "href": "posts/2025-08-31-cl-dspy-eda.html#dialogue_conv_answers",
    "title": "Curriculum Learning 🤝 DSPy: Exploration",
    "section": "dialogue_conv_answers",
    "text": "dialogue_conv_answers\n\n\nCode\ntrain_q_lens = train_flat_df[\"dialogue_conv_answers\"].explode().dropna().map(len)\ntest_q_lens = test_flat_df[\"dialogue_conv_answers\"].explode().dropna().map(len)\ndf_q = pd.concat(\n    [\n        pd.DataFrame({\"length\": train_q_lens, \"split\": \"train\"}),\n        pd.DataFrame({\"length\": test_q_lens, \"split\": \"test\"}),\n    ]\n)\n\nsns.set_theme(style=\"whitegrid\")\nplt.figure(figsize=(8, 5))\nsns.histplot(\n    data=df_q, x=\"length\", hue=\"split\", stat=\"density\", element=\"step\", fill=False\n)\nplt.title(\"Distribution of Dialogue Answer Lengths by Split\")\nplt.xlabel(\"Answer Length (characters)\")\nplt.ylabel(\"Density\")\nplt.tight_layout()\n\n\n\n\n\n\n\n\n\nAs mentioned in the dataset, most of the answers are either numeric or boolean in nature. We see a majority of the answers having length &lt;= 8, meaning that these are either large numbers, or numbers with large precision."
  },
  {
    "objectID": "posts/2025-08-31-cl-dspy-eda.html#dialogue_turn_program",
    "href": "posts/2025-08-31-cl-dspy-eda.html#dialogue_turn_program",
    "title": "Curriculum Learning 🤝 DSPy: Exploration",
    "section": "dialogue_turn_program",
    "text": "dialogue_turn_program\nThis field represents the program DSL generated for the current turn.\n\n\nCode\ntrain_flat_df[\"dialogue_turn_program\"].head()\n\n\n0    [206588, 181001, subtract(206588, 181001), sub...\n1    [9362.2, 9244.9, subtract(9362.2, 9244.9), sub...\n2    [5363, 7983, subtract(5363, 7983), subtract(53...\n3    [subtract(75.95, const_100), subtract(75.95, c...\n4    [subtract(91.06, const_100), subtract(91.06, c...\nName: dialogue_turn_program, dtype: object\n\n\n\n\nCode\ndef _get_op_counts(df: pd.DataFrame) -&gt; pd.Series:\n    \"\"\"Return a Series with the number of '(' in every element of dialogue_turn_program.\"\"\"\n    return (\n        df[\"dialogue_turn_program\"]\n        .explode()  # one element per row\n        .dropna()\n        .apply(lambda rec: str(rec).count(\"(\"))\n    )\n\n\ncounts_train = _get_op_counts(train_flat_df)\ncounts_test = _get_op_counts(test_flat_df)\n\ndf_counts = pd.concat(\n    [\n        pd.DataFrame({\"ops\": counts_train, \"split\": \"train\"}),\n        pd.DataFrame({\"ops\": counts_test, \"split\": \"test\"}),\n    ]\n)\n\nplt.figure(figsize=(8, 4))\nsns.histplot(\n    data=df_counts,\n    x=\"ops\",\n    hue=\"split\",\n    bins=range(0, df_counts[\"ops\"].max() + 2),\n    element=\"step\",\n    fill=False,\n)\nplt.xlabel(\"Number of operations per element\")\nplt.ylabel(\"Frequency\")\nplt.title(\"Histogram of operation counts in turn_programs (train vs. test)\")\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\n\nSimilar distributions for number of operations in both the train and test set. Majority of the operations are &lt; 4 .\nWe could argue that the number of operations is a good proxy for the complexity of the program. As such, we should probably aim to do well first on the examples where the number of operations is small.\n\n\nCode\ntrain_flat_df.columns\n\n\nIndex(['id', 'doc_pre_text', 'doc_post_text', 'doc_table',\n       'dialogue_conv_questions', 'dialogue_conv_answers',\n       'dialogue_turn_program', 'dialogue_executed_answers',\n       'dialogue_qa_split', 'features_num_dialogue_turns',\n       'features_has_type2_question', 'features_has_duplicate_columns',\n       'features_has_non_numeric_values', 'n_rows', 'n_cols', 'total_cells',\n       'nested_tables'],\n      dtype='object')"
  },
  {
    "objectID": "posts/2025-08-31-cl-dspy-eda.html#features_num_dialogue_turns",
    "href": "posts/2025-08-31-cl-dspy-eda.html#features_num_dialogue_turns",
    "title": "Curriculum Learning 🤝 DSPy: Exploration",
    "section": "features_num_dialogue_turns",
    "text": "features_num_dialogue_turns\n\n\nCode\nfig, axes = plt.subplots(1, 2, figsize=(14, 5), sharey=True)\n\norder = sorted(\n    set(train_flat_df[\"features_num_dialogue_turns\"]).union(\n        test_flat_df[\"features_num_dialogue_turns\"]\n    )\n)\n\nsns.countplot(\n    y=\"features_num_dialogue_turns\",\n    data=train_flat_df,\n    order=order,\n    ax=axes[0],\n    color=\"blue\",\n    alpha=0.7,\n)\naxes[0].set(\n    title=\"Train: Num Dialogue Turns\", xlabel=\"Count\", ylabel=\"Num Dialogue Turns\"\n)\n\nsns.countplot(\n    y=\"features_num_dialogue_turns\",\n    data=test_flat_df,\n    order=order,\n    ax=axes[1],\n    color=\"orange\",\n    alpha=0.7,\n)\naxes[1].set(title=\"Test: Num Dialogue Turns\", xlabel=\"Count\", ylabel=\"\")\n\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\n\nSimilar distributions across the train and test sets. As mentioned in the paper, we should expect conversations with more dialogue turns, to be more difficult to answer for models.\nThis is yet another feature we could use when deciding how to split our data into train, validation, and test sets.\n\n\nCode\ntrain_flat_df.columns\n\n\nIndex(['id', 'doc_pre_text', 'doc_post_text', 'doc_table',\n       'dialogue_conv_questions', 'dialogue_conv_answers',\n       'dialogue_turn_program', 'dialogue_executed_answers',\n       'dialogue_qa_split', 'features_num_dialogue_turns',\n       'features_has_type2_question', 'features_has_duplicate_columns',\n       'features_has_non_numeric_values', 'n_rows', 'n_cols', 'total_cells',\n       'nested_tables'],\n      dtype='object')"
  },
  {
    "objectID": "posts/2025-08-31-cl-dspy-eda.html#features_has_type2_question",
    "href": "posts/2025-08-31-cl-dspy-eda.html#features_has_type2_question",
    "title": "Curriculum Learning 🤝 DSPy: Exploration",
    "section": "features_has_type2_question",
    "text": "features_has_type2_question\n\n\nCode\nimport seaborn as sns\n\nfor name, df in [(\"Train\", train_flat_df), (\"Test\", test_flat_df)]:\n    vc = df[\"features_has_type2_question\"].value_counts()\n    print(f\"{name} set – Has Type 2 Question counts:\\n{vc}\\n\")\n\nfig, axes = plt.subplots(1, 2, figsize=(10, 4), sharey=True)\n\nsns.countplot(\n    y=\"features_has_type2_question\",\n    data=train_flat_df,\n    ax=axes[0],\n    palette=\"Blues\",\n    alpha=0.7,\n)\naxes[0].set(\n    title=\"Train: Has Type 2 Question\", xlabel=\"Count\", ylabel=\"Has Type 2 Question\"\n)\n\nsns.countplot(\n    y=\"features_has_type2_question\",\n    data=test_flat_df,\n    ax=axes[1],\n    palette=\"Oranges\",\n    alpha=0.7,\n)\naxes[1].set(title=\"Test: Has Type 2 Question\", xlabel=\"Count\", ylabel=\"\")\n\nplt.tight_layout()\nplt.show()\n\n\nTrain set – Has Type 2 Question counts:\nfeatures_has_type2_question\nFalse    2148\nTrue      889\nName: count, dtype: int64\n\nTest set – Has Type 2 Question counts:\nfeatures_has_type2_question\nFalse    300\nTrue     121\nName: count, dtype: int64\n\n\n\n/var/folders/zf/l4rjbhhj6xq9bfzs9cr7m5vr0000gn/T/ipykernel_98862/668524099.py:9: FutureWarning: \n\nPassing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `y` variable to `hue` and set `legend=False` for the same effect.\n\n  sns.countplot(\n/var/folders/zf/l4rjbhhj6xq9bfzs9cr7m5vr0000gn/T/ipykernel_98862/668524099.py:20: FutureWarning: \n\nPassing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `y` variable to `hue` and set `legend=False` for the same effect.\n\n  sns.countplot(\n\n\n\n\n\n\n\n\n\nSimilar distrbutions for Type2 questions across the train and test sets, as expected."
  },
  {
    "objectID": "posts/2025-08-31-cl-dspy-eda.html#curriculum-design-quota-rebalancing",
    "href": "posts/2025-08-31-cl-dspy-eda.html#curriculum-design-quota-rebalancing",
    "title": "Curriculum Learning 🤝 DSPy: Exploration",
    "section": "Curriculum Design & Quota Rebalancing",
    "text": "Curriculum Design & Quota Rebalancing\nWhile our complexity classification captures overall difficulty, curriculum learning requires more nuanced sampling strategies. Simply taking the hardest examples might create an imbalanced curriculum that overrepresents certain types of complexity while ignoring others.\nConsider two scenarios: 1. Naive sampling: We randomly sample from our “Hard” bucket and end up with 80% long-context examples but only 5% multi-operation examples 2. Quota sampling: We ensure balanced representation across complexity dimensions\nThe second approach creates a more robust curriculum. Our hard examples should include: - Deep reasoning (4+ mathematical operations) - Long conversations (7+ dialogue turns) - Dense context (lengthy pre/post text) - Complex tables (many cells, nested structures) - Noisy data (duplicate columns, non-numeric values)\nThis ensures our model learns to handle diverse types of complexity rather than overfitting to a single difficulty dimension. The following code implements quota-based sampling to achieve this balanced representation:\n\n\nCode\nfrom pprint import pprint\nfrom pathlib import Path\nimport numpy as np\n\nTARGETS = {\n    \"Easy\": {\"train\": 300, \"valid\": 70, \"test\": 80},\n    \"Medium\": {\"train\": 300, \"valid\": 70, \"test\": 80},\n    \"Hard\": {\"train\": 220, \"valid\": 60, \"test\": 80},\n}\nOUTDIR = Path(\"splits\")\nRANDOM_STATE = 42\n\nP50_pre = int(train_flat_df[\"doc_pre_text_len\"].quantile(0.50))\nP65_pre = int(train_flat_df[\"doc_pre_text_len\"].quantile(0.65))\nP80_pre = int(train_flat_df[\"doc_pre_text_len\"].quantile(0.80))\nP90_pre = int(train_flat_df[\"doc_pre_text_len\"].quantile(0.90))\n\nP50_post = int(train_flat_df[\"doc_post_text_len\"].quantile(0.50))\nP65_post = int(train_flat_df[\"doc_post_text_len\"].quantile(0.65))\nP80_post = int(train_flat_df[\"doc_post_text_len\"].quantile(0.80))\nP90_post = int(train_flat_df[\"doc_post_text_len\"].quantile(0.90))\n\nP50_cells = int(train_flat_df[\"total_cells\"].quantile(0.50))\nP65_cells = int(train_flat_df[\"total_cells\"].quantile(0.65))\nP80_cells = int(train_flat_df[\"total_cells\"].quantile(0.80))\nP90_cells = int(train_flat_df[\"total_cells\"].quantile(0.90))\n\nprint(\n    f\"[Percentiles/train] pre P50={P50_pre}, P65={P65_pre}, P80={P80_pre}, P90={P90_pre} \"\n    f\"| post P50={P50_post}, P65={P65_post}, P80={P80_post}, P90={P90_post} \"\n    f\"| cells P50={P50_cells}, P65={P65_cells}, P80={P80_cells}, P90={P90_cells}\"\n)\n\n\ndef assign_stages(df: pd.DataFrame) -&gt; pd.Series:\n    mops = df[\"max_ops_per_conversation\"]\n    turns = df[\"features_num_dialogue_turns\"]\n    t2 = df[\"features_has_type2_question\"]\n    preL = df[\"doc_pre_text_len\"]\n    postL = df[\"doc_post_text_len\"]\n    cells = df[\"total_cells\"]\n    dup = df[\"features_has_duplicate_columns\"]\n    nonnum = df[\"features_has_non_numeric_values\"]\n\n    # HARD (tail)\n    hard = (\n        (mops &gt;= 4)\n        | (turns &gt;= 7)\n        | (preL &gt; P90_pre)\n        | (postL &gt; P90_post)\n        | (cells &gt; P90_cells)\n        | (dup)\n        | (\n            nonnum\n            & (\n                (mops &gt;= 3)\n                | (preL &gt; P80_pre)\n                | (postL &gt; P80_post)\n                | (cells &gt; P80_cells)\n            )\n        )\n    )\n\n    # EASY (P65)\n    easy = (~hard) & (\n        (mops &lt;= 2)\n        & (turns.between(2, 4, inclusive=\"both\"))\n        & (~t2)\n        & (preL &lt;= P65_pre)\n        & (postL &lt;= P65_post)\n        & (cells &lt;= P65_cells)\n    )\n\n    # MEDIUM (middle band)\n    medium = (\n        (~hard)\n        & (~easy)\n        & (\n            ((mops.isin([2, 3])) | (t2))\n            & (turns.between(3, 6, inclusive=\"both\"))\n            & (preL &lt;= P90_pre)\n            & (postL &lt;= P90_post)\n            & (cells &lt;= P90_cells)\n        )\n    )\n\n    stage = pd.Series(index=df.index, dtype=\"string\")\n    stage.loc[hard] = \"Hard\"\n    stage.loc[easy] = \"Easy\"\n    stage.loc[medium] = \"Medium\"\n    stage = stage.fillna(\"Medium\")\n    return stage\n\n\ncur_train_df = train_flat_df.copy()\ncur_test_df = test_flat_df.copy()\ncur_train_df[\"stage\"] = assign_stages(cur_train_df)\ncur_test_df[\"stage\"] = assign_stages(cur_test_df)\n\nprint(\"[Stage counts] TRAIN:\", cur_train_df[\"stage\"].value_counts().to_dict())\nprint(\"[Stage counts] TEST:  \", cur_test_df[\"stage\"].value_counts().to_dict())\n\n\ndef sample_df(df: pd.DataFrame, n: int, seed: int) -&gt; pd.DataFrame:\n    if n &lt;= 0 or df.empty:\n        return df.iloc[0:0]\n    if len(df) &lt;= n:\n        return df.sample(frac=1.0, random_state=seed)  # shuffle full pool if small\n    return df.sample(n=n, random_state=seed)\n\n\n# =========================\n# HARD QUOTA REBALANCING\n# =========================\n\nHARD_PROPS = {\n    \"deep_ops\": 0.23,  # max_ops &gt;= 4\n    \"long_turns\": 0.23,  # turns &gt;= 7\n    \"long_ctx\": 0.27,  # pre &gt; P90_pre OR post &gt; P90_post\n    \"big_table\": 0.20,  # total_cells &gt; P90_cells\n    \"noisy\": 0.07,  # duplicate OR non-numeric (with complexity already in stage)\n}\n\n\ndef hard_bucket_masks(df: pd.DataFrame):\n    return {\n        \"deep_ops\": (df[\"max_ops_per_conversation\"] &gt;= 4),\n        \"long_turns\": (df[\"features_num_dialogue_turns\"] &gt;= 7),\n        \"long_ctx\": (df[\"doc_pre_text_len\"] &gt; P90_pre)\n        | (df[\"doc_post_text_len\"] &gt; P90_post),\n        \"big_table\": (df[\"total_cells\"] &gt; P90_cells),\n        \"noisy\": (df[\"features_has_duplicate_columns\"])\n        | (df[\"features_has_non_numeric_values\"]),\n    }\n\n\ndef quota_sample_df(\n    pool: pd.DataFrame, total_n: int, masks: dict, props: dict, seed: int\n) -&gt; pd.DataFrame:\n    \"\"\"\n    Quota-based sampling without replacement across overlapping buckets.\n    - masks: dict[name] -&gt; boolean Series over pool\n    - props: dict[name] -&gt; proportion (0..1)\n    Strategy:\n      1) compute desired counts per bucket by props * total_n\n      2) iterate buckets in fixed priority, sample from items not yet taken\n      3) cap each bucket by its availability\n      4) top up remaining slots uniformly at random from leftover pool\n    \"\"\"\n    rng = np.random.default_rng(seed)\n    pool = pool.copy()\n    taken_idx = set()\n    out_parts = []\n\n    # emphasize \"deep_ops\" and \"long_turns\"/\"long_ctx\" first\n    order = [\"deep_ops\", \"long_turns\", \"long_ctx\", \"big_table\", \"noisy\"]\n    desired = {k: int(round(total_n * props.get(k, 0.0))) for k in order}\n    # adjust rounding to not exceed total_n\n    diff = total_n - sum(desired.values())\n    if diff != 0:\n        # distribute remainder by descending props\n        for k in sorted(order, key=lambda x: props.get(x, 0), reverse=(diff &gt; 0)):\n            if diff == 0:\n                break\n            desired[k] += 1 if diff &gt; 0 else -1\n            diff += -1 if diff &gt; 0 else 1\n\n    for k in order:\n        if desired[k] &lt;= 0:\n            continue\n        bucket_idx = pool.index[masks[k]]\n        # remove already taken\n        bucket_idx = [i for i in bucket_idx if i not in taken_idx]\n        if not bucket_idx:\n            continue\n        take_k = min(desired[k], len(bucket_idx))\n        choose = list(rng.choice(bucket_idx, size=take_k, replace=False))\n        out_parts.append(pool.loc[choose])\n        taken_idx.update(choose)\n\n    # top-up if needed\n    taken_cnt = sum(len(p) for p in out_parts)\n    need = max(0, total_n - taken_cnt)\n    if need &gt; 0:\n        leftover_idx = [i for i in pool.index if i not in taken_idx]\n        if leftover_idx:\n            k = min(need, len(leftover_idx))\n            choose = list(rng.choice(leftover_idx, size=k, replace=False))\n            out_parts.append(pool.loc[choose])\n\n    if out_parts:\n        out = pd.concat(out_parts, axis=0)\n    else:\n        out = pool.iloc[0:0]\n\n    return out.sample(frac=1.0, random_state=seed)\n\n\n# --- Build splits with quota rebalance only for Hard ---\nsplits = {}\nOUTDIR.mkdir(parents=True, exist_ok=True)\n\nfor i, stage in enumerate([\"Easy\", \"Medium\", \"Hard\"]):\n    tconf = TARGETS[stage]\n    train_pool = cur_train_df[cur_train_df[\"stage\"] == stage]\n    test_pool = cur_test_df[cur_test_df[\"stage\"] == stage]\n\n    if stage != \"Hard\":\n        # ---- original sampling for Easy/Medium ----\n        tv_target = tconf[\"train\"] + tconf[\"valid\"]\n        tv = sample_df(train_pool, tv_target, seed=RANDOM_STATE + i * 100 + 1)\n        vsize = min(tconf[\"valid\"], max(1, int(round(0.2 * len(tv)))))\n        valid = tv.iloc[:vsize]\n        train = tv.iloc[vsize : vsize + tconf[\"train\"]]\n        test = sample_df(test_pool, tconf[\"test\"], seed=RANDOM_STATE + i * 100 + 2)\n    else:\n        # ---- HARD: quota-based sampling ----\n        masks_train = hard_bucket_masks(train_pool)\n        masks_test = hard_bucket_masks(test_pool)\n\n        # TRAIN (quota)\n        hard_train = quota_sample_df(\n            pool=train_pool,\n            total_n=tconf[\"train\"],\n            masks=masks_train,\n            props=HARD_PROPS,\n            seed=RANDOM_STATE + i * 100 + 11,\n        )\n\n        # VALID (quota) from remaining train_pool\n        remaining_train_pool = train_pool.drop(hard_train.index)\n        hard_valid = quota_sample_df(\n            pool=remaining_train_pool,\n            total_n=tconf[\"valid\"],\n            masks=hard_bucket_masks(remaining_train_pool),\n            props=HARD_PROPS,\n            seed=RANDOM_STATE + i * 100 + 12,\n        )\n\n        # TEST (quota) from dev pool\n        hard_test = quota_sample_df(\n            pool=test_pool,\n            total_n=tconf[\"test\"],\n            masks=masks_test,\n            props=HARD_PROPS,\n            seed=RANDOM_STATE + i * 100 + 13,\n        )\n\n        train, valid, test = hard_train, hard_valid, hard_test\n\n    splits[stage] = {\"train\": train, \"valid\": valid, \"test\": test}\n\n    for split_name, df_part in splits[stage].items():\n        outp = OUTDIR / f\"{stage.lower()}_{split_name}.jsonl\"\n        df_part[[\"id\"]].to_json(outp, orient=\"records\", lines=True, force_ascii=False)\n        print(f\"[{stage}] {split_name}: {len(df_part):4d}  -&gt; {outp}\")\n\n\ndef quick_report(df):\n    if len(df) == 0:\n        return {\"n\": 0}\n    return {\n        \"n\": len(df),\n        \"ops_max_med\": float(df[\"max_ops_per_conversation\"].median()),\n        \"turns_med\": float(df[\"features_num_dialogue_turns\"].median()),\n        \"type2_rate\": float(df[\"features_has_type2_question\"].mean()),\n        \"pre_P50\": int(df[\"doc_pre_text_len\"].median()),\n        \"post_P50\": int(df[\"doc_post_text_len\"].median()),\n        \"cells_P50\": int(df[\"total_cells\"].median()),\n        \"deep_ops_rate\": float((df[\"max_ops_per_conversation\"] &gt;= 4).mean()),\n        \"long_turns_rate\": float((df[\"features_num_dialogue_turns\"] &gt;= 7).mean()),\n        \"long_ctx_rate\": float(\n            (\n                (df[\"doc_pre_text_len\"] &gt; P90_pre)\n                | (df[\"doc_post_text_len\"] &gt; P90_post)\n            ).mean()\n        ),\n        \"big_table_rate\": float((df[\"total_cells\"] &gt; P90_cells).mean()),\n        \"noisy_rate\": float(\n            (\n                df[\"features_has_duplicate_columns\"]\n                | df[\"features_has_non_numeric_values\"]\n            ).mean()\n        ),\n    }\n\n\nfor stage in [\"Easy\", \"Medium\", \"Hard\"]:\n    print(f\"\\n[Sanity] {stage}\")\n    for part, dfp in splits[stage].items():\n        print(f\"  {part:&gt;5s} -&gt;\", quick_report(dfp))"
  },
  {
    "objectID": "posts/2025-09-01-cl-dspy-modelling.html",
    "href": "posts/2025-09-01-cl-dspy-modelling.html",
    "title": "Curriculum Learning 🤝 DSPy: Modelling",
    "section": "",
    "text": "&lt;!DOCTYPE html&gt;\n\n\n\n\n\n2025-09-01-cl-dspy-modelling\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntitle: “Curriculum Learning 🤝 DSPy: Modelling” author: Shubham Gupta date: ‘2025-09-01’ image: cl_dspy/curriculum_learning_data.png description: Mapping ConvFinQA and crafting a curriculum for financial QA lightbox: true toc: true footnotes-hover: false format: html: highlight-style: gruvbox code-overflow: wrap code-fold: true code-tools: true categories:\n\n\n\nprogramming\n\n\ndspy\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWith EDA & feature engineering done we now “train” our model.\n\n\nTraditionally, LLMs applications are built using hand-rolled prompts. These prompts are often brittle and difficult to optimize, especially when dealing with complex tasks.\n\n\nInstead, we aim to move from prompting to programming, and use DSPy to build our models.\n\n\nWhy DSPy instead of hand-rolled prompts?\n\n\n\nPrompts are Python objects → diffable, unit-testable, reusable.\n\n\nBuilt-in optimizers (LabeledFewShot, BootstrapFewShot, …) auto-search the prompt space, sparing manual trial-and-error.\n\n\nClean separation: control flow in code, natural-language in fields; easier to read, refactor, and compose.\n\n\nEvaluation is first-class: plug in a metric, hit .compile(), get a train/val loop with checkpoints and reproducible scores.\n\n\nModel-agnostic: swap GPT-4 ↔︎ Llama-3 with one line.\n\n\nCaching & threading speed up dev-cycles; everything is version-controlled like normal software.\n\n\n\nTL;DR: DSPy turns brittle prompt tinkering into robust, testable, and optimizable code. Docs: https://docs.dspy.ai/\n\n\n\n\n\n\n\n\n\n\n\n\n\nEvaluation Metrics¶\n\n\n\n\n\n\n\n\n\n\n\n\n\nFor this exploratory analysis, we need a clear metric to measure model performance across our curriculum learning experiments. Following the original ConvFinQA paper, we adopt Exact Match (EM) as our primary evaluation metric.\n\n\nPrimary Metric: Turn-level EM¶\n\n\nTurn-level EM measures whether the generated answer for a specific dialogue turn exactly matches the gold standard answer. This binary metric (1 for exact match, 0 otherwise) provides a strict but interpretable measure of performance that directly aligns with the task requirements.\n\n\nWe choose this as our primary metric for several reasons:\n\n\n\nSimplicity: Easy to implement and interpret for initial experimentation\n\n\nStrictness: Financial reasoning requires precision—approximate answers can be misleading\n\n\nComparability: Direct comparison with baseline results from the original paper\n\n\nCurriculum sensitivity: Clear signal for measuring improvement across difficulty levels\n\n\n\nAdditional Metrics (Future Work)¶\n\n\nThere are several other metrics could be useful:\n\n\nConversation-level metrics like Dialogue Mean EM and Joint EM would better capture multi-turn reasoning dependencies, but add complexity to curriculum design. Since our curriculum is based on individual example difficulty rather than conversation-level complexity, turn-level metrics are more appropriate for this phase.\n\n\nDiagnostic metrics such as Exec-agree % and numeric error analysis would help distinguish between reasoning failures and execution errors. However, for establishing whether curriculum learning improves over random sampling, the binary success signal from exact match provides sufficient discriminative power.\n\n\nEfficiency metrics like program length and evidence tokens could reveal interesting patterns about how curriculum learning affects model behavior, but are secondary to establishing basic performance improvements.\n\n\nWe’ve skipped the other metrics for now for the sake of brevity.\n\n\n\n\n\n\n\n\n\n\n\n\n\nModel List¶\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe state of language models has significantly changed since the paper was released. It no longer makes sense to use the exact same model(s) as the paper.\n\n\nInstead, we will use the following categories of model:\n\n\n\nNon-Reasoning Models\n\n\nThese models are the usual next-token prediction models, and start generating an answer immediately.\n\n\nWe will benchmark the following models here:\n\n\nGPT-4.1\n\n\nGPT-4.1-mini\n\n\n\n\n\n\nReasoning Models\n\n\nThese models are the latest language models that are capable of reasoning and generating answers based on the context provided.\n\n\nReasoning models are designed to perform multi-step, explicit logical inference to arrive at a conclusion.\n\n\nWe will benchmark the following models here:\n\n\nOAI o4-mini\n\n\nAnthropic Sonnet 4.0\n\n\nGoogle Gemini Flash 2.5\n\n\nGoogle Gemini Flash 2.5 Lite\n\n\n\n\n\n\nFrontier Models\n\n\nThese are the true “large” language models, developed by frontier labs. They excel in instruction following, reasoning and solving a variety of tasks.\n\n\nHowever, these models are expensive. As such, we will try to avoid using them for a final solution.\n\n\nWe will benchmark the following models here:\n\n\nOAI o3\n\n\nAnthropic Opus 4.0\n\n\nGoogle Gemini Pro 2.5\n\n\n\n\n\n\nOpen Source\n\n\nWe also want to measure the performance of open-source models, as it will help quantify the gap between them and proprietary models.\n\n\nOpen-source models are especially required in domains where data sovereignty is a concern.\n\n\nWe will only benchmark:\n\n\nQwen3-32B\n\n\n\n\n\n\n\nModel Selection¶\n\n\nDue to cost and time constraints, we can’t afford to optimise all models. Hence, we’ll aim to narrow down the list of models to a few “promising” models. Specifically, instead of just using the performance of the models on the “easy” validation set, we will use a combination of two datasets:\n\n\n\nGate - 50 Easy dialogs, teacher - forced. Drop model if Turn-EM &lt; 0.55.\n\n\nProbe - 30-dialog mixed micro-set (15 Medium + 15 Hard, closed loop). Keep model only if Final-Turn EM ≥ 0.35, Dialogue-mean EM ≥ 0.35\n\n\n\nThis two-stage filter zaps obviously weak models fast yet retains ones whose strength shows up on multi-step reasoning / long context.\n\n\nMetrics Tracking¶\n\n\nGiven that we plan on iterating over multiple datasets, multiple models, multiple algorithms with different hyperparameters, we will a solution to efficiency track our progress.\n\n\nWe aim to use MLFlow, as it has the following features:\n\n\n\nMLflow Tracking: logs training, runs, and artifacts for DSPy.\n\n\nMLflow Model: packages DSPy programs for reproducible deployment.\n\n\nMLflow Evaluate: natively evaluates GenAI outputs for fast iteration.\n\n\nMLflow Tracing: auto-logs and debugs DSPy internals with one command.\n\n\n\nIn production, the deployment pipeline would look as follows:\n\n\n   DSPy Production deployment with MLFlow. Source: MLFlow Docs \n\n\n\n\n\n\n\n\n\n\n\n\n\nSetup¶\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;Experiment: artifact_location='mlflow-artifacts:/1', creation_time=1753611058221, experiment_id='1', last_update_time=1753611058221, lifecycle_stage='active', name='DSPy', tags={}&gt;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nopenai/gpt-4.1-2025-04-14: Today's date is June 13, 2024.\nopenai/gpt-4.1-mini-2025-04-14: The current date is June 15, 2024.\nopenai/o4-mini-2025-04-16 Reasoning: The user asked for the current date. I will provide today's date in a clear, human-readable format.\nopenai/o4-mini-2025-04-16: The current date is May 30, 2024.\nanthropic/claude-sonnet-4-20250514 Reasoning: The user is asking for the current date. However, I don't have access to real-time information or the ability to know what the current date is. I should explain that I cannot provide the current date and suggest how they can find this information.\nanthropic/claude-sonnet-4-20250514: I don't have access to real-time information, so I cannot tell you the current date. To find today's date, you can:\n- Check your computer, phone, or other device\n- Search \"what is today's date\" in a search engine\n- Ask a voice assistant like Siri, Alexa, or Google Assistant\ngemini/gemini-2.5-flash Reasoning: The user is asking for the current date. I will provide today's date.\ngemini/gemini-2.5-flash: June 10, 2024\ngemini/gemini-2.5-flash-lite Reasoning: The user is asking for the current date. I need to access the current date and format it as requested.\ngemini/gemini-2.5-flash-lite: The current date is October 26, 2023.\nopenai/o3-2025-04-16 Reasoning: I don’t have real-time access to the system clock, so I’m unable to determine the exact current date at the moment of this response.\nopenai/o3-2025-04-16: I’m sorry, I don’t have access to real-time information to tell today’s date.\nanthropic/claude-opus-4-20250514 Reasoning: The user is asking for the current date. However, as an AI assistant, I don't have access to real-time information and cannot provide the current date. I should explain this limitation clearly to the user.\nanthropic/claude-opus-4-20250514: I don't have access to real-time information, so I cannot tell you today's date. To get the current date, you can check your device's calendar, search \"what's today's date\" in a search engine, or ask a voice assistant with real-time capabilities.\ngemini/gemini-2.5-pro Reasoning: The user has asked for the current date. I will access my internal system's real-time clock to provide the current calendar date.\ngemini/gemini-2.5-pro: Today's date is September 10, 2024.\nollama/qwen3:32b Reasoning: I cannot access real-time data or the current date. My knowledge is static and up to July 2024. To find the current date, please check your device's clock or calendar.\nollama/qwen3:32b: I cannot provide the current date as I do not have access to real-time information. Please check your device's clock or calendar for the current date.\n🏃 View run Setup at: http://localhost:5000/#/experiments/1/runs/20df48ca1ad2461d9dcc0b1575caec6d\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n\n\n\n\n\n\n\n\nCollapse MLflow Trace\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nModel Selection¶\n\n\n\n\n\n\n\n\n\n\n\n\n\nIn the easy problems stage, we will select a relatively straightforward implementation. Specifically, we will provide the model with all context, and ask it to answer the question in a zero-shot manner.\n\n\nThis will help us identify strong baseline performance, and identify any issues with the model’s ability to understand the problem.\n\n\nFirst, we will create the DSPy signatures for our dataset. Signatures are used to define the input and output of a model.\n\n\nSpecifically, we will have two types of signatures: one that doesn’t support reasoning model(for direct prediction models like GPT-4.1), and one that does support reasoning mode(for the reasoning models like o3, gemini pro, etc.)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNext, we define a few helper functions to format our dataset for the DSPy model. We intentionally don’t spend too much time here for now, and will come back to this later, during the optimization phase.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNext, we will create the DSPy metric, used to evaluate the performance of our model.\n\n\nWe will focus on 2 parts to our metric:\n\n\n\nIf the answer is a floating point number, we will aim to compare it with the ground truth with some tolerance.\n\n\nIf the answer is a string, we will aim to perform exact match via DSPy’s exact_match metric.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNext, we will prepare our datasets.\n\n\nWe will aim to use the splits as follows:\n\n\n\ntrain: Used primarily for the optimisation phase. This will be discussed shortly.\n\n\nvalid: Used to evaluate the performance of an LM on an optimised model trained using the train dataset.\n\n\ntest: Used to evaluate the performance of an LM on a held-out dataset. This will determine the overall stage performance.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\n\n\ndoc_pre_text\n\n\ndoc_post_text\n\n\ndoc_table\n\n\ndialogue_conv_questions\n\n\ndialogue_conv_answers\n\n\ndialogue_turn_program\n\n\ndialogue_executed_answers\n\n\ndialogue_qa_split\n\n\nfeatures_num_dialogue_turns\n\n\nfeatures_has_type2_question\n\n\nfeatures_has_duplicate_columns\n\n\nfeatures_has_non_numeric_values\n\n\n\n\n\n\n0\n\n\nSingle_JKHY/2009/page_28.pdf-3\n\n\n26 | 2009 annual report in fiscal 2008 , revenues in the credit un…\n\n\nyear ended june 30 , cash provided by operations increased $ 25587…\n\n\n{‘Year ended June 30, 2009’: {‘net income’: 103102.0, ’non-cash ex…\n\n\n[what is the net cash from operating activities in 2009?, what abo…\n\n\n[206588, 181001, 25587, 14.1%]\n\n\n[206588, 181001, subtract(206588, 181001), subtract(206588, 181001…\n\n\n[206588.0, 181001.0, 25587.0, 0.14136]\n\n\n[False, False, False, False]\n\n\n4\n\n\nFalse\n\n\nFalse\n\n\nFalse\n\n\n\n\n1\n\n\nSingle_RSG/2008/page_114.pdf-2\n\n\nsubstantially all of the goodwill and other intangible assets reco…\n\n\nthe above unaudited pro forma financial information includes adjus…\n\n\n{‘year ended december 31 2008 ( unaudited )’: {‘revenue’: 9362.2, …\n\n\n[what were revenues in 2008?, what were they in 2007?, what was th…\n\n\n[9362.2, 9244.9, 117.3, 1.3%]\n\n\n[9362.2, 9244.9, subtract(9362.2, 9244.9), subtract(9362.2, 9244.9…\n\n\n[9362.2, 9244.9, 117.3, 0.01269]\n\n\n[False, False, False, False]\n\n\n4\n\n\nFalse\n\n\nFalse\n\n\nFalse\n\n\n\n\n2\n\n\nSingle_AAPL/2002/page_23.pdf-1\n\n\nin a new business model such as the retail segment is inherently r…\n\n\n.\n\n\n{‘2002’: {‘net sales’: 5742.0, ‘cost of sales’: 4139.0, ’gross mar…\n\n\n[what was the total of net sales in 2001?, and what was that in 20…\n\n\n[5363, 7983, -2620, -32%]\n\n\n[5363, 7983, subtract(5363, 7983), subtract(5363, 7983), divide(#0…\n\n\n[5363.0, 7983.0, -2620.0, -0.3282]\n\n\n[False, False, False, False]\n\n\n4\n\n\nFalse\n\n\nFalse\n\n\nFalse\n\n\n\n\n3\n\n\nSingle_UPS/2009/page_33.pdf-2\n\n\n( 1 ) includes shares repurchased through our publicly announced s…\n\n\n.\n\n\n{‘12/31/04’: {‘united parcel service inc .’: 100.0, ’s&p 500 index…\n\n\n[what was the change in the performance of the united parcel servi…\n\n\n[-24.05, -24.05%, 102.11, 2.11, 2.11%, -26.16%]\n\n\n[subtract(75.95, const_100), subtract(75.95, const_100), divide(#0…\n\n\n[-24.05, -0.2405, 102.11, 2.11, 0.0211, -0.2616]\n\n\n[False, False, False, False, False, False]\n\n\n6\n\n\nFalse\n\n\nFalse\n\n\nFalse\n\n\n\n\n4\n\n\nDouble_UPS/2009/page_33.pdf\n\n\n( 1 ) includes shares repurchased through our publicly announced s…\n\n\n.\n\n\n{‘12/31/04’: {‘united parcel service inc .’: 100.0, ’s&p 500 index…\n\n\n[what was the fluctuation of the performance price of the ups from…\n\n\n[-8.94, -8.9%, -24.05, -24.05%, 2.11, 2.11%, -26.16%]\n\n\n[subtract(91.06, const_100), subtract(91.06, const_100), divide(#0…\n\n\n[-8.94, -0.0894, -24.05, -0.2405, 2.11, 0.0211, -0.2616]\n\n\n[False, False, True, True, True, True, True]\n\n\n7\n\n\nTrue\n\n\nFalse\n\n\nFalse\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n852\n\n\n\n\n\n\n\n\n\n\n\n\n\nWe will used DSPy’s Evaluate class to run our evals in parallel(internally, this is just implemented via threads)\n\n\n\n\n\n\n\n\n\n\n\n\n\nTo ensure our setup works as expected, we will run a simple test first.\n\n\n\n\n\n\n\n\n\n\n\n\n\nAverage Metric: 8.00 / 10 (80.0%): 100%|██████████| 10/10 [00:02&lt;00:00,  3.48it/s]\n\n\n\n\n2025/07/28 18:18:42 INFO dspy.evaluate.evaluate: Average Metric: 8.0 / 10 (80.0%)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconversation_context\n\n\nevidence_snippets\n\n\ntable\n\n\nquestion\n\n\nid\n\n\ndoc_pre_text\n\n\ndoc_post_text\n\n\ndoc_table\n\n\ndialogue_conv_questions\n\n\ndialogue_conv_answers\n\n\n…\n\n\ndialogue_executed_answers\n\n\ndialogue_qa_split\n\n\nfeatures_num_dialogue_turns\n\n\nfeatures_has_type2_question\n\n\nfeatures_has_duplicate_columns\n\n\nfeatures_has_non_numeric_values\n\n\nexample_answer\n\n\nops\n\n\npred_answer\n\n\nturn_em_metric\n\n\n\n\n\n\n0\n\n\nNone\n\n\n[PRE] entergy corporation and subsidiaries management’s financial …\n\n\nRow | 2009 net revenue | volume/weather | retail electric price …\n\nwhat was the difference in net revenue between 2009 and 2010?\n\n\nSingle_ETR/2011/page_22.pdf-3\n\n\nentergy corporation and subsidiaries management’s financial discus…\n\n\nthe volume/weather variance is primarily due to an increase of 836…\n\n\n{‘amount ( in millions )’: {‘2009 net revenue’: 4694.0, ’volume/we…\n\n\n[‘what was the difference in net revenue between 2009 and 2010?’, …\n\n\n[357, 4694, 7.61%]\n\n\n…\n\n\n[357.0, 4694.0, 0.07605]\n\n\n[False, False, False]\n\n\n3\n\n\nFalse\n\n\nFalse\n\n\nFalse\n\n\n357.00000\n\n\nsubtract(2010 net revenue, 2009 net revenue)\n\n\n357.0\n\n\n✔️ [1.000]\n\n\n\n\n1\n\n\nQ1: what was the difference in net revenue between 2009 and 2010?...\n\n\n[PRE] entergy corporation and subsidiaries management’s financial …\n\n\nRow | 2009 net revenue | volume/weather | retail electric price …\n\nand the specific value for 2009 again?\n\n\nSingle_ETR/2011/page_22.pdf-3\n\n\nentergy corporation and subsidiaries management’s financial discus…\n\n\nthe volume/weather variance is primarily due to an increase of 836…\n\n\n{‘amount ( in millions )’: {‘2009 net revenue’: 4694.0, ’volume/we…\n\n\n[‘what was the difference in net revenue between 2009 and 2010?’, …\n\n\n[357, 4694, 7.61%]\n\n\n…\n\n\n[357.0, 4694.0, 0.07605]\n\n\n[False, False, False]\n\n\n3\n\n\nFalse\n\n\nFalse\n\n\nFalse\n\n\n4694.00000\n\n\n4694.0\n\n\n4694.0\n\n\n✔️ [1.000]\n\n\n\n\n2\n\n\nQ1: what was the difference in net revenue between 2009 and 2010?...\n\n\n[PRE] entergy corporation and subsidiaries management’s financial …\n\n\nRow | 2009 net revenue | volume/weather | retail electric price …\n\nso what was the percentage change during this time?\n\n\nSingle_ETR/2011/page_22.pdf-3\n\n\nentergy corporation and subsidiaries management’s financial discus…\n\n\nthe volume/weather variance is primarily due to an increase of 836…\n\n\n{‘amount ( in millions )’: {‘2009 net revenue’: 4694.0, ’volume/we…\n\n\n[‘what was the difference in net revenue between 2009 and 2010?’, …\n\n\n[357, 4694, 7.61%]\n\n\n…\n\n\n[357.0, 4694.0, 0.07605]\n\n\n[False, False, False]\n\n\n3\n\n\nFalse\n\n\nFalse\n\n\nFalse\n\n\n0.07605\n\n\nsubtract(5051.0, 4694.0), divide(#0, 4694.0), multiply(#1, const_100)\n\n\n7.61\n\n\n\n\n\n\n3\n\n\nNone\n\n\n[PRE] entergy new orleans , inc . management’s financial discussio…\n\n\nRow | 2003 net revenue | base rates | volume/weather | 2004 defe…\n\nwhat was the net revenue in 2004?\n\n\nSingle_ETR/2004/page_258.pdf-4\n\n\nentergy new orleans , inc . management’s financial discussion and …\n\n\nthe increase in base rates was effective june 2003 . the rate incr…\n\n\n{‘( in millions )’: {‘2003 net revenue’: 208.3, ‘base rates’: 10.6…\n\n\n[what was the net revenue in 2004?, what was the net revenue in 20…\n\n\n[239.0, 208.3, 30.7, 14.7%]\n\n\n…\n\n\n[239.0, 208.3, 30.7, 0.14738]\n\n\n[False, False, False, False]\n\n\n4\n\n\nFalse\n\n\nFalse\n\n\nFalse\n\n\n239.00000\n\n\nNone\n\n\n239.0\n\n\n✔️ [1.000]\n\n\n\n\n4\n\n\nQ1: what was the net revenue in 2004?: 239.0\n\n\n[PRE] entergy new orleans , inc . management’s financial discussio…\n\n\nRow | 2003 net revenue | base rates | volume/weather | 2004 defe…\n\nwhat was the net revenue in 2003?\n\n\nSingle_ETR/2004/page_258.pdf-4\n\n\nentergy new orleans , inc . management’s financial discussion and …\n\n\nthe increase in base rates was effective june 2003 . the rate incr…\n\n\n{‘( in millions )’: {‘2003 net revenue’: 208.3, ‘base rates’: 10.6…\n\n\n[what was the net revenue in 2004?, what was the net revenue in 20…\n\n\n[239.0, 208.3, 30.7, 14.7%]\n\n\n…\n\n\n[239.0, 208.3, 30.7, 0.14738]\n\n\n[False, False, False, False]\n\n\n4\n\n\nFalse\n\n\nFalse\n\n\nFalse\n\n\n208.30000\n\n\nNone\n\n\n208.3\n\n\n✔️ [1.000]\n\n\n\n\n5\n\n\nQ1: what was the net revenue in 2004?: 239.0: what was the…\n\n\n[PRE] entergy new orleans , inc . management’s financial discussio…\n\n\nRow | 2003 net revenue | base rates | volume/weather | 2004 defe…\n\nwhat was the change in value?\n\n\nSingle_ETR/2004/page_258.pdf-4\n\n\nentergy new orleans , inc . management’s financial discussion and …\n\n\nthe increase in base rates was effective june 2003 . the rate incr…\n\n\n{‘( in millions )’: {‘2003 net revenue’: 208.3, ‘base rates’: 10.6…\n\n\n[what was the net revenue in 2004?, what was the net revenue in 20…\n\n\n[239.0, 208.3, 30.7, 14.7%]\n\n\n…\n\n\n[239.0, 208.3, 30.7, 0.14738]\n\n\n[False, False, False, False]\n\n\n4\n\n\nFalse\n\n\nFalse\n\n\nFalse\n\n\n30.70000\n\n\nsubtract(239.0, 208.3)\n\n\n30.7\n\n\n✔️ [1.000]\n\n\n\n\n6\n\n\nQ1: what was the net revenue in 2004? A1: 239.0 Q2: what was the n…\n\n\n[PRE] entergy new orleans , inc . management’s financial discussio…\n\n\nRow | 2003 net revenue | base rates | volume/weather | 2004 defe…\n\nwhat is the percent change?\n\n\nSingle_ETR/2004/page_258.pdf-4\n\n\nentergy new orleans , inc . management’s financial discussion and …\n\n\nthe increase in base rates was effective june 2003 . the rate incr…\n\n\n{‘( in millions )’: {‘2003 net revenue’: 208.3, ‘base rates’: 10.6…\n\n\n[what was the net revenue in 2004?, what was the net revenue in 20…\n\n\n[239.0, 208.3, 30.7, 14.7%]\n\n\n…\n\n\n[239.0, 208.3, 30.7, 0.14738]\n\n\n[False, False, False, False]\n\n\n4\n\n\nFalse\n\n\nFalse\n\n\nFalse\n\n\n0.14738\n\n\nsubtract(239.0, 208.3), divide(#0, 208.3), multiply(#1, 100)\n\n\n14.72\n\n\n\n\n\n\n7\n\n\nNone\n\n\n[PRE] nike , inc . notes to consolidated financial statements 2014…\n\n\nRow | severance and related costs | cash payments | non-cash sto…\n\nwhat was the value of the sale of the starter brand?\n\n\nSingle_NKE/2009/page_81.pdf-1\n\n\nnike , inc . notes to consolidated financial statements 2014 ( con…\n\n\nthe accrual balance as of may 31 , 2009 will be relieved throughou…\n\n\n{‘$ 2014’: {‘severance and related costs’: 195.0, ‘cash payments’:…\n\n\n[‘what was the value of the sale of the starter brand?’, ’what was…\n\n\n[60.0, 28.6, 31.4, 91%]\n\n\n…\n\n\n[60.0, 28.6, 31.4, 0.91083]\n\n\n[False, False, False, False]\n\n\n4\n\n\nFalse\n\n\nFalse\n\n\nFalse\n\n\n60.00000\n\n\nNone\n\n\n60.0\n\n\n✔️ [1.000]\n\n\n\n\n8\n\n\nQ1: what was the value of the sale of the starter brand?: 60.0\n\n\n[PRE] nike , inc . notes to consolidated financial statements 2014…\n\n\nRow | severance and related costs | cash payments | non-cash sto…\n\nwhat was the gain resulting from the sale?\n\n\nSingle_NKE/2009/page_81.pdf-1\n\n\nnike , inc . notes to consolidated financial statements 2014 ( con…\n\n\nthe accrual balance as of may 31 , 2009 will be relieved throughou…\n\n\n{‘$ 2014’: {‘severance and related costs’: 195.0, ‘cash payments’:…\n\n\n[‘what was the value of the sale of the starter brand?’, ’what was…\n\n\n[60.0, 28.6, 31.4, 91%]\n\n\n…\n\n\n[60.0, 28.6, 31.4, 0.91083]\n\n\n[False, False, False, False]\n\n\n4\n\n\nFalse\n\n\nFalse\n\n\nFalse\n\n\n28.60000\n\n\nNone\n\n\n28.6\n\n\n✔️ [1.000]\n\n\n\n\n9\n\n\nQ1: what was the value of the sale of the starter brand?: 60.0…\n\n\n[PRE] nike , inc . notes to consolidated financial statements 2014…\n\n\nRow | severance and related costs | cash payments | non-cash sto…\n\nwhat was the change in value?\n\n\nSingle_NKE/2009/page_81.pdf-1\n\n\nnike , inc . notes to consolidated financial statements 2014 ( con…\n\n\nthe accrual balance as of may 31 , 2009 will be relieved throughou…\n\n\n{‘$ 2014’: {‘severance and related costs’: 195.0, ‘cash payments’:…\n\n\n[‘what was the value of the sale of the starter brand?’, ’what was…\n\n\n[60.0, 28.6, 31.4, 91%]\n\n\n…\n\n\n[60.0, 28.6, 31.4, 0.91083]\n\n\n[False, False, False, False]\n\n\n4\n\n\nFalse\n\n\nFalse\n\n\nFalse\n\n\n31.40000\n\n\nsubtract(60.0, 28.6)\n\n\n31.4\n\n\n✔️ [1.000]\n\n\n\n\n\n10 rows × 21 columns\n\n\n\n\n\n\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/a5433773d6ef4e359825412ad138c520\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n\n\n\n\n\n\n\n\nCollapse MLflow Trace\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGoing to sample between 1 and 3 traces per predictor.\nWill attempt to bootstrap 5 candidate sets.\nAverage Metric: 45.00 / 70 (64.3%): 100%|██████████| 70/70 [00:00&lt;00:00, 87.74it/s] \n\n\n\n\n2025/07/29 01:03:08 INFO dspy.evaluate.evaluate: Average Metric: 45.0 / 70 (64.3%)\n\n\n\n\n\n🏃 View run eval_0 at: http://localhost:5000/#/experiments/3/runs/fcce9b07d50e41609bc04c3d9c2235c7\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nNew best score: 64.29 for seed -3\nScores so far: [64.29]\nBest score so far: 64.29\n  0%|          | 0/70 [00:00&lt;?, ?it/s]\n\n\n\n\n2025/07/29 01:03:08 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 26.00 / 38 (68.4%):  53%|█████▎    | 37/70 [00:00&lt;00:00, 82.89it/s]\n\n\n\n\n2025/07/29 01:03:08 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 46.00 / 70 (65.7%): 100%|██████████| 70/70 [00:00&lt;00:00, 76.35it/s]\n\n\n\n\n2025/07/29 01:03:09 INFO dspy.evaluate.evaluate: Average Metric: 46.0 / 70 (65.7%)\n\n\n\n\n\n🏃 View run eval_1 at: http://localhost:5000/#/experiments/3/runs/7575401319f442499f871ca8d849bfd1\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nNew best score: 65.71 for seed -2\nScores so far: [64.29, 65.71]\nBest score so far: 65.71\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\n  4%|▍         | 3/70 [00:00&lt;00:04, 13.83it/s]2025/07/29 01:03:09 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n  9%|▊         | 6/70 [00:00&lt;00:03, 16.05it/s]\n\n\n\n\nBootstrapped 3 full traces after 6 examples for up to 1 rounds, amounting to 6 attempts.\n\n\n\n\n\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\nAverage Metric: 47.00 / 70 (67.1%): 100%|██████████| 70/70 [00:01&lt;00:00, 62.67it/s]\n\n\n\n\n2025/07/29 01:03:11 INFO dspy.evaluate.evaluate: Average Metric: 47.0 / 70 (67.1%)\n\n\n\n\n\n🏃 View run eval_2 at: http://localhost:5000/#/experiments/3/runs/3406309f3f0a4041a580021eaf5eff13\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nNew best score: 67.14 for seed -1\nScores so far: [64.29, 65.71, 67.14]\nBest score so far: 67.14\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\n  3%|▎         | 2/70 [00:00&lt;00:02, 32.62it/s]\n\n\n\n\nBootstrapped 2 full traces after 2 examples for up to 1 rounds, amounting to 2 attempts.\n\n\n\n\n\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\nAverage Metric: 48.00 / 70 (68.6%): 100%|██████████| 70/70 [00:01&lt;00:00, 52.08it/s]\n\n\n\n\n2025/07/29 01:03:12 INFO dspy.evaluate.evaluate: Average Metric: 48.0 / 70 (68.6%)\n\n\n\n\n\n🏃 View run eval_3 at: http://localhost:5000/#/experiments/3/runs/8cad7a93fb494289a4d6691d5796f84e\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nNew best score: 68.57 for seed 0\nScores so far: [64.29, 65.71, 67.14, 68.57]\nBest score so far: 68.57\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\n  1%|▏         | 1/70 [00:00&lt;00:03, 18.44it/s]\n\n\n\n\nBootstrapped 1 full traces after 1 examples for up to 1 rounds, amounting to 1 attempts.\n\n\n\n\n\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\nAverage Metric: 46.00 / 70 (65.7%): 100%|██████████| 70/70 [00:01&lt;00:00, 54.10it/s]\n\n\n\n\n2025/07/29 01:03:15 INFO dspy.evaluate.evaluate: Average Metric: 46.0 / 70 (65.7%)\n\n\n\n\n\n🏃 View run eval_4 at: http://localhost:5000/#/experiments/3/runs/ab8c076e18394080bbf9634eeff7af35\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nScores so far: [64.29, 65.71, 67.14, 68.57, 65.71]\nBest score so far: 68.57\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\n  1%|▏         | 1/70 [00:00&lt;00:02, 24.59it/s]\n\n\n\n\nBootstrapped 1 full traces after 1 examples for up to 1 rounds, amounting to 1 attempts.\n\n\n\n\n\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\nAverage Metric: 45.00 / 70 (64.3%): 100%|██████████| 70/70 [00:01&lt;00:00, 44.09it/s]\n\n\n\n\n2025/07/29 01:03:17 INFO dspy.evaluate.evaluate: Average Metric: 45.0 / 70 (64.3%)\n\n\n\n\n\n🏃 View run eval_5 at: http://localhost:5000/#/experiments/3/runs/679c914720674946a877f4a6a91665ee\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nScores so far: [64.29, 65.71, 67.14, 68.57, 65.71, 64.29]\nBest score so far: 68.57\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\n  1%|▏         | 1/70 [00:00&lt;00:12,  5.70it/s]\n\n\n\n\n\nBootstrapped 1 full traces after 1 examples for up to 1 rounds, amounting to 1 attempts.\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\nAverage Metric: 47.00 / 70 (67.1%): 100%|██████████| 70/70 [00:01&lt;00:00, 61.09it/s]\n\n\n\n\n2025/07/29 01:03:19 INFO dspy.evaluate.evaluate: Average Metric: 47.0 / 70 (67.1%)\n\n\n\n\n\n🏃 View run eval_6 at: http://localhost:5000/#/experiments/3/runs/ab818ec11652430b9bd68e17dc197665\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nScores so far: [64.29, 65.71, 67.14, 68.57, 65.71, 64.29, 67.14]\nBest score so far: 68.57\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\n  1%|▏         | 1/70 [00:00&lt;00:02, 28.38it/s]\n\n\n\n\nBootstrapped 1 full traces after 1 examples for up to 1 rounds, amounting to 1 attempts.\n\n\n\n\n\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\nAverage Metric: 51.00 / 70 (72.9%): 100%|██████████| 70/70 [00:01&lt;00:00, 51.33it/s]\n\n\n\n\n2025/07/29 01:03:21 INFO dspy.evaluate.evaluate: Average Metric: 51.0 / 70 (72.9%)\n\n\n\n\n\n🏃 View run eval_7 at: http://localhost:5000/#/experiments/3/runs/f9f17e61c1334a9ea6903ae3a1105fd8\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nNew best score: 72.86 for seed 4\nScores so far: [64.29, 65.71, 67.14, 68.57, 65.71, 64.29, 67.14, 72.86]\nBest score so far: 72.86\n8 candidate programs found.\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\n🏃 View run bootstrap_few_shot_rs_openai_o4-mini-2025-04-16 at: http://localhost:5000/#/experiments/3/runs/b08500752c9041d5acccbc261bd33931\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nGoing to sample between 1 and 3 traces per predictor.\nWill attempt to bootstrap 5 candidate sets.\n  0%|          | 0/70 [00:00&lt;?, ?it/s]\n\n\n\n\n2025/07/29 01:03:21 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 43.00 / 70 (61.4%): 100%|██████████| 70/70 [00:01&lt;00:00, 48.03it/s]\n\n\n\n\n2025/07/29 01:03:22 INFO dspy.evaluate.evaluate: Average Metric: 43.0 / 70 (61.4%)\n\n\n\n\n\n🏃 View run eval_0 at: http://localhost:5000/#/experiments/3/runs/578a2f04172f4ecbb41d04350201b2d5\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nNew best score: 61.43 for seed -3\nScores so far: [61.43]\nBest score so far: 61.43\n  0%|          | 0/70 [00:00&lt;?, ?it/s]\n\n\n\n\n2025/07/29 01:03:23 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 29.00 / 42 (69.0%):  59%|█████▊    | 41/70 [00:01&lt;00:00, 32.19it/s]\n\n\n\n\n2025/07/29 01:03:24 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 35.00 / 51 (68.6%):  71%|███████▏  | 50/70 [00:01&lt;00:00, 42.39it/s]\n\n\n\n\n2025/07/29 01:03:24 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 47.00 / 70 (67.1%): 100%|██████████| 70/70 [00:01&lt;00:00, 43.35it/s]\n\n\n\n\n2025/07/29 01:03:24 INFO dspy.evaluate.evaluate: Average Metric: 47.0 / 70 (67.1%)\n\n\n\n\n\n🏃 View run eval_1 at: http://localhost:5000/#/experiments/3/runs/cf868ddb4c5945149422186e878e4ee8\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nNew best score: 67.14 for seed -2\nScores so far: [61.43, 67.14]\nBest score so far: 67.14\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\n  9%|▊         | 6/70 [00:00&lt;00:03, 16.98it/s]\n\n\n\n\nBootstrapped 3 full traces after 6 examples for up to 1 rounds, amounting to 6 attempts.\n\n\n\n\n\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\nAverage Metric: 46.00 / 70 (65.7%): 100%|██████████| 70/70 [00:01&lt;00:00, 65.12it/s]\n\n\n\n\n2025/07/29 01:03:27 INFO dspy.evaluate.evaluate: Average Metric: 46.0 / 70 (65.7%)\n\n\n\n\n\n🏃 View run eval_2 at: http://localhost:5000/#/experiments/3/runs/a83ba7facae34ee2b495fd0bcb478044\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nScores so far: [61.43, 67.14, 65.71]\nBest score so far: 67.14\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\n  3%|▎         | 2/70 [00:00&lt;00:03, 21.93it/s]\n\n\n\n\nBootstrapped 2 full traces after 2 examples for up to 1 rounds, amounting to 2 attempts.\n\n\n\n\n\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\nAverage Metric: 46.00 / 70 (65.7%): 100%|██████████| 70/70 [00:01&lt;00:00, 36.63it/s]\n\n\n\n\n2025/07/29 01:03:30 INFO dspy.evaluate.evaluate: Average Metric: 46.0 / 70 (65.7%)\n\n\n\n\n\n🏃 View run eval_3 at: http://localhost:5000/#/experiments/3/runs/343b2f8e893044da9a9bee74f6be8853\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nScores so far: [61.43, 67.14, 65.71, 65.71]\nBest score so far: 67.14\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\n  1%|▏         | 1/70 [00:00&lt;00:02, 28.87it/s]\n\n\n\n\nBootstrapped 1 full traces after 1 examples for up to 1 rounds, amounting to 1 attempts.\n\n\n\n\n\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\nAverage Metric: 45.00 / 70 (64.3%): 100%|██████████| 70/70 [00:01&lt;00:00, 37.96it/s]\n\n\n\n\n2025/07/29 01:03:32 INFO dspy.evaluate.evaluate: Average Metric: 45.0 / 70 (64.3%)\n\n\n\n\n\n🏃 View run eval_4 at: http://localhost:5000/#/experiments/3/runs/3ad1f0eea05b4d7b88e7c47e2c0c29ab\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nScores so far: [61.43, 67.14, 65.71, 65.71, 64.29]\nBest score so far: 67.14\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\n  1%|▏         | 1/70 [00:00&lt;00:02, 25.21it/s]\n\n\n\n\nBootstrapped 1 full traces after 1 examples for up to 1 rounds, amounting to 1 attempts.\n\n\n\n\n\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\nAverage Metric: 47.00 / 70 (67.1%): 100%|██████████| 70/70 [00:01&lt;00:00, 35.34it/s]\n\n\n\n\n2025/07/29 01:03:34 INFO dspy.evaluate.evaluate: Average Metric: 47.0 / 70 (67.1%)\n\n\n\n\n\n🏃 View run eval_5 at: http://localhost:5000/#/experiments/3/runs/29b7cf7738bc47d89e81309a65595be0\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nScores so far: [61.43, 67.14, 65.71, 65.71, 64.29, 67.14]\nBest score so far: 67.14\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\n  1%|▏         | 1/70 [00:00&lt;00:10,  6.34it/s]\n\n\n\n\n\nBootstrapped 1 full traces after 1 examples for up to 1 rounds, amounting to 1 attempts.\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\nAverage Metric: 48.00 / 70 (68.6%): 100%|██████████| 70/70 [00:02&lt;00:00, 31.53it/s]\n\n\n\n\n2025/07/29 01:03:38 INFO dspy.evaluate.evaluate: Average Metric: 48.0 / 70 (68.6%)\n\n\n\n\n\n🏃 View run eval_6 at: http://localhost:5000/#/experiments/3/runs/d3a6322d0555421784dbb34087099455\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nNew best score: 68.57 for seed 3\nScores so far: [61.43, 67.14, 65.71, 65.71, 64.29, 67.14, 68.57]\nBest score so far: 68.57\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\n  1%|▏         | 1/70 [00:00&lt;00:05, 13.59it/s]\n\n\n\n\nBootstrapped 1 full traces after 1 examples for up to 1 rounds, amounting to 1 attempts.\n\n\n\n\n\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\nAverage Metric: 60.00 / 70 (85.7%): 100%|██████████| 70/70 [00:02&lt;00:00, 28.22it/s] \n\n\n\n\n2025/07/29 01:03:41 INFO dspy.evaluate.evaluate: Average Metric: 60.0 / 70 (85.7%)\n\n\n\n\n\n🏃 View run eval_7 at: http://localhost:5000/#/experiments/3/runs/93c1cafdbb6b440699788970eb6ffa88\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nNew best score: 85.71 for seed 4\nScores so far: [61.43, 67.14, 65.71, 65.71, 64.29, 67.14, 68.57, 85.71]\nBest score so far: 85.71\n8 candidate programs found.\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\n🏃 View run bootstrap_few_shot_rs_gemini_gemini-2_5-flash at: http://localhost:5000/#/experiments/3/runs/621ba195ed244875a4370e2050418a06\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nGoing to sample between 1 and 3 traces per predictor.\nWill attempt to bootstrap 5 candidate sets.\n  0%|          | 0/70 [00:00&lt;?, ?it/s]\n\n\n\n\n2025/07/29 01:03:42 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:03:42 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:03:42 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:03:43 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 22.00 / 29 (75.9%):  40%|████      | 28/70 [00:00&lt;00:00, 71.01it/s]\n\n\n\n\n2025/07/29 01:03:43 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 36.00 / 49 (73.5%):  69%|██████▊   | 48/70 [00:01&lt;00:00, 69.84it/s]\n\n\n\n\n2025/07/29 01:03:44 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 52.00 / 70 (74.3%): 100%|██████████| 70/70 [00:01&lt;00:00, 37.98it/s]\n\n\n\n\n2025/07/29 01:03:44 INFO dspy.evaluate.evaluate: Average Metric: 52.0 / 70 (74.3%)\n\n\n\n\n\n🏃 View run eval_0 at: http://localhost:5000/#/experiments/3/runs/377a453f2e0745e38fc89508f7ab1d26\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nNew best score: 74.29 for seed -3\nScores so far: [74.29]\nBest score so far: 74.29\n  0%|          | 0/70 [00:00&lt;?, ?it/s]\n\n\n\n\n2025/07/29 01:03:44 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 1.00 / 4 (25.0%):   4%|▍         | 3/70 [00:00&lt;00:17,  3.91it/s] \n\n\n\n\n2025/07/29 01:03:45 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 5.00 / 8 (62.5%):  10%|█         | 7/70 [00:00&lt;00:16,  3.91it/s]\n\n\n\n\n2025/07/29 01:03:45 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 13.00 / 16 (81.2%):  23%|██▎       | 16/70 [00:00&lt;00:01, 39.80it/s]\n\n\n\n\n2025/07/29 01:03:45 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 30.00 / 41 (73.2%):  57%|█████▋    | 40/70 [00:01&lt;00:01, 17.35it/s]\n\n\n\n\n2025/07/29 01:03:46 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 33.00 / 44 (75.0%):  61%|██████▏   | 43/70 [00:01&lt;00:01, 17.35it/s]\n\n\n\n\n2025/07/29 01:03:46 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 52.00 / 70 (74.3%): 100%|██████████| 70/70 [00:01&lt;00:00, 36.77it/s]\n\n\n\n\n2025/07/29 01:03:46 INFO dspy.evaluate.evaluate: Average Metric: 52.0 / 70 (74.3%)\n\n\n\n\n\n🏃 View run eval_1 at: http://localhost:5000/#/experiments/3/runs/d9e37616e88748d8890de6056370f801\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nScores so far: [74.29, 74.29]\nBest score so far: 74.29\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\n  6%|▌         | 4/70 [00:00&lt;00:04, 15.37it/s]\n\n\n\n\nBootstrapped 3 full traces after 4 examples for up to 1 rounds, amounting to 4 attempts.\n\n\n\n\n\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\nAverage Metric: 52.00 / 70 (74.3%): 100%|██████████| 70/70 [00:01&lt;00:00, 35.80it/s]\n\n\n\n\n2025/07/29 01:03:49 INFO dspy.evaluate.evaluate: Average Metric: 52.0 / 70 (74.3%)\n\n\n\n\n\n🏃 View run eval_2 at: http://localhost:5000/#/experiments/3/runs/7bfc22c9728f4862931e5bb8bf4d379e\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nScores so far: [74.29, 74.29, 74.29]\nBest score so far: 74.29\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\n  3%|▎         | 2/70 [00:12&lt;06:55,  6.11s/it]\n\n\n\n\nBootstrapped 2 full traces after 2 examples for up to 1 rounds, amounting to 2 attempts.\n\n\n\n\n\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\nAverage Metric: 43.00 / 53 (81.1%):  76%|███████▌  | 53/70 [00:22&lt;00:09,  1.74it/s] \n\n\n\n\n2025/07/29 01:04:25 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 50.00 / 68 (73.5%):  97%|█████████▋| 68/70 [00:55&lt;00:04,  2.16s/it]\n\n\n\n\n2025/07/29 01:05:26 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 51.00 / 70 (72.9%): 100%|██████████| 70/70 [01:56&lt;00:00,  1.66s/it]\n\n\n\n\n2025/07/29 01:05:59 INFO dspy.evaluate.evaluate: Average Metric: 51.0 / 70 (72.9%)\n\n\n\n\n\n🏃 View run eval_3 at: http://localhost:5000/#/experiments/3/runs/7cc38c776c8c40ad983a78690454b768\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nScores so far: [74.29, 74.29, 74.29, 72.86]\nBest score so far: 74.29\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\n  1%|▏         | 1/70 [00:05&lt;06:47,  5.90s/it]\n\n\n\n\nBootstrapped 1 full traces after 1 examples for up to 1 rounds, amounting to 1 attempts.\n\n\n\n\n\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\nAverage Metric: 34.00 / 37 (91.9%):  53%|█████▎    | 37/70 [00:16&lt;00:15,  2.18it/s] \n\n\n\n\n2025/07/29 01:06:22 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 49.00 / 62 (79.0%):  89%|████████▊ | 62/70 [00:33&lt;00:07,  1.03it/s]\n\n\n\n\n2025/07/29 01:06:40 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 52.00 / 70 (74.3%): 100%|██████████| 70/70 [00:52&lt;00:00,  1.34it/s]\n\n\n\n\n2025/07/29 01:06:57 INFO dspy.evaluate.evaluate: Average Metric: 52.0 / 70 (74.3%)\n\n\n\n\n\n🏃 View run eval_4 at: http://localhost:5000/#/experiments/3/runs/3d4799840b5145f38c55cd04a510b4eb\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nScores so far: [74.29, 74.29, 74.29, 72.86, 74.29]\nBest score so far: 74.29\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\n  1%|▏         | 1/70 [00:03&lt;04:04,  3.55s/it]\n\n\n\n\nBootstrapped 1 full traces after 1 examples for up to 1 rounds, amounting to 1 attempts.\n\n\n\n\n\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\nAverage Metric: 53.00 / 70 (75.7%): 100%|██████████| 70/70 [00:49&lt;00:00,  1.41it/s] \n\n\n\n\n2025/07/29 01:07:51 INFO dspy.evaluate.evaluate: Average Metric: 53.0 / 70 (75.7%)\n\n\n\n\n\n🏃 View run eval_5 at: http://localhost:5000/#/experiments/3/runs/826af9f09c4e4410b2b21424430e67f1\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nNew best score: 75.71 for seed 2\nScores so far: [74.29, 74.29, 74.29, 72.86, 74.29, 75.71]\nBest score so far: 75.71\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\n  1%|▏         | 1/70 [00:05&lt;06:22,  5.54s/it]\n\n\n\n\nBootstrapped 1 full traces after 1 examples for up to 1 rounds, amounting to 1 attempts.\n\n\n\n\n\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\nAverage Metric: 44.00 / 48 (91.7%):  69%|██████▊   | 48/70 [00:18&lt;00:08,  2.53it/s] \n\n\n\n\n2025/07/29 01:08:16 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 53.00 / 70 (75.7%): 100%|██████████| 70/70 [01:02&lt;00:00,  1.13it/s]\n\n\n\n\n2025/07/29 01:08:59 INFO dspy.evaluate.evaluate: Average Metric: 53.0 / 70 (75.7%)\n\n\n\n\n\n🏃 View run eval_6 at: http://localhost:5000/#/experiments/3/runs/a029e23cfbe14b92a2ba6ce26146642b\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nScores so far: [74.29, 74.29, 74.29, 72.86, 74.29, 75.71, 75.71]\nBest score so far: 75.71\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\n  1%|▏         | 1/70 [00:04&lt;04:43,  4.11s/it]\n\n\n\n\nBootstrapped 1 full traces after 1 examples for up to 1 rounds, amounting to 1 attempts.\n\n\n\n\n\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\nAverage Metric: 56.00 / 70 (80.0%): 100%|██████████| 70/70 [00:44&lt;00:00,  1.58it/s] \n\n\n\n\n2025/07/29 01:09:48 INFO dspy.evaluate.evaluate: Average Metric: 56.0 / 70 (80.0%)\n\n\n\n\n\n🏃 View run eval_7 at: http://localhost:5000/#/experiments/3/runs/861f0c753b754e6a8eb3372287edd9bc\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nNew best score: 80.0 for seed 4\nScores so far: [74.29, 74.29, 74.29, 72.86, 74.29, 75.71, 75.71, 80.0]\nBest score so far: 80.0\n8 candidate programs found.\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\n🏃 View run bootstrap_few_shot_rs_openai_o3-2025-04-16 at: http://localhost:5000/#/experiments/3/runs/8576b067ea60468ebc37cda1a17be1dc\n🧪 View experiment at: http://localhost:5000/#/experiments/3\n🏃 View run bootstrap_few_shot_rs_easy at: http://localhost:5000/#/experiments/3/runs/b5f08a070a634f74888fb8c42f24bfa3\n🧪 View experiment at: http://localhost:5000/#/experiments/3\n\n\n\n\n\n\n\n\nCollapse MLflow Trace\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFrom the above, it looks like GPT-4.1 gives an score of 80% on the validation set, WITHOUT ANY PROMPT ENGINEERING/FEW-SHOT PROMPTING. This is great!\n\n\nAs mentioned earlier, due to cost and time constraints, we want to first narrow down the list of models we want to test on the harder stages.\n\n\nAs a recap, our implementation strategy here will be as follows: instead of just using the performance of the models on the “easy” validation set, we will use a combination of two datasets:\n\n\n\nGate - 50 Easy dialogs, teacher - forced. Drop model if Turn-EM &lt; 0.55.\n\n\nProbe - 30-dialog mixed micro-set (15 Medium + 15 Hard, closed loop). Keep model only if Final-Turn EM ≥ 0.35, Dialogue-mean EM ≥ 0.35\n\n\n\nWe will now create our “gate” and “probe” datasets.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWe will also save the gate and probe dataset ids, to compare performance of different models on them.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n{'conversation_context': 'None',\n 'evidence_snippets': \"[PRE]\\nentergy corporation and subsidiaries management's financial discussion and analysis refer to 201cselected financial data - five-year comparison of entergy corporation and subsidiaries 201d which accompanies entergy corporation 2019s financial statements in this report for further information with respect to operating statistics . in november 2007 the board approved a plan to pursue a separation of entergy 2019s non-utility nuclear business from entergy through a spin-off of the business to entergy shareholders . in april 2010 , entergy announced that it planned to unwind the business infrastructure associated with the proposed spin-off transaction . as a result of the plan to unwind the business infrastructure , entergy recorded expenses in 2010 for the write-off of certain capitalized costs incurred in connection with the planned spin-off transaction . these costs are discussed in more detail below and throughout this section . net revenue utility following is an analysis of the change in net revenue comparing 2010 to 2009 . amount ( in millions ) .\\n[/PRE]\\n[POST]\\nthe volume/weather variance is primarily due to an increase of 8362 gwh , or 8% ( 8 % ) , in billed electricity usage in all retail sectors , including the effect on the residential sector of colder weather in the first quarter 2010 compared to 2009 and warmer weather in the second and third quarters 2010 compared to 2009 . the industrial sector reflected strong sales growth on continuing signs of economic recovery . the improvement in this sector was primarily driven by inventory restocking and strong exports with the chemicals , refining , and miscellaneous manufacturing sectors leading the improvement . the retail electric price variance is primarily due to : increases in the formula rate plan riders at entergy gulf states louisiana effective november 2009 , january 2010 , and september 2010 , at entergy louisiana effective november 2009 , and at entergy mississippi effective july 2009 ; a base rate increase at entergy arkansas effective july 2010 ; rate actions at entergy texas , including base rate increases effective in may and august 2010 ; a formula rate plan provision of $ 16.6 million recorded in the third quarter 2009 for refunds that were made to customers in accordance with settlements approved by the lpsc ; and the recovery in 2009 by entergy arkansas of 2008 extraordinary storm costs , as approved by the apsc , which ceased in january 2010 . the recovery of storm costs is offset in other operation and maintenance expenses . see note 2 to the financial statements for further discussion of the proceedings referred to above. .\\n[/POST]\",\n 'table': '| Row | 2009 net revenue | volume/weather | retail electric price | provision for regulatory proceedings | rough production cost equalization | ano decommissioning trust | fuel recovery | other | 2010 net revenue |\\n|---|---|---|---|---|---|---|---|---|---|\\n| amount ( in millions ) | 4694.0 | 231.0 | 137.0 | 26.0 | 19.0 | -24.0 | -44.0 | 12.0 | 5051.0 |',\n 'question': 'what was the difference in net revenue between 2009 and 2010?',\n 'id': 'Single_ETR/2011/page_22.pdf-3',\n 'doc_pre_text': \"entergy corporation and subsidiaries management's financial discussion and analysis refer to 201cselected financial data - five-year comparison of entergy corporation and subsidiaries 201d which accompanies entergy corporation 2019s financial statements in this report for further information with respect to operating statistics . in november 2007 the board approved a plan to pursue a separation of entergy 2019s non-utility nuclear business from entergy through a spin-off of the business to entergy shareholders . in april 2010 , entergy announced that it planned to unwind the business infrastructure associated with the proposed spin-off transaction . as a result of the plan to unwind the business infrastructure , entergy recorded expenses in 2010 for the write-off of certain capitalized costs incurred in connection with the planned spin-off transaction . these costs are discussed in more detail below and throughout this section . net revenue utility following is an analysis of the change in net revenue comparing 2010 to 2009 . amount ( in millions ) .\",\n 'doc_post_text': 'the volume/weather variance is primarily due to an increase of 8362 gwh , or 8% ( 8 % ) , in billed electricity usage in all retail sectors , including the effect on the residential sector of colder weather in the first quarter 2010 compared to 2009 and warmer weather in the second and third quarters 2010 compared to 2009 . the industrial sector reflected strong sales growth on continuing signs of economic recovery . the improvement in this sector was primarily driven by inventory restocking and strong exports with the chemicals , refining , and miscellaneous manufacturing sectors leading the improvement . the retail electric price variance is primarily due to : increases in the formula rate plan riders at entergy gulf states louisiana effective november 2009 , january 2010 , and september 2010 , at entergy louisiana effective november 2009 , and at entergy mississippi effective july 2009 ; a base rate increase at entergy arkansas effective july 2010 ; rate actions at entergy texas , including base rate increases effective in may and august 2010 ; a formula rate plan provision of $ 16.6 million recorded in the third quarter 2009 for refunds that were made to customers in accordance with settlements approved by the lpsc ; and the recovery in 2009 by entergy arkansas of 2008 extraordinary storm costs , as approved by the apsc , which ceased in january 2010 . the recovery of storm costs is offset in other operation and maintenance expenses . see note 2 to the financial statements for further discussion of the proceedings referred to above. .',\n 'doc_table': {'amount ( in millions )': {'2009 net revenue': 4694.0,\n   'volume/weather': 231.0,\n   'retail electric price': 137.0,\n   'provision for regulatory proceedings': 26.0,\n   'rough production cost equalization': 19.0,\n   'ano decommissioning trust': -24.0,\n   'fuel recovery': -44.0,\n   'other': 12.0,\n   '2010 net revenue': 5051.0}},\n 'dialogue_conv_questions': ['what was the difference in net revenue between 2009 and 2010?',\n  'and the specific value for 2009 again?',\n  'so what was the percentage change during this time?'],\n 'dialogue_conv_answers': ['357', '4694', '7.61%'],\n 'dialogue_turn_program': ['subtract(5051, 4694)',\n  '4694',\n  'subtract(5051, 4694), divide(#0, 4694)'],\n 'dialogue_executed_answers': [357.0, 4694.0, 0.07605],\n 'dialogue_qa_split': [False, False, False],\n 'features_num_dialogue_turns': 3,\n 'features_has_type2_question': False,\n 'features_has_duplicate_columns': False,\n 'features_has_non_numeric_values': False,\n 'answer': 357.0}\n\n\n\n\n\n\n\n\n\n\n\n\n\n{'conversation_context': 'None',\n 'evidence_snippets': \"[PRE]\\nentergy corporation and subsidiaries management's financial discussion and analysis refer to 201cselected financial data - five-year comparison of entergy corporation and subsidiaries 201d which accompanies entergy corporation 2019s financial statements in this report for further information with respect to operating statistics . in november 2007 the board approved a plan to pursue a separation of entergy 2019s non-utility nuclear business from entergy through a spin-off of the business to entergy shareholders . in april 2010 , entergy announced that it planned to unwind the business infrastructure associated with the proposed spin-off transaction . as a result of the plan to unwind the business infrastructure , entergy recorded expenses in 2010 for the write-off of certain capitalized costs incurred in connection with the planned spin-off transaction . these costs are discussed in more detail below and throughout this section . net revenue utility following is an analysis of the change in net revenue comparing 2010 to 2009 . amount ( in millions ) .\\n[/PRE]\\n[POST]\\nthe volume/weather variance is primarily due to an increase of 8362 gwh , or 8% ( 8 % ) , in billed electricity usage in all retail sectors , including the effect on the residential sector of colder weather in the first quarter 2010 compared to 2009 and warmer weather in the second and third quarters 2010 compared to 2009 . the industrial sector reflected strong sales growth on continuing signs of economic recovery . the improvement in this sector was primarily driven by inventory restocking and strong exports with the chemicals , refining , and miscellaneous manufacturing sectors leading the improvement . the retail electric price variance is primarily due to : increases in the formula rate plan riders at entergy gulf states louisiana effective november 2009 , january 2010 , and september 2010 , at entergy louisiana effective november 2009 , and at entergy mississippi effective july 2009 ; a base rate increase at entergy arkansas effective july 2010 ; rate actions at entergy texas , including base rate increases effective in may and august 2010 ; a formula rate plan provision of $ 16.6 million recorded in the third quarter 2009 for refunds that were made to customers in accordance with settlements approved by the lpsc ; and the recovery in 2009 by entergy arkansas of 2008 extraordinary storm costs , as approved by the apsc , which ceased in january 2010 . the recovery of storm costs is offset in other operation and maintenance expenses . see note 2 to the financial statements for further discussion of the proceedings referred to above. .\\n[/POST]\",\n 'table': '| Row | 2009 net revenue | volume/weather | retail electric price | provision for regulatory proceedings | rough production cost equalization | ano decommissioning trust | fuel recovery | other | 2010 net revenue |\\n|---|---|---|---|---|---|---|---|---|---|\\n| amount ( in millions ) | 4694.0 | 231.0 | 137.0 | 26.0 | 19.0 | -24.0 | -44.0 | 12.0 | 5051.0 |',\n 'question': 'what was the difference in net revenue between 2009 and 2010?'}\n\n\n\n\n\n\n\n\n\n\n\n\n\nGate Dataset Results¶\n\n\n\n\n\n\n\n\n\n\n\n\n\nAverage Metric: 8.00 / 10 (80.0%): 100%|██████████| 10/10 [00:00&lt;00:00, 65.65it/s]\n\n\n\n\n2025/07/28 18:19:36 INFO dspy.evaluate.evaluate: Average Metric: 8.0 / 10 (80.0%)\n\n\n\n\n\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/502b5457f9db44339a5afce34d13d847\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_openai_gpt-4_1-2025-04-14 at: http://localhost:5000/#/experiments/1/runs/7e61e1f47f4e408c8cec59ee1bf9c0dd\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 5.00 / 10 (50.0%): 100%|██████████| 10/10 [00:00&lt;00:00, 58.97it/s]\n\n\n\n\n2025/07/28 18:19:37 INFO dspy.evaluate.evaluate: Average Metric: 5.0 / 10 (50.0%)\n\n\n\n\n\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/1b4ea94ac47e4660b30234d6ad78c8d8\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_openai_gpt-4_1-mini-2025-04-14 at: http://localhost:5000/#/experiments/1/runs/fa03278692c848e996a3e43e6422099f\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 6.00 / 10 (60.0%): 100%|██████████| 10/10 [00:00&lt;00:00, 79.01it/s]\n\n\n\n\n2025/07/28 18:19:37 INFO dspy.evaluate.evaluate: Average Metric: 6.0 / 10 (60.0%)\n\n\n\n\n\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/ce1366eaa8c146eabba86650fae12f74\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_openai_o4-mini-2025-04-16 at: http://localhost:5000/#/experiments/1/runs/3d1fb9c72b914d5a942312db0a6a5088\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 6.00 / 10 (60.0%): 100%|██████████| 10/10 [00:00&lt;00:00, 81.33it/s]\n\n\n\n\n2025/07/28 18:19:37 INFO dspy.evaluate.evaluate: Average Metric: 6.0 / 10 (60.0%)\n\n\n\n\n\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/9e00a96bfd114bbaa9e47dcb478b4423\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_anthropic_claude-sonnet-4-20250514 at: http://localhost:5000/#/experiments/1/runs/76c2180b1f3c4510ab13158d3b0d36eb\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 7.00 / 10 (70.0%): 100%|██████████| 10/10 [00:00&lt;00:00, 65.50it/s]\n\n\n\n\n2025/07/28 18:19:37 INFO dspy.evaluate.evaluate: Average Metric: 7.0 / 10 (70.0%)\n\n\n\n\n\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/4a3c7957aaab4a4e972b06a7754fe6d4\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_gemini_gemini-2_5-flash at: http://localhost:5000/#/experiments/1/runs/aa191551b2844b57bb9d2db37e50c4f0\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n  0%|          | 0/10 [00:00&lt;?, ?it/s]\n\n\n\n\n2025/07/28 18:19:37 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:19:37 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 7.00 / 10 (70.0%): 100%|██████████| 10/10 [00:00&lt;00:00, 61.55it/s]\n\n\n\n\n2025/07/28 18:19:38 INFO dspy.evaluate.evaluate: Average Metric: 7.0 / 10 (70.0%)\n\n\n\n\n\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/809ee64fbd164475b3592ff2340b2595\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_gemini_gemini-2_5-flash-lite at: http://localhost:5000/#/experiments/1/runs/90ea53b2a2484cc0a5302b7c8245184e\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 8.00 / 10 (80.0%): 100%|██████████| 10/10 [00:00&lt;00:00, 74.80it/s]\n\n\n\n\n2025/07/28 18:19:38 INFO dspy.evaluate.evaluate: Average Metric: 8.0 / 10 (80.0%)\n\n\n\n\n\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/6f1bec87d6ce4137b10e055e94bf54d4\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_openai_o3-2025-04-16 at: http://localhost:5000/#/experiments/1/runs/7e4f8e42c8244b94af37787cacd12ee5\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 7.00 / 10 (70.0%): 100%|██████████| 10/10 [00:00&lt;00:00, 86.48it/s]\n\n\n\n\n2025/07/28 18:19:38 INFO dspy.evaluate.evaluate: Average Metric: 7.0 / 10 (70.0%)\n\n\n\n\n\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/ab105090285e4b55a93205dc6f1bde64\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_anthropic_claude-opus-4-20250514 at: http://localhost:5000/#/experiments/1/runs/58c90aae89644af8a1d2c7dc845b0c07\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 8.00 / 10 (80.0%): 100%|██████████| 10/10 [00:00&lt;00:00, 39.63it/s]\n\n\n\n\n2025/07/28 18:19:38 INFO dspy.evaluate.evaluate: Average Metric: 8.0 / 10 (80.0%)\n\n\n\n\n\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/e786a0b633844e7ebdb6a165561b81ec\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_gemini_gemini-2_5-pro at: http://localhost:5000/#/experiments/1/runs/9e1f42bcc8064a9383ed590c1add4d01\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 7.00 / 10 (70.0%): 100%|██████████| 10/10 [00:00&lt;00:00, 71.29it/s]\n\n\n\n\n2025/07/28 18:19:39 INFO dspy.evaluate.evaluate: Average Metric: 7.0 / 10 (70.0%)\n\n\n\n\n\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/f4ae2cb32a2b401aa5ab8f7b02dc7b86\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_ollama_qwen3_32b at: http://localhost:5000/#/experiments/1/runs/ca6c0d988ca94f2998eb08f339fdf22a\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_dataset_results at: http://localhost:5000/#/experiments/1/runs/0b0e82f0b3724ec1afedde0d7a036dfe\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n\n\n\n\n\n\n\n\nCollapse MLflow Trace\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                                  LLM  Evaluation Score\n0           openai/gpt-4.1-2025-04-14              80.0\n1      openai/gpt-4.1-mini-2025-04-14              50.0\n2           openai/o4-mini-2025-04-16              60.0\n3  anthropic/claude-sonnet-4-20250514              60.0\n4             gemini/gemini-2.5-flash              70.0\n5        gemini/gemini-2.5-flash-lite              70.0\n6                openai/o3-2025-04-16              80.0\n7    anthropic/claude-opus-4-20250514              70.0\n8               gemini/gemini-2.5-pro              80.0\n9                    ollama/qwen3:32b              70.0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFrom the small test above, we see that most of the models score in a similar range. I think it’s expected that GPT-4.1-mini performs poorly, given that it’s a much smaller model compared to all the competetiors.\n\n\nFrom the MLFlow logs, we also see that while Qwen3:32b has a relatively high score, inference is quite slow. For now, we will skip this model during the model selection phase, and revisit it later.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAverage Metric: 95.00 / 151 (62.9%): 100%|██████████| 151/151 [00:02&lt;00:00, 74.97it/s]\n\n\n\n\n2025/07/28 18:21:32 INFO dspy.evaluate.evaluate: Average Metric: 95.0 / 151 (62.9%)\n\n\n\n\n\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/e18f45df89fb4a0e9e98e6f01d74bf71\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_openai_gpt-4_1-2025-04-14 at: http://localhost:5000/#/experiments/1/runs/f15c1d3760fc489b95ec5950f3e992b9\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 81.00 / 151 (53.6%): 100%|██████████| 151/151 [00:02&lt;00:00, 74.18it/s]\n\n\n\n\n2025/07/28 18:21:34 INFO dspy.evaluate.evaluate: Average Metric: 81.0 / 151 (53.6%)\n\n\n\n\n\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/9f40a5f2dc2a4e09977f8b8c53822605\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_openai_gpt-4_1-mini-2025-04-14 at: http://localhost:5000/#/experiments/1/runs/c882d7c82d5f4a3abb510bf57d506c53\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 31.00 / 55 (56.4%):  36%|███▌      | 54/151 [00:00&lt;00:01, 53.34it/s]\n\n\n\n\n2025/07/28 18:21:35 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 44.00 / 72 (61.1%):  47%|████▋     | 71/151 [00:01&lt;00:01, 73.76it/s]\n\n\n\n\n2025/07/28 18:21:35 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 62.00 / 106 (58.5%):  70%|██████▉   | 105/151 [00:01&lt;00:00, 82.16it/s]\n\n\n\n\n2025/07/28 18:21:36 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 95.00 / 151 (62.9%): 100%|██████████| 151/151 [00:02&lt;00:00, 71.71it/s]\n\n\n\n\n2025/07/28 18:21:36 INFO dspy.evaluate.evaluate: Average Metric: 95.0 / 151 (62.9%)\n\n\n\n\n\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/8154049643d040d39c7642b56ac6d7c5\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_openai_o4-mini-2025-04-16 at: http://localhost:5000/#/experiments/1/runs/938b45e4b5204804b4e4660feebf563a\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 95.00 / 151 (62.9%): 100%|██████████| 151/151 [00:02&lt;00:00, 70.44it/s]\n\n\n\n\n2025/07/28 18:21:38 INFO dspy.evaluate.evaluate: Average Metric: 95.0 / 151 (62.9%)\n\n\n\n\n\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/599e8c7040b04b8c8f0ca24c6dc94d37\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_anthropic_claude-sonnet-4-20250514 at: http://localhost:5000/#/experiments/1/runs/4442e20dc743456b966821c18219c23e\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n  0%|          | 0/151 [00:00&lt;?, ?it/s]\n\n\n\n\n2025/07/28 18:21:39 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:39 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 31.00 / 47 (66.0%):  30%|███       | 46/151 [00:01&lt;00:02, 47.10it/s]\n\n\n\n\n2025/07/28 18:21:40 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 57.00 / 93 (61.3%):  62%|██████▏   | 93/151 [00:01&lt;00:00, 79.96it/s]\n\n\n\n\n2025/07/28 18:21:40 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 73.00 / 122 (59.8%):  80%|████████  | 121/151 [00:01&lt;00:00, 89.94it/s]\n\n\n\n\n2025/07/28 18:21:40 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 96.00 / 151 (63.6%): 100%|██████████| 151/151 [00:02&lt;00:00, 67.06it/s]\n\n\n\n\n2025/07/28 18:21:41 INFO dspy.evaluate.evaluate: Average Metric: 96.0 / 151 (63.6%)\n\n\n\n\n\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/bcea3ffb8c6f4cbb98725e43e88cbdd0\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_gemini_gemini-2_5-flash at: http://localhost:5000/#/experiments/1/runs/7db59c48c06c4948adf754477705c360\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n  0%|          | 0/151 [00:00&lt;?, ?it/s]\n\n\n\n\n2025/07/28 18:21:41 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:41 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:41 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:41 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:41 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:41 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:41 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:41 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:41 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:41 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 8.00 / 12 (66.7%):   7%|▋         | 11/151 [00:00&lt;00:03, 38.23it/s]\n\n\n\n\n2025/07/28 18:21:41 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:41 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 9.00 / 13 (69.2%):   8%|▊         | 12/151 [00:00&lt;00:03, 38.23it/s]\n\n\n\n\n2025/07/28 18:21:41 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:41 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 18.00 / 29 (62.1%):  19%|█▉        | 29/151 [00:00&lt;00:01, 62.69it/s]\n\n\n\n\n2025/07/28 18:21:42 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:42 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 20.00 / 32 (62.5%):  21%|██        | 31/151 [00:00&lt;00:01, 62.69it/s]\n\n\n\n\n2025/07/28 18:21:42 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n\n\n\n\n\nAverage Metric: 20.00 / 33 (60.6%):  21%|██        | 32/151 [00:00&lt;00:01, 62.69it/s]\n\n\n\n\n2025/07/28 18:21:42 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:42 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n\n\n\n\n\nAverage Metric: 21.00 / 34 (61.8%):  22%|██▏       | 33/151 [00:00&lt;00:01, 62.69it/s]\n\n\n\n\n2025/07/28 18:21:42 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 22.00 / 38 (57.9%):  25%|██▍       | 37/151 [00:00&lt;00:01, 61.42it/s]\n\n\n\n\n2025/07/28 18:21:42 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:42 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 44.00 / 75 (58.7%):  49%|████▉     | 74/151 [00:01&lt;00:01, 57.41it/s]\n\n\n\n\n2025/07/28 18:21:42 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n\n\n\n\n\nAverage Metric: 44.00 / 76 (57.9%):  50%|████▉     | 75/151 [00:01&lt;00:01, 57.41it/s]\n\n\n\n\n2025/07/28 18:21:42 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 44.00 / 78 (56.4%):  51%|█████     | 77/151 [00:01&lt;00:01, 58.30it/s]\n\n\n\n\n2025/07/28 18:21:42 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 47.00 / 84 (56.0%):  56%|█████▌    | 84/151 [00:01&lt;00:01, 60.44it/s]\n\n\n\n\n2025/07/28 18:21:42 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:42 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 51.00 / 89 (57.3%):  58%|█████▊    | 88/151 [00:01&lt;00:01, 60.44it/s]\n\n\n\n\n2025/07/28 18:21:43 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:43 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:43 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 52.00 / 90 (57.8%):  59%|█████▉    | 89/151 [00:01&lt;00:01, 60.44it/s]\n\n\n\n\n2025/07/28 18:21:43 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 55.00 / 96 (57.3%):  63%|██████▎   | 95/151 [00:01&lt;00:00, 60.62it/s]\n\n\n\n\n2025/07/28 18:21:43 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n\n\n\n\n\nAverage Metric: 56.00 / 97 (57.7%):  64%|██████▎   | 96/151 [00:01&lt;00:00, 60.62it/s]\n\n\n\n\n2025/07/28 18:21:43 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 59.00 / 107 (55.1%):  70%|███████   | 106/151 [00:01&lt;00:00, 67.41it/s]\n\n\n\n\n2025/07/28 18:21:43 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n\n\n\n\n\nAverage Metric: 59.00 / 108 (54.6%):  72%|███████▏  | 108/151 [00:01&lt;00:00, 69.63it/s]\n\n\n\n\n2025/07/28 18:21:43 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 62.00 / 112 (55.4%):  74%|███████▎  | 111/151 [00:01&lt;00:00, 69.63it/s]\n\n\n\n\n2025/07/28 18:21:43 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:43 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 69.00 / 123 (56.1%):  81%|████████  | 122/151 [00:01&lt;00:00, 69.40it/s]\n\n\n\n\n2025/07/28 18:21:43 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:43 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 87.00 / 151 (57.6%): 100%|██████████| 151/151 [00:02&lt;00:00, 60.17it/s]\n\n\n\n\n2025/07/28 18:21:43 INFO dspy.evaluate.evaluate: Average Metric: 87.0 / 151 (57.6%)\n\n\n\n\n\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/c348c68458124441865ac735d0b7d641\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_gemini_gemini-2_5-flash-lite at: http://localhost:5000/#/experiments/1/runs/598582fb690540e7baca55a097fee220\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 22.00 / 32 (68.8%):  21%|██        | 31/151 [00:00&lt;00:01, 64.25it/s]\n\n\n\n\n2025/07/28 18:21:44 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 69.00 / 100 (69.0%):  66%|██████▌   | 99/151 [00:01&lt;00:00, 62.91it/s]\n\n\n\n\n2025/07/28 18:21:45 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 106.00 / 151 (70.2%): 100%|██████████| 151/151 [00:02&lt;00:00, 51.93it/s]\n\n\n\n\n2025/07/28 18:21:47 INFO dspy.evaluate.evaluate: Average Metric: 106.0 / 151 (70.2%)\n\n\n\n\n\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/853504669f224faf8773cf2d9436fb41\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_openai_o3-2025-04-16 at: http://localhost:5000/#/experiments/1/runs/f122d81f9c1d46d582ce64553f6ee3ea\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 103.00 / 151 (68.2%): 100%|██████████| 151/151 [00:02&lt;00:00, 67.19it/s]\n\n\n\n\n2025/07/28 18:21:49 INFO dspy.evaluate.evaluate: Average Metric: 103.0 / 151 (68.2%)\n\n\n\n\n\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/96826db5718c45d6a2dc0b2c5526441e\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_anthropic_claude-opus-4-20250514 at: http://localhost:5000/#/experiments/1/runs/d329de90de1e40e0b467681f0442656a\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 103.00 / 151 (68.2%): 100%|██████████| 151/151 [00:02&lt;00:00, 71.07it/s] \n\n\n\n\n2025/07/28 18:21:51 INFO dspy.evaluate.evaluate: Average Metric: 103.0 / 151 (68.2%)\n\n\n\n\n\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/1fbbc1c758204d438fd050d77d524632\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_gemini_gemini-2_5-pro at: http://localhost:5000/#/experiments/1/runs/6e2dd13cb21f455c905159caa8335678\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_dataset_results_full at: http://localhost:5000/#/experiments/1/runs/51176a64c2af4fbc803a1e1f0775e924\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n\n\n\n\n\n\n\n\nCollapse MLflow Trace\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWe will now run the evaluation suite over the entire gate dataset for all the models in the above list.\n\n\n\n\n\n\n\n\n\n\n\n\n\n                                  LLM  Evaluation Score\n0           openai/gpt-4.1-2025-04-14             62.91\n1      openai/gpt-4.1-mini-2025-04-14             53.64\n2           openai/o4-mini-2025-04-16             62.91\n3  anthropic/claude-sonnet-4-20250514             62.91\n4             gemini/gemini-2.5-flash             63.58\n5        gemini/gemini-2.5-flash-lite             57.62\n6                openai/o3-2025-04-16             70.20\n7    anthropic/claude-opus-4-20250514             68.21\n8               gemini/gemini-2.5-pro             68.21\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFrom the above table, we see a few interesting things:\n\n\n\nBy default, most of the reasoning models perform better on the “gate” dataset, with OAI O3 performing the best with a score of 70.20%\n\n\nReasoning models from the remaining two frontier labs score the same i.e 68.21%\n\n\nWe also see that the smaller reasoning models perform similar across the labs, with an average score of 63.58%, but at a significantly lower cost.\n\n\nThe outputs from sonnet-4 failed the structured output test, but this could be fixed using the DSPy TypingPredictor in the future. More on this later!\n\n\nFinally, while a non-reasoning model like GPT-4.1 performs as well as the small reasoning models, the price of input/outputs tokens for GPT-4.1 is significantly higher compared to it’s counterparts.\n\n\n\nWe will also run the test over the “probe” dataset, before deciding our final list of LLMs based on the performance-to-cost ratio.\n\n\n\n\n\n\n\n\n\n\n\n\n\nProbe Dataset Results¶\n\n\n\n\n\n\n\n\n\n\n\n\n\nAverage Metric: 150.00 / 200 (75.0%): 100%|██████████| 200/200 [00:02&lt;00:00, 69.58it/s]\n\n\n\n\n2025/07/28 18:22:15 INFO dspy.evaluate.evaluate: Average Metric: 150.0 / 200 (75.0%)\n\n\n\n\n\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/6cccc46d61ae4365b9921586ed0ef193\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run probe_openai_gpt-4_1-2025-04-14 at: http://localhost:5000/#/experiments/1/runs/3b839cca27264ffaaace2643e23975c7\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 130.00 / 200 (65.0%): 100%|██████████| 200/200 [00:03&lt;00:00, 60.95it/s]\n\n\n\n\n2025/07/28 18:22:18 INFO dspy.evaluate.evaluate: Average Metric: 130.0 / 200 (65.0%)\n\n\n\n\n\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/8c371daf948343eb8a18370f1756a850\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run probe_openai_gpt-4_1-mini-2025-04-14 at: http://localhost:5000/#/experiments/1/runs/dcfce79bf36446929e2924273e0a2db5\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 79.00 / 102 (77.5%):  50%|█████     | 101/200 [00:02&lt;00:02, 36.80it/s]\n\n\n\n\n2025/07/28 18:22:20 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 122.00 / 157 (77.7%):  78%|███████▊  | 156/200 [00:03&lt;00:00, 48.01it/s]\n\n\n\n\n2025/07/28 18:22:21 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 157.00 / 200 (78.5%): 100%|██████████| 200/200 [00:03&lt;00:00, 53.12it/s]\n\n\n\n\n2025/07/28 18:22:22 INFO dspy.evaluate.evaluate: Average Metric: 157.0 / 200 (78.5%)\n\n\n\n\n\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/758a3867a75541c2a3eab91ac6faf42b\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run probe_openai_o4-mini-2025-04-16 at: http://localhost:5000/#/experiments/1/runs/aafc2286d5ab4819aa467440328eed77\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 150.00 / 200 (75.0%): 100%|██████████| 200/200 [00:04&lt;00:00, 49.31it/s]\n\n\n\n\n2025/07/28 18:22:26 INFO dspy.evaluate.evaluate: Average Metric: 150.0 / 200 (75.0%)\n\n\n\n\n\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/3b6644b108a241f99e8dd0e2e1d051fa\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run probe_anthropic_claude-sonnet-4-20250514 at: http://localhost:5000/#/experiments/1/runs/3b4f42a464cd4e3496f4b1755decd7ce\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 24.00 / 31 (77.4%):  15%|█▌        | 30/200 [00:00&lt;00:03, 50.11it/s]\n\n\n\n\n2025/07/28 18:22:27 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 148.00 / 200 (74.0%): 100%|██████████| 200/200 [00:03&lt;00:00, 51.35it/s]\n\n\n\n\n2025/07/28 18:22:30 INFO dspy.evaluate.evaluate: Average Metric: 148.0 / 200 (74.0%)\n\n\n\n\n\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/99af33e15c234269aa69333eebecb916\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run probe_gemini_gemini-2_5-flash at: http://localhost:5000/#/experiments/1/runs/7d11aa5ec28841adafa6b0e66733e13d\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n  0%|          | 0/200 [00:00&lt;?, ?it/s]\n\n\n\n\n2025/07/28 18:22:30 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:30 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:30 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:30 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 11.00 / 16 (68.8%):   8%|▊         | 15/200 [00:00&lt;00:04, 41.77it/s]\n\n\n\n\n2025/07/28 18:22:31 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:31 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 18.00 / 24 (75.0%):  12%|█▏        | 23/200 [00:00&lt;00:03, 50.59it/s]\n\n\n\n\n2025/07/28 18:22:31 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:31 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 19.00 / 26 (73.1%):  12%|█▎        | 25/200 [00:00&lt;00:03, 50.59it/s]\n\n\n\n\n2025/07/28 18:22:31 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:31 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 21.00 / 31 (67.7%):  15%|█▌        | 30/200 [00:00&lt;00:02, 58.14it/s]\n\n\n\n\n2025/07/28 18:22:31 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:31 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 22.00 / 33 (66.7%):  16%|█▌        | 32/200 [00:00&lt;00:02, 58.14it/s]\n\n\n\n\n2025/07/28 18:22:31 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:31 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 27.00 / 42 (64.3%):  20%|██        | 41/200 [00:01&lt;00:04, 33.61it/s]\n\n\n\n\n2025/07/28 18:22:31 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:31 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 32.00 / 53 (60.4%):  26%|██▌       | 52/200 [00:01&lt;00:03, 43.63it/s]\n\n\n\n\n2025/07/28 18:22:31 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:32 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 36.00 / 61 (59.0%):  30%|███       | 60/200 [00:01&lt;00:02, 49.53it/s]\n\n\n\n\n2025/07/28 18:22:32 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:32 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:32 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n\n\n\n\n\nAverage Metric: 39.00 / 65 (60.0%):  32%|███▏      | 64/200 [00:01&lt;00:02, 60.32it/s]\n\n\n\n\n2025/07/28 18:22:32 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 39.00 / 66 (59.1%):  32%|███▎      | 65/200 [00:01&lt;00:02, 60.32it/s]\n\n\n\n\n2025/07/28 18:22:32 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n\n\n\n\n\nAverage Metric: 41.00 / 68 (60.3%):  34%|███▎      | 67/200 [00:01&lt;00:02, 60.32it/s]\n\n\n\n\n2025/07/28 18:22:32 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:32 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:32 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 54.00 / 84 (64.3%):  42%|████▏     | 83/200 [00:01&lt;00:01, 69.98it/s]\n\n\n\n\n2025/07/28 18:22:32 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 60.00 / 93 (64.5%):  46%|████▌     | 92/200 [00:01&lt;00:01, 70.30it/s]\n\n\n\n\n2025/07/28 18:22:32 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:32 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 62.00 / 96 (64.6%):  48%|████▊     | 95/200 [00:01&lt;00:01, 70.30it/s]\n\n\n\n\n2025/07/28 18:22:32 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n\n\n\n\n\nAverage Metric: 62.00 / 97 (63.9%):  48%|████▊     | 96/200 [00:01&lt;00:01, 70.30it/s]\n\n\n\n\n2025/07/28 18:22:32 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 62.00 / 98 (63.3%):  49%|████▉     | 98/200 [00:01&lt;00:01, 74.90it/s]\n\n\n\n\n2025/07/28 18:22:32 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n\n\n\n\n\nAverage Metric: 63.00 / 99 (63.6%):  49%|████▉     | 98/200 [00:01&lt;00:01, 74.90it/s]\n\n\n\n\n2025/07/28 18:22:32 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 64.00 / 102 (62.7%):  50%|█████     | 101/200 [00:01&lt;00:01, 74.90it/s]\n\n\n\n\n2025/07/28 18:22:32 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n\n\n\n\n\nAverage Metric: 65.00 / 103 (63.1%):  51%|█████     | 102/200 [00:01&lt;00:01, 74.90it/s]\n\n\n\n\n2025/07/28 18:22:32 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 73.00 / 115 (63.5%):  57%|█████▋    | 114/200 [00:02&lt;00:01, 56.16it/s]\n\n\n\n\n2025/07/28 18:22:32 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:32 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 76.00 / 119 (63.9%):  59%|█████▉    | 118/200 [00:02&lt;00:01, 56.16it/s]\n\n\n\n\n2025/07/28 18:22:33 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:33 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 78.00 / 123 (63.4%):  61%|██████    | 122/200 [00:02&lt;00:01, 53.09it/s]\n\n\n\n\n2025/07/28 18:22:33 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:33 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 82.00 / 129 (63.6%):  64%|██████▍   | 128/200 [00:02&lt;00:01, 45.61it/s]\n\n\n\n\n2025/07/28 18:22:33 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:33 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 82.00 / 130 (63.1%):  64%|██████▍   | 129/200 [00:02&lt;00:01, 45.61it/s]\n\n\n\n\n2025/07/28 18:22:33 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:33 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 82.00 / 134 (61.2%):  66%|██████▋   | 133/200 [00:02&lt;00:01, 46.87it/s]\n\n\n\n\n2025/07/28 18:22:33 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n\n\n\n\n\nAverage Metric: 83.00 / 135 (61.5%):  67%|██████▋   | 134/200 [00:02&lt;00:01, 46.87it/s]\n\n\n\n\n2025/07/28 18:22:33 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 99.00 / 159 (62.3%):  80%|███████▉  | 159/200 [00:03&lt;00:00, 46.30it/s]\n\n\n\n\n2025/07/28 18:22:33 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:33 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 104.00 / 165 (63.0%):  82%|████████▏ | 164/200 [00:03&lt;00:01, 35.61it/s]\n\n\n\n\n2025/07/28 18:22:34 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n\n\n\n\n\nAverage Metric: 105.00 / 166 (63.3%):  82%|████████▎ | 165/200 [00:03&lt;00:00, 35.61it/s]\n\n\n\n\n2025/07/28 18:22:34 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:34 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n\n\n\n\n\nAverage Metric: 105.00 / 167 (62.9%):  83%|████████▎ | 166/200 [00:03&lt;00:00, 35.61it/s]\n\n\n\n\n2025/07/28 18:22:34 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 128.00 / 200 (64.0%): 100%|██████████| 200/200 [00:03&lt;00:00, 52.47it/s]\n\n\n\n\n2025/07/28 18:22:34 INFO dspy.evaluate.evaluate: Average Metric: 128.0 / 200 (64.0%)\n\n\n\n\n\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/20a1fa6983f349a0888cca2696bcae76\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run probe_gemini_gemini-2_5-flash-lite at: http://localhost:5000/#/experiments/1/runs/0c5ca9e2a1e84041b2937cd264727d94\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 48.00 / 61 (78.7%):  30%|███       | 60/200 [00:01&lt;00:03, 45.14it/s]\n\n\n\n\n2025/07/28 18:22:35 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 66.00 / 83 (79.5%):  41%|████      | 82/200 [00:01&lt;00:01, 76.08it/s]\n\n\n\n\n2025/07/28 18:22:36 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 162.00 / 200 (81.0%): 100%|██████████| 200/200 [00:03&lt;00:00, 52.77it/s]\n\n\n\n\n2025/07/28 18:22:38 INFO dspy.evaluate.evaluate: Average Metric: 162.0 / 200 (81.0%)\n\n\n\n\n\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/513ceb4b58c44816894f0196c05f1d27\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run probe_openai_o3-2025-04-16 at: http://localhost:5000/#/experiments/1/runs/07039e1be0154904a14bf5b215b36bfb\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 160.00 / 200 (80.0%): 100%|██████████| 200/200 [00:04&lt;00:00, 46.05it/s]\n\n\n\n\n2025/07/28 18:22:43 INFO dspy.evaluate.evaluate: Average Metric: 160.0 / 200 (80.0%)\n\n\n\n\n\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/fa3840a6fc86489195ff4b93ba3525d3\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run probe_anthropic_claude-opus-4-20250514 at: http://localhost:5000/#/experiments/1/runs/242a848220a34df18fefcd752c6b1edf\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 157.00 / 200 (78.5%): 100%|██████████| 200/200 [00:20&lt;00:00,  9.94it/s]\n\n\n\n\n2025/07/28 18:23:03 INFO dspy.evaluate.evaluate: Average Metric: 157.0 / 200 (78.5%)\n\n\n\n\n\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/28468bf07dea42438e3b2835cf8bd5d1\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run probe_gemini_gemini-2_5-pro at: http://localhost:5000/#/experiments/1/runs/b9decff973db41ce9863d93d41eff7c3\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run probe_dataset_results_full at: http://localhost:5000/#/experiments/1/runs/7f0b1ff0f4e94143b9fb5509ed6319be\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n\n\n\n\n\n\n\n\nCollapse MLflow Trace\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                                  LLM  Evaluation Score\n0           openai/gpt-4.1-2025-04-14              75.0\n1      openai/gpt-4.1-mini-2025-04-14              65.0\n2           openai/o4-mini-2025-04-16              78.5\n3  anthropic/claude-sonnet-4-20250514              75.0\n4             gemini/gemini-2.5-flash              74.0\n5        gemini/gemini-2.5-flash-lite              64.0\n6                openai/o3-2025-04-16              81.0\n7    anthropic/claude-opus-4-20250514              80.0\n8               gemini/gemini-2.5-pro              78.5\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFrom the above, we see that:\n\n\n\nSimilar to the gate-only results, the probe dataset results should that OAI o3 performs the best, with 81% accuracy.\n\n\nAnthropic Opus is a close second, with 80% accuracy. However, it is significantly more expensive, at $15/Million tokens 😱\n\n\nGoogle’s Frontier model Gemini-pro is third, with 78% accuracy.\n\n\nWe see that the smaller reasoning models do quite well, with o4-mini getting around 78.5% accuracy, Anthropic sonnet-4 around 75% accuracy, and Google Gemini 2.5-flash at 74%. Note that, even here, Anthropic’s costs are significantly higher than the other models.\n\n\nWe also see that the “mini/lite” version of models provided by Google and OAI have similar performance, around ~65%.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven the above insights, we can now select our models:\n\n\n\nAnthropic Cost\n\n\nAll Anthropic models are significantly more expensive than the competitors, and have a performance on par or below the competetiors.\n\n\nHence, from our final list, we will exclude Anthropic models.\n\n\n\n\nFrontier Model Cost\n\n\nFrontier models are generally quite expensive.\n\n\nFrom our tests, we see that OAI o3 has the best performace, with Google Gemini 2.5-pro having a performance on or below o3.\n\n\nTo save costs, we will keep only one frontier model in the final list i.e o3\n\n\n\n\nSmaller Reasoning Models\n\n\nWe also see the following models showing promising results across the board:\n\n\no4-mini\n\n\ngemini-2.5-flash\n\n\n\n\n\n\nNon reaosning models\n\n\nGPT-4.1 seems to perform as well as the smaller reasoning models, but it is about 50% more expensive($2/Million input tokens).\n\n\nGiven that we already plan to include models with similar reasoning capabilities, we will exclude GPT-4.1 from our final list.\n\n\n\n\nSmall models\n\n\nCurrently, the small models variants of all models are significantly behind the larger models.\n\n\nWhile they are cost effective, and likely their performance can be increased with improvements to the prompts, fine-tuning, etc., we will skip this models for now due to time constraits.\n\n\n\n\n\nHence, our final list of models will be:\n\n\n\no3\n\n\no4-mini\n\n\ngemini-2.5-flash\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nError Analysis¶\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven that we have the results for the gate and probe datasets, we can perform some quick preliminary error analysis to understand the performance of the models on these datasets.\n\n\nWe will restrict our analysis to the final list of models(o3, o4-mini and gemini-2.5-flash).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n18\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n{'model_name': 'openai/o4-mini-2025-04-16',\n 'turn_em_metric_score': 1.0,\n 'conversation_context': 'None',\n 'evidence_snippets': \"[PRE]\\nentergy corporation and subsidiaries management's financial discussion and analysis refer to 201cselected financial data - five-year comparison of entergy corporation and subsidiaries 201d which accompanies entergy corporation 2019s financial statements in this report for further information with respect to operating statistics . in november 2007 the board approved a plan to pursue a separation of entergy 2019s non-utility nuclear business from entergy through a spin-off of the business to entergy shareholders . in april 2010 , entergy announced that it planned to unwind the business infrastructure associated with the proposed spin-off transaction . as a result of the plan to unwind the business infrastructure , entergy recorded expenses in 2010 for the write-off of certain capitalized costs incurred in connection with the planned spin-off transaction . these costs are discussed in more detail below and throughout this section . net revenue utility following is an analysis of the change in net revenue comparing 2010 to 2009 . amount ( in millions ) .\\n[/PRE]\\n[POST]\\nthe volume/weather variance is primarily due to an increase of 8362 gwh , or 8% ( 8 % ) , in billed electricity usage in all retail sectors , including the effect on the residential sector of colder weather in the first quarter 2010 compared to 2009 and warmer weather in the second and third quarters 2010 compared to 2009 . the industrial sector reflected strong sales growth on continuing signs of economic recovery . the improvement in this sector was primarily driven by inventory restocking and strong exports with the chemicals , refining , and miscellaneous manufacturing sectors leading the improvement . the retail electric price variance is primarily due to : increases in the formula rate plan riders at entergy gulf states louisiana effective november 2009 , january 2010 , and september 2010 , at entergy louisiana effective november 2009 , and at entergy mississippi effective july 2009 ; a base rate increase at entergy arkansas effective july 2010 ; rate actions at entergy texas , including base rate increases effective in may and august 2010 ; a formula rate plan provision of $ 16.6 million recorded in the third quarter 2009 for refunds that were made to customers in accordance with settlements approved by the lpsc ; and the recovery in 2009 by entergy arkansas of 2008 extraordinary storm costs , as approved by the apsc , which ceased in january 2010 . the recovery of storm costs is offset in other operation and maintenance expenses . see note 2 to the financial statements for further discussion of the proceedings referred to above. .\\n[/POST]\",\n 'table': '| Row | 2009 net revenue | volume/weather | retail electric price | provision for regulatory proceedings | rough production cost equalization | ano decommissioning trust | fuel recovery | other | 2010 net revenue |\\n|---|---|---|---|---|---|---|---|---|---|\\n| amount ( in millions ) | 4694.0 | 231.0 | 137.0 | 26.0 | 19.0 | -24.0 | -44.0 | 12.0 | 5051.0 |',\n 'question': 'what was the difference in net revenue between 2009 and 2010?',\n 'id': 'Single_ETR/2011/page_22.pdf-3',\n 'doc_pre_text': \"entergy corporation and subsidiaries management's financial discussion and analysis refer to 201cselected financial data - five-year comparison of entergy corporation and subsidiaries 201d which accompanies entergy corporation 2019s financial statements in this report for further information with respect to operating statistics . in november 2007 the board approved a plan to pursue a separation of entergy 2019s non-utility nuclear business from entergy through a spin-off of the business to entergy shareholders . in april 2010 , entergy announced that it planned to unwind the business infrastructure associated with the proposed spin-off transaction . as a result of the plan to unwind the business infrastructure , entergy recorded expenses in 2010 for the write-off of certain capitalized costs incurred in connection with the planned spin-off transaction . these costs are discussed in more detail below and throughout this section . net revenue utility following is an analysis of the change in net revenue comparing 2010 to 2009 . amount ( in millions ) .\",\n 'doc_post_text': 'the volume/weather variance is primarily due to an increase of 8362 gwh , or 8% ( 8 % ) , in billed electricity usage in all retail sectors , including the effect on the residential sector of colder weather in the first quarter 2010 compared to 2009 and warmer weather in the second and third quarters 2010 compared to 2009 . the industrial sector reflected strong sales growth on continuing signs of economic recovery . the improvement in this sector was primarily driven by inventory restocking and strong exports with the chemicals , refining , and miscellaneous manufacturing sectors leading the improvement . the retail electric price variance is primarily due to : increases in the formula rate plan riders at entergy gulf states louisiana effective november 2009 , january 2010 , and september 2010 , at entergy louisiana effective november 2009 , and at entergy mississippi effective july 2009 ; a base rate increase at entergy arkansas effective july 2010 ; rate actions at entergy texas , including base rate increases effective in may and august 2010 ; a formula rate plan provision of $ 16.6 million recorded in the third quarter 2009 for refunds that were made to customers in accordance with settlements approved by the lpsc ; and the recovery in 2009 by entergy arkansas of 2008 extraordinary storm costs , as approved by the apsc , which ceased in january 2010 . the recovery of storm costs is offset in other operation and maintenance expenses . see note 2 to the financial statements for further discussion of the proceedings referred to above. .',\n 'doc_table': {'amount ( in millions )': {'2009 net revenue': 4694.0,\n   'volume/weather': 231.0,\n   'retail electric price': 137.0,\n   'provision for regulatory proceedings': 26.0,\n   'rough production cost equalization': 19.0,\n   'ano decommissioning trust': -24.0,\n   'fuel recovery': -44.0,\n   'other': 12.0,\n   '2010 net revenue': 5051.0}},\n 'dialogue_conv_questions': ['what was the difference in net revenue between 2009 and 2010?',\n  'and the specific value for 2009 again?',\n  'so what was the percentage change during this time?'],\n 'dialogue_conv_answers': ['357', '4694', '7.61%'],\n 'dialogue_turn_program': ['subtract(5051, 4694)',\n  '4694',\n  'subtract(5051, 4694), divide(#0, 4694)'],\n 'dialogue_executed_answers': [357.0, 4694.0, 0.07605],\n 'dialogue_qa_split': [False, False, False],\n 'features_num_dialogue_turns': 3,\n 'features_has_type2_question': False,\n 'features_has_duplicate_columns': False,\n 'features_has_non_numeric_values': False,\n 'ground_truth_answer': 357.0,\n 'reasoning': 'The table shows 2009 net revenue of 4,694.0 million and 2010 net revenue of 5,051.0 million. The difference is 5,051.0 minus 4,694.0, which equals 357.0 million.',\n 'ops': 'subtract(const_5051.0, const_4694.0)',\n 'answer': '357.0'}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n{'model_name': 'openai/o4-mini-2025-04-16',\n 'turn_em_metric_score': 1.0,\n 'conversation_context': 'None',\n 'evidence_snippets': \"[PRE]\\nentergy corporation and subsidiaries management's financial discussion and analysis refer to 201cselected financial data - five-year comparison of entergy corporation and subsidiaries 201d which accompanies entergy corporation 2019s financial statements in this report for further information with respect to operating statistics . in november 2007 the board approved a plan to pursue a separation of entergy 2019s non-utility nuclear business from entergy through a spin-off of the business to entergy shareholders . in april 2010 , entergy announced that it planned to unwind the business infrastructure associated with the proposed spin-off transaction . as a result of the plan to unwind the business infrastructure , entergy recorded expenses in 2010 for the write-off of certain capitalized costs incurred in connection with the planned spin-off transaction . these costs are discussed in more detail below and throughout this section . net revenue utility following is an analysis of the change in net revenue comparing 2010 to 2009 . amount ( in millions ) .\\n[/PRE]\\n[POST]\\nthe volume/weather variance is primarily due to an increase of 8362 gwh , or 8% ( 8 % ) , in billed electricity usage in all retail sectors , including the effect on the residential sector of colder weather in the first quarter 2010 compared to 2009 and warmer weather in the second and third quarters 2010 compared to 2009 . the industrial sector reflected strong sales growth on continuing signs of economic recovery . the improvement in this sector was primarily driven by inventory restocking and strong exports with the chemicals , refining , and miscellaneous manufacturing sectors leading the improvement . the retail electric price variance is primarily due to : increases in the formula rate plan riders at entergy gulf states louisiana effective november 2009 , january 2010 , and september 2010 , at entergy louisiana effective november 2009 , and at entergy mississippi effective july 2009 ; a base rate increase at entergy arkansas effective july 2010 ; rate actions at entergy texas , including base rate increases effective in may and august 2010 ; a formula rate plan provision of $ 16.6 million recorded in the third quarter 2009 for refunds that were made to customers in accordance with settlements approved by the lpsc ; and the recovery in 2009 by entergy arkansas of 2008 extraordinary storm costs , as approved by the apsc , which ceased in january 2010 . the recovery of storm costs is offset in other operation and maintenance expenses . see note 2 to the financial statements for further discussion of the proceedings referred to above. .\\n[/POST]\",\n 'table': '| Row | 2009 net revenue | volume/weather | retail electric price | provision for regulatory proceedings | rough production cost equalization | ano decommissioning trust | fuel recovery | other | 2010 net revenue |\\n|---|---|---|---|---|---|---|---|---|---|\\n| amount ( in millions ) | 4694.0 | 231.0 | 137.0 | 26.0 | 19.0 | -24.0 | -44.0 | 12.0 | 5051.0 |',\n 'question': 'what was the difference in net revenue between 2009 and 2010?',\n 'id': 'Single_ETR/2011/page_22.pdf-3',\n 'doc_pre_text': \"entergy corporation and subsidiaries management's financial discussion and analysis refer to 201cselected financial data - five-year comparison of entergy corporation and subsidiaries 201d which accompanies entergy corporation 2019s financial statements in this report for further information with respect to operating statistics . in november 2007 the board approved a plan to pursue a separation of entergy 2019s non-utility nuclear business from entergy through a spin-off of the business to entergy shareholders . in april 2010 , entergy announced that it planned to unwind the business infrastructure associated with the proposed spin-off transaction . as a result of the plan to unwind the business infrastructure , entergy recorded expenses in 2010 for the write-off of certain capitalized costs incurred in connection with the planned spin-off transaction . these costs are discussed in more detail below and throughout this section . net revenue utility following is an analysis of the change in net revenue comparing 2010 to 2009 . amount ( in millions ) .\",\n 'doc_post_text': 'the volume/weather variance is primarily due to an increase of 8362 gwh , or 8% ( 8 % ) , in billed electricity usage in all retail sectors , including the effect on the residential sector of colder weather in the first quarter 2010 compared to 2009 and warmer weather in the second and third quarters 2010 compared to 2009 . the industrial sector reflected strong sales growth on continuing signs of economic recovery . the improvement in this sector was primarily driven by inventory restocking and strong exports with the chemicals , refining , and miscellaneous manufacturing sectors leading the improvement . the retail electric price variance is primarily due to : increases in the formula rate plan riders at entergy gulf states louisiana effective november 2009 , january 2010 , and september 2010 , at entergy louisiana effective november 2009 , and at entergy mississippi effective july 2009 ; a base rate increase at entergy arkansas effective july 2010 ; rate actions at entergy texas , including base rate increases effective in may and august 2010 ; a formula rate plan provision of $ 16.6 million recorded in the third quarter 2009 for refunds that were made to customers in accordance with settlements approved by the lpsc ; and the recovery in 2009 by entergy arkansas of 2008 extraordinary storm costs , as approved by the apsc , which ceased in january 2010 . the recovery of storm costs is offset in other operation and maintenance expenses . see note 2 to the financial statements for further discussion of the proceedings referred to above. .',\n 'doc_table': {'amount ( in millions )': {'2009 net revenue': 4694.0,\n   'volume/weather': 231.0,\n   'retail electric price': 137.0,\n   'provision for regulatory proceedings': 26.0,\n   'rough production cost equalization': 19.0,\n   'ano decommissioning trust': -24.0,\n   'fuel recovery': -44.0,\n   'other': 12.0,\n   '2010 net revenue': 5051.0}},\n 'dialogue_conv_questions': ['what was the difference in net revenue between 2009 and 2010?',\n  'and the specific value for 2009 again?',\n  'so what was the percentage change during this time?'],\n 'dialogue_conv_answers': ['357', '4694', '7.61%'],\n 'dialogue_turn_program': ['subtract(5051, 4694)',\n  '4694',\n  'subtract(5051, 4694), divide(#0, 4694)'],\n 'dialogue_executed_answers': [357.0, 4694.0, 0.07605],\n 'dialogue_qa_split': [False, False, False],\n 'features_num_dialogue_turns': 3,\n 'features_has_type2_question': False,\n 'features_has_duplicate_columns': False,\n 'features_has_non_numeric_values': False,\n 'ground_truth_answer': 357.0,\n 'reasoning': 'The table shows 2009 net revenue of 4,694.0 million and 2010 net revenue of 5,051.0 million. The difference is 5,051.0 minus 4,694.0, which equals 357.0 million.',\n 'ops': 'subtract(const_5051.0, const_4694.0)',\n 'answer': '357.0'}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWe’ll use Gemini Flash 2.5 as our judge model, for classifying the generated predictions for error analysis\n\n\n\n\n\n\n\n\n\n\n\n\n\nJudging examples:   1%|          | 2/289 [00:00&lt;00:17, 16.77it/s]2025/07/28 20:07:50 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:   1%|▏         | 4/289 [00:00&lt;00:19, 14.79it/s]2025/07/28 20:07:50 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:   2%|▏         | 6/289 [00:00&lt;00:19, 14.85it/s]2025/07/28 20:07:50 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:50 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:   4%|▍         | 11/289 [00:00&lt;00:22, 12.42it/s]2025/07/28 20:07:51 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:   5%|▍         | 14/289 [00:00&lt;00:18, 15.05it/s]2025/07/28 20:07:51 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:51 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:   6%|▌         | 17/289 [00:01&lt;00:15, 18.13it/s]2025/07/28 20:07:51 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:51 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:   7%|▋         | 20/289 [00:01&lt;00:13, 19.77it/s]2025/07/28 20:07:51 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:   8%|▊         | 24/289 [00:01&lt;00:11, 23.48it/s]2025/07/28 20:07:51 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  10%|▉         | 28/289 [00:01&lt;00:09, 26.52it/s]2025/07/28 20:07:51 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  11%|█         | 32/289 [00:01&lt;00:09, 27.24it/s]2025/07/28 20:07:51 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:52 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:52 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  12%|█▏        | 35/289 [00:01&lt;00:10, 23.43it/s]2025/07/28 20:07:52 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  13%|█▎        | 38/289 [00:01&lt;00:10, 23.92it/s]2025/07/28 20:07:52 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:52 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  14%|█▍        | 41/289 [00:01&lt;00:10, 23.64it/s]2025/07/28 20:07:52 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  15%|█▌        | 44/289 [00:02&lt;00:10, 24.06it/s]2025/07/28 20:07:52 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:52 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  16%|█▋        | 47/289 [00:02&lt;00:09, 24.36it/s]2025/07/28 20:07:52 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  17%|█▋        | 50/289 [00:02&lt;00:09, 24.44it/s]2025/07/28 20:07:52 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:52 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:52 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  18%|█▊        | 53/289 [00:02&lt;00:10, 23.14it/s]2025/07/28 20:07:52 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:53 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  20%|██        | 59/289 [00:02&lt;00:11, 20.29it/s]2025/07/28 20:07:53 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  21%|██▏       | 62/289 [00:03&lt;00:13, 16.86it/s]2025/07/28 20:07:53 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:53 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  22%|██▏       | 65/289 [00:03&lt;00:11, 19.32it/s]2025/07/28 20:07:53 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:53 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:53 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  24%|██▎       | 68/289 [00:03&lt;00:10, 20.77it/s]2025/07/28 20:07:53 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:53 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:53 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  25%|██▍       | 71/289 [00:03&lt;00:09, 22.32it/s]2025/07/28 20:07:53 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  26%|██▌       | 74/289 [00:03&lt;00:09, 22.84it/s]2025/07/28 20:07:53 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  27%|██▋       | 77/289 [00:03&lt;00:09, 22.32it/s]2025/07/28 20:07:54 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  28%|██▊       | 80/289 [00:03&lt;00:10, 20.68it/s]2025/07/28 20:07:54 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  30%|██▉       | 86/289 [00:04&lt;00:09, 21.69it/s]2025/07/28 20:07:54 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:54 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:54 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  31%|███       | 89/289 [00:04&lt;00:09, 21.10it/s]2025/07/28 20:07:54 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  32%|███▏      | 92/289 [00:04&lt;00:09, 21.50it/s]2025/07/28 20:07:54 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:54 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  33%|███▎      | 95/289 [00:04&lt;00:08, 22.81it/s]2025/07/28 20:07:54 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  34%|███▍      | 98/289 [00:04&lt;00:07, 23.91it/s]2025/07/28 20:07:55 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  35%|███▍      | 101/289 [00:04&lt;00:07, 24.41it/s]2025/07/28 20:07:55 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:55 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  36%|███▌      | 104/289 [00:04&lt;00:08, 20.70it/s]2025/07/28 20:07:55 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:55 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  37%|███▋      | 107/289 [00:05&lt;00:11, 16.11it/s]2025/07/28 20:07:55 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  38%|███▊      | 110/289 [00:05&lt;00:09, 18.39it/s]2025/07/28 20:07:55 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:55 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  39%|███▉      | 114/289 [00:05&lt;00:08, 21.66it/s]2025/07/28 20:07:55 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:55 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:55 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  41%|████      | 118/289 [00:05&lt;00:07, 24.12it/s]2025/07/28 20:07:56 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:56 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  42%|████▏     | 122/289 [00:05&lt;00:06, 25.92it/s]2025/07/28 20:07:56 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  44%|████▍     | 128/289 [00:05&lt;00:06, 23.89it/s]2025/07/28 20:07:56 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:56 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  45%|████▌     | 131/289 [00:06&lt;00:06, 22.85it/s]2025/07/28 20:07:56 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  46%|████▋     | 134/289 [00:06&lt;00:06, 23.46it/s]2025/07/28 20:07:56 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  47%|████▋     | 137/289 [00:06&lt;00:06, 23.90it/s]2025/07/28 20:07:56 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:56 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  48%|████▊     | 140/289 [00:06&lt;00:06, 23.84it/s]2025/07/28 20:07:56 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  52%|█████▏    | 149/289 [00:06&lt;00:05, 24.60it/s]2025/07/28 20:07:57 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:57 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:57 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  54%|█████▎    | 155/289 [00:07&lt;00:06, 22.09it/s]2025/07/28 20:07:57 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:57 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:57 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  55%|█████▍    | 158/289 [00:07&lt;00:07, 18.30it/s]2025/07/28 20:07:57 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:57 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  56%|█████▌    | 161/289 [00:07&lt;00:06, 19.50it/s]2025/07/28 20:07:57 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:57 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  57%|█████▋    | 164/289 [00:07&lt;00:05, 21.21it/s]2025/07/28 20:07:58 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:58 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  58%|█████▊    | 168/289 [00:07&lt;00:05, 23.87it/s]2025/07/28 20:07:58 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  60%|█████▉    | 172/289 [00:07&lt;00:04, 25.66it/s]2025/07/28 20:07:58 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:58 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  61%|██████    | 175/289 [00:07&lt;00:04, 26.17it/s]2025/07/28 20:07:58 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  62%|██████▏   | 178/289 [00:08&lt;00:05, 20.48it/s]2025/07/28 20:07:58 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  63%|██████▎   | 181/289 [00:08&lt;00:05, 19.97it/s]2025/07/28 20:07:58 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:58 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  64%|██████▎   | 184/289 [00:08&lt;00:04, 21.03it/s]2025/07/28 20:07:58 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:58 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:58 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  65%|██████▍   | 187/289 [00:08&lt;00:04, 21.89it/s]2025/07/28 20:07:59 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:59 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:59 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  66%|██████▌   | 190/289 [00:08&lt;00:04, 20.94it/s]2025/07/28 20:07:59 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  67%|██████▋   | 193/289 [00:08&lt;00:04, 21.33it/s]2025/07/28 20:07:59 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  68%|██████▊   | 196/289 [00:09&lt;00:04, 21.37it/s]2025/07/28 20:07:59 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:59 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  69%|██████▉   | 199/289 [00:09&lt;00:05, 17.97it/s]2025/07/28 20:07:59 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  70%|██████▉   | 201/289 [00:09&lt;00:05, 16.87it/s]2025/07/28 20:07:59 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  70%|███████   | 203/289 [00:09&lt;00:05, 14.73it/s]2025/07/28 20:08:00 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:00 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  71%|███████▏  | 206/289 [00:09&lt;00:04, 17.68it/s]2025/07/28 20:08:00 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  74%|███████▎  | 213/289 [00:09&lt;00:03, 23.63it/s]2025/07/28 20:08:00 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  75%|███████▍  | 216/289 [00:10&lt;00:02, 24.77it/s]2025/07/28 20:08:00 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  76%|███████▌  | 219/289 [00:10&lt;00:02, 25.95it/s]2025/07/28 20:08:00 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:00 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  77%|███████▋  | 222/289 [00:10&lt;00:02, 22.83it/s]2025/07/28 20:08:00 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:00 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  78%|███████▊  | 225/289 [00:10&lt;00:03, 19.59it/s]2025/07/28 20:08:00 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:00 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:01 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  79%|███████▉  | 228/289 [00:10&lt;00:03, 19.79it/s]2025/07/28 20:08:01 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  80%|███████▉  | 231/289 [00:10&lt;00:02, 20.88it/s]2025/07/28 20:08:01 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  81%|████████  | 234/289 [00:10&lt;00:02, 22.36it/s]2025/07/28 20:08:01 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  82%|████████▏ | 237/289 [00:11&lt;00:02, 22.83it/s]2025/07/28 20:08:01 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:01 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:01 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  83%|████████▎ | 240/289 [00:11&lt;00:02, 22.23it/s]2025/07/28 20:08:01 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:01 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  84%|████████▍ | 243/289 [00:11&lt;00:02, 21.50it/s]2025/07/28 20:08:01 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:01 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  85%|████████▌ | 246/289 [00:11&lt;00:02, 14.67it/s]2025/07/28 20:08:02 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  86%|████████▌ | 249/289 [00:11&lt;00:02, 16.99it/s]2025/07/28 20:08:02 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:02 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:02 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  87%|████████▋ | 252/289 [00:11&lt;00:01, 19.29it/s]2025/07/28 20:08:02 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  89%|████████▊ | 256/289 [00:12&lt;00:01, 22.46it/s]2025/07/28 20:08:02 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:02 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  90%|████████▉ | 260/289 [00:12&lt;00:01, 24.88it/s]2025/07/28 20:08:02 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:02 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  91%|█████████ | 263/289 [00:12&lt;00:01, 24.21it/s]2025/07/28 20:08:02 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  92%|█████████▏| 266/289 [00:12&lt;00:00, 25.37it/s]2025/07/28 20:08:02 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:02 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  93%|█████████▎| 269/289 [00:12&lt;00:00, 20.30it/s]2025/07/28 20:08:03 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  94%|█████████▍| 272/289 [00:12&lt;00:00, 19.67it/s]2025/07/28 20:08:03 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:03 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  95%|█████████▌| 275/289 [00:12&lt;00:00, 20.71it/s]2025/07/28 20:08:03 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:03 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  96%|█████████▌| 278/289 [00:13&lt;00:00, 21.31it/s]2025/07/28 20:08:03 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:03 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  97%|█████████▋| 281/289 [00:13&lt;00:00, 22.55it/s]2025/07/28 20:08:03 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:03 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  98%|█████████▊| 284/289 [00:13&lt;00:00, 22.90it/s]2025/07/28 20:08:03 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  99%|█████████▉| 287/289 [00:13&lt;00:00, 23.65it/s]2025/07/28 20:08:03 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:03 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples: 100%|██████████| 289/289 [00:13&lt;00:00, 21.43it/s]\n\n\n\n\n🏃 View run error_analysis_gemini_2.5_flash at: http://localhost:5000/#/experiments/1/runs/d415524ddcf94cd086f2f221c2f6f177\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n\n\n\n\n\n\n\n\n\n\n\n\n\nCollapse MLflow Trace\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFrom the analysis above, we see that:\n\n\n\nMajority of the errors for all our selected models are due to incorrect ground truth.\n\n\nWe also see cases where the model was unable to generate the answer in the format as expected by the ground truth.\n\n\nFinally, somewhat surpringly, we see some results marked as “OK”, even though we only selected records that didn’t match the ground truth using our exact match metric.\n\n\n\nLet’s look through this more closely:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\n\n\nmodel_name\n\n\nquestion\n\n\nground_truth_answer\n\n\npredicted_answer\n\n\nassessment_answer\n\n\nassessment_reasoning\n\n\n\n\n\n\n0\n\n\nSingle_ETR/2011/page_22.pdf-3\n\n\nopenai/o4-mini-2025-04-16\n\n\nso what was the percentage change during this time?\n\n\n7.605000e-02\n\n\n7.6%\n\n\nGROUND_TRUTH_INCORRECT\n\n\nThe question asks for a “percentage change”. The model correctly c…\n\n\n\n\n1\n\n\nSingle_ETR/2004/page_258.pdf-4\n\n\nopenai/o4-mini-2025-04-16\n\n\nwhat is the percent change?\n\n\n1.473800e-01\n\n\n14.7%\n\n\nGROUND_TRUTH_INCORRECT\n\n\nThe question asks for the “percent change”. The predicted answer p…\n\n\n\n\n3\n\n\nSingle_ADI/2011/page_83.pdf-2\n\n\nopenai/o4-mini-2025-04-16\n\n\nwhat growth rate does this represent?\n\n\n8.290600e-01\n\n\n82.9%\n\n\nGROUND_TRUTH_INCORRECT\n\n\nThe question asks for a ‘growth rate’, which is typically expresse…\n\n\n\n\n4\n\n\nSingle_CB/2008/page_243.pdf-3\n\n\nopenai/o4-mini-2025-04-16\n\n\nwhat was the percent change?\n\n\n7.368000e-02\n\n\n7.37\n\n\nGROUND_TRUTH_INCORRECT\n\n\nThe question asks for the “percent change”. The model correctly ca…\n\n\n\n\n5\n\n\nSingle_AMT/2015/page_50.pdf-1\n\n\nopenai/o4-mini-2025-04-16\n\n\nwhat was the low for share price for the quarter ended 12/31/15?\n\n\n8.732000e+01\n\n\n90.2\n\n\nGROUND_TRUTH_INCORRECT\n\n\nThe question asks for the low share price for the quarter ended 12…\n\n\n\n\n…\n\n\n…\n\n\n…\n\n\n…\n\n\n…\n\n\n…\n\n\n…\n\n\n…\n\n\n\n\n282\n\n\nSingle_SLG/2017/page_114.pdf-3\n\n\nopenai/o3-2025-04-16\n\n\nso what was the percentage of pension plan contributions out of th…\n\n\n2.302800e-01\n\n\n23.03\n\n\nGROUND_TRUTH_INCORRECT\n\n\nThe question asks for a “percentage”. The model correctly calculat…\n\n\n\n\n283\n\n\nSingle_JPM/2008/page_177.pdf-4\n\n\nopenai/o3-2025-04-16\n\n\nwhat was the total amount of resale agreements in 2008, in millions?\n\n\n2.080000e+04\n\n\n200,265\n\n\nGROUND_TRUTH_INCORRECT\n\n\nThe question asks for the ’total amount of resale agreements in 20…\n\n\n\n\n284\n\n\nDouble_IPG/2014/page_95.pdf\n\n\nopenai/o3-2025-04-16\n\n\nand what is it for the the 2009 one?\n\n\n1.218121e+07\n\n\n435259\n\n\nGROUND_TRUTH_INCORRECT\n\n\nThe question asks for the value for “the 2009 one”. The previous t…\n\n\n\n\n286\n\n\nSingle_APTV/2018/page_36.pdf-2\n\n\nopenai/o3-2025-04-16\n\n\nhow much does the change in the value of the aptiv plc represent i…\n\n\n3.080000e-01\n\n\n30.8%\n\n\nGROUND_TRUTH_INCORRECT\n\n\nThe question asks for the answer “in percentage”. The model correc…\n\n\n\n\n288\n\n\nSingle_RCL/2016/page_7.pdf-3\n\n\nopenai/o3-2025-04-16\n\n\nwhat percentage change does this represent?\n\n\n1.600000e-01\n\n\n16.0\n\n\nGROUND_TRUTH_INCORRECT\n\n\nThe question asks for a ‘percentage change’. The model correctly c…\n\n\n\n\n\n226 rows × 7 columns\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAha! We see that while the predicted answer didnt match the ground truth exactly, it’s actually correct for all these cases. We can further use these examples to improve our exact match metric implementation!\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe above results are not conclusive by any means, since the LLM-as-a-judge approach also has known flaws. However, it does give us some pointers on how to improve the model performance from here!"
  },
  {
    "objectID": "posts/2025-09-01-cl-dspy-modelling.html#evaluation-metrics",
    "href": "posts/2025-09-01-cl-dspy-modelling.html#evaluation-metrics",
    "title": "Curriculum Learning 🤝 DSPy: Modelling",
    "section": "Evaluation Metrics",
    "text": "Evaluation Metrics\nFor this exploratory analysis, we need a clear metric to measure model performance across our curriculum learning experiments. Following the original ConvFinQA paper, we adopt Exact Match (EM) as our primary evaluation metric.\n\nPrimary Metric: Turn-level EM\nTurn-level EM measures whether the generated answer for a specific dialogue turn exactly matches the gold standard answer. This binary metric (1 for exact match, 0 otherwise) provides a strict but interpretable measure of performance that directly aligns with the task requirements.\nWe choose this as our primary metric for several reasons: - Simplicity: Easy to implement and interpret for initial experimentation - Strictness: Financial reasoning requires precision—approximate answers can be misleading - Comparability: Direct comparison with baseline results from the original paper - Curriculum sensitivity: Clear signal for measuring improvement across difficulty levels\n\n\nAdditional Metrics (Future Work)\nThere are several other metrics could be useful:\nConversation-level metrics like Dialogue Mean EM and Joint EM would better capture multi-turn reasoning dependencies, but add complexity to curriculum design. Since our curriculum is based on individual example difficulty rather than conversation-level complexity, turn-level metrics are more appropriate for this phase.\nDiagnostic metrics such as Exec-agree % and numeric error analysis would help distinguish between reasoning failures and execution errors. However, for establishing whether curriculum learning improves over random sampling, the binary success signal from exact match provides sufficient discriminative power.\nEfficiency metrics like program length and evidence tokens could reveal interesting patterns about how curriculum learning affects model behavior, but are secondary to establishing basic performance improvements.\nWe’ve skipped the other metrics for now for the sake of brevity."
  },
  {
    "objectID": "posts/2025-09-01-cl-dspy-modelling.html#model-list",
    "href": "posts/2025-09-01-cl-dspy-modelling.html#model-list",
    "title": "Curriculum Learning 🤝 DSPy: Modelling",
    "section": "Model List",
    "text": "Model List\nThe state of language models has significantly changed since the paper was released. It no longer makes sense to use the exact same model(s) as the paper.\nInstead, we will use the following categories of model:\n\nNon-Reasoning Models\n\nThese models are the usual next-token prediction models, and start generating an answer immediately.\nWe will benchmark the following models here:\n\nGPT-4.1\nGPT-4.1-mini\n\n\nReasoning Models\n\nThese models are the latest language models that are capable of reasoning and generating answers based on the context provided.\nReasoning models are designed to perform multi-step, explicit logical inference to arrive at a conclusion.\nWe will benchmark the following models here:\n\nOAI o4-mini\nAnthropic Sonnet 4.0\nGoogle Gemini Flash 2.5\nGoogle Gemini Flash 2.5 Lite\n\n\nFrontier Models\n\nThese are the true “large” language models, developed by frontier labs. They excel in instruction following, reasoning and solving a variety of tasks.\nHowever, these models are expensive. As such, we will try to avoid using them for a final solution.\nWe will benchmark the following models here:\n\nOAI o3\nAnthropic Opus 4.0\nGoogle Gemini Pro 2.5\n\n\nOpen Source\n\nWe also want to measure the performance of open-source models, as it will help quantify the gap between them and proprietary models.\nOpen-source models are especially required in domains where data sovereignty is a concern.\nWe will only benchmark:\n\nQwen3-32B\n\n\n\n\nModel Selection\nDue to cost and time constraints, we can’t afford to optimise all models. Hence, we’ll aim to narrow down the list of models to a few “promising” models. Specifically, instead of just using the performance of the models on the “easy” validation set, we will use a combination of two datasets:\n\nGate - 50 Easy dialogs, teacher - forced. Drop model if Turn-EM &lt; 0.55.\nProbe - 30-dialog mixed micro-set (15 Medium + 15 Hard, closed loop). Keep model only if Final-Turn EM ≥ 0.35, Dialogue-mean EM ≥ 0.35\n\nThis two-stage filter zaps obviously weak models fast yet retains ones whose strength shows up on multi-step reasoning / long context.\n\n\nMetrics Tracking\nGiven that we plan on iterating over multiple datasets, multiple models, multiple algorithms with different hyperparameters, we will a solution to efficiency track our progress.\nWe aim to use MLFlow, as it has the following features:\n\nMLflow Tracking: logs training, runs, and artifacts for DSPy.\nMLflow Model: packages DSPy programs for reproducible deployment.\nMLflow Evaluate: natively evaluates GenAI outputs for fast iteration.\nMLflow Tracing: auto-logs and debugs DSPy internals with one command.\n\nIn production, the deployment pipeline would look as follows:\n\n   DSPy Production deployment with MLFlow. Source: MLFlow Docs"
  },
  {
    "objectID": "posts/2025-09-01-cl-dspy-modelling.html#setup",
    "href": "posts/2025-09-01-cl-dspy-modelling.html#setup",
    "title": "Curriculum Learning 🤝 DSPy: Modelling",
    "section": "Setup",
    "text": "Setup\n\n\nCode\nimport mlflow\nfrom IPython.display import IFrame, HTML, display\n\nmlflow.set_tracking_uri(\"http://localhost:5000\")\nmlflow.dspy.autolog(log_compiles=True, log_evals=True, log_traces_from_compile=True)\nresult = mlflow.set_experiment(\"DSPy\")\n\n# Display MLFlow UI in an iframe to prevent HTML document conflicts\nprint(f\"Experiment: {result.name} (ID: {result.experiment_id})\")\ndisplay(HTML(f'&lt;p&gt;&lt;a href=\"http://localhost:5000/#/experiments/{result.experiment_id}\" target=\"_blank\"&gt;View MLFlow Experiment UI&lt;/a&gt;&lt;/p&gt;'))\n\n\n&lt;Experiment: artifact_location='mlflow-artifacts:/1', creation_time=1753611058221, experiment_id='1', last_update_time=1753611058221, lifecycle_stage='active', name='DSPy', tags={}&gt;\n\n\n\n\nCode\nimport os\n\nimport dotenv\nimport dspy\n\ndotenv.load_dotenv(\"../.env\")\nMAX_TOKENS = 20_000\n\nlm_oai_gpt_4_1 = dspy.LM(\n    \"openai/gpt-4.1-2025-04-14\",\n    api_key=os.environ[\"OPENAI_API_KEY\"],\n    max_tokens=MAX_TOKENS,\n)\nlm_oai_gpt_4_1_mini = dspy.LM(\n    \"openai/gpt-4.1-mini-2025-04-14\",\n    api_key=os.environ[\"OPENAI_API_KEY\"],\n    max_tokens=MAX_TOKENS,\n)\n\nlm_oai_o4_mini = dspy.LM(\n    \"openai/o4-mini-2025-04-16\",\n    api_key=os.environ[\"OPENAI_API_KEY\"],\n    temperature=1.0,\n    max_tokens=MAX_TOKENS,\n)\nlm_anthropic_sonnet_4_0 = dspy.LM(\n    \"anthropic/claude-sonnet-4-20250514\",\n    api_key=os.environ[\"ANTHROPIC_API_KEY\"],\n    max_tokens=MAX_TOKENS,\n)\nlm_gemini_flash_2_5 = dspy.LM(\n    \"gemini/gemini-2.5-flash\",\n    api_key=os.environ[\"GEMINI_API_KEY\"],\n    max_tokens=MAX_TOKENS,\n)\nlm_gemini_flash_2_5_lite = dspy.LM(\n    \"gemini/gemini-2.5-flash-lite\",\n    api_key=os.environ[\"GEMINI_API_KEY\"],\n    max_tokens=MAX_TOKENS,\n)\n\nlm_oai_o3 = dspy.LM(\n    \"openai/o3-2025-04-16\",\n    api_key=os.environ[\"OPENAI_API_KEY\"],\n    temperature=1.0,\n    max_tokens=MAX_TOKENS,\n)\nlm_anthropic_opus_4_0 = dspy.LM(\n    \"anthropic/claude-opus-4-20250514\",\n    api_key=os.environ[\"ANTHROPIC_API_KEY\"],\n    max_tokens=MAX_TOKENS,\n)\nlm_gemini_pro_2_5 = dspy.LM(\n    \"gemini/gemini-2.5-pro\",\n    api_key=os.environ[\"GEMINI_API_KEY\"],\n    max_tokens=MAX_TOKENS,\n)\n\nlm_qwen3_32b = dspy.LM(\n    \"ollama/qwen3:32b\",\n    api_base=\"http://localhost:11434\",\n    api_key=\"\",\n    max_tokens=MAX_TOKENS,\n)\n\n\n\n\nCode\nimport dspy\n\nllms = [\n    lm_oai_gpt_4_1,\n    lm_oai_gpt_4_1_mini,\n    lm_oai_o4_mini,\n    lm_anthropic_sonnet_4_0,\n    lm_gemini_flash_2_5,\n    lm_gemini_flash_2_5_lite,\n    lm_oai_o3,\n    lm_anthropic_opus_4_0,\n    lm_gemini_pro_2_5,\n    lm_qwen3_32b,\n]\n\n\nclass Echo(dspy.Signature):\n    \"\"\"Echoes the input prompt.\"\"\"\n\n    prompt = dspy.InputField()\n    output = dspy.OutputField()\n\n\nwith mlflow.start_run(run_name=\"Setup\") as run:\n    for lm in llms:\n        try:\n            with dspy.context(lm=lm, track_usage=True, cache=True):\n                if lm in [lm_oai_gpt_4_1, lm_oai_gpt_4_1_mini]:\n                    program = dspy.Predict(\"instruction -&gt; answer\")\n                else:\n                    program = dspy.ChainOfThought(\"instruction -&gt; answer\")\n                response = program(instruction=\"What is the date?\")\n                if getattr(response, \"reasoning\", None):\n                    print(f\"{lm.model} Reasoning: {response.reasoning}\")\n                print(f\"{lm.model}: {response.answer}\")\n        except Exception as e:\n            print(f\"{getattr(lm, 'model', lm)}: ERROR - {e}\")\n\n\nopenai/gpt-4.1-2025-04-14: Today's date is June 13, 2024.\nopenai/gpt-4.1-mini-2025-04-14: The current date is June 15, 2024.\nopenai/o4-mini-2025-04-16 Reasoning: The user asked for the current date. I will provide today's date in a clear, human-readable format.\nopenai/o4-mini-2025-04-16: The current date is May 30, 2024.\nanthropic/claude-sonnet-4-20250514 Reasoning: The user is asking for the current date. However, I don't have access to real-time information or the ability to know what the current date is. I should explain that I cannot provide the current date and suggest how they can find this information.\nanthropic/claude-sonnet-4-20250514: I don't have access to real-time information, so I cannot tell you the current date. To find today's date, you can:\n- Check your computer, phone, or other device\n- Search \"what is today's date\" in a search engine\n- Ask a voice assistant like Siri, Alexa, or Google Assistant\ngemini/gemini-2.5-flash Reasoning: The user is asking for the current date. I will provide today's date.\ngemini/gemini-2.5-flash: June 10, 2024\ngemini/gemini-2.5-flash-lite Reasoning: The user is asking for the current date. I need to access the current date and format it as requested.\ngemini/gemini-2.5-flash-lite: The current date is October 26, 2023.\nopenai/o3-2025-04-16 Reasoning: I don’t have real-time access to the system clock, so I’m unable to determine the exact current date at the moment of this response.\nopenai/o3-2025-04-16: I’m sorry, I don’t have access to real-time information to tell today’s date.\nanthropic/claude-opus-4-20250514 Reasoning: The user is asking for the current date. However, as an AI assistant, I don't have access to real-time information and cannot provide the current date. I should explain this limitation clearly to the user.\nanthropic/claude-opus-4-20250514: I don't have access to real-time information, so I cannot tell you today's date. To get the current date, you can check your device's calendar, search \"what's today's date\" in a search engine, or ask a voice assistant with real-time capabilities.\ngemini/gemini-2.5-pro Reasoning: The user has asked for the current date. I will access my internal system's real-time clock to provide the current calendar date.\ngemini/gemini-2.5-pro: Today's date is September 10, 2024.\nollama/qwen3:32b Reasoning: I cannot access real-time data or the current date. My knowledge is static and up to July 2024. To find the current date, please check your device's clock or calendar.\nollama/qwen3:32b: I cannot provide the current date as I do not have access to real-time information. Please check your device's clock or calendar for the current date.\n🏃 View run Setup at: http://localhost:5000/#/experiments/1/runs/20df48ca1ad2461d9dcc0b1575caec6d\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n\n\n\n\n  \n  Collapse MLflow Trace\n  \n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-10\" class=\"cell\" data-execution_count=\"11\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb6\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb6-1\"&gt;&lt;a href=\"#cb6-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;import&lt;/span&gt; json&lt;/span&gt;\n&lt;span id=\"cb6-2\"&gt;&lt;a href=\"#cb6-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb6-3\"&gt;&lt;a href=\"#cb6-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;data &lt;span class=\"op\"&gt;=&lt;/span&gt; json.load(&lt;span class=\"bu\"&gt;open&lt;/span&gt;(&lt;span class=\"st\"&gt;&quot;../data/convfinqa_dataset.json&quot;&lt;/span&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;/div&gt;\n&lt;/section&gt;\n&lt;section id=\"model-selection-1\" class=\"level2\"&gt;\n&lt;h2&gt;Model Selection&lt;/h2&gt;\n&lt;p&gt;In the &lt;strong&gt;easy&lt;/strong&gt; problems stage, we will select a relatively straightforward implementation. Specifically, we will provide the model with all context, and ask it to answer the question in a zero-shot manner.&lt;/p&gt;\n&lt;p&gt;This will help us identify strong baseline performance, and identify any issues with the model’s ability to understand the problem.&lt;/p&gt;\n&lt;p&gt;First, we will create the DSPy signatures for our dataset. Signatures are used to define the input and output of a model.&lt;/p&gt;\n&lt;p&gt;Specifically, we will have two types of signatures: one that doesn’t support reasoning model(for direct prediction models like GPT-4.1), and one that does support reasoning mode(for the reasoning models like o3, gemini pro, etc.)&lt;/p&gt;\n&lt;div id=\"cell-13\" class=\"cell\" data-execution_count=\"260\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb7\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb7-1\"&gt;&lt;a href=\"#cb7-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"kw\"&gt;class&lt;/span&gt; SolveTurnWithoutReasoning(dspy.Signature):&lt;/span&gt;\n&lt;span id=\"cb7-2\"&gt;&lt;a href=\"#cb7-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    conversation_context: &lt;span class=\"bu\"&gt;str&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.InputField(desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;Conversation so far&quot;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb7-3\"&gt;&lt;a href=\"#cb7-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    evidence_snippets: &lt;span class=\"bu\"&gt;str&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.InputField(&lt;/span&gt;\n&lt;span id=\"cb7-4\"&gt;&lt;a href=\"#cb7-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;Snippets of evidence surrounding the table&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb7-5\"&gt;&lt;a href=\"#cb7-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    )&lt;/span&gt;\n&lt;span id=\"cb7-6\"&gt;&lt;a href=\"#cb7-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    table: &lt;span class=\"bu\"&gt;str&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.InputField(desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;Input financial table with metrics&quot;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb7-7\"&gt;&lt;a href=\"#cb7-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    question: &lt;span class=\"bu\"&gt;str&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.InputField(desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;Question to answer&quot;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb7-8\"&gt;&lt;a href=\"#cb7-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb7-9\"&gt;&lt;a href=\"#cb7-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    ops: &lt;span class=\"bu\"&gt;str&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.OutputField(&lt;/span&gt;\n&lt;span id=\"cb7-10\"&gt;&lt;a href=\"#cb7-10\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;Comma-separated ConvFinQA DSL program. Allowed ops: add(x, y), subtract(x, y), multiply(x, y), divide(x, y), exp(x, y), greater(x, y). Args may be constants (e.g., const_100), numbers (int or float), or prior step refs (#0, #1…). Order always follows the pattern x &lt;op&gt; y—pick x and y deliberately. Example: subtract(const_100, 42), divide(#0, 3.14). Convert to percentages only if explicitly asked in the question.&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb7-11\"&gt;&lt;a href=\"#cb7-11\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    )&lt;/span&gt;\n&lt;span id=\"cb7-12\"&gt;&lt;a href=\"#cb7-12\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    answer: &lt;span class=\"bu\"&gt;str&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.OutputField(&lt;/span&gt;\n&lt;span id=\"cb7-13\"&gt;&lt;a href=\"#cb7-13\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;Final answer. This will be a single number, or a boolean string(yes/no)&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb7-14\"&gt;&lt;a href=\"#cb7-14\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    )&lt;/span&gt;\n&lt;span id=\"cb7-15\"&gt;&lt;a href=\"#cb7-15\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb7-16\"&gt;&lt;a href=\"#cb7-16\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb7-17\"&gt;&lt;a href=\"#cb7-17\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"kw\"&gt;class&lt;/span&gt; SolveTurnWithReasoning(dspy.Signature):&lt;/span&gt;\n&lt;span id=\"cb7-18\"&gt;&lt;a href=\"#cb7-18\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    conversation_context: &lt;span class=\"bu\"&gt;str&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.InputField(desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;Conversation so far&quot;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb7-19\"&gt;&lt;a href=\"#cb7-19\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    evidence_snippets: &lt;span class=\"bu\"&gt;str&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.InputField(&lt;/span&gt;\n&lt;span id=\"cb7-20\"&gt;&lt;a href=\"#cb7-20\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;Snippets of evidence surrounding the table&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb7-21\"&gt;&lt;a href=\"#cb7-21\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    )&lt;/span&gt;\n&lt;span id=\"cb7-22\"&gt;&lt;a href=\"#cb7-22\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    table: &lt;span class=\"bu\"&gt;str&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.InputField(desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;Input financial table with metrics&quot;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb7-23\"&gt;&lt;a href=\"#cb7-23\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    question: &lt;span class=\"bu\"&gt;str&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.InputField(desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;Question to answer&quot;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb7-24\"&gt;&lt;a href=\"#cb7-24\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb7-25\"&gt;&lt;a href=\"#cb7-25\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    reasoning: &lt;span class=\"bu\"&gt;str&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.OutputField(&lt;/span&gt;\n&lt;span id=\"cb7-26\"&gt;&lt;a href=\"#cb7-26\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;Reasoning behind the answer. Carefully analyze the conversation_context, and especially the evidence_snippets and table for the given question, and generate your reasoning before generating the ops and answer.&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb7-27\"&gt;&lt;a href=\"#cb7-27\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    )&lt;/span&gt;\n&lt;span id=\"cb7-28\"&gt;&lt;a href=\"#cb7-28\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    ops: &lt;span class=\"bu\"&gt;str&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.OutputField(&lt;/span&gt;\n&lt;span id=\"cb7-29\"&gt;&lt;a href=\"#cb7-29\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;Comma-separated ConvFinQA DSL program. Allowed ops: add(x, y), subtract(x, y), multiply(x, y), divide(x, y), exp(x, y), greater(x, y). Args may be constants (e.g., const_100), numbers (int or float), or prior step refs (#0, #1…). Order always follows the pattern x &lt;op&gt; y—pick x and y deliberately. Example: subtract(const_100, 42), divide(#0, 3.14). Convert to percentages only if explicitly asked in the question.&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb7-30\"&gt;&lt;a href=\"#cb7-30\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    )&lt;/span&gt;\n&lt;span id=\"cb7-31\"&gt;&lt;a href=\"#cb7-31\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    answer: &lt;span class=\"bu\"&gt;str&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.OutputField(&lt;/span&gt;\n&lt;span id=\"cb7-32\"&gt;&lt;a href=\"#cb7-32\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;Final answer. This will be a single number, or a boolean string(yes/no)&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb7-33\"&gt;&lt;a href=\"#cb7-33\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    )&lt;/span&gt;\n&lt;span id=\"cb7-34\"&gt;&lt;a href=\"#cb7-34\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb7-35\"&gt;&lt;a href=\"#cb7-35\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb7-36\"&gt;&lt;a href=\"#cb7-36\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"kw\"&gt;class&lt;/span&gt; TurnSolver(dspy.Module):&lt;/span&gt;\n&lt;span id=\"cb7-37\"&gt;&lt;a href=\"#cb7-37\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"co\"&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb7-38\"&gt;&lt;a href=\"#cb7-38\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    In the context of this series of interconnected finance-related queries and the additional information provided by the pretext, table data, and posttext from a company&#39;s financial filings, please provide a response to the final question. This may require extracting information from the context and performing mathematical calculations. Please take into account the information provided in the preceding questions and their answers when formulating your response: &lt;/span&gt;&lt;span class=\"ch\"&gt;\\n\\n&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb7-39\"&gt;&lt;a href=\"#cb7-39\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    &quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb7-40\"&gt;&lt;a href=\"#cb7-40\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb7-41\"&gt;&lt;a href=\"#cb7-41\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"kw\"&gt;def&lt;/span&gt; &lt;span class=\"fu\"&gt;__init__&lt;/span&gt;(&lt;span class=\"va\"&gt;self&lt;/span&gt;, reasoning_lm&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;False&lt;/span&gt;):&lt;/span&gt;\n&lt;span id=\"cb7-42\"&gt;&lt;a href=\"#cb7-42\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"bu\"&gt;super&lt;/span&gt;().&lt;span class=\"fu\"&gt;__init__&lt;/span&gt;()&lt;/span&gt;\n&lt;span id=\"cb7-43\"&gt;&lt;a href=\"#cb7-43\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;if&lt;/span&gt; reasoning_lm:&lt;/span&gt;\n&lt;span id=\"cb7-44\"&gt;&lt;a href=\"#cb7-44\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            &lt;span class=\"va\"&gt;self&lt;/span&gt;.pred &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.ChainOfThought(SolveTurnWithReasoning)&lt;/span&gt;\n&lt;span id=\"cb7-45\"&gt;&lt;a href=\"#cb7-45\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;else&lt;/span&gt;:&lt;/span&gt;\n&lt;span id=\"cb7-46\"&gt;&lt;a href=\"#cb7-46\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            &lt;span class=\"va\"&gt;self&lt;/span&gt;.pred &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.Predict(SolveTurnWithoutReasoning)&lt;/span&gt;\n&lt;span id=\"cb7-47\"&gt;&lt;a href=\"#cb7-47\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb7-48\"&gt;&lt;a href=\"#cb7-48\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"kw\"&gt;def&lt;/span&gt; forward(&lt;span class=\"va\"&gt;self&lt;/span&gt;, conversation_context, evidence_snippets, table, question):&lt;/span&gt;\n&lt;span id=\"cb7-49\"&gt;&lt;a href=\"#cb7-49\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"co\"&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb7-50\"&gt;&lt;a href=\"#cb7-50\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;        Run the model to solve a single turn.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb7-51\"&gt;&lt;a href=\"#cb7-51\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb7-52\"&gt;&lt;a href=\"#cb7-52\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;        Args:&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb7-53\"&gt;&lt;a href=\"#cb7-53\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;            conversation_context (str): Conversation so far.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb7-54\"&gt;&lt;a href=\"#cb7-54\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;            evidence_snippets (str): Evidence text around the table.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb7-55\"&gt;&lt;a href=\"#cb7-55\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;            table (str): Financial table in markdown.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb7-56\"&gt;&lt;a href=\"#cb7-56\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;            question (str): Question to answer.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb7-57\"&gt;&lt;a href=\"#cb7-57\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb7-58\"&gt;&lt;a href=\"#cb7-58\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;        Returns:&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb7-59\"&gt;&lt;a href=\"#cb7-59\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;            dspy.Prediction: Model output with reasoning, ops, and answer.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb7-60\"&gt;&lt;a href=\"#cb7-60\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;        &quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb7-61\"&gt;&lt;a href=\"#cb7-61\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;return&lt;/span&gt; &lt;span class=\"va\"&gt;self&lt;/span&gt;.pred(&lt;/span&gt;\n&lt;span id=\"cb7-62\"&gt;&lt;a href=\"#cb7-62\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            conversation_context&lt;span class=\"op\"&gt;=&lt;/span&gt;conversation_context,&lt;/span&gt;\n&lt;span id=\"cb7-63\"&gt;&lt;a href=\"#cb7-63\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            evidence_snippets&lt;span class=\"op\"&gt;=&lt;/span&gt;evidence_snippets,&lt;/span&gt;\n&lt;span id=\"cb7-64\"&gt;&lt;a href=\"#cb7-64\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            table&lt;span class=\"op\"&gt;=&lt;/span&gt;table,&lt;/span&gt;\n&lt;span id=\"cb7-65\"&gt;&lt;a href=\"#cb7-65\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            question&lt;span class=\"op\"&gt;=&lt;/span&gt;question,&lt;/span&gt;\n&lt;span id=\"cb7-66\"&gt;&lt;a href=\"#cb7-66\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        )&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;/div&gt;\n&lt;p&gt;Next, we define a few helper functions to format our dataset for the DSPy model. We intentionally don’t spend too much time here for now, and will come back to this later, during the &lt;em&gt;optimization&lt;/em&gt; phase.&lt;/p&gt;\n&lt;div id=\"cell-15\" class=\"cell\" data-execution_count=\"405\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb8\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb8-1\"&gt;&lt;a href=\"#cb8-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"kw\"&gt;def&lt;/span&gt; norm_ans(x):&lt;/span&gt;\n&lt;span id=\"cb8-2\"&gt;&lt;a href=\"#cb8-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"co\"&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-3\"&gt;&lt;a href=\"#cb8-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    Normalize an answer for comparison.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-4\"&gt;&lt;a href=\"#cb8-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb8-5\"&gt;&lt;a href=\"#cb8-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    Converts input to string, strips whitespace, removes percent signs,&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-6\"&gt;&lt;a href=\"#cb8-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    and attempts to cast to float. If conversion fails, returns the cleaned string.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-7\"&gt;&lt;a href=\"#cb8-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb8-8\"&gt;&lt;a href=\"#cb8-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    Args:&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-9\"&gt;&lt;a href=\"#cb8-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;        x: The answer to normalize (str, float, or int).&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-10\"&gt;&lt;a href=\"#cb8-10\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb8-11\"&gt;&lt;a href=\"#cb8-11\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    Returns:&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-12\"&gt;&lt;a href=\"#cb8-12\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;        float or str: Normalized float if possible, else cleaned string.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-13\"&gt;&lt;a href=\"#cb8-13\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    &quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-14\"&gt;&lt;a href=\"#cb8-14\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    s &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"bu\"&gt;str&lt;/span&gt;(x).strip().replace(&lt;span class=\"st\"&gt;&quot;%&quot;&lt;/span&gt;, &lt;span class=\"st\"&gt;&quot;&quot;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb8-15\"&gt;&lt;a href=\"#cb8-15\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;try&lt;/span&gt;:&lt;/span&gt;\n&lt;span id=\"cb8-16\"&gt;&lt;a href=\"#cb8-16\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;return&lt;/span&gt; &lt;span class=\"bu\"&gt;float&lt;/span&gt;(s)&lt;/span&gt;\n&lt;span id=\"cb8-17\"&gt;&lt;a href=\"#cb8-17\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;except&lt;/span&gt; &lt;span class=\"pp\"&gt;Exception&lt;/span&gt;:&lt;/span&gt;\n&lt;span id=\"cb8-18\"&gt;&lt;a href=\"#cb8-18\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;return&lt;/span&gt; s&lt;/span&gt;\n&lt;span id=\"cb8-19\"&gt;&lt;a href=\"#cb8-19\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb8-20\"&gt;&lt;a href=\"#cb8-20\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb8-21\"&gt;&lt;a href=\"#cb8-21\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"kw\"&gt;def&lt;/span&gt; _table_md(table_dict: &lt;span class=\"bu\"&gt;dict&lt;/span&gt;, max_cols: &lt;span class=\"bu\"&gt;int&lt;/span&gt; &lt;span class=\"op\"&gt;|&lt;/span&gt; &lt;span class=\"va\"&gt;None&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"va\"&gt;None&lt;/span&gt;) &lt;span class=\"op\"&gt;-&gt;&lt;/span&gt; &lt;span class=\"bu\"&gt;str&lt;/span&gt;:&lt;/span&gt;\n&lt;span id=\"cb8-22\"&gt;&lt;a href=\"#cb8-22\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"co\"&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-23\"&gt;&lt;a href=\"#cb8-23\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    Convert a dictionarised table to compact GitHub-markdown.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-24\"&gt;&lt;a href=\"#cb8-24\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb8-25\"&gt;&lt;a href=\"#cb8-25\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    Accepted shapes&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-26\"&gt;&lt;a href=\"#cb8-26\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    1) {row_name: {col_name: value, …}, …}   # regular 2-level mapping&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-27\"&gt;&lt;a href=\"#cb8-27\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    2) {col_name: value, …}                  # flat → coerced to single row&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-28\"&gt;&lt;a href=\"#cb8-28\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb8-29\"&gt;&lt;a href=\"#cb8-29\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    Guarantees&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-30\"&gt;&lt;a href=\"#cb8-30\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    • Original row order is kept.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-31\"&gt;&lt;a href=\"#cb8-31\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    • Column headers are kept in *first-seen* order; NO deduplication.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-32\"&gt;&lt;a href=\"#cb8-32\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    • max_cols (if given) truncates *after* enumeration, duplicates included.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-33\"&gt;&lt;a href=\"#cb8-33\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    • None → &quot;&quot; and everything else is str()-ed.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-34\"&gt;&lt;a href=\"#cb8-34\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    &quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-35\"&gt;&lt;a href=\"#cb8-35\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;if&lt;/span&gt; &lt;span class=\"kw\"&gt;not&lt;/span&gt; table_dict:&lt;/span&gt;\n&lt;span id=\"cb8-36\"&gt;&lt;a href=\"#cb8-36\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;return&lt;/span&gt; &lt;span class=\"st\"&gt;&quot;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-37\"&gt;&lt;a href=\"#cb8-37\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb8-38\"&gt;&lt;a href=\"#cb8-38\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;if&lt;/span&gt; &lt;span class=\"bu\"&gt;all&lt;/span&gt;(&lt;span class=\"kw\"&gt;not&lt;/span&gt; &lt;span class=\"bu\"&gt;isinstance&lt;/span&gt;(v, &lt;span class=\"bu\"&gt;dict&lt;/span&gt;) &lt;span class=\"cf\"&gt;for&lt;/span&gt; v &lt;span class=\"kw\"&gt;in&lt;/span&gt; table_dict.values()):&lt;/span&gt;\n&lt;span id=\"cb8-39\"&gt;&lt;a href=\"#cb8-39\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"co\"&gt;# flat mapping → one anonymous row&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-40\"&gt;&lt;a href=\"#cb8-40\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        table_dict &lt;span class=\"op\"&gt;=&lt;/span&gt; {&lt;span class=\"st\"&gt;&quot;&quot;&lt;/span&gt;: &lt;span class=\"bu\"&gt;dict&lt;/span&gt;(table_dict)}&lt;/span&gt;\n&lt;span id=\"cb8-41\"&gt;&lt;a href=\"#cb8-41\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;else&lt;/span&gt;:&lt;/span&gt;\n&lt;span id=\"cb8-42\"&gt;&lt;a href=\"#cb8-42\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"co\"&gt;# ensure every value is a dict&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-43\"&gt;&lt;a href=\"#cb8-43\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        table_dict &lt;span class=\"op\"&gt;=&lt;/span&gt; {&lt;/span&gt;\n&lt;span id=\"cb8-44\"&gt;&lt;a href=\"#cb8-44\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            r: (v &lt;span class=\"cf\"&gt;if&lt;/span&gt; &lt;span class=\"bu\"&gt;isinstance&lt;/span&gt;(v, &lt;span class=\"bu\"&gt;dict&lt;/span&gt;) &lt;span class=\"cf\"&gt;else&lt;/span&gt; {&lt;span class=\"st\"&gt;&quot;&quot;&lt;/span&gt;: v}) &lt;span class=\"cf\"&gt;for&lt;/span&gt; r, v &lt;span class=\"kw\"&gt;in&lt;/span&gt; table_dict.items()&lt;/span&gt;\n&lt;span id=\"cb8-45\"&gt;&lt;a href=\"#cb8-45\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        }&lt;/span&gt;\n&lt;span id=\"cb8-46\"&gt;&lt;a href=\"#cb8-46\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb8-47\"&gt;&lt;a href=\"#cb8-47\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    row_ids &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"bu\"&gt;list&lt;/span&gt;(table_dict.keys())  &lt;span class=\"co\"&gt;# preserve caller order&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-48\"&gt;&lt;a href=\"#cb8-48\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb8-49\"&gt;&lt;a href=\"#cb8-49\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    cols: &lt;span class=\"bu\"&gt;list&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; []&lt;/span&gt;\n&lt;span id=\"cb8-50\"&gt;&lt;a href=\"#cb8-50\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;for&lt;/span&gt; r &lt;span class=\"kw\"&gt;in&lt;/span&gt; row_ids:&lt;/span&gt;\n&lt;span id=\"cb8-51\"&gt;&lt;a href=\"#cb8-51\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        cols.extend(table_dict[r].keys())&lt;/span&gt;\n&lt;span id=\"cb8-52\"&gt;&lt;a href=\"#cb8-52\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;if&lt;/span&gt; max_cols &lt;span class=\"kw\"&gt;is&lt;/span&gt; &lt;span class=\"kw\"&gt;not&lt;/span&gt; &lt;span class=\"va\"&gt;None&lt;/span&gt;:&lt;/span&gt;\n&lt;span id=\"cb8-53\"&gt;&lt;a href=\"#cb8-53\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        cols &lt;span class=\"op\"&gt;=&lt;/span&gt; cols[:max_cols]&lt;/span&gt;\n&lt;span id=\"cb8-54\"&gt;&lt;a href=\"#cb8-54\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb8-55\"&gt;&lt;a href=\"#cb8-55\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    header &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"st\"&gt;&quot;| Row | &quot;&lt;/span&gt; &lt;span class=\"op\"&gt;+&lt;/span&gt; &lt;span class=\"st\"&gt;&quot; | &quot;&lt;/span&gt;.join(&lt;span class=\"bu\"&gt;map&lt;/span&gt;(&lt;span class=\"bu\"&gt;str&lt;/span&gt;, cols)) &lt;span class=\"op\"&gt;+&lt;/span&gt; &lt;span class=\"st\"&gt;&quot; |&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-56\"&gt;&lt;a href=\"#cb8-56\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    sep &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"st\"&gt;&quot;|&quot;&lt;/span&gt; &lt;span class=\"op\"&gt;+&lt;/span&gt; &lt;span class=\"st\"&gt;&quot;---|&quot;&lt;/span&gt; &lt;span class=\"op\"&gt;*&lt;/span&gt; (&lt;span class=\"bu\"&gt;len&lt;/span&gt;(cols) &lt;span class=\"op\"&gt;+&lt;/span&gt; &lt;span class=\"dv\"&gt;1&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb8-57\"&gt;&lt;a href=\"#cb8-57\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    lines &lt;span class=\"op\"&gt;=&lt;/span&gt; [header, sep]&lt;/span&gt;\n&lt;span id=\"cb8-58\"&gt;&lt;a href=\"#cb8-58\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb8-59\"&gt;&lt;a href=\"#cb8-59\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;for&lt;/span&gt; r &lt;span class=\"kw\"&gt;in&lt;/span&gt; row_ids:&lt;/span&gt;\n&lt;span id=\"cb8-60\"&gt;&lt;a href=\"#cb8-60\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        vals &lt;span class=\"op\"&gt;=&lt;/span&gt; [&lt;span class=\"bu\"&gt;str&lt;/span&gt;(table_dict[r].get(c, &lt;span class=\"st\"&gt;&quot;&quot;&lt;/span&gt;)) &lt;span class=\"cf\"&gt;for&lt;/span&gt; c &lt;span class=\"kw\"&gt;in&lt;/span&gt; cols]&lt;/span&gt;\n&lt;span id=\"cb8-61\"&gt;&lt;a href=\"#cb8-61\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        lines.append(&lt;span class=\"st\"&gt;&quot;| &quot;&lt;/span&gt; &lt;span class=\"op\"&gt;+&lt;/span&gt; &lt;span class=\"bu\"&gt;str&lt;/span&gt;(r) &lt;span class=\"op\"&gt;+&lt;/span&gt; &lt;span class=\"st\"&gt;&quot; | &quot;&lt;/span&gt; &lt;span class=\"op\"&gt;+&lt;/span&gt; &lt;span class=\"st\"&gt;&quot; | &quot;&lt;/span&gt;.join(vals) &lt;span class=\"op\"&gt;+&lt;/span&gt; &lt;span class=\"st\"&gt;&quot; |&quot;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb8-62\"&gt;&lt;a href=\"#cb8-62\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb8-63\"&gt;&lt;a href=\"#cb8-63\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;return&lt;/span&gt; &lt;span class=\"st\"&gt;&quot;&lt;/span&gt;&lt;span class=\"ch\"&gt;\\n&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;&lt;/span&gt;.join(lines)&lt;/span&gt;\n&lt;span id=\"cb8-64\"&gt;&lt;a href=\"#cb8-64\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb8-65\"&gt;&lt;a href=\"#cb8-65\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb8-66\"&gt;&lt;a href=\"#cb8-66\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"kw\"&gt;def&lt;/span&gt; build_inputs_from_row(&lt;/span&gt;\n&lt;span id=\"cb8-67\"&gt;&lt;a href=\"#cb8-67\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    row,&lt;/span&gt;\n&lt;span id=\"cb8-68\"&gt;&lt;a href=\"#cb8-68\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    turn_idx,&lt;/span&gt;\n&lt;span id=\"cb8-69\"&gt;&lt;a href=\"#cb8-69\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"op\"&gt;*&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb8-70\"&gt;&lt;a href=\"#cb8-70\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    history_mode: &lt;span class=\"bu\"&gt;str&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"st\"&gt;&quot;teacher&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb8-71\"&gt;&lt;a href=\"#cb8-71\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    state: &lt;span class=\"bu\"&gt;dict&lt;/span&gt; &lt;span class=\"op\"&gt;|&lt;/span&gt; &lt;span class=\"va\"&gt;None&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"va\"&gt;None&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb8-72\"&gt;&lt;a href=\"#cb8-72\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    max_table_cols: &lt;span class=\"bu\"&gt;int&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"dv\"&gt;100&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb8-73\"&gt;&lt;a href=\"#cb8-73\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;):&lt;/span&gt;\n&lt;span id=\"cb8-74\"&gt;&lt;a href=\"#cb8-74\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"co\"&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-75\"&gt;&lt;a href=\"#cb8-75\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    history_mode: &#39;teacher&#39; | &#39;model&#39; | &#39;none&#39;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-76\"&gt;&lt;a href=\"#cb8-76\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    state: carries model predictions across turns when history_mode=&#39;model&#39;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-77\"&gt;&lt;a href=\"#cb8-77\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;           expected keys: {&#39;pred_answers&#39;: list[str|float]}&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-78\"&gt;&lt;a href=\"#cb8-78\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    evidence_builder: optional callable(row, turn_idx)-&gt;str; if None, use simple truncation.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-79\"&gt;&lt;a href=\"#cb8-79\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    &quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-80\"&gt;&lt;a href=\"#cb8-80\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    qs &lt;span class=\"op\"&gt;=&lt;/span&gt; row[&lt;span class=\"st\"&gt;&quot;dialogue_conv_questions&quot;&lt;/span&gt;]&lt;/span&gt;\n&lt;span id=\"cb8-81\"&gt;&lt;a href=\"#cb8-81\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    gold &lt;span class=\"op\"&gt;=&lt;/span&gt; row[&lt;span class=\"st\"&gt;&quot;dialogue_executed_answers&quot;&lt;/span&gt;]&lt;/span&gt;\n&lt;span id=\"cb8-82\"&gt;&lt;a href=\"#cb8-82\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb8-83\"&gt;&lt;a href=\"#cb8-83\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"co\"&gt;# ---- history ----&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-84\"&gt;&lt;a href=\"#cb8-84\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    history_lines &lt;span class=\"op\"&gt;=&lt;/span&gt; []&lt;/span&gt;\n&lt;span id=\"cb8-85\"&gt;&lt;a href=\"#cb8-85\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;for&lt;/span&gt; t &lt;span class=\"kw\"&gt;in&lt;/span&gt; &lt;span class=\"bu\"&gt;range&lt;/span&gt;(turn_idx):&lt;/span&gt;\n&lt;span id=\"cb8-86\"&gt;&lt;a href=\"#cb8-86\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        history_lines.append(&lt;span class=\"ss\"&gt;f&quot;Q&lt;/span&gt;&lt;span class=\"sc\"&gt;{&lt;/span&gt;t &lt;span class=\"op\"&gt;+&lt;/span&gt; &lt;span class=\"dv\"&gt;1&lt;/span&gt;&lt;span class=\"sc\"&gt;}&lt;/span&gt;&lt;span class=\"ss\"&gt;: &lt;/span&gt;&lt;span class=\"sc\"&gt;{&lt;/span&gt;qs[t]&lt;span class=\"sc\"&gt;}&lt;/span&gt;&lt;span class=\"ss\"&gt;&quot;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb8-87\"&gt;&lt;a href=\"#cb8-87\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;if&lt;/span&gt; history_mode &lt;span class=\"op\"&gt;==&lt;/span&gt; &lt;span class=\"st\"&gt;&quot;teacher&quot;&lt;/span&gt;:&lt;/span&gt;\n&lt;span id=\"cb8-88\"&gt;&lt;a href=\"#cb8-88\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            history_lines.append(&lt;span class=\"ss\"&gt;f&quot;A&lt;/span&gt;&lt;span class=\"sc\"&gt;{&lt;/span&gt;t &lt;span class=\"op\"&gt;+&lt;/span&gt; &lt;span class=\"dv\"&gt;1&lt;/span&gt;&lt;span class=\"sc\"&gt;}&lt;/span&gt;&lt;span class=\"ss\"&gt;: &lt;/span&gt;&lt;span class=\"sc\"&gt;{&lt;/span&gt;gold[t]&lt;span class=\"sc\"&gt;}&lt;/span&gt;&lt;span class=\"ss\"&gt;&quot;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb8-89\"&gt;&lt;a href=\"#cb8-89\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;elif&lt;/span&gt; (&lt;/span&gt;\n&lt;span id=\"cb8-90\"&gt;&lt;a href=\"#cb8-90\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            history_mode &lt;span class=\"op\"&gt;==&lt;/span&gt; &lt;span class=\"st\"&gt;&quot;model&quot;&lt;/span&gt; &lt;span class=\"kw\"&gt;and&lt;/span&gt; state &lt;span class=\"kw\"&gt;and&lt;/span&gt; &lt;span class=\"bu\"&gt;len&lt;/span&gt;(state.get(&lt;span class=\"st\"&gt;&quot;pred_answers&quot;&lt;/span&gt;, [])) &lt;span class=\"op\"&gt;&gt;&lt;/span&gt; t&lt;/span&gt;\n&lt;span id=\"cb8-91\"&gt;&lt;a href=\"#cb8-91\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        ):&lt;/span&gt;\n&lt;span id=\"cb8-92\"&gt;&lt;a href=\"#cb8-92\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            history_lines.append(&lt;span class=\"ss\"&gt;f&quot;A&lt;/span&gt;&lt;span class=\"sc\"&gt;{&lt;/span&gt;t &lt;span class=\"op\"&gt;+&lt;/span&gt; &lt;span class=\"dv\"&gt;1&lt;/span&gt;&lt;span class=\"sc\"&gt;}&lt;/span&gt;&lt;span class=\"ss\"&gt;: &lt;/span&gt;&lt;span class=\"sc\"&gt;{&lt;/span&gt;state[&lt;span class=\"st\"&gt;&#39;pred_answers&#39;&lt;/span&gt;][t]&lt;span class=\"sc\"&gt;}&lt;/span&gt;&lt;span class=\"ss\"&gt;&quot;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb8-93\"&gt;&lt;a href=\"#cb8-93\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;elif&lt;/span&gt; history_mode &lt;span class=\"op\"&gt;==&lt;/span&gt; &lt;span class=\"st\"&gt;&quot;none&quot;&lt;/span&gt;:&lt;/span&gt;\n&lt;span id=\"cb8-94\"&gt;&lt;a href=\"#cb8-94\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            &lt;span class=\"cf\"&gt;pass&lt;/span&gt;  &lt;span class=\"co\"&gt;# only questions&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-95\"&gt;&lt;a href=\"#cb8-95\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    conversation_context &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"st\"&gt;&quot;&lt;/span&gt;&lt;span class=\"ch\"&gt;\\n&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;&lt;/span&gt;.join(history_lines) &lt;span class=\"cf\"&gt;if&lt;/span&gt; history_lines &lt;span class=\"cf\"&gt;else&lt;/span&gt; &lt;span class=\"st\"&gt;&quot;None&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-96\"&gt;&lt;a href=\"#cb8-96\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb8-97\"&gt;&lt;a href=\"#cb8-97\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"co\"&gt;# compact pre/post: first N sentences&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-98\"&gt;&lt;a href=\"#cb8-98\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"co\"&gt;# def first_sents(txt, n):&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-99\"&gt;&lt;a href=\"#cb8-99\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"co\"&gt;#     if not txt: return &quot;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-100\"&gt;&lt;a href=\"#cb8-100\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"co\"&gt;#     # very light sentence split&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-101\"&gt;&lt;a href=\"#cb8-101\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"co\"&gt;#     parts = [p.strip() for p in txt.split(&quot;. &quot;) if p.strip()]&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-102\"&gt;&lt;a href=\"#cb8-102\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"co\"&gt;#     return &quot;. &quot;.join(parts[:n])&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-103\"&gt;&lt;a href=\"#cb8-103\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"co\"&gt;# pre = first_sents(row.get(&quot;doc_pre_text&quot;, &quot;&quot;) or &quot;&quot;, max_pre_sents)&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-104\"&gt;&lt;a href=\"#cb8-104\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"co\"&gt;# post= first_sents(row.get(&quot;doc_post_text&quot;, &quot;&quot;) or &quot;&quot;, max_post_sents)&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-105\"&gt;&lt;a href=\"#cb8-105\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"co\"&gt;# evidence_snippets = f&quot;[PRE]\\n{pre}\\n[/PRE]\\n[POST]\\n{post}\\n[/POST]&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-106\"&gt;&lt;a href=\"#cb8-106\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    evidence_snippets &lt;span class=\"op\"&gt;=&lt;/span&gt; (&lt;/span&gt;\n&lt;span id=\"cb8-107\"&gt;&lt;a href=\"#cb8-107\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"ss\"&gt;f&quot;[PRE]&lt;/span&gt;&lt;span class=\"ch\"&gt;\\n&lt;/span&gt;&lt;span class=\"sc\"&gt;{&lt;/span&gt;row[&lt;span class=\"st\"&gt;&#39;doc_pre_text&#39;&lt;/span&gt;]&lt;span class=\"sc\"&gt;}&lt;/span&gt;&lt;span class=\"ch\"&gt;\\n&lt;/span&gt;&lt;span class=\"ss\"&gt;[/PRE]&lt;/span&gt;&lt;span class=\"ch\"&gt;\\n&lt;/span&gt;&lt;span class=\"ss\"&gt;[POST]&lt;/span&gt;&lt;span class=\"ch\"&gt;\\n&lt;/span&gt;&lt;span class=\"sc\"&gt;{&lt;/span&gt;row[&lt;span class=\"st\"&gt;&#39;doc_post_text&#39;&lt;/span&gt;]&lt;span class=\"sc\"&gt;}&lt;/span&gt;&lt;span class=\"ch\"&gt;\\n&lt;/span&gt;&lt;span class=\"ss\"&gt;[/POST]&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-108\"&gt;&lt;a href=\"#cb8-108\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    )&lt;/span&gt;\n&lt;span id=\"cb8-109\"&gt;&lt;a href=\"#cb8-109\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    table_md &lt;span class=\"op\"&gt;=&lt;/span&gt; _table_md(row.get(&lt;span class=\"st\"&gt;&quot;doc_table&quot;&lt;/span&gt;, {}) &lt;span class=\"kw\"&gt;or&lt;/span&gt; {}, max_cols&lt;span class=\"op\"&gt;=&lt;/span&gt;max_table_cols)&lt;/span&gt;\n&lt;span id=\"cb8-110\"&gt;&lt;a href=\"#cb8-110\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb8-111\"&gt;&lt;a href=\"#cb8-111\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;return&lt;/span&gt; &lt;span class=\"bu\"&gt;dict&lt;/span&gt;(&lt;/span&gt;\n&lt;span id=\"cb8-112\"&gt;&lt;a href=\"#cb8-112\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        conversation_context&lt;span class=\"op\"&gt;=&lt;/span&gt;conversation_context,&lt;/span&gt;\n&lt;span id=\"cb8-113\"&gt;&lt;a href=\"#cb8-113\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        evidence_snippets&lt;span class=\"op\"&gt;=&lt;/span&gt;evidence_snippets,&lt;/span&gt;\n&lt;span id=\"cb8-114\"&gt;&lt;a href=\"#cb8-114\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        table&lt;span class=\"op\"&gt;=&lt;/span&gt;table_md,&lt;/span&gt;\n&lt;span id=\"cb8-115\"&gt;&lt;a href=\"#cb8-115\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        question&lt;span class=\"op\"&gt;=&lt;/span&gt;qs[turn_idx],&lt;/span&gt;\n&lt;span id=\"cb8-116\"&gt;&lt;a href=\"#cb8-116\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"op\"&gt;**&lt;/span&gt;row,&lt;/span&gt;\n&lt;span id=\"cb8-117\"&gt;&lt;a href=\"#cb8-117\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    )&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-16\" class=\"cell\" data-execution_count=\"406\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb9\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb9-1\"&gt;&lt;a href=\"#cb9-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"kw\"&gt;def&lt;/span&gt; evaluate_dialogues(model, df):&lt;/span&gt;\n&lt;span id=\"cb9-2\"&gt;&lt;a href=\"#cb9-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"co\"&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-3\"&gt;&lt;a href=\"#cb9-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    Evaluate a dialogue model on a DataFrame of conversations.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-4\"&gt;&lt;a href=\"#cb9-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb9-5\"&gt;&lt;a href=\"#cb9-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    Args:&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-6\"&gt;&lt;a href=\"#cb9-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;        model: Callable that takes unpacked input dict and returns an object with at least `.answer` (and optionally `.ops`).&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-7\"&gt;&lt;a href=\"#cb9-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;        df: pd.DataFrame with columns:&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-8\"&gt;&lt;a href=\"#cb9-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;            - &quot;dialogue_conv_questions&quot;: list of str, all questions in the conversation&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-9\"&gt;&lt;a href=\"#cb9-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;            - &quot;dialogue_executed_answers&quot;: list of str/float, all executed answers so far&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-10\"&gt;&lt;a href=\"#cb9-10\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;            - (other columns as needed by evidence_builder)&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-11\"&gt;&lt;a href=\"#cb9-11\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb9-12\"&gt;&lt;a href=\"#cb9-12\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    Returns:&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-13\"&gt;&lt;a href=\"#cb9-13\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;        dict with:&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-14\"&gt;&lt;a href=\"#cb9-14\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;            - &quot;turn_em_micro&quot;: float, micro-averaged exact match over all turns&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-15\"&gt;&lt;a href=\"#cb9-15\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;            - &quot;dlg_mean_em_macro&quot;: float, macro-averaged mean EM per dialogue&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-16\"&gt;&lt;a href=\"#cb9-16\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;            - &quot;joint_em&quot;: float, fraction of dialogues with all turns correct&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-17\"&gt;&lt;a href=\"#cb9-17\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;            - &quot;final_turn_em&quot;: float, EM on the final turn of each dialogue&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-18\"&gt;&lt;a href=\"#cb9-18\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;            - &quot;n_dialogues&quot;: int, number of dialogues&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-19\"&gt;&lt;a href=\"#cb9-19\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;            - &quot;n_turns&quot;: int, total number of turns&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-20\"&gt;&lt;a href=\"#cb9-20\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    &quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-21\"&gt;&lt;a href=\"#cb9-21\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    turn_hits &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"dv\"&gt;0&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-22\"&gt;&lt;a href=\"#cb9-22\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    turn_tot &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"dv\"&gt;0&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-23\"&gt;&lt;a href=\"#cb9-23\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"co\"&gt;# exec_hits = 0&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-24\"&gt;&lt;a href=\"#cb9-24\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    dlg_mean_ems &lt;span class=\"op\"&gt;=&lt;/span&gt; []&lt;/span&gt;\n&lt;span id=\"cb9-25\"&gt;&lt;a href=\"#cb9-25\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    dlg_joint_hits &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"dv\"&gt;0&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-26\"&gt;&lt;a href=\"#cb9-26\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    final_hits &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"dv\"&gt;0&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-27\"&gt;&lt;a href=\"#cb9-27\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb9-28\"&gt;&lt;a href=\"#cb9-28\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;for&lt;/span&gt; _, row &lt;span class=\"kw\"&gt;in&lt;/span&gt; df.iterrows():&lt;/span&gt;\n&lt;span id=\"cb9-29\"&gt;&lt;a href=\"#cb9-29\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        qs &lt;span class=\"op\"&gt;=&lt;/span&gt; row[&lt;span class=\"st\"&gt;&quot;dialogue_conv_questions&quot;&lt;/span&gt;]&lt;/span&gt;\n&lt;span id=\"cb9-30\"&gt;&lt;a href=\"#cb9-30\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        gold &lt;span class=\"op\"&gt;=&lt;/span&gt; row[&lt;span class=\"st\"&gt;&quot;dialogue_executed_answers&quot;&lt;/span&gt;]&lt;/span&gt;\n&lt;span id=\"cb9-31\"&gt;&lt;a href=\"#cb9-31\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        ems &lt;span class=\"op\"&gt;=&lt;/span&gt; []&lt;/span&gt;\n&lt;span id=\"cb9-32\"&gt;&lt;a href=\"#cb9-32\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        exec_flags &lt;span class=\"op\"&gt;=&lt;/span&gt; []&lt;/span&gt;\n&lt;span id=\"cb9-33\"&gt;&lt;a href=\"#cb9-33\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;for&lt;/span&gt; t &lt;span class=\"kw\"&gt;in&lt;/span&gt; &lt;span class=\"bu\"&gt;range&lt;/span&gt;(&lt;span class=\"bu\"&gt;len&lt;/span&gt;(qs)):&lt;/span&gt;\n&lt;span id=\"cb9-34\"&gt;&lt;a href=\"#cb9-34\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            inp &lt;span class=\"op\"&gt;=&lt;/span&gt; build_inputs_from_row(row, t)&lt;/span&gt;\n&lt;span id=\"cb9-35\"&gt;&lt;a href=\"#cb9-35\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            out &lt;span class=\"op\"&gt;=&lt;/span&gt; model(&lt;span class=\"op\"&gt;**&lt;/span&gt;inp)  &lt;span class=\"co\"&gt;# out.ops, out.answer&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-36\"&gt;&lt;a href=\"#cb9-36\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            pa &lt;span class=\"op\"&gt;=&lt;/span&gt; norm_ans(out.answer)&lt;/span&gt;\n&lt;span id=\"cb9-37\"&gt;&lt;a href=\"#cb9-37\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            ga &lt;span class=\"op\"&gt;=&lt;/span&gt; norm_ans(gold[t])&lt;/span&gt;\n&lt;span id=\"cb9-38\"&gt;&lt;a href=\"#cb9-38\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            em &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"bu\"&gt;float&lt;/span&gt;(pa &lt;span class=\"op\"&gt;==&lt;/span&gt; ga)&lt;/span&gt;\n&lt;span id=\"cb9-39\"&gt;&lt;a href=\"#cb9-39\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            ems.append(em)&lt;/span&gt;\n&lt;span id=\"cb9-40\"&gt;&lt;a href=\"#cb9-40\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            turn_hits &lt;span class=\"op\"&gt;+=&lt;/span&gt; em&lt;/span&gt;\n&lt;span id=\"cb9-41\"&gt;&lt;a href=\"#cb9-41\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            turn_tot &lt;span class=\"op\"&gt;+=&lt;/span&gt; &lt;span class=\"dv\"&gt;1&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-42\"&gt;&lt;a href=\"#cb9-42\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb9-43\"&gt;&lt;a href=\"#cb9-43\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            &lt;span class=\"co\"&gt;# (optional) exec check if you have your python DSL evaluator:&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-44\"&gt;&lt;a href=\"#cb9-44\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            &lt;span class=\"co\"&gt;# exec_ok = False&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-45\"&gt;&lt;a href=\"#cb9-45\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            &lt;span class=\"co\"&gt;# try:&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-46\"&gt;&lt;a href=\"#cb9-46\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            &lt;span class=\"co\"&gt;#     # exec_ok = (run_dsl(out.ops, inp) == ga)   # plug your interpreter&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-47\"&gt;&lt;a href=\"#cb9-47\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            &lt;span class=\"co\"&gt;#     exec_ok = False&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-48\"&gt;&lt;a href=\"#cb9-48\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            &lt;span class=\"co\"&gt;# except Exception:&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-49\"&gt;&lt;a href=\"#cb9-49\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            &lt;span class=\"co\"&gt;#     exec_ok = False&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-50\"&gt;&lt;a href=\"#cb9-50\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            &lt;span class=\"co\"&gt;# exec_flags.append(exec_ok)&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-51\"&gt;&lt;a href=\"#cb9-51\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            &lt;span class=\"co\"&gt;# exec_hits += float(exec_ok)&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-52\"&gt;&lt;a href=\"#cb9-52\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb9-53\"&gt;&lt;a href=\"#cb9-53\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        dlg_mean_ems.append(&lt;span class=\"bu\"&gt;sum&lt;/span&gt;(ems) &lt;span class=\"op\"&gt;/&lt;/span&gt; &lt;span class=\"bu\"&gt;len&lt;/span&gt;(ems))&lt;/span&gt;\n&lt;span id=\"cb9-54\"&gt;&lt;a href=\"#cb9-54\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;if&lt;/span&gt; &lt;span class=\"bu\"&gt;all&lt;/span&gt;(v &lt;span class=\"op\"&gt;==&lt;/span&gt; &lt;span class=\"fl\"&gt;1.0&lt;/span&gt; &lt;span class=\"cf\"&gt;for&lt;/span&gt; v &lt;span class=\"kw\"&gt;in&lt;/span&gt; ems):&lt;/span&gt;\n&lt;span id=\"cb9-55\"&gt;&lt;a href=\"#cb9-55\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            dlg_joint_hits &lt;span class=\"op\"&gt;+=&lt;/span&gt; &lt;span class=\"dv\"&gt;1&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-56\"&gt;&lt;a href=\"#cb9-56\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        final_hits &lt;span class=\"op\"&gt;+=&lt;/span&gt; ems[&lt;span class=\"op\"&gt;-&lt;/span&gt;&lt;span class=\"dv\"&gt;1&lt;/span&gt;]&lt;/span&gt;\n&lt;span id=\"cb9-57\"&gt;&lt;a href=\"#cb9-57\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb9-58\"&gt;&lt;a href=\"#cb9-58\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;return&lt;/span&gt; {&lt;/span&gt;\n&lt;span id=\"cb9-59\"&gt;&lt;a href=\"#cb9-59\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"st\"&gt;&quot;turn_em_micro&quot;&lt;/span&gt;: turn_hits &lt;span class=\"op\"&gt;/&lt;/span&gt; &lt;span class=\"bu\"&gt;max&lt;/span&gt;(&lt;span class=\"dv\"&gt;1&lt;/span&gt;, turn_tot),&lt;/span&gt;\n&lt;span id=\"cb9-60\"&gt;&lt;a href=\"#cb9-60\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"st\"&gt;&quot;dlg_mean_em_macro&quot;&lt;/span&gt;: &lt;span class=\"bu\"&gt;sum&lt;/span&gt;(dlg_mean_ems) &lt;span class=\"op\"&gt;/&lt;/span&gt; &lt;span class=\"bu\"&gt;max&lt;/span&gt;(&lt;span class=\"dv\"&gt;1&lt;/span&gt;, &lt;span class=\"bu\"&gt;len&lt;/span&gt;(dlg_mean_ems)),&lt;/span&gt;\n&lt;span id=\"cb9-61\"&gt;&lt;a href=\"#cb9-61\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"st\"&gt;&quot;joint_em&quot;&lt;/span&gt;: dlg_joint_hits &lt;span class=\"op\"&gt;/&lt;/span&gt; &lt;span class=\"bu\"&gt;max&lt;/span&gt;(&lt;span class=\"dv\"&gt;1&lt;/span&gt;, &lt;span class=\"bu\"&gt;len&lt;/span&gt;(dlg_mean_ems)),&lt;/span&gt;\n&lt;span id=\"cb9-62\"&gt;&lt;a href=\"#cb9-62\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"st\"&gt;&quot;final_turn_em&quot;&lt;/span&gt;: final_hits &lt;span class=\"op\"&gt;/&lt;/span&gt; &lt;span class=\"bu\"&gt;max&lt;/span&gt;(&lt;span class=\"dv\"&gt;1&lt;/span&gt;, &lt;span class=\"bu\"&gt;len&lt;/span&gt;(dlg_mean_ems)),&lt;/span&gt;\n&lt;span id=\"cb9-63\"&gt;&lt;a href=\"#cb9-63\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"co\"&gt;# &quot;exec_agree_rate&quot;: exec_hits / max(1, turn_tot),&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-64\"&gt;&lt;a href=\"#cb9-64\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"st\"&gt;&quot;n_dialogues&quot;&lt;/span&gt;: &lt;span class=\"bu\"&gt;len&lt;/span&gt;(dlg_mean_ems),&lt;/span&gt;\n&lt;span id=\"cb9-65\"&gt;&lt;a href=\"#cb9-65\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"st\"&gt;&quot;n_turns&quot;&lt;/span&gt;: turn_tot,&lt;/span&gt;\n&lt;span id=\"cb9-66\"&gt;&lt;a href=\"#cb9-66\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;/div&gt;\n&lt;p&gt;Next, we will create the DSPy metric, used to &lt;em&gt;evaluate&lt;/em&gt; the performance of our model.&lt;/p&gt;\n&lt;p&gt;We will focus on 2 parts to our metric: - If the answer is a floating point number, we will aim to compare it with the ground truth with some tolerance. - If the answer is a string, we will aim to perform &lt;strong&gt;exact match&lt;/strong&gt; via DSPy’s &lt;code&gt;exact_match&lt;/code&gt; metric.&lt;/p&gt;\n&lt;div id=\"cell-18\" class=\"cell\" data-execution_count=\"407\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb10\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb10-1\"&gt;&lt;a href=\"#cb10-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"kw\"&gt;def&lt;/span&gt; turn_em_metric(example, pred, trace&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;None&lt;/span&gt;):&lt;/span&gt;\n&lt;span id=\"cb10-2\"&gt;&lt;a href=\"#cb10-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"co\"&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb10-3\"&gt;&lt;a href=\"#cb10-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    Compute turn-level exact match (EM) metric for a single example/prediction pair.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb10-4\"&gt;&lt;a href=\"#cb10-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb10-5\"&gt;&lt;a href=\"#cb10-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    Args:&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb10-6\"&gt;&lt;a href=\"#cb10-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;        example: dict-like, must contain &quot;gold_answer&quot; key.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb10-7\"&gt;&lt;a href=\"#cb10-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;        pred: object with an &quot;answer&quot; attribute.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb10-8\"&gt;&lt;a href=\"#cb10-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb10-9\"&gt;&lt;a href=\"#cb10-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    Returns:&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb10-10\"&gt;&lt;a href=\"#cb10-10\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;        float: 1.0 if normalized prediction matches normalized gold answer (with tolerance for floats), else 0.0.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb10-11\"&gt;&lt;a href=\"#cb10-11\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    &quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb10-12\"&gt;&lt;a href=\"#cb10-12\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"im\"&gt;from&lt;/span&gt; dspy.evaluate.metrics &lt;span class=\"im\"&gt;import&lt;/span&gt; answer_exact_match&lt;/span&gt;\n&lt;span id=\"cb10-13\"&gt;&lt;a href=\"#cb10-13\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb10-14\"&gt;&lt;a href=\"#cb10-14\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    pa &lt;span class=\"op\"&gt;=&lt;/span&gt; norm_ans(pred.answer)&lt;/span&gt;\n&lt;span id=\"cb10-15\"&gt;&lt;a href=\"#cb10-15\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    ga &lt;span class=\"op\"&gt;=&lt;/span&gt; norm_ans(example[&lt;span class=\"st\"&gt;&quot;answer&quot;&lt;/span&gt;])&lt;/span&gt;\n&lt;span id=\"cb10-16\"&gt;&lt;a href=\"#cb10-16\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;if&lt;/span&gt; &lt;span class=\"bu\"&gt;isinstance&lt;/span&gt;(pa, &lt;span class=\"bu\"&gt;float&lt;/span&gt;) &lt;span class=\"kw\"&gt;and&lt;/span&gt; &lt;span class=\"bu\"&gt;isinstance&lt;/span&gt;(ga, &lt;span class=\"bu\"&gt;float&lt;/span&gt;):&lt;/span&gt;\n&lt;span id=\"cb10-17\"&gt;&lt;a href=\"#cb10-17\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;return&lt;/span&gt; &lt;span class=\"bu\"&gt;float&lt;/span&gt;(&lt;span class=\"bu\"&gt;abs&lt;/span&gt;(pa &lt;span class=\"op\"&gt;-&lt;/span&gt; ga) &lt;span class=\"op\"&gt;&lt;=&lt;/span&gt; &lt;span class=\"fl\"&gt;1e-2&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb10-18\"&gt;&lt;a href=\"#cb10-18\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;else&lt;/span&gt;:&lt;/span&gt;\n&lt;span id=\"cb10-19\"&gt;&lt;a href=\"#cb10-19\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"co\"&gt;# exact_match in DSPy needs the inputs to be in string format&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb10-20\"&gt;&lt;a href=\"#cb10-20\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"co\"&gt;# due to the normalisations DSPy performs internally.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb10-21\"&gt;&lt;a href=\"#cb10-21\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        ground_truth &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.Prediction(answer&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"bu\"&gt;str&lt;/span&gt;(example.answer))&lt;/span&gt;\n&lt;span id=\"cb10-22\"&gt;&lt;a href=\"#cb10-22\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        pred_answer &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.Prediction(answer&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"bu\"&gt;str&lt;/span&gt;(pred.answer))&lt;/span&gt;\n&lt;span id=\"cb10-23\"&gt;&lt;a href=\"#cb10-23\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;return&lt;/span&gt; &lt;span class=\"bu\"&gt;float&lt;/span&gt;(answer_exact_match(ground_truth, pred_answer))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-19\" class=\"cell\" data-execution_count=\"408\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb11\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb11-1\"&gt;&lt;a href=\"#cb11-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"kw\"&gt;def&lt;/span&gt; to_turn_examples(df, history_mode&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;teacher&quot;&lt;/span&gt;):&lt;/span&gt;\n&lt;span id=\"cb11-2\"&gt;&lt;a href=\"#cb11-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    examples &lt;span class=\"op\"&gt;=&lt;/span&gt; []&lt;/span&gt;\n&lt;span id=\"cb11-3\"&gt;&lt;a href=\"#cb11-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;for&lt;/span&gt; _, row &lt;span class=\"kw\"&gt;in&lt;/span&gt; df.iterrows():&lt;/span&gt;\n&lt;span id=\"cb11-4\"&gt;&lt;a href=\"#cb11-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        qs &lt;span class=\"op\"&gt;=&lt;/span&gt; row[&lt;span class=\"st\"&gt;&quot;dialogue_conv_questions&quot;&lt;/span&gt;]&lt;/span&gt;\n&lt;span id=\"cb11-5\"&gt;&lt;a href=\"#cb11-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        gold &lt;span class=\"op\"&gt;=&lt;/span&gt; row[&lt;span class=\"st\"&gt;&quot;dialogue_executed_answers&quot;&lt;/span&gt;]&lt;/span&gt;\n&lt;span id=\"cb11-6\"&gt;&lt;a href=\"#cb11-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;for&lt;/span&gt; t &lt;span class=\"kw\"&gt;in&lt;/span&gt; &lt;span class=\"bu\"&gt;range&lt;/span&gt;(&lt;span class=\"bu\"&gt;len&lt;/span&gt;(qs)):&lt;/span&gt;\n&lt;span id=\"cb11-7\"&gt;&lt;a href=\"#cb11-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            inp &lt;span class=\"op\"&gt;=&lt;/span&gt; build_inputs_from_row(row, t, history_mode&lt;span class=\"op\"&gt;=&lt;/span&gt;history_mode)&lt;/span&gt;\n&lt;span id=\"cb11-8\"&gt;&lt;a href=\"#cb11-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            ex &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"bu\"&gt;dict&lt;/span&gt;(&lt;span class=\"op\"&gt;**&lt;/span&gt;inp, answer&lt;span class=\"op\"&gt;=&lt;/span&gt;gold[t])&lt;/span&gt;\n&lt;span id=\"cb11-9\"&gt;&lt;a href=\"#cb11-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            examples.append(&lt;/span&gt;\n&lt;span id=\"cb11-10\"&gt;&lt;a href=\"#cb11-10\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                dspy.Example(&lt;span class=\"op\"&gt;**&lt;/span&gt;ex).with_inputs(&lt;/span&gt;\n&lt;span id=\"cb11-11\"&gt;&lt;a href=\"#cb11-11\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                    &lt;span class=\"st\"&gt;&quot;conversation_context&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb11-12\"&gt;&lt;a href=\"#cb11-12\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                    &lt;span class=\"st\"&gt;&quot;evidence_snippets&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb11-13\"&gt;&lt;a href=\"#cb11-13\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                    &lt;span class=\"st\"&gt;&quot;table&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb11-14\"&gt;&lt;a href=\"#cb11-14\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                    &lt;span class=\"st\"&gt;&quot;question&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb11-15\"&gt;&lt;a href=\"#cb11-15\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                )&lt;/span&gt;\n&lt;span id=\"cb11-16\"&gt;&lt;a href=\"#cb11-16\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            )&lt;/span&gt;\n&lt;span id=\"cb11-17\"&gt;&lt;a href=\"#cb11-17\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;return&lt;/span&gt; examples&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;/div&gt;\n&lt;p&gt;Next, we will prepare our datasets.&lt;/p&gt;\n&lt;p&gt;We will aim to use the splits as follows: - &lt;code&gt;train&lt;/code&gt;: Used primarily for the &lt;em&gt;optimisation&lt;/em&gt; phase. This will be discussed shortly. - &lt;code&gt;valid&lt;/code&gt;: Used to evaluate the performance of an LM on an optimised model &lt;em&gt;trained&lt;/em&gt; using the train dataset. - &lt;code&gt;test&lt;/code&gt;: Used to evaluate the performance of an LM on a held-out dataset. This will determine the overall stage performance.&lt;/p&gt;\n&lt;div id=\"cell-21\" class=\"cell\" data-execution_count=\"409\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb12\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb12-1\"&gt;&lt;a href=\"#cb12-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;import&lt;/span&gt; pandas &lt;span class=\"im\"&gt;as&lt;/span&gt; pd&lt;/span&gt;\n&lt;span id=\"cb12-2\"&gt;&lt;a href=\"#cb12-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb12-3\"&gt;&lt;a href=\"#cb12-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;train_df &lt;span class=\"op\"&gt;=&lt;/span&gt; pd.DataFrame(data[&lt;span class=\"st\"&gt;&quot;train&quot;&lt;/span&gt;])&lt;/span&gt;\n&lt;span id=\"cb12-4\"&gt;&lt;a href=\"#cb12-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;test_df &lt;span class=\"op\"&gt;=&lt;/span&gt; pd.DataFrame(data[&lt;span class=\"st\"&gt;&quot;dev&quot;&lt;/span&gt;])&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-22\" class=\"cell\" data-execution_count=\"410\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb13\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb13-1\"&gt;&lt;a href=\"#cb13-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;# Flatten features to remove the indexing gymnastics&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb13-2\"&gt;&lt;a href=\"#cb13-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;train_flat_df &lt;span class=\"op\"&gt;=&lt;/span&gt; pd.concat(&lt;/span&gt;\n&lt;span id=\"cb13-3\"&gt;&lt;a href=\"#cb13-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    [&lt;/span&gt;\n&lt;span id=\"cb13-4\"&gt;&lt;a href=\"#cb13-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        train_df.drop([&lt;span class=\"st\"&gt;&quot;doc&quot;&lt;/span&gt;, &lt;span class=\"st\"&gt;&quot;dialogue&quot;&lt;/span&gt;, &lt;span class=\"st\"&gt;&quot;features&quot;&lt;/span&gt;], axis&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"dv\"&gt;1&lt;/span&gt;),&lt;/span&gt;\n&lt;span id=\"cb13-5\"&gt;&lt;a href=\"#cb13-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        train_df[&lt;span class=\"st\"&gt;&quot;doc&quot;&lt;/span&gt;].&lt;span class=\"bu\"&gt;apply&lt;/span&gt;(pd.Series).add_prefix(&lt;span class=\"st\"&gt;&quot;doc_&quot;&lt;/span&gt;),&lt;/span&gt;\n&lt;span id=\"cb13-6\"&gt;&lt;a href=\"#cb13-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        train_df[&lt;span class=\"st\"&gt;&quot;dialogue&quot;&lt;/span&gt;].&lt;span class=\"bu\"&gt;apply&lt;/span&gt;(pd.Series).add_prefix(&lt;span class=\"st\"&gt;&quot;dialogue_&quot;&lt;/span&gt;),&lt;/span&gt;\n&lt;span id=\"cb13-7\"&gt;&lt;a href=\"#cb13-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        train_df[&lt;span class=\"st\"&gt;&quot;features&quot;&lt;/span&gt;].&lt;span class=\"bu\"&gt;apply&lt;/span&gt;(pd.Series).add_prefix(&lt;span class=\"st\"&gt;&quot;features_&quot;&lt;/span&gt;),&lt;/span&gt;\n&lt;span id=\"cb13-8\"&gt;&lt;a href=\"#cb13-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    ],&lt;/span&gt;\n&lt;span id=\"cb13-9\"&gt;&lt;a href=\"#cb13-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    axis&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"dv\"&gt;1&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb13-10\"&gt;&lt;a href=\"#cb13-10\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;)&lt;/span&gt;\n&lt;span id=\"cb13-11\"&gt;&lt;a href=\"#cb13-11\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb13-12\"&gt;&lt;a href=\"#cb13-12\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;test_flat_df &lt;span class=\"op\"&gt;=&lt;/span&gt; pd.concat(&lt;/span&gt;\n&lt;span id=\"cb13-13\"&gt;&lt;a href=\"#cb13-13\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    [&lt;/span&gt;\n&lt;span id=\"cb13-14\"&gt;&lt;a href=\"#cb13-14\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        test_df.drop([&lt;span class=\"st\"&gt;&quot;doc&quot;&lt;/span&gt;, &lt;span class=\"st\"&gt;&quot;dialogue&quot;&lt;/span&gt;, &lt;span class=\"st\"&gt;&quot;features&quot;&lt;/span&gt;], axis&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"dv\"&gt;1&lt;/span&gt;),&lt;/span&gt;\n&lt;span id=\"cb13-15\"&gt;&lt;a href=\"#cb13-15\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        test_df[&lt;span class=\"st\"&gt;&quot;doc&quot;&lt;/span&gt;].&lt;span class=\"bu\"&gt;apply&lt;/span&gt;(pd.Series).add_prefix(&lt;span class=\"st\"&gt;&quot;doc_&quot;&lt;/span&gt;),&lt;/span&gt;\n&lt;span id=\"cb13-16\"&gt;&lt;a href=\"#cb13-16\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        test_df[&lt;span class=\"st\"&gt;&quot;dialogue&quot;&lt;/span&gt;].&lt;span class=\"bu\"&gt;apply&lt;/span&gt;(pd.Series).add_prefix(&lt;span class=\"st\"&gt;&quot;dialogue_&quot;&lt;/span&gt;),&lt;/span&gt;\n&lt;span id=\"cb13-17\"&gt;&lt;a href=\"#cb13-17\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        test_df[&lt;span class=\"st\"&gt;&quot;features&quot;&lt;/span&gt;].&lt;span class=\"bu\"&gt;apply&lt;/span&gt;(pd.Series).add_prefix(&lt;span class=\"st\"&gt;&quot;features_&quot;&lt;/span&gt;),&lt;/span&gt;\n&lt;span id=\"cb13-18\"&gt;&lt;a href=\"#cb13-18\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    ],&lt;/span&gt;\n&lt;span id=\"cb13-19\"&gt;&lt;a href=\"#cb13-19\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    axis&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"dv\"&gt;1&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb13-20\"&gt;&lt;a href=\"#cb13-20\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-23\" class=\"cell\" data-execution_count=\"411\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb14\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb14-1\"&gt;&lt;a href=\"#cb14-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;train_flat_df.head()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;div class=\"cell-output cell-output-display\" data-execution_count=\"411\"&gt;\n&lt;div&gt;\n&lt;div&gt;\n&lt;style scoped&gt;\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n&lt;/style&gt;\n\n&lt;table class=\"dataframe\" data-quarto-postprocess=\"true\" data-border=\"1\"&gt;\n&lt;thead&gt;\n&lt;tr class=\"header\" style=\"text-align: right;\"&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;id&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;doc_pre_text&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;doc_post_text&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;doc_table&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;dialogue_conv_questions&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;dialogue_conv_answers&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;dialogue_turn_program&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;dialogue_executed_answers&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;dialogue_qa_split&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;features_num_dialogue_turns&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;features_has_type2_question&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;features_has_duplicate_columns&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;features_has_non_numeric_values&lt;/th&gt;\n&lt;/tr&gt;\n&lt;/thead&gt;\n&lt;tbody&gt;\n&lt;tr class=\"odd\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;0&lt;/td&gt;\n&lt;td&gt;Single_JKHY/2009/page_28.pdf-3&lt;/td&gt;\n&lt;td&gt;26 | 2009 annual report in fiscal 2008 , revenues in the credit un...&lt;/td&gt;\n&lt;td&gt;year ended june 30 , cash provided by operations increased $ 25587...&lt;/td&gt;\n&lt;td&gt;{'Year ended June 30, 2009': {'net income': 103102.0, 'non-cash ex...&lt;/td&gt;\n&lt;td&gt;[what is the net cash from operating activities in 2009?, what abo...&lt;/td&gt;\n&lt;td&gt;[206588, 181001, 25587, 14.1%]&lt;/td&gt;\n&lt;td&gt;[206588, 181001, subtract(206588, 181001), subtract(206588, 181001...&lt;/td&gt;\n&lt;td&gt;[206588.0, 181001.0, 25587.0, 0.14136]&lt;/td&gt;\n&lt;td&gt;[False, False, False, False]&lt;/td&gt;\n&lt;td&gt;4&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"even\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;1&lt;/td&gt;\n&lt;td&gt;Single_RSG/2008/page_114.pdf-2&lt;/td&gt;\n&lt;td&gt;substantially all of the goodwill and other intangible assets reco...&lt;/td&gt;\n&lt;td&gt;the above unaudited pro forma financial information includes adjus...&lt;/td&gt;\n&lt;td&gt;{'year ended december 31 2008 ( unaudited )': {'revenue': 9362.2, ...&lt;/td&gt;\n&lt;td&gt;[what were revenues in 2008?, what were they in 2007?, what was th...&lt;/td&gt;\n&lt;td&gt;[9362.2, 9244.9, 117.3, 1.3%]&lt;/td&gt;\n&lt;td&gt;[9362.2, 9244.9, subtract(9362.2, 9244.9), subtract(9362.2, 9244.9...&lt;/td&gt;\n&lt;td&gt;[9362.2, 9244.9, 117.3, 0.01269]&lt;/td&gt;\n&lt;td&gt;[False, False, False, False]&lt;/td&gt;\n&lt;td&gt;4&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"odd\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;2&lt;/td&gt;\n&lt;td&gt;Single_AAPL/2002/page_23.pdf-1&lt;/td&gt;\n&lt;td&gt;in a new business model such as the retail segment is inherently r...&lt;/td&gt;\n&lt;td&gt;.&lt;/td&gt;\n&lt;td&gt;{'2002': {'net sales': 5742.0, 'cost of sales': 4139.0, 'gross mar...&lt;/td&gt;\n&lt;td&gt;[what was the total of net sales in 2001?, and what was that in 20...&lt;/td&gt;\n&lt;td&gt;[5363, 7983, -2620, -32%]&lt;/td&gt;\n&lt;td&gt;[5363, 7983, subtract(5363, 7983), subtract(5363, 7983), divide(#0...&lt;/td&gt;\n&lt;td&gt;[5363.0, 7983.0, -2620.0, -0.3282]&lt;/td&gt;\n&lt;td&gt;[False, False, False, False]&lt;/td&gt;\n&lt;td&gt;4&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"even\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;3&lt;/td&gt;\n&lt;td&gt;Single_UPS/2009/page_33.pdf-2&lt;/td&gt;\n&lt;td&gt;( 1 ) includes shares repurchased through our publicly announced s...&lt;/td&gt;\n&lt;td&gt;.&lt;/td&gt;\n&lt;td&gt;{'12/31/04': {'united parcel service inc .': 100.0, 's&amp;p 500 index...&lt;/td&gt;\n&lt;td&gt;[what was the change in the performance of the united parcel servi...&lt;/td&gt;\n&lt;td&gt;[-24.05, -24.05%, 102.11, 2.11, 2.11%, -26.16%]&lt;/td&gt;\n&lt;td&gt;[subtract(75.95, const_100), subtract(75.95, const_100), divide(#0...&lt;/td&gt;\n&lt;td&gt;[-24.05, -0.2405, 102.11, 2.11, 0.0211, -0.2616]&lt;/td&gt;\n&lt;td&gt;[False, False, False, False, False, False]&lt;/td&gt;\n&lt;td&gt;6&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"odd\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;4&lt;/td&gt;\n&lt;td&gt;Double_UPS/2009/page_33.pdf&lt;/td&gt;\n&lt;td&gt;( 1 ) includes shares repurchased through our publicly announced s...&lt;/td&gt;\n&lt;td&gt;.&lt;/td&gt;\n&lt;td&gt;{'12/31/04': {'united parcel service inc .': 100.0, 's&amp;p 500 index...&lt;/td&gt;\n&lt;td&gt;[what was the fluctuation of the performance price of the ups from...&lt;/td&gt;\n&lt;td&gt;[-8.94, -8.9%, -24.05, -24.05%, 2.11, 2.11%, -26.16%]&lt;/td&gt;\n&lt;td&gt;[subtract(91.06, const_100), subtract(91.06, const_100), divide(#0...&lt;/td&gt;\n&lt;td&gt;[-8.94, -0.0894, -24.05, -0.2405, 2.11, 0.0211, -0.2616]&lt;/td&gt;\n&lt;td&gt;[False, False, True, True, True, True, True]&lt;/td&gt;\n&lt;td&gt;7&lt;/td&gt;\n&lt;td&gt;True&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/tbody&gt;\n&lt;/table&gt;\n\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-24\" class=\"cell\" data-execution_count=\"412\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb15\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb15-1\"&gt;&lt;a href=\"#cb15-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;easy_train_ids &lt;span class=\"op\"&gt;=&lt;/span&gt; pd.read_json(&lt;span class=\"st\"&gt;&quot;./splits/easy_train.jsonl&quot;&lt;/span&gt;, lines&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb15-2\"&gt;&lt;a href=\"#cb15-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;easy_valid_ids &lt;span class=\"op\"&gt;=&lt;/span&gt; pd.read_json(&lt;span class=\"st\"&gt;&quot;./splits/easy_valid.jsonl&quot;&lt;/span&gt;, lines&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb15-3\"&gt;&lt;a href=\"#cb15-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;easy_test_ids &lt;span class=\"op\"&gt;=&lt;/span&gt; pd.read_json(&lt;span class=\"st\"&gt;&quot;./splits/easy_test.jsonl&quot;&lt;/span&gt;, lines&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb15-4\"&gt;&lt;a href=\"#cb15-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb15-5\"&gt;&lt;a href=\"#cb15-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;medium_train_ids &lt;span class=\"op\"&gt;=&lt;/span&gt; pd.read_json(&lt;span class=\"st\"&gt;&quot;./splits/medium_train.jsonl&quot;&lt;/span&gt;, lines&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb15-6\"&gt;&lt;a href=\"#cb15-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;medium_valid_ids &lt;span class=\"op\"&gt;=&lt;/span&gt; pd.read_json(&lt;span class=\"st\"&gt;&quot;./splits/medium_valid.jsonl&quot;&lt;/span&gt;, lines&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb15-7\"&gt;&lt;a href=\"#cb15-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;medium_test_ids &lt;span class=\"op\"&gt;=&lt;/span&gt; pd.read_json(&lt;span class=\"st\"&gt;&quot;./splits/medium_test.jsonl&quot;&lt;/span&gt;, lines&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb15-8\"&gt;&lt;a href=\"#cb15-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb15-9\"&gt;&lt;a href=\"#cb15-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;hard_train_ids &lt;span class=\"op\"&gt;=&lt;/span&gt; pd.read_json(&lt;span class=\"st\"&gt;&quot;./splits/hard_train.jsonl&quot;&lt;/span&gt;, lines&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb15-10\"&gt;&lt;a href=\"#cb15-10\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;hard_valid_ids &lt;span class=\"op\"&gt;=&lt;/span&gt; pd.read_json(&lt;span class=\"st\"&gt;&quot;./splits/hard_valid.jsonl&quot;&lt;/span&gt;, lines&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb15-11\"&gt;&lt;a href=\"#cb15-11\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;hard_test_ids &lt;span class=\"op\"&gt;=&lt;/span&gt; pd.read_json(&lt;span class=\"st\"&gt;&quot;./splits/hard_test.jsonl&quot;&lt;/span&gt;, lines&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb15-12\"&gt;&lt;a href=\"#cb15-12\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb15-13\"&gt;&lt;a href=\"#cb15-13\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;easy_train_df &lt;span class=\"op\"&gt;=&lt;/span&gt; train_flat_df[train_flat_df[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;].isin(easy_train_ids[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;])].copy()&lt;/span&gt;\n&lt;span id=\"cb15-14\"&gt;&lt;a href=\"#cb15-14\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;easy_valid_df &lt;span class=\"op\"&gt;=&lt;/span&gt; train_flat_df[train_flat_df[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;].isin(easy_valid_ids[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;])].copy()&lt;/span&gt;\n&lt;span id=\"cb15-15\"&gt;&lt;a href=\"#cb15-15\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;easy_test_df &lt;span class=\"op\"&gt;=&lt;/span&gt; test_flat_df[test_flat_df[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;].isin(easy_test_ids[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;])].copy()&lt;/span&gt;\n&lt;span id=\"cb15-16\"&gt;&lt;a href=\"#cb15-16\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb15-17\"&gt;&lt;a href=\"#cb15-17\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;medium_train_df &lt;span class=\"op\"&gt;=&lt;/span&gt; train_flat_df[train_flat_df[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;].isin(medium_train_ids[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;])].copy()&lt;/span&gt;\n&lt;span id=\"cb15-18\"&gt;&lt;a href=\"#cb15-18\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;medium_valid_df &lt;span class=\"op\"&gt;=&lt;/span&gt; train_flat_df[train_flat_df[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;].isin(medium_valid_ids[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;])].copy()&lt;/span&gt;\n&lt;span id=\"cb15-19\"&gt;&lt;a href=\"#cb15-19\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;medium_test_df &lt;span class=\"op\"&gt;=&lt;/span&gt; test_flat_df[test_flat_df[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;].isin(medium_test_ids[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;])].copy()&lt;/span&gt;\n&lt;span id=\"cb15-20\"&gt;&lt;a href=\"#cb15-20\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb15-21\"&gt;&lt;a href=\"#cb15-21\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;hard_train_df &lt;span class=\"op\"&gt;=&lt;/span&gt; train_flat_df[train_flat_df[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;].isin(hard_train_ids[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;])].copy()&lt;/span&gt;\n&lt;span id=\"cb15-22\"&gt;&lt;a href=\"#cb15-22\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;hard_valid_df &lt;span class=\"op\"&gt;=&lt;/span&gt; train_flat_df[train_flat_df[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;].isin(hard_valid_ids[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;])].copy()&lt;/span&gt;\n&lt;span id=\"cb15-23\"&gt;&lt;a href=\"#cb15-23\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;hard_test_df &lt;span class=\"op\"&gt;=&lt;/span&gt; test_flat_df[test_flat_df[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;].isin(hard_test_ids[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;])].copy()&lt;/span&gt;\n&lt;span id=\"cb15-24\"&gt;&lt;a href=\"#cb15-24\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb15-25\"&gt;&lt;a href=\"#cb15-25\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"cf\"&gt;assert&lt;/span&gt; easy_train_ids.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;] &lt;span class=\"op\"&gt;==&lt;/span&gt; easy_train_df.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;]&lt;/span&gt;\n&lt;span id=\"cb15-26\"&gt;&lt;a href=\"#cb15-26\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"cf\"&gt;assert&lt;/span&gt; easy_valid_ids.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;] &lt;span class=\"op\"&gt;==&lt;/span&gt; easy_valid_df.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;]&lt;/span&gt;\n&lt;span id=\"cb15-27\"&gt;&lt;a href=\"#cb15-27\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"cf\"&gt;assert&lt;/span&gt; easy_test_ids.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;] &lt;span class=\"op\"&gt;==&lt;/span&gt; easy_test_df.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;]&lt;/span&gt;\n&lt;span id=\"cb15-28\"&gt;&lt;a href=\"#cb15-28\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"cf\"&gt;assert&lt;/span&gt; medium_train_ids.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;] &lt;span class=\"op\"&gt;==&lt;/span&gt; medium_train_df.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;]&lt;/span&gt;\n&lt;span id=\"cb15-29\"&gt;&lt;a href=\"#cb15-29\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"cf\"&gt;assert&lt;/span&gt; medium_valid_ids.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;] &lt;span class=\"op\"&gt;==&lt;/span&gt; medium_valid_df.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;]&lt;/span&gt;\n&lt;span id=\"cb15-30\"&gt;&lt;a href=\"#cb15-30\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"cf\"&gt;assert&lt;/span&gt; medium_test_ids.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;] &lt;span class=\"op\"&gt;==&lt;/span&gt; medium_test_df.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;]&lt;/span&gt;\n&lt;span id=\"cb15-31\"&gt;&lt;a href=\"#cb15-31\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"cf\"&gt;assert&lt;/span&gt; hard_train_ids.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;] &lt;span class=\"op\"&gt;==&lt;/span&gt; hard_train_df.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;]&lt;/span&gt;\n&lt;span id=\"cb15-32\"&gt;&lt;a href=\"#cb15-32\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"cf\"&gt;assert&lt;/span&gt; hard_valid_ids.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;] &lt;span class=\"op\"&gt;==&lt;/span&gt; hard_valid_df.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;]&lt;/span&gt;\n&lt;span id=\"cb15-33\"&gt;&lt;a href=\"#cb15-33\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"cf\"&gt;assert&lt;/span&gt; hard_test_ids.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;] &lt;span class=\"op\"&gt;==&lt;/span&gt; hard_test_df.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-25\" class=\"cell\" data-execution_count=\"413\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb16\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb16-1\"&gt;&lt;a href=\"#cb16-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;easy_train_examples &lt;span class=\"op\"&gt;=&lt;/span&gt; to_turn_examples(easy_train_df)&lt;/span&gt;\n&lt;span id=\"cb16-2\"&gt;&lt;a href=\"#cb16-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;easy_valid_examples &lt;span class=\"op\"&gt;=&lt;/span&gt; to_turn_examples(easy_valid_df)&lt;/span&gt;\n&lt;span id=\"cb16-3\"&gt;&lt;a href=\"#cb16-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;easy_test_examples &lt;span class=\"op\"&gt;=&lt;/span&gt; to_turn_examples(easy_test_df)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-26\" class=\"cell\" data-execution_count=\"414\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb17\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb17-1\"&gt;&lt;a href=\"#cb17-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"bu\"&gt;len&lt;/span&gt;(easy_train_examples &lt;span class=\"op\"&gt;+&lt;/span&gt; easy_valid_examples)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;div class=\"cell-output cell-output-display\" data-execution_count=\"414\"&gt;\n&lt;pre&gt;&lt;code&gt;852&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;We will used DSPy’s &lt;code&gt;Evaluate&lt;/code&gt; class to run our evals in parallel(internally, this is just implemented via threads)&lt;/p&gt;\n&lt;p&gt;To ensure our setup works as expected, we will run a simple test first.&lt;/p&gt;\n&lt;div id=\"cell-29\" class=\"cell\" data-execution_count=\"419\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb19\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb19-1\"&gt;&lt;a href=\"#cb19-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;from&lt;/span&gt; dspy.evaluate &lt;span class=\"im\"&gt;import&lt;/span&gt; Evaluate&lt;/span&gt;\n&lt;span id=\"cb19-2\"&gt;&lt;a href=\"#cb19-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb19-3\"&gt;&lt;a href=\"#cb19-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;evaluator &lt;span class=\"op\"&gt;=&lt;/span&gt; Evaluate(&lt;/span&gt;\n&lt;span id=\"cb19-4\"&gt;&lt;a href=\"#cb19-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    devset&lt;span class=\"op\"&gt;=&lt;/span&gt;easy_valid_examples[:&lt;span class=\"dv\"&gt;10&lt;/span&gt;],&lt;/span&gt;\n&lt;span id=\"cb19-5\"&gt;&lt;a href=\"#cb19-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    num_threads&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"dv\"&gt;32&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb19-6\"&gt;&lt;a href=\"#cb19-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    display_progress&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb19-7\"&gt;&lt;a href=\"#cb19-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    display_table&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb19-8\"&gt;&lt;a href=\"#cb19-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    provide_traceback&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb19-9\"&gt;&lt;a href=\"#cb19-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    return_all_scores&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb19-10\"&gt;&lt;a href=\"#cb19-10\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    return_outputs&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb19-11\"&gt;&lt;a href=\"#cb19-11\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;)&lt;/span&gt;\n&lt;span id=\"cb19-12\"&gt;&lt;a href=\"#cb19-12\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb19-13\"&gt;&lt;a href=\"#cb19-13\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb19-14\"&gt;&lt;a href=\"#cb19-14\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;from&lt;/span&gt; copy &lt;span class=\"im\"&gt;import&lt;/span&gt; deepcopy&lt;/span&gt;\n&lt;span id=\"cb19-15\"&gt;&lt;a href=\"#cb19-15\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb19-16\"&gt;&lt;a href=\"#cb19-16\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;tlm &lt;span class=\"op\"&gt;=&lt;/span&gt; deepcopy(lm_oai_gpt_4_1)&lt;/span&gt;\n&lt;span id=\"cb19-17\"&gt;&lt;a href=\"#cb19-17\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;tlm.cache &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"va\"&gt;False&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb19-18\"&gt;&lt;a href=\"#cb19-18\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb19-19\"&gt;&lt;a href=\"#cb19-19\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;# &lt;/span&gt;&lt;span class=\"al\"&gt;HACK&lt;/span&gt;&lt;span class=\"co\"&gt;: Weird bug in dspy where the context doesn&#39;t set the cache to False, causing answers to be returned from memory. I&#39;ve found that creating a deepcopy and setting the attribute manually fixes this.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb19-20\"&gt;&lt;a href=\"#cb19-20\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"cf\"&gt;with&lt;/span&gt; dspy.context(lm&lt;span class=\"op\"&gt;=&lt;/span&gt;tlm) &lt;span class=\"im\"&gt;as&lt;/span&gt; ctx:&lt;/span&gt;\n&lt;span id=\"cb19-21\"&gt;&lt;a href=\"#cb19-21\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    evaluator(TurnSolver(reasoning_lm&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;False&lt;/span&gt;), metric&lt;span class=\"op\"&gt;=&lt;/span&gt;turn_em_metric)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;div class=\"cell-output cell-output-stdout\"&gt;\n&lt;pre&gt;&lt;code&gt;Average Metric: 8.00 / 10 (80.0%): 100%|██████████| 10/10 [00:02&lt;00:00,  3.48it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/a5433773d6ef4e359825412ad138c520\n🧪 View experiment at: http://localhost:5000/#/experiments/1&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-stderr\"&gt;\n&lt;pre&gt;&lt;code&gt;2025/07/28 18:18:42 INFO dspy.evaluate.evaluate: Average Metric: 8.0 / 10 (80.0%)&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;div&gt;\n&lt;div&gt;\n&lt;style scoped&gt;\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n&lt;/style&gt;\n\n&lt;table class=\"dataframe\" data-quarto-postprocess=\"true\" data-border=\"1\"&gt;\n&lt;thead&gt;\n&lt;tr class=\"header\" style=\"text-align: right;\"&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;conversation_context&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;evidence_snippets&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;table&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;question&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;id&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;doc_pre_text&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;doc_post_text&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;doc_table&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;dialogue_conv_questions&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;dialogue_conv_answers&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;...&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;dialogue_executed_answers&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;dialogue_qa_split&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;features_num_dialogue_turns&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;features_has_type2_question&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;features_has_duplicate_columns&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;features_has_non_numeric_values&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;example_answer&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;ops&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;pred_answer&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;turn_em_metric&lt;/th&gt;\n&lt;/tr&gt;\n&lt;/thead&gt;\n&lt;tbody&gt;\n&lt;tr class=\"odd\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;0&lt;/td&gt;\n&lt;td&gt;None&lt;/td&gt;\n&lt;td&gt;[PRE] entergy corporation and subsidiaries management's financial ...&lt;/td&gt;\n&lt;td&gt;| Row | 2009 net revenue | volume/weather | retail electric price ...&lt;/td&gt;\n&lt;td&gt;what was the difference in net revenue between 2009 and 2010?&lt;/td&gt;\n&lt;td&gt;Single_ETR/2011/page_22.pdf-3&lt;/td&gt;\n&lt;td&gt;entergy corporation and subsidiaries management's financial discus...&lt;/td&gt;\n&lt;td&gt;the volume/weather variance is primarily due to an increase of 836...&lt;/td&gt;\n&lt;td&gt;{'amount ( in millions )': {'2009 net revenue': 4694.0, 'volume/we...&lt;/td&gt;\n&lt;td&gt;['what was the difference in net revenue between 2009 and 2010?', ...&lt;/td&gt;\n&lt;td&gt;[357, 4694, 7.61%]&lt;/td&gt;\n&lt;td&gt;...&lt;/td&gt;\n&lt;td&gt;[357.0, 4694.0, 0.07605]&lt;/td&gt;\n&lt;td&gt;[False, False, False]&lt;/td&gt;\n&lt;td&gt;3&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;357.00000&lt;/td&gt;\n&lt;td&gt;subtract(2010 net revenue, 2009 net revenue)&lt;/td&gt;\n&lt;td&gt;357.0&lt;/td&gt;\n&lt;td&gt;✔️ [1.000]&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"even\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;1&lt;/td&gt;\n&lt;td&gt;Q1: what was the difference in net revenue between 2009 and 2010?\\...&lt;/td&gt;\n&lt;td&gt;[PRE] entergy corporation and subsidiaries management's financial ...&lt;/td&gt;\n&lt;td&gt;| Row | 2009 net revenue | volume/weather | retail electric price ...&lt;/td&gt;\n&lt;td&gt;and the specific value for 2009 again?&lt;/td&gt;\n&lt;td&gt;Single_ETR/2011/page_22.pdf-3&lt;/td&gt;\n&lt;td&gt;entergy corporation and subsidiaries management's financial discus...&lt;/td&gt;\n&lt;td&gt;the volume/weather variance is primarily due to an increase of 836...&lt;/td&gt;\n&lt;td&gt;{'amount ( in millions )': {'2009 net revenue': 4694.0, 'volume/we...&lt;/td&gt;\n&lt;td&gt;['what was the difference in net revenue between 2009 and 2010?', ...&lt;/td&gt;\n&lt;td&gt;[357, 4694, 7.61%]&lt;/td&gt;\n&lt;td&gt;...&lt;/td&gt;\n&lt;td&gt;[357.0, 4694.0, 0.07605]&lt;/td&gt;\n&lt;td&gt;[False, False, False]&lt;/td&gt;\n&lt;td&gt;3&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;4694.00000&lt;/td&gt;\n&lt;td&gt;4694.0&lt;/td&gt;\n&lt;td&gt;4694.0&lt;/td&gt;\n&lt;td&gt;✔️ [1.000]&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"odd\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;2&lt;/td&gt;\n&lt;td&gt;Q1: what was the difference in net revenue between 2009 and 2010?\\...&lt;/td&gt;\n&lt;td&gt;[PRE] entergy corporation and subsidiaries management's financial ...&lt;/td&gt;\n&lt;td&gt;| Row | 2009 net revenue | volume/weather | retail electric price ...&lt;/td&gt;\n&lt;td&gt;so what was the percentage change during this time?&lt;/td&gt;\n&lt;td&gt;Single_ETR/2011/page_22.pdf-3&lt;/td&gt;\n&lt;td&gt;entergy corporation and subsidiaries management's financial discus...&lt;/td&gt;\n&lt;td&gt;the volume/weather variance is primarily due to an increase of 836...&lt;/td&gt;\n&lt;td&gt;{'amount ( in millions )': {'2009 net revenue': 4694.0, 'volume/we...&lt;/td&gt;\n&lt;td&gt;['what was the difference in net revenue between 2009 and 2010?', ...&lt;/td&gt;\n&lt;td&gt;[357, 4694, 7.61%]&lt;/td&gt;\n&lt;td&gt;...&lt;/td&gt;\n&lt;td&gt;[357.0, 4694.0, 0.07605]&lt;/td&gt;\n&lt;td&gt;[False, False, False]&lt;/td&gt;\n&lt;td&gt;3&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;0.07605&lt;/td&gt;\n&lt;td&gt;subtract(5051.0, 4694.0), divide(#0, 4694.0), multiply(#1, const_100)&lt;/td&gt;\n&lt;td&gt;7.61&lt;/td&gt;\n&lt;td&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"even\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;3&lt;/td&gt;\n&lt;td&gt;None&lt;/td&gt;\n&lt;td&gt;[PRE] entergy new orleans , inc . management's financial discussio...&lt;/td&gt;\n&lt;td&gt;| Row | 2003 net revenue | base rates | volume/weather | 2004 defe...&lt;/td&gt;\n&lt;td&gt;what was the net revenue in 2004?&lt;/td&gt;\n&lt;td&gt;Single_ETR/2004/page_258.pdf-4&lt;/td&gt;\n&lt;td&gt;entergy new orleans , inc . management's financial discussion and ...&lt;/td&gt;\n&lt;td&gt;the increase in base rates was effective june 2003 . the rate incr...&lt;/td&gt;\n&lt;td&gt;{'( in millions )': {'2003 net revenue': 208.3, 'base rates': 10.6...&lt;/td&gt;\n&lt;td&gt;[what was the net revenue in 2004?, what was the net revenue in 20...&lt;/td&gt;\n&lt;td&gt;[239.0, 208.3, 30.7, 14.7%]&lt;/td&gt;\n&lt;td&gt;...&lt;/td&gt;\n&lt;td&gt;[239.0, 208.3, 30.7, 0.14738]&lt;/td&gt;\n&lt;td&gt;[False, False, False, False]&lt;/td&gt;\n&lt;td&gt;4&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;239.00000&lt;/td&gt;\n&lt;td&gt;None&lt;/td&gt;\n&lt;td&gt;239.0&lt;/td&gt;\n&lt;td&gt;✔️ [1.000]&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"odd\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;4&lt;/td&gt;\n&lt;td&gt;Q1: what was the net revenue in 2004?\\nA1: 239.0&lt;/td&gt;\n&lt;td&gt;[PRE] entergy new orleans , inc . management's financial discussio...&lt;/td&gt;\n&lt;td&gt;| Row | 2003 net revenue | base rates | volume/weather | 2004 defe...&lt;/td&gt;\n&lt;td&gt;what was the net revenue in 2003?&lt;/td&gt;\n&lt;td&gt;Single_ETR/2004/page_258.pdf-4&lt;/td&gt;\n&lt;td&gt;entergy new orleans , inc . management's financial discussion and ...&lt;/td&gt;\n&lt;td&gt;the increase in base rates was effective june 2003 . the rate incr...&lt;/td&gt;\n&lt;td&gt;{'( in millions )': {'2003 net revenue': 208.3, 'base rates': 10.6...&lt;/td&gt;\n&lt;td&gt;[what was the net revenue in 2004?, what was the net revenue in 20...&lt;/td&gt;\n&lt;td&gt;[239.0, 208.3, 30.7, 14.7%]&lt;/td&gt;\n&lt;td&gt;...&lt;/td&gt;\n&lt;td&gt;[239.0, 208.3, 30.7, 0.14738]&lt;/td&gt;\n&lt;td&gt;[False, False, False, False]&lt;/td&gt;\n&lt;td&gt;4&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;208.30000&lt;/td&gt;\n&lt;td&gt;None&lt;/td&gt;\n&lt;td&gt;208.3&lt;/td&gt;\n&lt;td&gt;✔️ [1.000]&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"even\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;5&lt;/td&gt;\n&lt;td&gt;Q1: what was the net revenue in 2004?\\nA1: 239.0\\nQ2: what was the...&lt;/td&gt;\n&lt;td&gt;[PRE] entergy new orleans , inc . management's financial discussio...&lt;/td&gt;\n&lt;td&gt;| Row | 2003 net revenue | base rates | volume/weather | 2004 defe...&lt;/td&gt;\n&lt;td&gt;what was the change in value?&lt;/td&gt;\n&lt;td&gt;Single_ETR/2004/page_258.pdf-4&lt;/td&gt;\n&lt;td&gt;entergy new orleans , inc . management's financial discussion and ...&lt;/td&gt;\n&lt;td&gt;the increase in base rates was effective june 2003 . the rate incr...&lt;/td&gt;\n&lt;td&gt;{'( in millions )': {'2003 net revenue': 208.3, 'base rates': 10.6...&lt;/td&gt;\n&lt;td&gt;[what was the net revenue in 2004?, what was the net revenue in 20...&lt;/td&gt;\n&lt;td&gt;[239.0, 208.3, 30.7, 14.7%]&lt;/td&gt;\n&lt;td&gt;...&lt;/td&gt;\n&lt;td&gt;[239.0, 208.3, 30.7, 0.14738]&lt;/td&gt;\n&lt;td&gt;[False, False, False, False]&lt;/td&gt;\n&lt;td&gt;4&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;30.70000&lt;/td&gt;\n&lt;td&gt;subtract(239.0, 208.3)&lt;/td&gt;\n&lt;td&gt;30.7&lt;/td&gt;\n&lt;td&gt;✔️ [1.000]&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"odd\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;6&lt;/td&gt;\n&lt;td&gt;Q1: what was the net revenue in 2004? A1: 239.0 Q2: what was the n...&lt;/td&gt;\n&lt;td&gt;[PRE] entergy new orleans , inc . management's financial discussio...&lt;/td&gt;\n&lt;td&gt;| Row | 2003 net revenue | base rates | volume/weather | 2004 defe...&lt;/td&gt;\n&lt;td&gt;what is the percent change?&lt;/td&gt;\n&lt;td&gt;Single_ETR/2004/page_258.pdf-4&lt;/td&gt;\n&lt;td&gt;entergy new orleans , inc . management's financial discussion and ...&lt;/td&gt;\n&lt;td&gt;the increase in base rates was effective june 2003 . the rate incr...&lt;/td&gt;\n&lt;td&gt;{'( in millions )': {'2003 net revenue': 208.3, 'base rates': 10.6...&lt;/td&gt;\n&lt;td&gt;[what was the net revenue in 2004?, what was the net revenue in 20...&lt;/td&gt;\n&lt;td&gt;[239.0, 208.3, 30.7, 14.7%]&lt;/td&gt;\n&lt;td&gt;...&lt;/td&gt;\n&lt;td&gt;[239.0, 208.3, 30.7, 0.14738]&lt;/td&gt;\n&lt;td&gt;[False, False, False, False]&lt;/td&gt;\n&lt;td&gt;4&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;0.14738&lt;/td&gt;\n&lt;td&gt;subtract(239.0, 208.3), divide(#0, 208.3), multiply(#1, 100)&lt;/td&gt;\n&lt;td&gt;14.72&lt;/td&gt;\n&lt;td&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"even\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;7&lt;/td&gt;\n&lt;td&gt;None&lt;/td&gt;\n&lt;td&gt;[PRE] nike , inc . notes to consolidated financial statements 2014...&lt;/td&gt;\n&lt;td&gt;| Row | severance and related costs | cash payments | non-cash sto...&lt;/td&gt;\n&lt;td&gt;what was the value of the sale of the starter brand?&lt;/td&gt;\n&lt;td&gt;Single_NKE/2009/page_81.pdf-1&lt;/td&gt;\n&lt;td&gt;nike , inc . notes to consolidated financial statements 2014 ( con...&lt;/td&gt;\n&lt;td&gt;the accrual balance as of may 31 , 2009 will be relieved throughou...&lt;/td&gt;\n&lt;td&gt;{'$ 2014': {'severance and related costs': 195.0, 'cash payments':...&lt;/td&gt;\n&lt;td&gt;['what was the value of the sale of the starter brand?', 'what was...&lt;/td&gt;\n&lt;td&gt;[60.0, 28.6, 31.4, 91%]&lt;/td&gt;\n&lt;td&gt;...&lt;/td&gt;\n&lt;td&gt;[60.0, 28.6, 31.4, 0.91083]&lt;/td&gt;\n&lt;td&gt;[False, False, False, False]&lt;/td&gt;\n&lt;td&gt;4&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;60.00000&lt;/td&gt;\n&lt;td&gt;None&lt;/td&gt;\n&lt;td&gt;60.0&lt;/td&gt;\n&lt;td&gt;✔️ [1.000]&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"odd\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;8&lt;/td&gt;\n&lt;td&gt;Q1: what was the value of the sale of the starter brand?\\nA1: 60.0&lt;/td&gt;\n&lt;td&gt;[PRE] nike , inc . notes to consolidated financial statements 2014...&lt;/td&gt;\n&lt;td&gt;| Row | severance and related costs | cash payments | non-cash sto...&lt;/td&gt;\n&lt;td&gt;what was the gain resulting from the sale?&lt;/td&gt;\n&lt;td&gt;Single_NKE/2009/page_81.pdf-1&lt;/td&gt;\n&lt;td&gt;nike , inc . notes to consolidated financial statements 2014 ( con...&lt;/td&gt;\n&lt;td&gt;the accrual balance as of may 31 , 2009 will be relieved throughou...&lt;/td&gt;\n&lt;td&gt;{'$ 2014': {'severance and related costs': 195.0, 'cash payments':...&lt;/td&gt;\n&lt;td&gt;['what was the value of the sale of the starter brand?', 'what was...&lt;/td&gt;\n&lt;td&gt;[60.0, 28.6, 31.4, 91%]&lt;/td&gt;\n&lt;td&gt;...&lt;/td&gt;\n&lt;td&gt;[60.0, 28.6, 31.4, 0.91083]&lt;/td&gt;\n&lt;td&gt;[False, False, False, False]&lt;/td&gt;\n&lt;td&gt;4&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;28.60000&lt;/td&gt;\n&lt;td&gt;None&lt;/td&gt;\n&lt;td&gt;28.6&lt;/td&gt;\n&lt;td&gt;✔️ [1.000]&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"even\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;9&lt;/td&gt;\n&lt;td&gt;Q1: what was the value of the sale of the starter brand?\\nA1: 60.0...&lt;/td&gt;\n&lt;td&gt;[PRE] nike , inc . notes to consolidated financial statements 2014...&lt;/td&gt;\n&lt;td&gt;| Row | severance and related costs | cash payments | non-cash sto...&lt;/td&gt;\n&lt;td&gt;what was the change in value?&lt;/td&gt;\n&lt;td&gt;Single_NKE/2009/page_81.pdf-1&lt;/td&gt;\n&lt;td&gt;nike , inc . notes to consolidated financial statements 2014 ( con...&lt;/td&gt;\n&lt;td&gt;the accrual balance as of may 31 , 2009 will be relieved throughou...&lt;/td&gt;\n&lt;td&gt;{'$ 2014': {'severance and related costs': 195.0, 'cash payments':...&lt;/td&gt;\n&lt;td&gt;['what was the value of the sale of the starter brand?', 'what was...&lt;/td&gt;\n&lt;td&gt;[60.0, 28.6, 31.4, 91%]&lt;/td&gt;\n&lt;td&gt;...&lt;/td&gt;\n&lt;td&gt;[60.0, 28.6, 31.4, 0.91083]&lt;/td&gt;\n&lt;td&gt;[False, False, False, False]&lt;/td&gt;\n&lt;td&gt;4&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;31.40000&lt;/td&gt;\n&lt;td&gt;subtract(60.0, 28.6)&lt;/td&gt;\n&lt;td&gt;31.4&lt;/td&gt;\n&lt;td&gt;✔️ [1.000]&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/tbody&gt;\n&lt;/table&gt;\n\n&lt;p&gt;10 rows × 21 columns&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n\n&lt;div&gt;\n  &lt;style scoped&gt;\n  button {\n    border: none;\n    border-radius: 4px;\n    background-color: rgb(34, 114, 180);\n    font-family: -apple-system, \"system-ui\", \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial;\n    font-size: 13px;\n    color: white;\n    margin-top: 8px;\n    margin-bottom: 8px;\n    padding: 8px 16px;\n    cursor: pointer;\n  }\n  button:hover {\n    background-color: rgb(66, 153, 224);\n  }\n  &lt;/style&gt;\n  &lt;button\n    onclick=\"\n        const display = this.nextElementSibling.style.display;\n        const isCollapsed = display === 'none';\n        this.nextElementSibling.style.display = isCollapsed ? null : 'none';\n\n        const verb = isCollapsed ? 'Collapse' : 'Expand';\n        this.innerText = `${verb} MLflow Trace`;\n    \"\n  &gt;Collapse MLflow Trace&lt;/button&gt;\n  &lt;iframe\n    id=\"trace-renderer\"\n    style=\"width: 100%; height: 500px; border: none; resize: vertical;\"\n    src=\"http://localhost:5000/static-files/lib/notebook-trace-renderer/index.html?trace_id=caea82d0bc0c4f0d800313b99bd69581&amp;experiment_id=1&amp;trace_id=ed4476c7920b49f3b2e909e88548e086&amp;experiment_id=1&amp;trace_id=6ba8b539ea0f49798599b294060d1213&amp;experiment_id=1&amp;trace_id=711aae8d07b14f619312af02495f941a&amp;experiment_id=1&amp;trace_id=fd97772c93064b3daf30f61009d81fe2&amp;experiment_id=1&amp;trace_id=5b665669eca649c9bd46b04a6f9737ad&amp;experiment_id=1&amp;trace_id=23be442a4d64413abe335a55bebe6a5a&amp;experiment_id=1&amp;trace_id=d057b5aed88a46fb8562a39db0ebd15d&amp;experiment_id=1&amp;trace_id=02f1ddeee02448f58babae2fb6afa3b9&amp;experiment_id=1&amp;trace_id=8e058d1aa41a4932a83c8f0505a867fd&amp;experiment_id=1&amp;version=3.1.4\"\n  /&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-30\" class=\"cell\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb22\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb22-1\"&gt;&lt;a href=\"#cb22-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;import&lt;/span&gt; random&lt;/span&gt;\n&lt;span id=\"cb22-2\"&gt;&lt;a href=\"#cb22-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb22-3\"&gt;&lt;a href=\"#cb22-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;random.seed(&lt;span class=\"dv\"&gt;42&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb22-4\"&gt;&lt;a href=\"#cb22-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb22-5\"&gt;&lt;a href=\"#cb22-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;bootstrap_rs_random_easy_subset &lt;span class=\"op\"&gt;=&lt;/span&gt; random.sample(easy_train_examples, &lt;span class=\"dv\"&gt;70&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-31\" class=\"cell\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb23\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb23-1\"&gt;&lt;a href=\"#cb23-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;import&lt;/span&gt; re&lt;/span&gt;\n&lt;span id=\"cb23-2\"&gt;&lt;a href=\"#cb23-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb23-3\"&gt;&lt;a href=\"#cb23-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;import&lt;/span&gt; litellm&lt;/span&gt;\n&lt;span id=\"cb23-4\"&gt;&lt;a href=\"#cb23-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;from&lt;/span&gt; dspy.teleprompt &lt;span class=\"im\"&gt;import&lt;/span&gt; BootstrapFewShotWithRandomSearch&lt;/span&gt;\n&lt;span id=\"cb23-5\"&gt;&lt;a href=\"#cb23-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb23-6\"&gt;&lt;a href=\"#cb23-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;# Config needed to prevent the optimizer from using _unsupported_ temperature&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb23-7\"&gt;&lt;a href=\"#cb23-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;# for reasoning models.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb23-8\"&gt;&lt;a href=\"#cb23-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;litellm.drop_params &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"va\"&gt;True&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb23-9\"&gt;&lt;a href=\"#cb23-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb23-10\"&gt;&lt;a href=\"#cb23-10\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb23-11\"&gt;&lt;a href=\"#cb23-11\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;config &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"bu\"&gt;dict&lt;/span&gt;(&lt;/span&gt;\n&lt;span id=\"cb23-12\"&gt;&lt;a href=\"#cb23-12\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    max_bootstrapped_demos&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"dv\"&gt;3&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb23-13\"&gt;&lt;a href=\"#cb23-13\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    max_labeled_demos&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"dv\"&gt;2&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb23-14\"&gt;&lt;a href=\"#cb23-14\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    num_candidate_programs&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"dv\"&gt;5&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb23-15\"&gt;&lt;a href=\"#cb23-15\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    num_threads&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"dv\"&gt;32&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb23-16\"&gt;&lt;a href=\"#cb23-16\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    max_rounds&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"dv\"&gt;1&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb23-17\"&gt;&lt;a href=\"#cb23-17\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;)&lt;/span&gt;\n&lt;span id=\"cb23-18\"&gt;&lt;a href=\"#cb23-18\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb23-19\"&gt;&lt;a href=\"#cb23-19\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;bootstrap_rs_easy_compiled_programs &lt;span class=\"op\"&gt;=&lt;/span&gt; []&lt;/span&gt;\n&lt;span id=\"cb23-20\"&gt;&lt;a href=\"#cb23-20\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb23-21\"&gt;&lt;a href=\"#cb23-21\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"cf\"&gt;with&lt;/span&gt; mlflow.start_run(run_name&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;bootstrap_few_shot_rs_easy&quot;&lt;/span&gt;):&lt;/span&gt;\n&lt;span id=\"cb23-22\"&gt;&lt;a href=\"#cb23-22\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;for&lt;/span&gt; candidate_lm &lt;span class=\"kw\"&gt;in&lt;/span&gt; selected_llms:&lt;/span&gt;\n&lt;span id=\"cb23-23\"&gt;&lt;a href=\"#cb23-23\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        run_name &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"ss\"&gt;f&quot;bootstrap_few_shot_rs_&lt;/span&gt;&lt;span class=\"sc\"&gt;{&lt;/span&gt;candidate_lm&lt;span class=\"sc\"&gt;.&lt;/span&gt;model&lt;span class=\"sc\"&gt;.&lt;/span&gt;replace(&lt;span class=\"st\"&gt;&#39;/&#39;&lt;/span&gt;, &lt;span class=\"st\"&gt;&#39;_&#39;&lt;/span&gt;)&lt;span class=\"sc\"&gt;}&lt;/span&gt;&lt;span class=\"ss\"&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb23-24\"&gt;&lt;a href=\"#cb23-24\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        sanitized_run_name &lt;span class=\"op\"&gt;=&lt;/span&gt; re.sub(&lt;span class=\"vs\"&gt;r&quot;[^a-zA-Z0-9_\\-]&quot;&lt;/span&gt;, &lt;span class=\"st\"&gt;&quot;_&quot;&lt;/span&gt;, run_name)&lt;/span&gt;\n&lt;span id=\"cb23-25\"&gt;&lt;a href=\"#cb23-25\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;with&lt;/span&gt; mlflow.start_run(run_name&lt;span class=\"op\"&gt;=&lt;/span&gt;sanitized_run_name, nested&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;):&lt;/span&gt;\n&lt;span id=\"cb23-26\"&gt;&lt;a href=\"#cb23-26\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            &lt;span class=\"cf\"&gt;with&lt;/span&gt; dspy.context(lm&lt;span class=\"op\"&gt;=&lt;/span&gt;candidate_lm) &lt;span class=\"im\"&gt;as&lt;/span&gt; ctx:&lt;/span&gt;\n&lt;span id=\"cb23-27\"&gt;&lt;a href=\"#cb23-27\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                teleprompter &lt;span class=\"op\"&gt;=&lt;/span&gt; BootstrapFewShotWithRandomSearch(&lt;/span&gt;\n&lt;span id=\"cb23-28\"&gt;&lt;a href=\"#cb23-28\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                    metric&lt;span class=\"op\"&gt;=&lt;/span&gt;turn_em_metric, &lt;span class=\"op\"&gt;**&lt;/span&gt;config&lt;/span&gt;\n&lt;span id=\"cb23-29\"&gt;&lt;a href=\"#cb23-29\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                )&lt;/span&gt;\n&lt;span id=\"cb23-30\"&gt;&lt;a href=\"#cb23-30\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                optimized_program &lt;span class=\"op\"&gt;=&lt;/span&gt; teleprompter.&lt;span class=\"bu\"&gt;compile&lt;/span&gt;(&lt;/span&gt;\n&lt;span id=\"cb23-31\"&gt;&lt;a href=\"#cb23-31\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                    dspy.ChainOfThought(SolveTurnWithReasoning),&lt;/span&gt;\n&lt;span id=\"cb23-32\"&gt;&lt;a href=\"#cb23-32\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                    trainset&lt;span class=\"op\"&gt;=&lt;/span&gt;bootstrap_rs_random_easy_subset,&lt;/span&gt;\n&lt;span id=\"cb23-33\"&gt;&lt;a href=\"#cb23-33\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                )&lt;/span&gt;\n&lt;span id=\"cb23-34\"&gt;&lt;a href=\"#cb23-34\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                bootstrap_rs_easy_compiled_programs.append(optimized_program)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;div class=\"cell-output cell-output-stdout\"&gt;\n&lt;pre&gt;&lt;code&gt;Going to sample between 1 and 3 traces per predictor.\nWill attempt to bootstrap 5 candidate sets.\nAverage Metric: 45.00 / 70 (64.3%): 100%|██████████| 70/70 [00:00&lt;00:00, 87.74it/s] \n🏃 View run eval_0 at: http://localhost:5000/#/experiments/3/runs/fcce9b07d50e41609bc04c3d9c2235c7\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nNew best score: 64.29 for seed -3\nScores so far: [64.29]\nBest score so far: 64.29\n  0%|          | 0/70 [00:00&lt;?, ?it/s]Average Metric: 26.00 / 38 (68.4%):  53%|█████▎    | 37/70 [00:00&lt;00:00, 82.89it/s]Average Metric: 46.00 / 70 (65.7%): 100%|██████████| 70/70 [00:00&lt;00:00, 76.35it/s]\n🏃 View run eval_1 at: http://localhost:5000/#/experiments/3/runs/7575401319f442499f871ca8d849bfd1\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nNew best score: 65.71 for seed -2\nScores so far: [64.29, 65.71]\nBest score so far: 65.71\nBootstrapped 3 full traces after 6 examples for up to 1 rounds, amounting to 6 attempts.\nAverage Metric: 47.00 / 70 (67.1%): 100%|██████████| 70/70 [00:01&lt;00:00, 62.67it/s]\n🏃 View run eval_2 at: http://localhost:5000/#/experiments/3/runs/3406309f3f0a4041a580021eaf5eff13\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nNew best score: 67.14 for seed -1\nScores so far: [64.29, 65.71, 67.14]\nBest score so far: 67.14\nBootstrapped 2 full traces after 2 examples for up to 1 rounds, amounting to 2 attempts.\nAverage Metric: 48.00 / 70 (68.6%): 100%|██████████| 70/70 [00:01&lt;00:00, 52.08it/s]\n🏃 View run eval_3 at: http://localhost:5000/#/experiments/3/runs/8cad7a93fb494289a4d6691d5796f84e\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nNew best score: 68.57 for seed 0\nScores so far: [64.29, 65.71, 67.14, 68.57]\nBest score so far: 68.57\nBootstrapped 1 full traces after 1 examples for up to 1 rounds, amounting to 1 attempts.\nAverage Metric: 46.00 / 70 (65.7%): 100%|██████████| 70/70 [00:01&lt;00:00, 54.10it/s]\n🏃 View run eval_4 at: http://localhost:5000/#/experiments/3/runs/ab8c076e18394080bbf9634eeff7af35\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nScores so far: [64.29, 65.71, 67.14, 68.57, 65.71]\nBest score so far: 68.57\nBootstrapped 1 full traces after 1 examples for up to 1 rounds, amounting to 1 attempts.\nAverage Metric: 45.00 / 70 (64.3%): 100%|██████████| 70/70 [00:01&lt;00:00, 44.09it/s]\n🏃 View run eval_5 at: http://localhost:5000/#/experiments/3/runs/679c914720674946a877f4a6a91665ee\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nScores so far: [64.29, 65.71, 67.14, 68.57, 65.71, 64.29]\nBest score so far: 68.57\nBootstrapped 1 full traces after 1 examples for up to 1 rounds, amounting to 1 attempts.\nAverage Metric: 47.00 / 70 (67.1%): 100%|██████████| 70/70 [00:01&lt;00:00, 61.09it/s]\n🏃 View run eval_6 at: http://localhost:5000/#/experiments/3/runs/ab818ec11652430b9bd68e17dc197665\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nScores so far: [64.29, 65.71, 67.14, 68.57, 65.71, 64.29, 67.14]\nBest score so far: 68.57\nBootstrapped 1 full traces after 1 examples for up to 1 rounds, amounting to 1 attempts.\nAverage Metric: 51.00 / 70 (72.9%): 100%|██████████| 70/70 [00:01&lt;00:00, 51.33it/s]\n🏃 View run eval_7 at: http://localhost:5000/#/experiments/3/runs/f9f17e61c1334a9ea6903ae3a1105fd8\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nNew best score: 72.86 for seed 4\nScores so far: [64.29, 65.71, 67.14, 68.57, 65.71, 64.29, 67.14, 72.86]\nBest score so far: 72.86\n8 candidate programs found.\n🏃 View run bootstrap_few_shot_rs_openai_o4-mini-2025-04-16 at: http://localhost:5000/#/experiments/3/runs/b08500752c9041d5acccbc261bd33931\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nGoing to sample between 1 and 3 traces per predictor.\nWill attempt to bootstrap 5 candidate sets.\n  0%|          | 0/70 [00:00&lt;?, ?it/s]Average Metric: 43.00 / 70 (61.4%): 100%|██████████| 70/70 [00:01&lt;00:00, 48.03it/s]\n🏃 View run eval_0 at: http://localhost:5000/#/experiments/3/runs/578a2f04172f4ecbb41d04350201b2d5\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nNew best score: 61.43 for seed -3\nScores so far: [61.43]\nBest score so far: 61.43\n  0%|          | 0/70 [00:00&lt;?, ?it/s]Average Metric: 29.00 / 42 (69.0%):  59%|█████▊    | 41/70 [00:01&lt;00:00, 32.19it/s]Average Metric: 35.00 / 51 (68.6%):  71%|███████▏  | 50/70 [00:01&lt;00:00, 42.39it/s]Average Metric: 47.00 / 70 (67.1%): 100%|██████████| 70/70 [00:01&lt;00:00, 43.35it/s]\n🏃 View run eval_1 at: http://localhost:5000/#/experiments/3/runs/cf868ddb4c5945149422186e878e4ee8\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nNew best score: 67.14 for seed -2\nScores so far: [61.43, 67.14]\nBest score so far: 67.14\nBootstrapped 3 full traces after 6 examples for up to 1 rounds, amounting to 6 attempts.\nAverage Metric: 46.00 / 70 (65.7%): 100%|██████████| 70/70 [00:01&lt;00:00, 65.12it/s]\n🏃 View run eval_2 at: http://localhost:5000/#/experiments/3/runs/a83ba7facae34ee2b495fd0bcb478044\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nScores so far: [61.43, 67.14, 65.71]\nBest score so far: 67.14\nBootstrapped 2 full traces after 2 examples for up to 1 rounds, amounting to 2 attempts.\nAverage Metric: 46.00 / 70 (65.7%): 100%|██████████| 70/70 [00:01&lt;00:00, 36.63it/s]\n🏃 View run eval_3 at: http://localhost:5000/#/experiments/3/runs/343b2f8e893044da9a9bee74f6be8853\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nScores so far: [61.43, 67.14, 65.71, 65.71]\nBest score so far: 67.14\nBootstrapped 1 full traces after 1 examples for up to 1 rounds, amounting to 1 attempts.\nAverage Metric: 45.00 / 70 (64.3%): 100%|██████████| 70/70 [00:01&lt;00:00, 37.96it/s]\n🏃 View run eval_4 at: http://localhost:5000/#/experiments/3/runs/3ad1f0eea05b4d7b88e7c47e2c0c29ab\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nScores so far: [61.43, 67.14, 65.71, 65.71, 64.29]\nBest score so far: 67.14\nBootstrapped 1 full traces after 1 examples for up to 1 rounds, amounting to 1 attempts.\nAverage Metric: 47.00 / 70 (67.1%): 100%|██████████| 70/70 [00:01&lt;00:00, 35.34it/s]\n🏃 View run eval_5 at: http://localhost:5000/#/experiments/3/runs/29b7cf7738bc47d89e81309a65595be0\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nScores so far: [61.43, 67.14, 65.71, 65.71, 64.29, 67.14]\nBest score so far: 67.14\nBootstrapped 1 full traces after 1 examples for up to 1 rounds, amounting to 1 attempts.\nAverage Metric: 48.00 / 70 (68.6%): 100%|██████████| 70/70 [00:02&lt;00:00, 31.53it/s]\n🏃 View run eval_6 at: http://localhost:5000/#/experiments/3/runs/d3a6322d0555421784dbb34087099455\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nNew best score: 68.57 for seed 3\nScores so far: [61.43, 67.14, 65.71, 65.71, 64.29, 67.14, 68.57]\nBest score so far: 68.57\nBootstrapped 1 full traces after 1 examples for up to 1 rounds, amounting to 1 attempts.\nAverage Metric: 60.00 / 70 (85.7%): 100%|██████████| 70/70 [00:02&lt;00:00, 28.22it/s] \n🏃 View run eval_7 at: http://localhost:5000/#/experiments/3/runs/93c1cafdbb6b440699788970eb6ffa88\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nNew best score: 85.71 for seed 4\nScores so far: [61.43, 67.14, 65.71, 65.71, 64.29, 67.14, 68.57, 85.71]\nBest score so far: 85.71\n8 candidate programs found.\n🏃 View run bootstrap_few_shot_rs_gemini_gemini-2_5-flash at: http://localhost:5000/#/experiments/3/runs/621ba195ed244875a4370e2050418a06\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nGoing to sample between 1 and 3 traces per predictor.\nWill attempt to bootstrap 5 candidate sets.\n  0%|          | 0/70 [00:00&lt;?, ?it/s]Average Metric: 22.00 / 29 (75.9%):  40%|████      | 28/70 [00:00&lt;00:00, 71.01it/s]Average Metric: 36.00 / 49 (73.5%):  69%|██████▊   | 48/70 [00:01&lt;00:00, 69.84it/s]Average Metric: 52.00 / 70 (74.3%): 100%|██████████| 70/70 [00:01&lt;00:00, 37.98it/s]\n🏃 View run eval_0 at: http://localhost:5000/#/experiments/3/runs/377a453f2e0745e38fc89508f7ab1d26\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nNew best score: 74.29 for seed -3\nScores so far: [74.29]\nBest score so far: 74.29\n  0%|          | 0/70 [00:00&lt;?, ?it/s]Average Metric: 1.00 / 4 (25.0%):   4%|▍         | 3/70 [00:00&lt;00:17,  3.91it/s] Average Metric: 5.00 / 8 (62.5%):  10%|█         | 7/70 [00:00&lt;00:16,  3.91it/s]Average Metric: 13.00 / 16 (81.2%):  23%|██▎       | 16/70 [00:00&lt;00:01, 39.80it/s]Average Metric: 30.00 / 41 (73.2%):  57%|█████▋    | 40/70 [00:01&lt;00:01, 17.35it/s]Average Metric: 33.00 / 44 (75.0%):  61%|██████▏   | 43/70 [00:01&lt;00:01, 17.35it/s]Average Metric: 52.00 / 70 (74.3%): 100%|██████████| 70/70 [00:01&lt;00:00, 36.77it/s]\n🏃 View run eval_1 at: http://localhost:5000/#/experiments/3/runs/d9e37616e88748d8890de6056370f801\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nScores so far: [74.29, 74.29]\nBest score so far: 74.29\nBootstrapped 3 full traces after 4 examples for up to 1 rounds, amounting to 4 attempts.\nAverage Metric: 52.00 / 70 (74.3%): 100%|██████████| 70/70 [00:01&lt;00:00, 35.80it/s]\n🏃 View run eval_2 at: http://localhost:5000/#/experiments/3/runs/7bfc22c9728f4862931e5bb8bf4d379e\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nScores so far: [74.29, 74.29, 74.29]\nBest score so far: 74.29\nBootstrapped 2 full traces after 2 examples for up to 1 rounds, amounting to 2 attempts.\nAverage Metric: 43.00 / 53 (81.1%):  76%|███████▌  | 53/70 [00:22&lt;00:09,  1.74it/s] Average Metric: 50.00 / 68 (73.5%):  97%|█████████▋| 68/70 [00:55&lt;00:04,  2.16s/it]Average Metric: 51.00 / 70 (72.9%): 100%|██████████| 70/70 [01:56&lt;00:00,  1.66s/it]\n🏃 View run eval_3 at: http://localhost:5000/#/experiments/3/runs/7cc38c776c8c40ad983a78690454b768\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nScores so far: [74.29, 74.29, 74.29, 72.86]\nBest score so far: 74.29\nBootstrapped 1 full traces after 1 examples for up to 1 rounds, amounting to 1 attempts.\nAverage Metric: 34.00 / 37 (91.9%):  53%|█████▎    | 37/70 [00:16&lt;00:15,  2.18it/s] Average Metric: 49.00 / 62 (79.0%):  89%|████████▊ | 62/70 [00:33&lt;00:07,  1.03it/s]Average Metric: 52.00 / 70 (74.3%): 100%|██████████| 70/70 [00:52&lt;00:00,  1.34it/s]\n🏃 View run eval_4 at: http://localhost:5000/#/experiments/3/runs/3d4799840b5145f38c55cd04a510b4eb\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nScores so far: [74.29, 74.29, 74.29, 72.86, 74.29]\nBest score so far: 74.29\nBootstrapped 1 full traces after 1 examples for up to 1 rounds, amounting to 1 attempts.\nAverage Metric: 53.00 / 70 (75.7%): 100%|██████████| 70/70 [00:49&lt;00:00,  1.41it/s] \n🏃 View run eval_5 at: http://localhost:5000/#/experiments/3/runs/826af9f09c4e4410b2b21424430e67f1\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nNew best score: 75.71 for seed 2\nScores so far: [74.29, 74.29, 74.29, 72.86, 74.29, 75.71]\nBest score so far: 75.71\nBootstrapped 1 full traces after 1 examples for up to 1 rounds, amounting to 1 attempts.\nAverage Metric: 44.00 / 48 (91.7%):  69%|██████▊   | 48/70 [00:18&lt;00:08,  2.53it/s] Average Metric: 53.00 / 70 (75.7%): 100%|██████████| 70/70 [01:02&lt;00:00,  1.13it/s]\n🏃 View run eval_6 at: http://localhost:5000/#/experiments/3/runs/a029e23cfbe14b92a2ba6ce26146642b\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nScores so far: [74.29, 74.29, 74.29, 72.86, 74.29, 75.71, 75.71]\nBest score so far: 75.71\nBootstrapped 1 full traces after 1 examples for up to 1 rounds, amounting to 1 attempts.\nAverage Metric: 56.00 / 70 (80.0%): 100%|██████████| 70/70 [00:44&lt;00:00,  1.58it/s] \n🏃 View run eval_7 at: http://localhost:5000/#/experiments/3/runs/861f0c753b754e6a8eb3372287edd9bc\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nNew best score: 80.0 for seed 4\nScores so far: [74.29, 74.29, 74.29, 72.86, 74.29, 75.71, 75.71, 80.0]\nBest score so far: 80.0\n8 candidate programs found.\n🏃 View run bootstrap_few_shot_rs_openai_o3-2025-04-16 at: http://localhost:5000/#/experiments/3/runs/8576b067ea60468ebc37cda1a17be1dc\n🧪 View experiment at: http://localhost:5000/#/experiments/3\n🏃 View run bootstrap_few_shot_rs_easy at: http://localhost:5000/#/experiments/3/runs/b5f08a070a634f74888fb8c42f24bfa3\n🧪 View experiment at: http://localhost:5000/#/experiments/3&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-stderr\"&gt;\n&lt;pre&gt;&lt;code&gt;2025/07/29 01:03:08 INFO dspy.evaluate.evaluate: Average Metric: 45.0 / 70 (64.3%)\n2025/07/29 01:03:08 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:03:08 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:03:09 INFO dspy.evaluate.evaluate: Average Metric: 46.0 / 70 (65.7%)\n  4%|▍         | 3/70 [00:00&lt;00:04, 13.83it/s]2025/07/29 01:03:09 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n  9%|▊         | 6/70 [00:00&lt;00:03, 16.05it/s]\n2025/07/29 01:03:11 INFO dspy.evaluate.evaluate: Average Metric: 47.0 / 70 (67.1%)\n  3%|▎         | 2/70 [00:00&lt;00:02, 32.62it/s]\n2025/07/29 01:03:12 INFO dspy.evaluate.evaluate: Average Metric: 48.0 / 70 (68.6%)\n  1%|▏         | 1/70 [00:00&lt;00:03, 18.44it/s]\n2025/07/29 01:03:15 INFO dspy.evaluate.evaluate: Average Metric: 46.0 / 70 (65.7%)\n  1%|▏         | 1/70 [00:00&lt;00:02, 24.59it/s]\n2025/07/29 01:03:17 INFO dspy.evaluate.evaluate: Average Metric: 45.0 / 70 (64.3%)\n  1%|▏         | 1/70 [00:00&lt;00:12,  5.70it/s]\n2025/07/29 01:03:19 INFO dspy.evaluate.evaluate: Average Metric: 47.0 / 70 (67.1%)\n  1%|▏         | 1/70 [00:00&lt;00:02, 28.38it/s]\n2025/07/29 01:03:21 INFO dspy.evaluate.evaluate: Average Metric: 51.0 / 70 (72.9%)\n2025/07/29 01:03:21 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:03:22 INFO dspy.evaluate.evaluate: Average Metric: 43.0 / 70 (61.4%)\n2025/07/29 01:03:23 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:03:24 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:03:24 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:03:24 INFO dspy.evaluate.evaluate: Average Metric: 47.0 / 70 (67.1%)\n  9%|▊         | 6/70 [00:00&lt;00:03, 16.98it/s]\n2025/07/29 01:03:27 INFO dspy.evaluate.evaluate: Average Metric: 46.0 / 70 (65.7%)\n  3%|▎         | 2/70 [00:00&lt;00:03, 21.93it/s]\n2025/07/29 01:03:30 INFO dspy.evaluate.evaluate: Average Metric: 46.0 / 70 (65.7%)\n  1%|▏         | 1/70 [00:00&lt;00:02, 28.87it/s]\n2025/07/29 01:03:32 INFO dspy.evaluate.evaluate: Average Metric: 45.0 / 70 (64.3%)\n  1%|▏         | 1/70 [00:00&lt;00:02, 25.21it/s]\n2025/07/29 01:03:34 INFO dspy.evaluate.evaluate: Average Metric: 47.0 / 70 (67.1%)\n  1%|▏         | 1/70 [00:00&lt;00:10,  6.34it/s]\n2025/07/29 01:03:38 INFO dspy.evaluate.evaluate: Average Metric: 48.0 / 70 (68.6%)\n  1%|▏         | 1/70 [00:00&lt;00:05, 13.59it/s]\n2025/07/29 01:03:41 INFO dspy.evaluate.evaluate: Average Metric: 60.0 / 70 (85.7%)\n2025/07/29 01:03:42 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:03:42 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:03:42 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:03:43 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:03:43 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:03:44 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:03:44 INFO dspy.evaluate.evaluate: Average Metric: 52.0 / 70 (74.3%)\n2025/07/29 01:03:44 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:03:45 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:03:45 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:03:45 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:03:46 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:03:46 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:03:46 INFO dspy.evaluate.evaluate: Average Metric: 52.0 / 70 (74.3%)\n  6%|▌         | 4/70 [00:00&lt;00:04, 15.37it/s]\n2025/07/29 01:03:49 INFO dspy.evaluate.evaluate: Average Metric: 52.0 / 70 (74.3%)\n  3%|▎         | 2/70 [00:12&lt;06:55,  6.11s/it]\n2025/07/29 01:04:25 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:05:26 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:05:59 INFO dspy.evaluate.evaluate: Average Metric: 51.0 / 70 (72.9%)\n  1%|▏         | 1/70 [00:05&lt;06:47,  5.90s/it]\n2025/07/29 01:06:22 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:06:40 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:06:57 INFO dspy.evaluate.evaluate: Average Metric: 52.0 / 70 (74.3%)\n  1%|▏         | 1/70 [00:03&lt;04:04,  3.55s/it]\n2025/07/29 01:07:51 INFO dspy.evaluate.evaluate: Average Metric: 53.0 / 70 (75.7%)\n  1%|▏         | 1/70 [00:05&lt;06:22,  5.54s/it]\n2025/07/29 01:08:16 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:08:59 INFO dspy.evaluate.evaluate: Average Metric: 53.0 / 70 (75.7%)\n  1%|▏         | 1/70 [00:04&lt;04:43,  4.11s/it]\n2025/07/29 01:09:48 INFO dspy.evaluate.evaluate: Average Metric: 56.0 / 70 (80.0%)&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"9aa596c147174804958bfd90f9e69998\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"2fac575b2f714ab3a5f079b5b8c068e7\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"9352e516d8b848579ba0d22b01c35fb2\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"dd46b6737ed8418484d64e9cef39a594\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"19d7fe20fa6b4fb7bb39768109a6e96f\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"d9ac51afacd244629a94d3d29cc78260\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"71a5a9849439471b90be1451f4ed6d8c\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"795ab895387b4c0e9eac571ee453ac88\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"650c0bd2cb2a4041bdf156931c25130c\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"f16c05df32404d64b8a8431d48d39234\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"0479a155634a4c4ba4d92bebca0b0727\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"ea69ff24378d45a3998851b5aa0962d4\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"8b8c7a6497d04213a381c037724d4895\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"bc397a6b03924336bbc43a1bd839784c\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"d43544d6f72f40dbaae08ad6b18cb0bd\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"4e7c85dbd6f64f61a359ea5a37c40ed0\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"6913487151e04ab7a89037c30da2cfd7\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"cf6a3e6ba2a646a093455efcf2d34a65\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"102094c059e84577861cd1271f22e414\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"d5351ffa3e234f7f92c3f1932b3dd438\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"d3e11c2f024d4ec090827c250d4258ca\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"3cff124f59634e5b9279882b0501180a\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"043eb11fea0a462684dac9bbb48f4f03\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"e694033bfb9e4689bd6c07fc39d0801c\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"db37866855a049b88bb7e4c9dd3597c6\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"93fd5af0c6644afc978088bc68e1ee83\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"5aa8485009e94f079807723d8dbc5ab2\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"e5cce25e5c7941d6bf6a39bcd3c76bf8\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"f90ceb161810483ab7c0fb2a38dd46e4\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"4d26bd076e4845b193dfa48d40f9e51b\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"2bceaac3cdcd48a0b05bc0f5e0c884a5\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"ab959aa00cf145d0984217e3c543fcd0\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"7a19b204ef7443e3964026a61386dbf3\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"0944c174ba5d4b7f888c2c78316eeb67\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"f58455aed23543369dda147cdcc46ee6\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"6f9faa0b381e48b4a3239439f9b5c8a0\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"14d1357491a342a6b3cbb1a778076b69\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"3146876614a146569534ee1e0cef7f86\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"36e21760751a482c874fbc57b485e178\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n\n&lt;div&gt;\n  &lt;style scoped&gt;\n  button {\n    border: none;\n    border-radius: 4px;\n    background-color: rgb(34, 114, 180);\n    font-family: -apple-system, \"system-ui\", \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial;\n    font-size: 13px;\n    color: white;\n    margin-top: 8px;\n    margin-bottom: 8px;\n    padding: 8px 16px;\n    cursor: pointer;\n  }\n  button:hover {\n    background-color: rgb(66, 153, 224);\n  }\n  &lt;/style&gt;\n  &lt;button\n    onclick=\"\n        const display = this.nextElementSibling.style.display;\n        const isCollapsed = display === 'none';\n        this.nextElementSibling.style.display = isCollapsed ? null : 'none';\n\n        const verb = isCollapsed ? 'Collapse' : 'Expand';\n        this.innerText = `${verb} MLflow Trace`;\n    \"\n  &gt;Collapse MLflow Trace&lt;/button&gt;\n  &lt;iframe\n    id=\"trace-renderer\"\n    style=\"width: 100%; height: 500px; border: none; resize: vertical;\"\n    src=\"http://localhost:5000/static-files/lib/notebook-trace-renderer/index.html?trace_id=bc6ccffd18824246934194a85933d3fd&amp;experiment_id=3&amp;trace_id=e37a0ba10d0543bb908e397933697d6d&amp;experiment_id=3&amp;trace_id=b37797a381b44f7eb13e1f42eca0567c&amp;experiment_id=3&amp;trace_id=9a18ced106784364ae12831ce45a8748&amp;experiment_id=3&amp;trace_id=3d7bb8edeb78492bac5473d6e52c4846&amp;experiment_id=3&amp;trace_id=d42d241ebb9e40b1affe006598cae983&amp;experiment_id=3&amp;trace_id=344ea0c049b946e8b780a9e02d720688&amp;experiment_id=3&amp;trace_id=4cac19ef64574b50b38d4baf81b360d5&amp;experiment_id=3&amp;trace_id=c4ca77588233486e9d234e95aa976329&amp;experiment_id=3&amp;trace_id=c9921423c3aa4f16933885eb15242313&amp;experiment_id=3&amp;version=3.1.4\"\n  /&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;From the above, it looks like GPT-4.1 gives an score of 80% on the validation set, WITHOUT ANY PROMPT ENGINEERING/FEW-SHOT PROMPTING. This is great!&lt;/p&gt;\n&lt;p&gt;As mentioned earlier, due to cost and time constraints, we want to first narrow down the list of models we want to test on the harder stages.&lt;/p&gt;\n&lt;p&gt;As a recap, our implementation strategy here will be as follows: instead of just using the performance of the models on the “easy” validation set, we will use a combination of two datasets:&lt;/p&gt;\n&lt;ol type=\"1\"&gt;\n&lt;li&gt;Gate - 50 Easy dialogs, teacher - forced. Drop model if Turn-EM &lt; 0.55.&lt;/li&gt;\n&lt;li&gt;Probe - 30-dialog mixed micro-set (15 Medium + 15 Hard, closed loop). Keep model only if Final-Turn EM ≥ 0.35, Dialogue-mean EM ≥ 0.35&lt;/li&gt;\n&lt;/ol&gt;\n&lt;p&gt;We will now create our “gate” and “probe” datasets.&lt;/p&gt;\n&lt;div id=\"cell-33\" class=\"cell\" data-execution_count=\"420\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb26\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb26-1\"&gt;&lt;a href=\"#cb26-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;gate_ids &lt;span class=\"op\"&gt;=&lt;/span&gt; easy_valid_ids.sample(&lt;span class=\"dv\"&gt;50&lt;/span&gt;, random_state&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"dv\"&gt;42&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb26-2\"&gt;&lt;a href=\"#cb26-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;probe_medium_ids &lt;span class=\"op\"&gt;=&lt;/span&gt; medium_valid_ids.sample(&lt;span class=\"dv\"&gt;15&lt;/span&gt;, random_state&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"dv\"&gt;42&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb26-3\"&gt;&lt;a href=\"#cb26-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;probe_hard_ids &lt;span class=\"op\"&gt;=&lt;/span&gt; hard_valid_ids.sample(&lt;span class=\"dv\"&gt;30&lt;/span&gt;, random_state&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"dv\"&gt;42&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb26-4\"&gt;&lt;a href=\"#cb26-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb26-5\"&gt;&lt;a href=\"#cb26-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;gate_df &lt;span class=\"op\"&gt;=&lt;/span&gt; easy_valid_df[easy_valid_df[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;].isin(gate_ids[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;])].copy()&lt;/span&gt;\n&lt;span id=\"cb26-6\"&gt;&lt;a href=\"#cb26-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;probe_df &lt;span class=\"op\"&gt;=&lt;/span&gt; pd.concat(&lt;/span&gt;\n&lt;span id=\"cb26-7\"&gt;&lt;a href=\"#cb26-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    [&lt;/span&gt;\n&lt;span id=\"cb26-8\"&gt;&lt;a href=\"#cb26-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        medium_valid_df[medium_valid_df[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;].isin(probe_medium_ids[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;])],&lt;/span&gt;\n&lt;span id=\"cb26-9\"&gt;&lt;a href=\"#cb26-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        hard_valid_df[hard_valid_df[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;].isin(probe_hard_ids[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;])],&lt;/span&gt;\n&lt;span id=\"cb26-10\"&gt;&lt;a href=\"#cb26-10\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    ]&lt;/span&gt;\n&lt;span id=\"cb26-11\"&gt;&lt;a href=\"#cb26-11\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;).copy()&lt;/span&gt;\n&lt;span id=\"cb26-12\"&gt;&lt;a href=\"#cb26-12\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb26-13\"&gt;&lt;a href=\"#cb26-13\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"cf\"&gt;assert&lt;/span&gt; gate_df.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;] &lt;span class=\"op\"&gt;==&lt;/span&gt; gate_ids.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;]&lt;/span&gt;\n&lt;span id=\"cb26-14\"&gt;&lt;a href=\"#cb26-14\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"cf\"&gt;assert&lt;/span&gt; probe_df.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;] &lt;span class=\"op\"&gt;==&lt;/span&gt; probe_medium_ids.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;] &lt;span class=\"op\"&gt;+&lt;/span&gt; probe_hard_ids.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;]&lt;/span&gt;\n&lt;span id=\"cb26-15\"&gt;&lt;a href=\"#cb26-15\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb26-16\"&gt;&lt;a href=\"#cb26-16\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;gate_examples &lt;span class=\"op\"&gt;=&lt;/span&gt; to_turn_examples(gate_df, history_mode&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;teacher&quot;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb26-17\"&gt;&lt;a href=\"#cb26-17\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;probe_examples &lt;span class=\"op\"&gt;=&lt;/span&gt; to_turn_examples(probe_df, history_mode&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;teacher&quot;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;/div&gt;\n&lt;p&gt;We will also save the &lt;code&gt;gate&lt;/code&gt; and &lt;code&gt;probe&lt;/code&gt; dataset ids, to compare performance of different models on them.&lt;/p&gt;\n&lt;div id=\"cell-35\" class=\"cell\" data-execution_count=\"500\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb27\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb27-1\"&gt;&lt;a href=\"#cb27-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;import&lt;/span&gt; os&lt;/span&gt;\n&lt;span id=\"cb27-2\"&gt;&lt;a href=\"#cb27-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb27-3\"&gt;&lt;a href=\"#cb27-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;os.makedirs(&lt;span class=\"st\"&gt;&quot;validation_datasets&quot;&lt;/span&gt;, exist_ok&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb27-4\"&gt;&lt;a href=\"#cb27-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb27-5\"&gt;&lt;a href=\"#cb27-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;gate_ids.to_json(&lt;span class=\"st\"&gt;&quot;validation_datasets/gate_ids.jsonl&quot;&lt;/span&gt;, orient&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;records&quot;&lt;/span&gt;, lines&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb27-6\"&gt;&lt;a href=\"#cb27-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;probe_medium_ids.to_json(&lt;/span&gt;\n&lt;span id=\"cb27-7\"&gt;&lt;a href=\"#cb27-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"st\"&gt;&quot;validation_datasets/probe_medium_ids.jsonl&quot;&lt;/span&gt;, orient&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;records&quot;&lt;/span&gt;, lines&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb27-8\"&gt;&lt;a href=\"#cb27-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;)&lt;/span&gt;\n&lt;span id=\"cb27-9\"&gt;&lt;a href=\"#cb27-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;probe_hard_ids.to_json(&lt;/span&gt;\n&lt;span id=\"cb27-10\"&gt;&lt;a href=\"#cb27-10\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"st\"&gt;&quot;validation_datasets/probe_hard_ids.jsonl&quot;&lt;/span&gt;, orient&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;records&quot;&lt;/span&gt;, lines&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb27-11\"&gt;&lt;a href=\"#cb27-11\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-36\" class=\"cell\" data-execution_count=\"421\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb28\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb28-1\"&gt;&lt;a href=\"#cb28-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;gate_examples[&lt;span class=\"dv\"&gt;0&lt;/span&gt;].toDict()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;div class=\"cell-output cell-output-display\" data-execution_count=\"421\"&gt;\n&lt;pre&gt;&lt;code&gt;{&#39;conversation_context&#39;: &#39;None&#39;,\n &#39;evidence_snippets&#39;: &quot;[PRE]\\nentergy corporation and subsidiaries management&#39;s financial discussion and analysis refer to 201cselected financial data - five-year comparison of entergy corporation and subsidiaries 201d which accompanies entergy corporation 2019s financial statements in this report for further information with respect to operating statistics . in november 2007 the board approved a plan to pursue a separation of entergy 2019s non-utility nuclear business from entergy through a spin-off of the business to entergy shareholders . in april 2010 , entergy announced that it planned to unwind the business infrastructure associated with the proposed spin-off transaction . as a result of the plan to unwind the business infrastructure , entergy recorded expenses in 2010 for the write-off of certain capitalized costs incurred in connection with the planned spin-off transaction . these costs are discussed in more detail below and throughout this section . net revenue utility following is an analysis of the change in net revenue comparing 2010 to 2009 . amount ( in millions ) .\\n[/PRE]\\n[POST]\\nthe volume/weather variance is primarily due to an increase of 8362 gwh , or 8% ( 8 % ) , in billed electricity usage in all retail sectors , including the effect on the residential sector of colder weather in the first quarter 2010 compared to 2009 and warmer weather in the second and third quarters 2010 compared to 2009 . the industrial sector reflected strong sales growth on continuing signs of economic recovery . the improvement in this sector was primarily driven by inventory restocking and strong exports with the chemicals , refining , and miscellaneous manufacturing sectors leading the improvement . the retail electric price variance is primarily due to : increases in the formula rate plan riders at entergy gulf states louisiana effective november 2009 , january 2010 , and september 2010 , at entergy louisiana effective november 2009 , and at entergy mississippi effective july 2009 ; a base rate increase at entergy arkansas effective july 2010 ; rate actions at entergy texas , including base rate increases effective in may and august 2010 ; a formula rate plan provision of $ 16.6 million recorded in the third quarter 2009 for refunds that were made to customers in accordance with settlements approved by the lpsc ; and the recovery in 2009 by entergy arkansas of 2008 extraordinary storm costs , as approved by the apsc , which ceased in january 2010 . the recovery of storm costs is offset in other operation and maintenance expenses . see note 2 to the financial statements for further discussion of the proceedings referred to above. .\\n[/POST]&quot;,\n &#39;table&#39;: &#39;| Row | 2009 net revenue | volume/weather | retail electric price | provision for regulatory proceedings | rough production cost equalization | ano decommissioning trust | fuel recovery | other | 2010 net revenue |\\n|---|---|---|---|---|---|---|---|---|---|\\n| amount ( in millions ) | 4694.0 | 231.0 | 137.0 | 26.0 | 19.0 | -24.0 | -44.0 | 12.0 | 5051.0 |&#39;,\n &#39;question&#39;: &#39;what was the difference in net revenue between 2009 and 2010?&#39;,\n &#39;id&#39;: &#39;Single_ETR/2011/page_22.pdf-3&#39;,\n &#39;doc_pre_text&#39;: &quot;entergy corporation and subsidiaries management&#39;s financial discussion and analysis refer to 201cselected financial data - five-year comparison of entergy corporation and subsidiaries 201d which accompanies entergy corporation 2019s financial statements in this report for further information with respect to operating statistics . in november 2007 the board approved a plan to pursue a separation of entergy 2019s non-utility nuclear business from entergy through a spin-off of the business to entergy shareholders . in april 2010 , entergy announced that it planned to unwind the business infrastructure associated with the proposed spin-off transaction . as a result of the plan to unwind the business infrastructure , entergy recorded expenses in 2010 for the write-off of certain capitalized costs incurred in connection with the planned spin-off transaction . these costs are discussed in more detail below and throughout this section . net revenue utility following is an analysis of the change in net revenue comparing 2010 to 2009 . amount ( in millions ) .&quot;,\n &#39;doc_post_text&#39;: &#39;the volume/weather variance is primarily due to an increase of 8362 gwh , or 8% ( 8 % ) , in billed electricity usage in all retail sectors , including the effect on the residential sector of colder weather in the first quarter 2010 compared to 2009 and warmer weather in the second and third quarters 2010 compared to 2009 . the industrial sector reflected strong sales growth on continuing signs of economic recovery . the improvement in this sector was primarily driven by inventory restocking and strong exports with the chemicals , refining , and miscellaneous manufacturing sectors leading the improvement . the retail electric price variance is primarily due to : increases in the formula rate plan riders at entergy gulf states louisiana effective november 2009 , january 2010 , and september 2010 , at entergy louisiana effective november 2009 , and at entergy mississippi effective july 2009 ; a base rate increase at entergy arkansas effective july 2010 ; rate actions at entergy texas , including base rate increases effective in may and august 2010 ; a formula rate plan provision of $ 16.6 million recorded in the third quarter 2009 for refunds that were made to customers in accordance with settlements approved by the lpsc ; and the recovery in 2009 by entergy arkansas of 2008 extraordinary storm costs , as approved by the apsc , which ceased in january 2010 . the recovery of storm costs is offset in other operation and maintenance expenses . see note 2 to the financial statements for further discussion of the proceedings referred to above. .&#39;,\n &#39;doc_table&#39;: {&#39;amount ( in millions )&#39;: {&#39;2009 net revenue&#39;: 4694.0,\n   &#39;volume/weather&#39;: 231.0,\n   &#39;retail electric price&#39;: 137.0,\n   &#39;provision for regulatory proceedings&#39;: 26.0,\n   &#39;rough production cost equalization&#39;: 19.0,\n   &#39;ano decommissioning trust&#39;: -24.0,\n   &#39;fuel recovery&#39;: -44.0,\n   &#39;other&#39;: 12.0,\n   &#39;2010 net revenue&#39;: 5051.0}},\n &#39;dialogue_conv_questions&#39;: [&#39;what was the difference in net revenue between 2009 and 2010?&#39;,\n  &#39;and the specific value for 2009 again?&#39;,\n  &#39;so what was the percentage change during this time?&#39;],\n &#39;dialogue_conv_answers&#39;: [&#39;357&#39;, &#39;4694&#39;, &#39;7.61%&#39;],\n &#39;dialogue_turn_program&#39;: [&#39;subtract(5051, 4694)&#39;,\n  &#39;4694&#39;,\n  &#39;subtract(5051, 4694), divide(#0, 4694)&#39;],\n &#39;dialogue_executed_answers&#39;: [357.0, 4694.0, 0.07605],\n &#39;dialogue_qa_split&#39;: [False, False, False],\n &#39;features_num_dialogue_turns&#39;: 3,\n &#39;features_has_type2_question&#39;: False,\n &#39;features_has_duplicate_columns&#39;: False,\n &#39;features_has_non_numeric_values&#39;: False,\n &#39;answer&#39;: 357.0}&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-37\" class=\"cell\" data-execution_count=\"422\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb30\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb30-1\"&gt;&lt;a href=\"#cb30-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;gate_examples[&lt;span class=\"dv\"&gt;0&lt;/span&gt;].inputs().toDict()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;div class=\"cell-output cell-output-display\" data-execution_count=\"422\"&gt;\n&lt;pre&gt;&lt;code&gt;{&#39;conversation_context&#39;: &#39;None&#39;,\n &#39;evidence_snippets&#39;: &quot;[PRE]\\nentergy corporation and subsidiaries management&#39;s financial discussion and analysis refer to 201cselected financial data - five-year comparison of entergy corporation and subsidiaries 201d which accompanies entergy corporation 2019s financial statements in this report for further information with respect to operating statistics . in november 2007 the board approved a plan to pursue a separation of entergy 2019s non-utility nuclear business from entergy through a spin-off of the business to entergy shareholders . in april 2010 , entergy announced that it planned to unwind the business infrastructure associated with the proposed spin-off transaction . as a result of the plan to unwind the business infrastructure , entergy recorded expenses in 2010 for the write-off of certain capitalized costs incurred in connection with the planned spin-off transaction . these costs are discussed in more detail below and throughout this section . net revenue utility following is an analysis of the change in net revenue comparing 2010 to 2009 . amount ( in millions ) .\\n[/PRE]\\n[POST]\\nthe volume/weather variance is primarily due to an increase of 8362 gwh , or 8% ( 8 % ) , in billed electricity usage in all retail sectors , including the effect on the residential sector of colder weather in the first quarter 2010 compared to 2009 and warmer weather in the second and third quarters 2010 compared to 2009 . the industrial sector reflected strong sales growth on continuing signs of economic recovery . the improvement in this sector was primarily driven by inventory restocking and strong exports with the chemicals , refining , and miscellaneous manufacturing sectors leading the improvement . the retail electric price variance is primarily due to : increases in the formula rate plan riders at entergy gulf states louisiana effective november 2009 , january 2010 , and september 2010 , at entergy louisiana effective november 2009 , and at entergy mississippi effective july 2009 ; a base rate increase at entergy arkansas effective july 2010 ; rate actions at entergy texas , including base rate increases effective in may and august 2010 ; a formula rate plan provision of $ 16.6 million recorded in the third quarter 2009 for refunds that were made to customers in accordance with settlements approved by the lpsc ; and the recovery in 2009 by entergy arkansas of 2008 extraordinary storm costs , as approved by the apsc , which ceased in january 2010 . the recovery of storm costs is offset in other operation and maintenance expenses . see note 2 to the financial statements for further discussion of the proceedings referred to above. .\\n[/POST]&quot;,\n &#39;table&#39;: &#39;| Row | 2009 net revenue | volume/weather | retail electric price | provision for regulatory proceedings | rough production cost equalization | ano decommissioning trust | fuel recovery | other | 2010 net revenue |\\n|---|---|---|---|---|---|---|---|---|---|\\n| amount ( in millions ) | 4694.0 | 231.0 | 137.0 | 26.0 | 19.0 | -24.0 | -44.0 | 12.0 | 5051.0 |&#39;,\n &#39;question&#39;: &#39;what was the difference in net revenue between 2009 and 2010?&#39;}&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;section id=\"gate-dataset-results\" class=\"level3\"&gt;\n&lt;h3&gt;Gate Dataset Results&lt;/h3&gt;\n&lt;div id=\"cell-39\" class=\"cell\" data-execution_count=\"423\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb32\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb32-1\"&gt;&lt;a href=\"#cb32-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;import&lt;/span&gt; re&lt;/span&gt;\n&lt;span id=\"cb32-2\"&gt;&lt;a href=\"#cb32-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb32-3\"&gt;&lt;a href=\"#cb32-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;from&lt;/span&gt; dspy.evaluate &lt;span class=\"im\"&gt;import&lt;/span&gt; Evaluate&lt;/span&gt;\n&lt;span id=\"cb32-4\"&gt;&lt;a href=\"#cb32-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb32-5\"&gt;&lt;a href=\"#cb32-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;results &lt;span class=\"op\"&gt;=&lt;/span&gt; []&lt;/span&gt;\n&lt;span id=\"cb32-6\"&gt;&lt;a href=\"#cb32-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb32-7\"&gt;&lt;a href=\"#cb32-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"cf\"&gt;with&lt;/span&gt; mlflow.start_run(run_name&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;gate_dataset_results&quot;&lt;/span&gt;) &lt;span class=\"im\"&gt;as&lt;/span&gt; parent_ctx:&lt;/span&gt;\n&lt;span id=\"cb32-8\"&gt;&lt;a href=\"#cb32-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;for&lt;/span&gt; candidate_lm &lt;span class=\"kw\"&gt;in&lt;/span&gt; llms:&lt;/span&gt;\n&lt;span id=\"cb32-9\"&gt;&lt;a href=\"#cb32-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        run_name &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"ss\"&gt;f&quot;gate_&lt;/span&gt;&lt;span class=\"sc\"&gt;{&lt;/span&gt;candidate_lm&lt;span class=\"sc\"&gt;.&lt;/span&gt;model&lt;span class=\"sc\"&gt;.&lt;/span&gt;replace(&lt;span class=\"st\"&gt;&#39;/&#39;&lt;/span&gt;, &lt;span class=\"st\"&gt;&#39;_&#39;&lt;/span&gt;)&lt;span class=\"sc\"&gt;}&lt;/span&gt;&lt;span class=\"ss\"&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb32-10\"&gt;&lt;a href=\"#cb32-10\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        sanitized_run_name &lt;span class=\"op\"&gt;=&lt;/span&gt; re.sub(&lt;span class=\"vs\"&gt;r&quot;[^a-zA-Z0-9_\\-]&quot;&lt;/span&gt;, &lt;span class=\"st\"&gt;&quot;_&quot;&lt;/span&gt;, run_name)&lt;/span&gt;\n&lt;span id=\"cb32-11\"&gt;&lt;a href=\"#cb32-11\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;with&lt;/span&gt; mlflow.start_run(run_name&lt;span class=\"op\"&gt;=&lt;/span&gt;sanitized_run_name, nested&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;):&lt;/span&gt;\n&lt;span id=\"cb32-12\"&gt;&lt;a href=\"#cb32-12\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            current_evaluator &lt;span class=\"op\"&gt;=&lt;/span&gt; Evaluate(&lt;/span&gt;\n&lt;span id=\"cb32-13\"&gt;&lt;a href=\"#cb32-13\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                devset&lt;span class=\"op\"&gt;=&lt;/span&gt;gate_examples[:&lt;span class=\"dv\"&gt;10&lt;/span&gt;],&lt;/span&gt;\n&lt;span id=\"cb32-14\"&gt;&lt;a href=\"#cb32-14\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                num_threads&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"dv\"&gt;32&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb32-15\"&gt;&lt;a href=\"#cb32-15\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                display_progress&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb32-16\"&gt;&lt;a href=\"#cb32-16\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                &lt;span class=\"co\"&gt;# display_table=True,&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb32-17\"&gt;&lt;a href=\"#cb32-17\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                &lt;span class=\"co\"&gt;# provide_traceback=True,&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb32-18\"&gt;&lt;a href=\"#cb32-18\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                return_all_scores&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb32-19\"&gt;&lt;a href=\"#cb32-19\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                return_outputs&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb32-20\"&gt;&lt;a href=\"#cb32-20\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            )&lt;/span&gt;\n&lt;span id=\"cb32-21\"&gt;&lt;a href=\"#cb32-21\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            &lt;span class=\"cf\"&gt;with&lt;/span&gt; dspy.context(lm&lt;span class=\"op\"&gt;=&lt;/span&gt;candidate_lm) &lt;span class=\"im\"&gt;as&lt;/span&gt; ctx:&lt;/span&gt;\n&lt;span id=\"cb32-22\"&gt;&lt;a href=\"#cb32-22\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                current_result &lt;span class=\"op\"&gt;=&lt;/span&gt; current_evaluator(&lt;/span&gt;\n&lt;span id=\"cb32-23\"&gt;&lt;a href=\"#cb32-23\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                    TurnSolver(reasoning_lm&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;), metric&lt;span class=\"op\"&gt;=&lt;/span&gt;turn_em_metric&lt;/span&gt;\n&lt;span id=\"cb32-24\"&gt;&lt;a href=\"#cb32-24\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                )&lt;/span&gt;\n&lt;span id=\"cb32-25\"&gt;&lt;a href=\"#cb32-25\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                results.append(current_result)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;div class=\"cell-output cell-output-stdout\"&gt;\n&lt;pre&gt;&lt;code&gt;Average Metric: 8.00 / 10 (80.0%): 100%|██████████| 10/10 [00:00&lt;00:00, 65.65it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/502b5457f9db44339a5afce34d13d847\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_openai_gpt-4_1-2025-04-14 at: http://localhost:5000/#/experiments/1/runs/7e61e1f47f4e408c8cec59ee1bf9c0dd\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 5.00 / 10 (50.0%): 100%|██████████| 10/10 [00:00&lt;00:00, 58.97it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/1b4ea94ac47e4660b30234d6ad78c8d8\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_openai_gpt-4_1-mini-2025-04-14 at: http://localhost:5000/#/experiments/1/runs/fa03278692c848e996a3e43e6422099f\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 6.00 / 10 (60.0%): 100%|██████████| 10/10 [00:00&lt;00:00, 79.01it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/ce1366eaa8c146eabba86650fae12f74\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_openai_o4-mini-2025-04-16 at: http://localhost:5000/#/experiments/1/runs/3d1fb9c72b914d5a942312db0a6a5088\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 6.00 / 10 (60.0%): 100%|██████████| 10/10 [00:00&lt;00:00, 81.33it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/9e00a96bfd114bbaa9e47dcb478b4423\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_anthropic_claude-sonnet-4-20250514 at: http://localhost:5000/#/experiments/1/runs/76c2180b1f3c4510ab13158d3b0d36eb\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 7.00 / 10 (70.0%): 100%|██████████| 10/10 [00:00&lt;00:00, 65.50it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/4a3c7957aaab4a4e972b06a7754fe6d4\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_gemini_gemini-2_5-flash at: http://localhost:5000/#/experiments/1/runs/aa191551b2844b57bb9d2db37e50c4f0\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n  0%|          | 0/10 [00:00&lt;?, ?it/s]Average Metric: 7.00 / 10 (70.0%): 100%|██████████| 10/10 [00:00&lt;00:00, 61.55it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/809ee64fbd164475b3592ff2340b2595\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_gemini_gemini-2_5-flash-lite at: http://localhost:5000/#/experiments/1/runs/90ea53b2a2484cc0a5302b7c8245184e\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 8.00 / 10 (80.0%): 100%|██████████| 10/10 [00:00&lt;00:00, 74.80it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/6f1bec87d6ce4137b10e055e94bf54d4\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_openai_o3-2025-04-16 at: http://localhost:5000/#/experiments/1/runs/7e4f8e42c8244b94af37787cacd12ee5\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 7.00 / 10 (70.0%): 100%|██████████| 10/10 [00:00&lt;00:00, 86.48it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/ab105090285e4b55a93205dc6f1bde64\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_anthropic_claude-opus-4-20250514 at: http://localhost:5000/#/experiments/1/runs/58c90aae89644af8a1d2c7dc845b0c07\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 8.00 / 10 (80.0%): 100%|██████████| 10/10 [00:00&lt;00:00, 39.63it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/e786a0b633844e7ebdb6a165561b81ec\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_gemini_gemini-2_5-pro at: http://localhost:5000/#/experiments/1/runs/9e1f42bcc8064a9383ed590c1add4d01\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 7.00 / 10 (70.0%): 100%|██████████| 10/10 [00:00&lt;00:00, 71.29it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/f4ae2cb32a2b401aa5ab8f7b02dc7b86\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_ollama_qwen3_32b at: http://localhost:5000/#/experiments/1/runs/ca6c0d988ca94f2998eb08f339fdf22a\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_dataset_results at: http://localhost:5000/#/experiments/1/runs/0b0e82f0b3724ec1afedde0d7a036dfe\n🧪 View experiment at: http://localhost:5000/#/experiments/1&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-stderr\"&gt;\n&lt;pre&gt;&lt;code&gt;2025/07/28 18:19:36 INFO dspy.evaluate.evaluate: Average Metric: 8.0 / 10 (80.0%)\n2025/07/28 18:19:37 INFO dspy.evaluate.evaluate: Average Metric: 5.0 / 10 (50.0%)\n2025/07/28 18:19:37 INFO dspy.evaluate.evaluate: Average Metric: 6.0 / 10 (60.0%)\n2025/07/28 18:19:37 INFO dspy.evaluate.evaluate: Average Metric: 6.0 / 10 (60.0%)\n2025/07/28 18:19:37 INFO dspy.evaluate.evaluate: Average Metric: 7.0 / 10 (70.0%)\n2025/07/28 18:19:37 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:19:37 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:19:38 INFO dspy.evaluate.evaluate: Average Metric: 7.0 / 10 (70.0%)\n2025/07/28 18:19:38 INFO dspy.evaluate.evaluate: Average Metric: 8.0 / 10 (80.0%)\n2025/07/28 18:19:38 INFO dspy.evaluate.evaluate: Average Metric: 7.0 / 10 (70.0%)\n2025/07/28 18:19:38 INFO dspy.evaluate.evaluate: Average Metric: 8.0 / 10 (80.0%)\n2025/07/28 18:19:39 INFO dspy.evaluate.evaluate: Average Metric: 7.0 / 10 (70.0%)&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n\n&lt;div&gt;\n  &lt;style scoped&gt;\n  button {\n    border: none;\n    border-radius: 4px;\n    background-color: rgb(34, 114, 180);\n    font-family: -apple-system, \"system-ui\", \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial;\n    font-size: 13px;\n    color: white;\n    margin-top: 8px;\n    margin-bottom: 8px;\n    padding: 8px 16px;\n    cursor: pointer;\n  }\n  button:hover {\n    background-color: rgb(66, 153, 224);\n  }\n  &lt;/style&gt;\n  &lt;button\n    onclick=\"\n        const display = this.nextElementSibling.style.display;\n        const isCollapsed = display === 'none';\n        this.nextElementSibling.style.display = isCollapsed ? null : 'none';\n\n        const verb = isCollapsed ? 'Collapse' : 'Expand';\n        this.innerText = `${verb} MLflow Trace`;\n    \"\n  &gt;Collapse MLflow Trace&lt;/button&gt;\n  &lt;iframe\n    id=\"trace-renderer\"\n    style=\"width: 100%; height: 500px; border: none; resize: vertical;\"\n    src=\"http://localhost:5000/static-files/lib/notebook-trace-renderer/index.html?trace_id=9f5fdac684c74647a0a88cbdcd16d89b&amp;experiment_id=1&amp;trace_id=3de6592234f74ca4ba6a450f2a01b37a&amp;experiment_id=1&amp;trace_id=31e022f38c354840b5abbe64b417306d&amp;experiment_id=1&amp;trace_id=0756d03769c4417e861f7171ecb7bcb8&amp;experiment_id=1&amp;trace_id=f1dcee538d454f96a41dc1d59c3a27f9&amp;experiment_id=1&amp;trace_id=283f1f0436c24afabdb9d865b3c0e802&amp;experiment_id=1&amp;trace_id=ddb2286507bd47fd8580b5e8dd923d7e&amp;experiment_id=1&amp;trace_id=427f384f2d604830844675df25de1226&amp;experiment_id=1&amp;trace_id=789bab02c70346c1a50c91de5f67376b&amp;experiment_id=1&amp;trace_id=2c112f9efbb44a9796a0ca64a43b8b5d&amp;experiment_id=1&amp;version=3.1.4\"\n  /&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-40\" class=\"cell\" data-execution_count=\"424\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb35\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb35-1\"&gt;&lt;a href=\"#cb35-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;import&lt;/span&gt; pandas &lt;span class=\"im\"&gt;as&lt;/span&gt; pd&lt;/span&gt;\n&lt;span id=\"cb35-2\"&gt;&lt;a href=\"#cb35-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb35-3\"&gt;&lt;a href=\"#cb35-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;df &lt;span class=\"op\"&gt;=&lt;/span&gt; pd.DataFrame(&lt;/span&gt;\n&lt;span id=\"cb35-4\"&gt;&lt;a href=\"#cb35-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    [&lt;/span&gt;\n&lt;span id=\"cb35-5\"&gt;&lt;a href=\"#cb35-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        {&lt;span class=\"st\"&gt;&quot;LLM&quot;&lt;/span&gt;: llms[idx].model, &lt;span class=\"st\"&gt;&quot;Evaluation Score&quot;&lt;/span&gt;: candidate[&lt;span class=\"dv\"&gt;0&lt;/span&gt;]}&lt;/span&gt;\n&lt;span id=\"cb35-6\"&gt;&lt;a href=\"#cb35-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;for&lt;/span&gt; idx, candidate &lt;span class=\"kw\"&gt;in&lt;/span&gt; &lt;span class=\"bu\"&gt;enumerate&lt;/span&gt;(results)&lt;/span&gt;\n&lt;span id=\"cb35-7\"&gt;&lt;a href=\"#cb35-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    ]&lt;/span&gt;\n&lt;span id=\"cb35-8\"&gt;&lt;a href=\"#cb35-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;)&lt;/span&gt;\n&lt;span id=\"cb35-9\"&gt;&lt;a href=\"#cb35-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"bu\"&gt;print&lt;/span&gt;(df)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;div class=\"cell-output cell-output-stdout\"&gt;\n&lt;pre&gt;&lt;code&gt;                                  LLM  Evaluation Score\n0           openai/gpt-4.1-2025-04-14              80.0\n1      openai/gpt-4.1-mini-2025-04-14              50.0\n2           openai/o4-mini-2025-04-16              60.0\n3  anthropic/claude-sonnet-4-20250514              60.0\n4             gemini/gemini-2.5-flash              70.0\n5        gemini/gemini-2.5-flash-lite              70.0\n6                openai/o3-2025-04-16              80.0\n7    anthropic/claude-opus-4-20250514              70.0\n8               gemini/gemini-2.5-pro              80.0\n9                    ollama/qwen3:32b              70.0&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;From the small test above, we see that most of the models score in a similar range. I think it’s expected that GPT-4.1-mini performs poorly, given that it’s a much smaller model compared to all the competetiors.&lt;/p&gt;\n&lt;p&gt;From the MLFlow logs, we also see that while Qwen3:32b has a relatively high score, inference is quite slow. For now, we will skip this model during the model selection phase, and revisit it later.&lt;/p&gt;\n&lt;div id=\"cell-42\" class=\"cell\" data-execution_count=\"425\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb37\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb37-1\"&gt;&lt;a href=\"#cb37-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;model_selection_llms &lt;span class=\"op\"&gt;=&lt;/span&gt; [&lt;/span&gt;\n&lt;span id=\"cb37-2\"&gt;&lt;a href=\"#cb37-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    lm_oai_gpt_4_1,&lt;/span&gt;\n&lt;span id=\"cb37-3\"&gt;&lt;a href=\"#cb37-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    lm_oai_gpt_4_1_mini,&lt;/span&gt;\n&lt;span id=\"cb37-4\"&gt;&lt;a href=\"#cb37-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    lm_oai_o4_mini,&lt;/span&gt;\n&lt;span id=\"cb37-5\"&gt;&lt;a href=\"#cb37-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    lm_anthropic_sonnet_4_0,&lt;/span&gt;\n&lt;span id=\"cb37-6\"&gt;&lt;a href=\"#cb37-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    lm_gemini_flash_2_5,&lt;/span&gt;\n&lt;span id=\"cb37-7\"&gt;&lt;a href=\"#cb37-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    lm_gemini_flash_2_5_lite,&lt;/span&gt;\n&lt;span id=\"cb37-8\"&gt;&lt;a href=\"#cb37-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    lm_oai_o3,&lt;/span&gt;\n&lt;span id=\"cb37-9\"&gt;&lt;a href=\"#cb37-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    lm_anthropic_opus_4_0,&lt;/span&gt;\n&lt;span id=\"cb37-10\"&gt;&lt;a href=\"#cb37-10\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    lm_gemini_pro_2_5,&lt;/span&gt;\n&lt;span id=\"cb37-11\"&gt;&lt;a href=\"#cb37-11\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-43\" class=\"cell\" data-execution_count=\"426\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb38\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb38-1\"&gt;&lt;a href=\"#cb38-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;import&lt;/span&gt; re&lt;/span&gt;\n&lt;span id=\"cb38-2\"&gt;&lt;a href=\"#cb38-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb38-3\"&gt;&lt;a href=\"#cb38-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;from&lt;/span&gt; dspy.evaluate &lt;span class=\"im\"&gt;import&lt;/span&gt; Evaluate&lt;/span&gt;\n&lt;span id=\"cb38-4\"&gt;&lt;a href=\"#cb38-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb38-5\"&gt;&lt;a href=\"#cb38-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;results &lt;span class=\"op\"&gt;=&lt;/span&gt; []&lt;/span&gt;\n&lt;span id=\"cb38-6\"&gt;&lt;a href=\"#cb38-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb38-7\"&gt;&lt;a href=\"#cb38-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"cf\"&gt;with&lt;/span&gt; mlflow.start_run(run_name&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;gate_dataset_results_full&quot;&lt;/span&gt;) &lt;span class=\"im\"&gt;as&lt;/span&gt; parent_ctx:&lt;/span&gt;\n&lt;span id=\"cb38-8\"&gt;&lt;a href=\"#cb38-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;for&lt;/span&gt; candidate_lm &lt;span class=\"kw\"&gt;in&lt;/span&gt; model_selection_llms:&lt;/span&gt;\n&lt;span id=\"cb38-9\"&gt;&lt;a href=\"#cb38-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        run_name &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"ss\"&gt;f&quot;gate_&lt;/span&gt;&lt;span class=\"sc\"&gt;{&lt;/span&gt;candidate_lm&lt;span class=\"sc\"&gt;.&lt;/span&gt;model&lt;span class=\"sc\"&gt;.&lt;/span&gt;replace(&lt;span class=\"st\"&gt;&#39;/&#39;&lt;/span&gt;, &lt;span class=\"st\"&gt;&#39;_&#39;&lt;/span&gt;)&lt;span class=\"sc\"&gt;}&lt;/span&gt;&lt;span class=\"ss\"&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb38-10\"&gt;&lt;a href=\"#cb38-10\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        sanitized_run_name &lt;span class=\"op\"&gt;=&lt;/span&gt; re.sub(&lt;span class=\"vs\"&gt;r&quot;[^a-zA-Z0-9_\\-]&quot;&lt;/span&gt;, &lt;span class=\"st\"&gt;&quot;_&quot;&lt;/span&gt;, run_name)&lt;/span&gt;\n&lt;span id=\"cb38-11\"&gt;&lt;a href=\"#cb38-11\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;with&lt;/span&gt; mlflow.start_run(run_name&lt;span class=\"op\"&gt;=&lt;/span&gt;sanitized_run_name, nested&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;):&lt;/span&gt;\n&lt;span id=\"cb38-12\"&gt;&lt;a href=\"#cb38-12\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            current_evaluator &lt;span class=\"op\"&gt;=&lt;/span&gt; Evaluate(&lt;/span&gt;\n&lt;span id=\"cb38-13\"&gt;&lt;a href=\"#cb38-13\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                devset&lt;span class=\"op\"&gt;=&lt;/span&gt;gate_examples,&lt;/span&gt;\n&lt;span id=\"cb38-14\"&gt;&lt;a href=\"#cb38-14\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                num_threads&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"dv\"&gt;32&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb38-15\"&gt;&lt;a href=\"#cb38-15\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                display_progress&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb38-16\"&gt;&lt;a href=\"#cb38-16\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                &lt;span class=\"co\"&gt;# display_table=True,&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb38-17\"&gt;&lt;a href=\"#cb38-17\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                &lt;span class=\"co\"&gt;# provide_traceback=True,&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb38-18\"&gt;&lt;a href=\"#cb38-18\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                return_all_scores&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb38-19\"&gt;&lt;a href=\"#cb38-19\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                return_outputs&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb38-20\"&gt;&lt;a href=\"#cb38-20\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            )&lt;/span&gt;\n&lt;span id=\"cb38-21\"&gt;&lt;a href=\"#cb38-21\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            &lt;span class=\"cf\"&gt;with&lt;/span&gt; dspy.context(lm&lt;span class=\"op\"&gt;=&lt;/span&gt;candidate_lm) &lt;span class=\"im\"&gt;as&lt;/span&gt; ctx:&lt;/span&gt;\n&lt;span id=\"cb38-22\"&gt;&lt;a href=\"#cb38-22\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                current_result &lt;span class=\"op\"&gt;=&lt;/span&gt; current_evaluator(&lt;/span&gt;\n&lt;span id=\"cb38-23\"&gt;&lt;a href=\"#cb38-23\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                    TurnSolver(reasoning_lm&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;), metric&lt;span class=\"op\"&gt;=&lt;/span&gt;turn_em_metric&lt;/span&gt;\n&lt;span id=\"cb38-24\"&gt;&lt;a href=\"#cb38-24\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                )&lt;/span&gt;\n&lt;span id=\"cb38-25\"&gt;&lt;a href=\"#cb38-25\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                results.append(current_result)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;div class=\"cell-output cell-output-stdout\"&gt;\n&lt;pre&gt;&lt;code&gt;Average Metric: 95.00 / 151 (62.9%): 100%|██████████| 151/151 [00:02&lt;00:00, 74.97it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/e18f45df89fb4a0e9e98e6f01d74bf71\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_openai_gpt-4_1-2025-04-14 at: http://localhost:5000/#/experiments/1/runs/f15c1d3760fc489b95ec5950f3e992b9\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 81.00 / 151 (53.6%): 100%|██████████| 151/151 [00:02&lt;00:00, 74.18it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/9f40a5f2dc2a4e09977f8b8c53822605\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_openai_gpt-4_1-mini-2025-04-14 at: http://localhost:5000/#/experiments/1/runs/c882d7c82d5f4a3abb510bf57d506c53\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 31.00 / 55 (56.4%):  36%|███▌      | 54/151 [00:00&lt;00:01, 53.34it/s]Average Metric: 44.00 / 72 (61.1%):  47%|████▋     | 71/151 [00:01&lt;00:01, 73.76it/s]Average Metric: 62.00 / 106 (58.5%):  70%|██████▉   | 105/151 [00:01&lt;00:00, 82.16it/s]Average Metric: 95.00 / 151 (62.9%): 100%|██████████| 151/151 [00:02&lt;00:00, 71.71it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/8154049643d040d39c7642b56ac6d7c5\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_openai_o4-mini-2025-04-16 at: http://localhost:5000/#/experiments/1/runs/938b45e4b5204804b4e4660feebf563a\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 95.00 / 151 (62.9%): 100%|██████████| 151/151 [00:02&lt;00:00, 70.44it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/599e8c7040b04b8c8f0ca24c6dc94d37\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_anthropic_claude-sonnet-4-20250514 at: http://localhost:5000/#/experiments/1/runs/4442e20dc743456b966821c18219c23e\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n  0%|          | 0/151 [00:00&lt;?, ?it/s]Average Metric: 31.00 / 47 (66.0%):  30%|███       | 46/151 [00:01&lt;00:02, 47.10it/s]Average Metric: 57.00 / 93 (61.3%):  62%|██████▏   | 93/151 [00:01&lt;00:00, 79.96it/s]Average Metric: 73.00 / 122 (59.8%):  80%|████████  | 121/151 [00:01&lt;00:00, 89.94it/s]Average Metric: 96.00 / 151 (63.6%): 100%|██████████| 151/151 [00:02&lt;00:00, 67.06it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/bcea3ffb8c6f4cbb98725e43e88cbdd0\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_gemini_gemini-2_5-flash at: http://localhost:5000/#/experiments/1/runs/7db59c48c06c4948adf754477705c360\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n  0%|          | 0/151 [00:00&lt;?, ?it/s]Average Metric: 8.00 / 12 (66.7%):   7%|▋         | 11/151 [00:00&lt;00:03, 38.23it/s]Average Metric: 9.00 / 13 (69.2%):   8%|▊         | 12/151 [00:00&lt;00:03, 38.23it/s]Average Metric: 18.00 / 29 (62.1%):  19%|█▉        | 29/151 [00:00&lt;00:01, 62.69it/s]Average Metric: 20.00 / 32 (62.5%):  21%|██        | 31/151 [00:00&lt;00:01, 62.69it/s]Average Metric: 20.00 / 33 (60.6%):  21%|██        | 32/151 [00:00&lt;00:01, 62.69it/s]Average Metric: 21.00 / 34 (61.8%):  22%|██▏       | 33/151 [00:00&lt;00:01, 62.69it/s]Average Metric: 22.00 / 38 (57.9%):  25%|██▍       | 37/151 [00:00&lt;00:01, 61.42it/s]Average Metric: 44.00 / 75 (58.7%):  49%|████▉     | 74/151 [00:01&lt;00:01, 57.41it/s]Average Metric: 44.00 / 76 (57.9%):  50%|████▉     | 75/151 [00:01&lt;00:01, 57.41it/s]Average Metric: 44.00 / 78 (56.4%):  51%|█████     | 77/151 [00:01&lt;00:01, 58.30it/s]Average Metric: 47.00 / 84 (56.0%):  56%|█████▌    | 84/151 [00:01&lt;00:01, 60.44it/s]Average Metric: 51.00 / 89 (57.3%):  58%|█████▊    | 88/151 [00:01&lt;00:01, 60.44it/s]Average Metric: 52.00 / 90 (57.8%):  59%|█████▉    | 89/151 [00:01&lt;00:01, 60.44it/s]Average Metric: 55.00 / 96 (57.3%):  63%|██████▎   | 95/151 [00:01&lt;00:00, 60.62it/s]Average Metric: 56.00 / 97 (57.7%):  64%|██████▎   | 96/151 [00:01&lt;00:00, 60.62it/s]Average Metric: 59.00 / 107 (55.1%):  70%|███████   | 106/151 [00:01&lt;00:00, 67.41it/s]Average Metric: 59.00 / 108 (54.6%):  72%|███████▏  | 108/151 [00:01&lt;00:00, 69.63it/s]Average Metric: 62.00 / 112 (55.4%):  74%|███████▎  | 111/151 [00:01&lt;00:00, 69.63it/s]Average Metric: 69.00 / 123 (56.1%):  81%|████████  | 122/151 [00:01&lt;00:00, 69.40it/s]Average Metric: 87.00 / 151 (57.6%): 100%|██████████| 151/151 [00:02&lt;00:00, 60.17it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/c348c68458124441865ac735d0b7d641\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_gemini_gemini-2_5-flash-lite at: http://localhost:5000/#/experiments/1/runs/598582fb690540e7baca55a097fee220\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 22.00 / 32 (68.8%):  21%|██        | 31/151 [00:00&lt;00:01, 64.25it/s]Average Metric: 69.00 / 100 (69.0%):  66%|██████▌   | 99/151 [00:01&lt;00:00, 62.91it/s]Average Metric: 106.00 / 151 (70.2%): 100%|██████████| 151/151 [00:02&lt;00:00, 51.93it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/853504669f224faf8773cf2d9436fb41\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_openai_o3-2025-04-16 at: http://localhost:5000/#/experiments/1/runs/f122d81f9c1d46d582ce64553f6ee3ea\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 103.00 / 151 (68.2%): 100%|██████████| 151/151 [00:02&lt;00:00, 67.19it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/96826db5718c45d6a2dc0b2c5526441e\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_anthropic_claude-opus-4-20250514 at: http://localhost:5000/#/experiments/1/runs/d329de90de1e40e0b467681f0442656a\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 103.00 / 151 (68.2%): 100%|██████████| 151/151 [00:02&lt;00:00, 71.07it/s] \n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/1fbbc1c758204d438fd050d77d524632\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_gemini_gemini-2_5-pro at: http://localhost:5000/#/experiments/1/runs/6e2dd13cb21f455c905159caa8335678\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_dataset_results_full at: http://localhost:5000/#/experiments/1/runs/51176a64c2af4fbc803a1e1f0775e924\n🧪 View experiment at: http://localhost:5000/#/experiments/1&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-stderr\"&gt;\n&lt;pre&gt;&lt;code&gt;2025/07/28 18:21:32 INFO dspy.evaluate.evaluate: Average Metric: 95.0 / 151 (62.9%)\n2025/07/28 18:21:34 INFO dspy.evaluate.evaluate: Average Metric: 81.0 / 151 (53.6%)\n2025/07/28 18:21:35 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:35 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:36 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:36 INFO dspy.evaluate.evaluate: Average Metric: 95.0 / 151 (62.9%)\n2025/07/28 18:21:38 INFO dspy.evaluate.evaluate: Average Metric: 95.0 / 151 (62.9%)\n2025/07/28 18:21:39 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:39 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:40 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:40 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:40 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:41 INFO dspy.evaluate.evaluate: Average Metric: 96.0 / 151 (63.6%)\n2025/07/28 18:21:41 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:41 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:41 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:41 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:41 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:41 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:41 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:41 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:41 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:41 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:41 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:41 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:41 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:41 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:42 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:42 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:42 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:42 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:42 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:42 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:42 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:42 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:42 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:42 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:42 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:42 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:42 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:43 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:43 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:43 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:43 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:43 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:43 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:43 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:43 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:43 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:43 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:43 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:43 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:43 INFO dspy.evaluate.evaluate: Average Metric: 87.0 / 151 (57.6%)\n2025/07/28 18:21:44 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:45 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:47 INFO dspy.evaluate.evaluate: Average Metric: 106.0 / 151 (70.2%)\n2025/07/28 18:21:49 INFO dspy.evaluate.evaluate: Average Metric: 103.0 / 151 (68.2%)\n2025/07/28 18:21:51 INFO dspy.evaluate.evaluate: Average Metric: 103.0 / 151 (68.2%)&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n\n&lt;div&gt;\n  &lt;style scoped&gt;\n  button {\n    border: none;\n    border-radius: 4px;\n    background-color: rgb(34, 114, 180);\n    font-family: -apple-system, \"system-ui\", \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial;\n    font-size: 13px;\n    color: white;\n    margin-top: 8px;\n    margin-bottom: 8px;\n    padding: 8px 16px;\n    cursor: pointer;\n  }\n  button:hover {\n    background-color: rgb(66, 153, 224);\n  }\n  &lt;/style&gt;\n  &lt;button\n    onclick=\"\n        const display = this.nextElementSibling.style.display;\n        const isCollapsed = display === 'none';\n        this.nextElementSibling.style.display = isCollapsed ? null : 'none';\n\n        const verb = isCollapsed ? 'Collapse' : 'Expand';\n        this.innerText = `${verb} MLflow Trace`;\n    \"\n  &gt;Collapse MLflow Trace&lt;/button&gt;\n  &lt;iframe\n    id=\"trace-renderer\"\n    style=\"width: 100%; height: 500px; border: none; resize: vertical;\"\n    src=\"http://localhost:5000/static-files/lib/notebook-trace-renderer/index.html?trace_id=5276eb031180473cb92d03ceca489d38&amp;experiment_id=1&amp;trace_id=0f2dffe6dfd74fe3b5697a0bffb47658&amp;experiment_id=1&amp;trace_id=35c112a62c334012a612cdca116e9b09&amp;experiment_id=1&amp;trace_id=e30a2c51605b4102b190affb869475f4&amp;experiment_id=1&amp;trace_id=1b74fe5cb6c8453b82c227eb63e11221&amp;experiment_id=1&amp;trace_id=5310ed582ac0431382787b65f63de317&amp;experiment_id=1&amp;trace_id=f713426ecd20413ba2acbb7af0228b2d&amp;experiment_id=1&amp;trace_id=0f44b811a42c41dd9d867b5e12f80044&amp;experiment_id=1&amp;trace_id=543c31429f2d4d7cb4d2284daf66b3f9&amp;experiment_id=1&amp;trace_id=d624a05b74cc43a0a69bc8b400465a69&amp;experiment_id=1&amp;version=3.1.4\"\n  /&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;We will now run the evaluation suite over the entire &lt;code&gt;gate dataset&lt;/code&gt; for all the models in the above list.&lt;/p&gt;\n&lt;div id=\"cell-45\" class=\"cell\" data-execution_count=\"427\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb41\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb41-1\"&gt;&lt;a href=\"#cb41-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;import&lt;/span&gt; pandas &lt;span class=\"im\"&gt;as&lt;/span&gt; pd&lt;/span&gt;\n&lt;span id=\"cb41-2\"&gt;&lt;a href=\"#cb41-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb41-3\"&gt;&lt;a href=\"#cb41-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;tdf &lt;span class=\"op\"&gt;=&lt;/span&gt; pd.DataFrame(&lt;/span&gt;\n&lt;span id=\"cb41-4\"&gt;&lt;a href=\"#cb41-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    [&lt;/span&gt;\n&lt;span id=\"cb41-5\"&gt;&lt;a href=\"#cb41-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        {&lt;span class=\"st\"&gt;&quot;LLM&quot;&lt;/span&gt;: llms[idx].model, &lt;span class=\"st\"&gt;&quot;Evaluation Score&quot;&lt;/span&gt;: candidate[&lt;span class=\"dv\"&gt;0&lt;/span&gt;]}&lt;/span&gt;\n&lt;span id=\"cb41-6\"&gt;&lt;a href=\"#cb41-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;for&lt;/span&gt; idx, candidate &lt;span class=\"kw\"&gt;in&lt;/span&gt; &lt;span class=\"bu\"&gt;enumerate&lt;/span&gt;(results)&lt;/span&gt;\n&lt;span id=\"cb41-7\"&gt;&lt;a href=\"#cb41-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    ]&lt;/span&gt;\n&lt;span id=\"cb41-8\"&gt;&lt;a href=\"#cb41-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;)&lt;/span&gt;\n&lt;span id=\"cb41-9\"&gt;&lt;a href=\"#cb41-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"bu\"&gt;print&lt;/span&gt;(tdf)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;div class=\"cell-output cell-output-stdout\"&gt;\n&lt;pre&gt;&lt;code&gt;                                  LLM  Evaluation Score\n0           openai/gpt-4.1-2025-04-14             62.91\n1      openai/gpt-4.1-mini-2025-04-14             53.64\n2           openai/o4-mini-2025-04-16             62.91\n3  anthropic/claude-sonnet-4-20250514             62.91\n4             gemini/gemini-2.5-flash             63.58\n5        gemini/gemini-2.5-flash-lite             57.62\n6                openai/o3-2025-04-16             70.20\n7    anthropic/claude-opus-4-20250514             68.21\n8               gemini/gemini-2.5-pro             68.21&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;From the above table, we see a few interesting things:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;By default, most of the &lt;strong&gt;reasoning&lt;/strong&gt; models perform better on the “gate” dataset, with OAI O3 performing the best with a score of 70.20%&lt;/li&gt;\n&lt;li&gt;Reasoning models from the remaining two frontier labs score the same i.e 68.21%&lt;/li&gt;\n&lt;li&gt;We also see that the smaller reasoning models perform similar across the labs, with an average score of 63.58%, but at a &lt;strong&gt;significantly lower cost&lt;/strong&gt;.&lt;/li&gt;\n&lt;li&gt;The outputs from sonnet-4 failed the structured output test, but this could be fixed using the DSPy TypingPredictor in the future. More on this later!&lt;/li&gt;\n&lt;li&gt;Finally, while a &lt;em&gt;non-reasoning&lt;/em&gt; model like GPT-4.1 performs as well as the small reasoning models, the price of input/outputs tokens for GPT-4.1 is significantly higher compared to it’s counterparts.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;We will also run the test over the “probe” dataset, before deciding our final list of LLMs based on the performance-to-cost ratio.&lt;/p&gt;\n&lt;/section&gt;\n&lt;section id=\"probe-dataset-results\" class=\"level3\"&gt;\n&lt;h3&gt;Probe Dataset Results&lt;/h3&gt;\n&lt;div id=\"cell-48\" class=\"cell\" data-execution_count=\"428\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb43\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb43-1\"&gt;&lt;a href=\"#cb43-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;import&lt;/span&gt; re&lt;/span&gt;\n&lt;span id=\"cb43-2\"&gt;&lt;a href=\"#cb43-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb43-3\"&gt;&lt;a href=\"#cb43-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;from&lt;/span&gt; dspy.evaluate &lt;span class=\"im\"&gt;import&lt;/span&gt; Evaluate&lt;/span&gt;\n&lt;span id=\"cb43-4\"&gt;&lt;a href=\"#cb43-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb43-5\"&gt;&lt;a href=\"#cb43-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;probe_results &lt;span class=\"op\"&gt;=&lt;/span&gt; []&lt;/span&gt;\n&lt;span id=\"cb43-6\"&gt;&lt;a href=\"#cb43-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb43-7\"&gt;&lt;a href=\"#cb43-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"cf\"&gt;with&lt;/span&gt; mlflow.start_run(run_name&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;probe_dataset_results_full&quot;&lt;/span&gt;) &lt;span class=\"im\"&gt;as&lt;/span&gt; parent_ctx:&lt;/span&gt;\n&lt;span id=\"cb43-8\"&gt;&lt;a href=\"#cb43-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;for&lt;/span&gt; candidate_lm &lt;span class=\"kw\"&gt;in&lt;/span&gt; model_selection_llms:&lt;/span&gt;\n&lt;span id=\"cb43-9\"&gt;&lt;a href=\"#cb43-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        run_name &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"ss\"&gt;f&quot;probe_&lt;/span&gt;&lt;span class=\"sc\"&gt;{&lt;/span&gt;candidate_lm&lt;span class=\"sc\"&gt;.&lt;/span&gt;model&lt;span class=\"sc\"&gt;.&lt;/span&gt;replace(&lt;span class=\"st\"&gt;&#39;/&#39;&lt;/span&gt;, &lt;span class=\"st\"&gt;&#39;_&#39;&lt;/span&gt;)&lt;span class=\"sc\"&gt;}&lt;/span&gt;&lt;span class=\"ss\"&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb43-10\"&gt;&lt;a href=\"#cb43-10\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        sanitized_run_name &lt;span class=\"op\"&gt;=&lt;/span&gt; re.sub(&lt;span class=\"vs\"&gt;r&quot;[^a-zA-Z0-9_\\-]&quot;&lt;/span&gt;, &lt;span class=\"st\"&gt;&quot;_&quot;&lt;/span&gt;, run_name)&lt;/span&gt;\n&lt;span id=\"cb43-11\"&gt;&lt;a href=\"#cb43-11\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;with&lt;/span&gt; mlflow.start_run(run_name&lt;span class=\"op\"&gt;=&lt;/span&gt;sanitized_run_name, nested&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;):&lt;/span&gt;\n&lt;span id=\"cb43-12\"&gt;&lt;a href=\"#cb43-12\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            current_evaluator &lt;span class=\"op\"&gt;=&lt;/span&gt; Evaluate(&lt;/span&gt;\n&lt;span id=\"cb43-13\"&gt;&lt;a href=\"#cb43-13\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                devset&lt;span class=\"op\"&gt;=&lt;/span&gt;probe_examples,&lt;/span&gt;\n&lt;span id=\"cb43-14\"&gt;&lt;a href=\"#cb43-14\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                num_threads&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"dv\"&gt;32&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb43-15\"&gt;&lt;a href=\"#cb43-15\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                display_progress&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb43-16\"&gt;&lt;a href=\"#cb43-16\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                &lt;span class=\"co\"&gt;# display_table=True,&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb43-17\"&gt;&lt;a href=\"#cb43-17\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                &lt;span class=\"co\"&gt;# provide_traceback=True,&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb43-18\"&gt;&lt;a href=\"#cb43-18\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                return_all_scores&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb43-19\"&gt;&lt;a href=\"#cb43-19\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                return_outputs&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb43-20\"&gt;&lt;a href=\"#cb43-20\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            )&lt;/span&gt;\n&lt;span id=\"cb43-21\"&gt;&lt;a href=\"#cb43-21\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            &lt;span class=\"cf\"&gt;with&lt;/span&gt; dspy.context(lm&lt;span class=\"op\"&gt;=&lt;/span&gt;candidate_lm) &lt;span class=\"im\"&gt;as&lt;/span&gt; ctx:&lt;/span&gt;\n&lt;span id=\"cb43-22\"&gt;&lt;a href=\"#cb43-22\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                current_result &lt;span class=\"op\"&gt;=&lt;/span&gt; current_evaluator(&lt;/span&gt;\n&lt;span id=\"cb43-23\"&gt;&lt;a href=\"#cb43-23\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                    TurnSolver(reasoning_lm&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;), metric&lt;span class=\"op\"&gt;=&lt;/span&gt;turn_em_metric&lt;/span&gt;\n&lt;span id=\"cb43-24\"&gt;&lt;a href=\"#cb43-24\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                )&lt;/span&gt;\n&lt;span id=\"cb43-25\"&gt;&lt;a href=\"#cb43-25\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                probe_results.append(current_result)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;div class=\"cell-output cell-output-stdout\"&gt;\n&lt;pre&gt;&lt;code&gt;Average Metric: 150.00 / 200 (75.0%): 100%|██████████| 200/200 [00:02&lt;00:00, 69.58it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/6cccc46d61ae4365b9921586ed0ef193\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run probe_openai_gpt-4_1-2025-04-14 at: http://localhost:5000/#/experiments/1/runs/3b839cca27264ffaaace2643e23975c7\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 130.00 / 200 (65.0%): 100%|██████████| 200/200 [00:03&lt;00:00, 60.95it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/8c371daf948343eb8a18370f1756a850\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run probe_openai_gpt-4_1-mini-2025-04-14 at: http://localhost:5000/#/experiments/1/runs/dcfce79bf36446929e2924273e0a2db5\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 79.00 / 102 (77.5%):  50%|█████     | 101/200 [00:02&lt;00:02, 36.80it/s]Average Metric: 122.00 / 157 (77.7%):  78%|███████▊  | 156/200 [00:03&lt;00:00, 48.01it/s]Average Metric: 157.00 / 200 (78.5%): 100%|██████████| 200/200 [00:03&lt;00:00, 53.12it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/758a3867a75541c2a3eab91ac6faf42b\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run probe_openai_o4-mini-2025-04-16 at: http://localhost:5000/#/experiments/1/runs/aafc2286d5ab4819aa467440328eed77\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 150.00 / 200 (75.0%): 100%|██████████| 200/200 [00:04&lt;00:00, 49.31it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/3b6644b108a241f99e8dd0e2e1d051fa\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run probe_anthropic_claude-sonnet-4-20250514 at: http://localhost:5000/#/experiments/1/runs/3b4f42a464cd4e3496f4b1755decd7ce\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 24.00 / 31 (77.4%):  15%|█▌        | 30/200 [00:00&lt;00:03, 50.11it/s]Average Metric: 148.00 / 200 (74.0%): 100%|██████████| 200/200 [00:03&lt;00:00, 51.35it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/99af33e15c234269aa69333eebecb916\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run probe_gemini_gemini-2_5-flash at: http://localhost:5000/#/experiments/1/runs/7d11aa5ec28841adafa6b0e66733e13d\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n  0%|          | 0/200 [00:00&lt;?, ?it/s]Average Metric: 11.00 / 16 (68.8%):   8%|▊         | 15/200 [00:00&lt;00:04, 41.77it/s]Average Metric: 18.00 / 24 (75.0%):  12%|█▏        | 23/200 [00:00&lt;00:03, 50.59it/s]Average Metric: 19.00 / 26 (73.1%):  12%|█▎        | 25/200 [00:00&lt;00:03, 50.59it/s]Average Metric: 21.00 / 31 (67.7%):  15%|█▌        | 30/200 [00:00&lt;00:02, 58.14it/s]Average Metric: 22.00 / 33 (66.7%):  16%|█▌        | 32/200 [00:00&lt;00:02, 58.14it/s]Average Metric: 27.00 / 42 (64.3%):  20%|██        | 41/200 [00:01&lt;00:04, 33.61it/s]Average Metric: 32.00 / 53 (60.4%):  26%|██▌       | 52/200 [00:01&lt;00:03, 43.63it/s]Average Metric: 36.00 / 61 (59.0%):  30%|███       | 60/200 [00:01&lt;00:02, 49.53it/s]Average Metric: 39.00 / 65 (60.0%):  32%|███▏      | 64/200 [00:01&lt;00:02, 60.32it/s]Average Metric: 39.00 / 66 (59.1%):  32%|███▎      | 65/200 [00:01&lt;00:02, 60.32it/s]Average Metric: 41.00 / 68 (60.3%):  34%|███▎      | 67/200 [00:01&lt;00:02, 60.32it/s]Average Metric: 54.00 / 84 (64.3%):  42%|████▏     | 83/200 [00:01&lt;00:01, 69.98it/s]Average Metric: 60.00 / 93 (64.5%):  46%|████▌     | 92/200 [00:01&lt;00:01, 70.30it/s]Average Metric: 62.00 / 96 (64.6%):  48%|████▊     | 95/200 [00:01&lt;00:01, 70.30it/s]Average Metric: 62.00 / 97 (63.9%):  48%|████▊     | 96/200 [00:01&lt;00:01, 70.30it/s]Average Metric: 62.00 / 98 (63.3%):  49%|████▉     | 98/200 [00:01&lt;00:01, 74.90it/s]Average Metric: 63.00 / 99 (63.6%):  49%|████▉     | 98/200 [00:01&lt;00:01, 74.90it/s]Average Metric: 64.00 / 102 (62.7%):  50%|█████     | 101/200 [00:01&lt;00:01, 74.90it/s]Average Metric: 65.00 / 103 (63.1%):  51%|█████     | 102/200 [00:01&lt;00:01, 74.90it/s]Average Metric: 73.00 / 115 (63.5%):  57%|█████▋    | 114/200 [00:02&lt;00:01, 56.16it/s]Average Metric: 76.00 / 119 (63.9%):  59%|█████▉    | 118/200 [00:02&lt;00:01, 56.16it/s]Average Metric: 78.00 / 123 (63.4%):  61%|██████    | 122/200 [00:02&lt;00:01, 53.09it/s]Average Metric: 82.00 / 129 (63.6%):  64%|██████▍   | 128/200 [00:02&lt;00:01, 45.61it/s]Average Metric: 82.00 / 130 (63.1%):  64%|██████▍   | 129/200 [00:02&lt;00:01, 45.61it/s]Average Metric: 82.00 / 134 (61.2%):  66%|██████▋   | 133/200 [00:02&lt;00:01, 46.87it/s]Average Metric: 83.00 / 135 (61.5%):  67%|██████▋   | 134/200 [00:02&lt;00:01, 46.87it/s]Average Metric: 99.00 / 159 (62.3%):  80%|███████▉  | 159/200 [00:03&lt;00:00, 46.30it/s]Average Metric: 104.00 / 165 (63.0%):  82%|████████▏ | 164/200 [00:03&lt;00:01, 35.61it/s]Average Metric: 105.00 / 166 (63.3%):  82%|████████▎ | 165/200 [00:03&lt;00:00, 35.61it/s]Average Metric: 105.00 / 167 (62.9%):  83%|████████▎ | 166/200 [00:03&lt;00:00, 35.61it/s]Average Metric: 128.00 / 200 (64.0%): 100%|██████████| 200/200 [00:03&lt;00:00, 52.47it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/20a1fa6983f349a0888cca2696bcae76\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run probe_gemini_gemini-2_5-flash-lite at: http://localhost:5000/#/experiments/1/runs/0c5ca9e2a1e84041b2937cd264727d94\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 48.00 / 61 (78.7%):  30%|███       | 60/200 [00:01&lt;00:03, 45.14it/s]Average Metric: 66.00 / 83 (79.5%):  41%|████      | 82/200 [00:01&lt;00:01, 76.08it/s]Average Metric: 162.00 / 200 (81.0%): 100%|██████████| 200/200 [00:03&lt;00:00, 52.77it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/513ceb4b58c44816894f0196c05f1d27\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run probe_openai_o3-2025-04-16 at: http://localhost:5000/#/experiments/1/runs/07039e1be0154904a14bf5b215b36bfb\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 160.00 / 200 (80.0%): 100%|██████████| 200/200 [00:04&lt;00:00, 46.05it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/fa3840a6fc86489195ff4b93ba3525d3\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run probe_anthropic_claude-opus-4-20250514 at: http://localhost:5000/#/experiments/1/runs/242a848220a34df18fefcd752c6b1edf\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 157.00 / 200 (78.5%): 100%|██████████| 200/200 [00:20&lt;00:00,  9.94it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/28468bf07dea42438e3b2835cf8bd5d1\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run probe_gemini_gemini-2_5-pro at: http://localhost:5000/#/experiments/1/runs/b9decff973db41ce9863d93d41eff7c3\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run probe_dataset_results_full at: http://localhost:5000/#/experiments/1/runs/7f0b1ff0f4e94143b9fb5509ed6319be\n🧪 View experiment at: http://localhost:5000/#/experiments/1&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-stderr\"&gt;\n&lt;pre&gt;&lt;code&gt;2025/07/28 18:22:15 INFO dspy.evaluate.evaluate: Average Metric: 150.0 / 200 (75.0%)\n2025/07/28 18:22:18 INFO dspy.evaluate.evaluate: Average Metric: 130.0 / 200 (65.0%)\n2025/07/28 18:22:20 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:21 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:22 INFO dspy.evaluate.evaluate: Average Metric: 157.0 / 200 (78.5%)\n2025/07/28 18:22:26 INFO dspy.evaluate.evaluate: Average Metric: 150.0 / 200 (75.0%)\n2025/07/28 18:22:27 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:30 INFO dspy.evaluate.evaluate: Average Metric: 148.0 / 200 (74.0%)\n2025/07/28 18:22:30 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:30 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:30 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:30 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:31 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:31 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:31 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:31 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:31 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:31 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:31 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:31 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:31 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:31 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:31 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:31 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:31 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:32 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:32 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:32 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:32 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:32 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:32 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:32 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:32 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:32 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:32 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:32 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:32 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:32 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:32 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:32 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:32 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:32 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:32 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:32 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:32 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:33 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:33 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:33 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:33 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:33 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:33 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:33 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:33 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:33 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:33 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:33 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:33 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:34 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:34 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:34 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:34 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:34 INFO dspy.evaluate.evaluate: Average Metric: 128.0 / 200 (64.0%)\n2025/07/28 18:22:35 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:36 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:38 INFO dspy.evaluate.evaluate: Average Metric: 162.0 / 200 (81.0%)\n2025/07/28 18:22:43 INFO dspy.evaluate.evaluate: Average Metric: 160.0 / 200 (80.0%)\n2025/07/28 18:23:03 INFO dspy.evaluate.evaluate: Average Metric: 157.0 / 200 (78.5%)&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n\n&lt;div&gt;\n  &lt;style scoped&gt;\n  button {\n    border: none;\n    border-radius: 4px;\n    background-color: rgb(34, 114, 180);\n    font-family: -apple-system, \"system-ui\", \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial;\n    font-size: 13px;\n    color: white;\n    margin-top: 8px;\n    margin-bottom: 8px;\n    padding: 8px 16px;\n    cursor: pointer;\n  }\n  button:hover {\n    background-color: rgb(66, 153, 224);\n  }\n  &lt;/style&gt;\n  &lt;button\n    onclick=\"\n        const display = this.nextElementSibling.style.display;\n        const isCollapsed = display === 'none';\n        this.nextElementSibling.style.display = isCollapsed ? null : 'none';\n\n        const verb = isCollapsed ? 'Collapse' : 'Expand';\n        this.innerText = `${verb} MLflow Trace`;\n    \"\n  &gt;Collapse MLflow Trace&lt;/button&gt;\n  &lt;iframe\n    id=\"trace-renderer\"\n    style=\"width: 100%; height: 500px; border: none; resize: vertical;\"\n    src=\"http://localhost:5000/static-files/lib/notebook-trace-renderer/index.html?trace_id=c5d368d7011e416bb8a6a45fb5757cc5&amp;experiment_id=1&amp;trace_id=c838fe37a1554a709c48aa7d91df4051&amp;experiment_id=1&amp;trace_id=e3e3b12245c145609fbd9f2ea7a38b35&amp;experiment_id=1&amp;trace_id=f05d4d95db7d4aceb8b4158a8cf0cfb0&amp;experiment_id=1&amp;trace_id=e996a1553f3b4c7b97af98bc3665f7aa&amp;experiment_id=1&amp;trace_id=02d784d19b414f16bc36df2f6cace3af&amp;experiment_id=1&amp;trace_id=a4955baaaf944dbbadcd4f05cb1c10aa&amp;experiment_id=1&amp;trace_id=fcaf8824996d4c7eab4d03bd198f2c33&amp;experiment_id=1&amp;trace_id=73db052bdbe1418eb46bc6ec442df95e&amp;experiment_id=1&amp;trace_id=66a0910a43384a9f993773961116b241&amp;experiment_id=1&amp;version=3.1.4\"\n  /&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-49\" class=\"cell\" data-execution_count=\"430\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb46\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb46-1\"&gt;&lt;a href=\"#cb46-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;import&lt;/span&gt; pandas &lt;span class=\"im\"&gt;as&lt;/span&gt; pd&lt;/span&gt;\n&lt;span id=\"cb46-2\"&gt;&lt;a href=\"#cb46-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb46-3\"&gt;&lt;a href=\"#cb46-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;tdf &lt;span class=\"op\"&gt;=&lt;/span&gt; pd.DataFrame(&lt;/span&gt;\n&lt;span id=\"cb46-4\"&gt;&lt;a href=\"#cb46-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    [&lt;/span&gt;\n&lt;span id=\"cb46-5\"&gt;&lt;a href=\"#cb46-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        {&lt;span class=\"st\"&gt;&quot;LLM&quot;&lt;/span&gt;: llms[idx].model, &lt;span class=\"st\"&gt;&quot;Evaluation Score&quot;&lt;/span&gt;: candidate[&lt;span class=\"dv\"&gt;0&lt;/span&gt;]}&lt;/span&gt;\n&lt;span id=\"cb46-6\"&gt;&lt;a href=\"#cb46-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;for&lt;/span&gt; idx, candidate &lt;span class=\"kw\"&gt;in&lt;/span&gt; &lt;span class=\"bu\"&gt;enumerate&lt;/span&gt;(probe_results)&lt;/span&gt;\n&lt;span id=\"cb46-7\"&gt;&lt;a href=\"#cb46-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    ]&lt;/span&gt;\n&lt;span id=\"cb46-8\"&gt;&lt;a href=\"#cb46-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;)&lt;/span&gt;\n&lt;span id=\"cb46-9\"&gt;&lt;a href=\"#cb46-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"bu\"&gt;print&lt;/span&gt;(tdf)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;div class=\"cell-output cell-output-stdout\"&gt;\n&lt;pre&gt;&lt;code&gt;                                  LLM  Evaluation Score\n0           openai/gpt-4.1-2025-04-14              75.0\n1      openai/gpt-4.1-mini-2025-04-14              65.0\n2           openai/o4-mini-2025-04-16              78.5\n3  anthropic/claude-sonnet-4-20250514              75.0\n4             gemini/gemini-2.5-flash              74.0\n5        gemini/gemini-2.5-flash-lite              64.0\n6                openai/o3-2025-04-16              81.0\n7    anthropic/claude-opus-4-20250514              80.0\n8               gemini/gemini-2.5-pro              78.5&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;From the above, we see that:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;Similar to the gate-only results, the &lt;em&gt;probe&lt;/em&gt; dataset results should that OAI o3 performs the best, with 81% accuracy.&lt;/li&gt;\n&lt;li&gt;Anthropic Opus is a close second, with 80% accuracy. However, it is &lt;strong&gt;significantly&lt;/strong&gt; more expensive, at $15/Million tokens 😱&lt;/li&gt;\n&lt;li&gt;Google’s Frontier model Gemini-pro is third, with 78% accuracy.&lt;/li&gt;\n&lt;li&gt;We see that the smaller reasoning models do quite well, with o4-mini getting around 78.5% accuracy, Anthropic sonnet-4 around 75% accuracy, and Google Gemini 2.5-flash at 74%. Note that, even here, Anthropic’s costs are significantly higher than the other models.&lt;/li&gt;\n&lt;li&gt;We also see that the “mini/lite” version of models provided by Google and OAI have similar performance, around ~65%.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Given the above insights, we can now select our models:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;strong&gt;Anthropic Cost&lt;/strong&gt;\n&lt;ul&gt;\n&lt;li&gt;All Anthropic models are significantly more expensive than the competitors, and have a performance on par or below the competetiors.&lt;/li&gt;\n&lt;li&gt;Hence, from our final list, we will exclude Anthropic models.&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Frontier Model Cost&lt;/strong&gt;\n&lt;ul&gt;\n&lt;li&gt;Frontier models are generally quite expensive.&lt;/li&gt;\n&lt;li&gt;From our tests, we see that OAI o3 has the best performace, with Google Gemini 2.5-pro having a performance on or below o3.&lt;/li&gt;\n&lt;li&gt;To save costs, we will keep only one frontier model in the final list i.e o3&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Smaller Reasoning Models&lt;/strong&gt;\n&lt;ul&gt;\n&lt;li&gt;We also see the following models showing promising results across the board:\n&lt;ul&gt;\n&lt;li&gt;o4-mini&lt;/li&gt;\n&lt;li&gt;gemini-2.5-flash&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Non reaosning models&lt;/strong&gt;\n&lt;ul&gt;\n&lt;li&gt;GPT-4.1 seems to perform as well as the smaller reasoning models, but it is about 50% more expensive($2/Million input tokens).&lt;/li&gt;\n&lt;li&gt;Given that we already plan to include models with similar reasoning capabilities, we will exclude GPT-4.1 from our final list.&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Small models&lt;/strong&gt;\n&lt;ul&gt;\n&lt;li&gt;Currently, the small models variants of all models are significantly behind the larger models.&lt;/li&gt;\n&lt;li&gt;While they are cost effective, and likely their performance can be increased with improvements to the prompts, fine-tuning, etc., we will skip this models for now due to time constraits.&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Hence, our final list of models will be:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;o3&lt;/li&gt;\n&lt;li&gt;o4-mini&lt;/li&gt;\n&lt;li&gt;gemini-2.5-flash&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/section&gt;\n&lt;section id=\"error-analysis\" class=\"level3\"&gt;\n&lt;h3&gt;Error Analysis&lt;/h3&gt;\n&lt;p&gt;Given that we have the results for the gate and probe datasets, we can perform some quick preliminary error analysis to understand the performance of the models on these datasets.&lt;/p&gt;\n&lt;p&gt;We will restrict our analysis to the final list of models(o3, o4-mini and gemini-2.5-flash).&lt;/p&gt;\n&lt;div id=\"cell-54\" class=\"cell\" data-execution_count=\"431\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb48\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb48-1\"&gt;&lt;a href=\"#cb48-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;final_selected_models &lt;span class=\"op\"&gt;=&lt;/span&gt; [&lt;/span&gt;\n&lt;span id=\"cb48-2\"&gt;&lt;a href=\"#cb48-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    lm_oai_o4_mini,&lt;/span&gt;\n&lt;span id=\"cb48-3\"&gt;&lt;a href=\"#cb48-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    lm_gemini_flash_2_5,&lt;/span&gt;\n&lt;span id=\"cb48-4\"&gt;&lt;a href=\"#cb48-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    lm_oai_o3,&lt;/span&gt;\n&lt;span id=\"cb48-5\"&gt;&lt;a href=\"#cb48-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-55\" class=\"cell\" data-execution_count=\"432\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb49\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb49-1\"&gt;&lt;a href=\"#cb49-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;gate_and_probe_results &lt;span class=\"op\"&gt;=&lt;/span&gt; results &lt;span class=\"op\"&gt;+&lt;/span&gt; probe_results&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-56\" class=\"cell\" data-execution_count=\"433\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb50\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb50-1\"&gt;&lt;a href=\"#cb50-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"bu\"&gt;len&lt;/span&gt;(gate_and_probe_results)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;div class=\"cell-output cell-output-display\" data-execution_count=\"433\"&gt;\n&lt;pre&gt;&lt;code&gt;18&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-57\" class=\"cell\" data-execution_count=\"437\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb52\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb52-1\"&gt;&lt;a href=\"#cb52-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;selected_records &lt;span class=\"op\"&gt;=&lt;/span&gt; []&lt;/span&gt;\n&lt;span id=\"cb52-2\"&gt;&lt;a href=\"#cb52-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"cf\"&gt;for&lt;/span&gt; idx, record &lt;span class=\"kw\"&gt;in&lt;/span&gt; &lt;span class=\"bu\"&gt;enumerate&lt;/span&gt;(gate_and_probe_results):&lt;/span&gt;\n&lt;span id=\"cb52-3\"&gt;&lt;a href=\"#cb52-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"co\"&gt;# Hack: Dirty hack to get results our selected LLMs. Sorry!&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb52-4\"&gt;&lt;a href=\"#cb52-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;if&lt;/span&gt; idx &lt;span class=\"kw\"&gt;in&lt;/span&gt; [&lt;span class=\"dv\"&gt;2&lt;/span&gt;, &lt;span class=\"dv\"&gt;4&lt;/span&gt;, &lt;span class=\"dv\"&gt;6&lt;/span&gt;, &lt;span class=\"dv\"&gt;11&lt;/span&gt;, &lt;span class=\"dv\"&gt;13&lt;/span&gt;, &lt;span class=\"dv\"&gt;15&lt;/span&gt;]:&lt;/span&gt;\n&lt;span id=\"cb52-5\"&gt;&lt;a href=\"#cb52-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;for&lt;/span&gt; example, prediction, score &lt;span class=\"kw\"&gt;in&lt;/span&gt; record[&lt;span class=\"dv\"&gt;1&lt;/span&gt;]:&lt;/span&gt;\n&lt;span id=\"cb52-6\"&gt;&lt;a href=\"#cb52-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            model_idx &lt;span class=\"op\"&gt;=&lt;/span&gt; idx &lt;span class=\"cf\"&gt;if&lt;/span&gt; idx &lt;span class=\"op\"&gt;&lt;&lt;/span&gt; &lt;span class=\"dv\"&gt;9&lt;/span&gt; &lt;span class=\"cf\"&gt;else&lt;/span&gt; idx &lt;span class=\"op\"&gt;-&lt;/span&gt; &lt;span class=\"dv\"&gt;9&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb52-7\"&gt;&lt;a href=\"#cb52-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            example_copy &lt;span class=\"op\"&gt;=&lt;/span&gt; deepcopy(example)&lt;/span&gt;\n&lt;span id=\"cb52-8\"&gt;&lt;a href=\"#cb52-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            example_copy[&lt;span class=\"st\"&gt;&quot;ground_truth_answer&quot;&lt;/span&gt;] &lt;span class=\"op\"&gt;=&lt;/span&gt; example_copy[&lt;span class=\"st\"&gt;&quot;answer&quot;&lt;/span&gt;]&lt;/span&gt;\n&lt;span id=\"cb52-9\"&gt;&lt;a href=\"#cb52-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            &lt;span class=\"kw\"&gt;del&lt;/span&gt; example_copy[&lt;span class=\"st\"&gt;&quot;answer&quot;&lt;/span&gt;]&lt;/span&gt;\n&lt;span id=\"cb52-10\"&gt;&lt;a href=\"#cb52-10\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb52-11\"&gt;&lt;a href=\"#cb52-11\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            selected_records.append(&lt;/span&gt;\n&lt;span id=\"cb52-12\"&gt;&lt;a href=\"#cb52-12\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                {&lt;/span&gt;\n&lt;span id=\"cb52-13\"&gt;&lt;a href=\"#cb52-13\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                    &lt;span class=\"st\"&gt;&quot;model_name&quot;&lt;/span&gt;: model_selection_llms[model_idx].model,&lt;/span&gt;\n&lt;span id=\"cb52-14\"&gt;&lt;a href=\"#cb52-14\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                    &lt;span class=\"st\"&gt;&quot;turn_em_metric_score&quot;&lt;/span&gt;: score,&lt;/span&gt;\n&lt;span id=\"cb52-15\"&gt;&lt;a href=\"#cb52-15\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                    &lt;span class=\"op\"&gt;**&lt;/span&gt;example_copy.toDict(),&lt;/span&gt;\n&lt;span id=\"cb52-16\"&gt;&lt;a href=\"#cb52-16\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                    &lt;span class=\"op\"&gt;**&lt;/span&gt;prediction.toDict(),&lt;/span&gt;\n&lt;span id=\"cb52-17\"&gt;&lt;a href=\"#cb52-17\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                }&lt;/span&gt;\n&lt;span id=\"cb52-18\"&gt;&lt;a href=\"#cb52-18\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            )&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-58\" class=\"cell\" data-execution_count=\"441\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb53\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb53-1\"&gt;&lt;a href=\"#cb53-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;selected_records[&lt;span class=\"dv\"&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;div class=\"cell-output cell-output-display\" data-execution_count=\"441\"&gt;\n&lt;pre&gt;&lt;code&gt;{&#39;model_name&#39;: &#39;openai/o4-mini-2025-04-16&#39;,\n &#39;turn_em_metric_score&#39;: 1.0,\n &#39;conversation_context&#39;: &#39;None&#39;,\n &#39;evidence_snippets&#39;: &quot;[PRE]\\nentergy corporation and subsidiaries management&#39;s financial discussion and analysis refer to 201cselected financial data - five-year comparison of entergy corporation and subsidiaries 201d which accompanies entergy corporation 2019s financial statements in this report for further information with respect to operating statistics . in november 2007 the board approved a plan to pursue a separation of entergy 2019s non-utility nuclear business from entergy through a spin-off of the business to entergy shareholders . in april 2010 , entergy announced that it planned to unwind the business infrastructure associated with the proposed spin-off transaction . as a result of the plan to unwind the business infrastructure , entergy recorded expenses in 2010 for the write-off of certain capitalized costs incurred in connection with the planned spin-off transaction . these costs are discussed in more detail below and throughout this section . net revenue utility following is an analysis of the change in net revenue comparing 2010 to 2009 . amount ( in millions ) .\\n[/PRE]\\n[POST]\\nthe volume/weather variance is primarily due to an increase of 8362 gwh , or 8% ( 8 % ) , in billed electricity usage in all retail sectors , including the effect on the residential sector of colder weather in the first quarter 2010 compared to 2009 and warmer weather in the second and third quarters 2010 compared to 2009 . the industrial sector reflected strong sales growth on continuing signs of economic recovery . the improvement in this sector was primarily driven by inventory restocking and strong exports with the chemicals , refining , and miscellaneous manufacturing sectors leading the improvement . the retail electric price variance is primarily due to : increases in the formula rate plan riders at entergy gulf states louisiana effective november 2009 , january 2010 , and september 2010 , at entergy louisiana effective november 2009 , and at entergy mississippi effective july 2009 ; a base rate increase at entergy arkansas effective july 2010 ; rate actions at entergy texas , including base rate increases effective in may and august 2010 ; a formula rate plan provision of $ 16.6 million recorded in the third quarter 2009 for refunds that were made to customers in accordance with settlements approved by the lpsc ; and the recovery in 2009 by entergy arkansas of 2008 extraordinary storm costs , as approved by the apsc , which ceased in january 2010 . the recovery of storm costs is offset in other operation and maintenance expenses . see note 2 to the financial statements for further discussion of the proceedings referred to above. .\\n[/POST]&quot;,\n &#39;table&#39;: &#39;| Row | 2009 net revenue | volume/weather | retail electric price | provision for regulatory proceedings | rough production cost equalization | ano decommissioning trust | fuel recovery | other | 2010 net revenue |\\n|---|---|---|---|---|---|---|---|---|---|\\n| amount ( in millions ) | 4694.0 | 231.0 | 137.0 | 26.0 | 19.0 | -24.0 | -44.0 | 12.0 | 5051.0 |&#39;,\n &#39;question&#39;: &#39;what was the difference in net revenue between 2009 and 2010?&#39;,\n &#39;id&#39;: &#39;Single_ETR/2011/page_22.pdf-3&#39;,\n &#39;doc_pre_text&#39;: &quot;entergy corporation and subsidiaries management&#39;s financial discussion and analysis refer to 201cselected financial data - five-year comparison of entergy corporation and subsidiaries 201d which accompanies entergy corporation 2019s financial statements in this report for further information with respect to operating statistics . in november 2007 the board approved a plan to pursue a separation of entergy 2019s non-utility nuclear business from entergy through a spin-off of the business to entergy shareholders . in april 2010 , entergy announced that it planned to unwind the business infrastructure associated with the proposed spin-off transaction . as a result of the plan to unwind the business infrastructure , entergy recorded expenses in 2010 for the write-off of certain capitalized costs incurred in connection with the planned spin-off transaction . these costs are discussed in more detail below and throughout this section . net revenue utility following is an analysis of the change in net revenue comparing 2010 to 2009 . amount ( in millions ) .&quot;,\n &#39;doc_post_text&#39;: &#39;the volume/weather variance is primarily due to an increase of 8362 gwh , or 8% ( 8 % ) , in billed electricity usage in all retail sectors , including the effect on the residential sector of colder weather in the first quarter 2010 compared to 2009 and warmer weather in the second and third quarters 2010 compared to 2009 . the industrial sector reflected strong sales growth on continuing signs of economic recovery . the improvement in this sector was primarily driven by inventory restocking and strong exports with the chemicals , refining , and miscellaneous manufacturing sectors leading the improvement . the retail electric price variance is primarily due to : increases in the formula rate plan riders at entergy gulf states louisiana effective november 2009 , january 2010 , and september 2010 , at entergy louisiana effective november 2009 , and at entergy mississippi effective july 2009 ; a base rate increase at entergy arkansas effective july 2010 ; rate actions at entergy texas , including base rate increases effective in may and august 2010 ; a formula rate plan provision of $ 16.6 million recorded in the third quarter 2009 for refunds that were made to customers in accordance with settlements approved by the lpsc ; and the recovery in 2009 by entergy arkansas of 2008 extraordinary storm costs , as approved by the apsc , which ceased in january 2010 . the recovery of storm costs is offset in other operation and maintenance expenses . see note 2 to the financial statements for further discussion of the proceedings referred to above. .&#39;,\n &#39;doc_table&#39;: {&#39;amount ( in millions )&#39;: {&#39;2009 net revenue&#39;: 4694.0,\n   &#39;volume/weather&#39;: 231.0,\n   &#39;retail electric price&#39;: 137.0,\n   &#39;provision for regulatory proceedings&#39;: 26.0,\n   &#39;rough production cost equalization&#39;: 19.0,\n   &#39;ano decommissioning trust&#39;: -24.0,\n   &#39;fuel recovery&#39;: -44.0,\n   &#39;other&#39;: 12.0,\n   &#39;2010 net revenue&#39;: 5051.0}},\n &#39;dialogue_conv_questions&#39;: [&#39;what was the difference in net revenue between 2009 and 2010?&#39;,\n  &#39;and the specific value for 2009 again?&#39;,\n  &#39;so what was the percentage change during this time?&#39;],\n &#39;dialogue_conv_answers&#39;: [&#39;357&#39;, &#39;4694&#39;, &#39;7.61%&#39;],\n &#39;dialogue_turn_program&#39;: [&#39;subtract(5051, 4694)&#39;,\n  &#39;4694&#39;,\n  &#39;subtract(5051, 4694), divide(#0, 4694)&#39;],\n &#39;dialogue_executed_answers&#39;: [357.0, 4694.0, 0.07605],\n &#39;dialogue_qa_split&#39;: [False, False, False],\n &#39;features_num_dialogue_turns&#39;: 3,\n &#39;features_has_type2_question&#39;: False,\n &#39;features_has_duplicate_columns&#39;: False,\n &#39;features_has_non_numeric_values&#39;: False,\n &#39;ground_truth_answer&#39;: 357.0,\n &#39;reasoning&#39;: &#39;The table shows 2009 net revenue of 4,694.0 million and 2010 net revenue of 5,051.0 million. The difference is 5,051.0 minus 4,694.0, which equals 357.0 million.&#39;,\n &#39;ops&#39;: &#39;subtract(const_5051.0, const_4694.0)&#39;,\n &#39;answer&#39;: &#39;357.0&#39;}&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-59\" class=\"cell\" data-execution_count=\"462\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb55\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb55-1\"&gt;&lt;a href=\"#cb55-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;from&lt;/span&gt; typing &lt;span class=\"im\"&gt;import&lt;/span&gt; Literal&lt;/span&gt;\n&lt;span id=\"cb55-2\"&gt;&lt;a href=\"#cb55-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;import&lt;/span&gt; dspy&lt;/span&gt;\n&lt;span id=\"cb55-3\"&gt;&lt;a href=\"#cb55-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb55-4\"&gt;&lt;a href=\"#cb55-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb55-5\"&gt;&lt;a href=\"#cb55-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"kw\"&gt;class&lt;/span&gt; AssessmentSignature(dspy.Signature):&lt;/span&gt;\n&lt;span id=\"cb55-6\"&gt;&lt;a href=\"#cb55-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"co\"&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb55-7\"&gt;&lt;a href=\"#cb55-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    Categorize model predictions by comparing them to ground truth, context, and evidence.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb55-8\"&gt;&lt;a href=\"#cb55-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    Assign a specific error type or OK label, with concise justification, based on rubric.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb55-9\"&gt;&lt;a href=\"#cb55-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb55-10\"&gt;&lt;a href=\"#cb55-10\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    When comparing numerical answers, always allow a tolerance of 1e-2. For eg: If the question asks for a percentage, but the ground_truth_answer is given as a decimal, the assessment_answer label will be GROUND_TRUTH_INCORRECT&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb55-11\"&gt;&lt;a href=\"#cb55-11\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    &quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb55-12\"&gt;&lt;a href=\"#cb55-12\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb55-13\"&gt;&lt;a href=\"#cb55-13\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    ground_truth_answer: &lt;span class=\"bu\"&gt;str&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.InputField(&lt;/span&gt;\n&lt;span id=\"cb55-14\"&gt;&lt;a href=\"#cb55-14\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;The correct answer as per the ground truth data.&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb55-15\"&gt;&lt;a href=\"#cb55-15\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    )&lt;/span&gt;\n&lt;span id=\"cb55-16\"&gt;&lt;a href=\"#cb55-16\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    table: &lt;span class=\"bu\"&gt;str&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.InputField(&lt;/span&gt;\n&lt;span id=\"cb55-17\"&gt;&lt;a href=\"#cb55-17\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;Tabular data (as string) relevant to the question and answer.&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb55-18\"&gt;&lt;a href=\"#cb55-18\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    )&lt;/span&gt;\n&lt;span id=\"cb55-19\"&gt;&lt;a href=\"#cb55-19\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    conversation_context: &lt;span class=\"bu\"&gt;str&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.InputField(&lt;/span&gt;\n&lt;span id=\"cb55-20\"&gt;&lt;a href=\"#cb55-20\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;Previous dialogue turns or context for the current question.&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb55-21\"&gt;&lt;a href=\"#cb55-21\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    )&lt;/span&gt;\n&lt;span id=\"cb55-22\"&gt;&lt;a href=\"#cb55-22\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    evidence_snippets: &lt;span class=\"bu\"&gt;str&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.InputField(&lt;/span&gt;\n&lt;span id=\"cb55-23\"&gt;&lt;a href=\"#cb55-23\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;Text snippets from the source document supporting the answer.&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb55-24\"&gt;&lt;a href=\"#cb55-24\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    )&lt;/span&gt;\n&lt;span id=\"cb55-25\"&gt;&lt;a href=\"#cb55-25\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    question: &lt;span class=\"bu\"&gt;str&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.InputField(desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;The question being answered by the model.&quot;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb55-26\"&gt;&lt;a href=\"#cb55-26\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb55-27\"&gt;&lt;a href=\"#cb55-27\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    predicted_reasoning: &lt;span class=\"bu\"&gt;str&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.InputField(&lt;/span&gt;\n&lt;span id=\"cb55-28\"&gt;&lt;a href=\"#cb55-28\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;Model&#39;s step-by-step explanation or justification for its answer.&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb55-29\"&gt;&lt;a href=\"#cb55-29\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    )&lt;/span&gt;\n&lt;span id=\"cb55-30\"&gt;&lt;a href=\"#cb55-30\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    predicted_ops: &lt;span class=\"bu\"&gt;str&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.InputField(&lt;/span&gt;\n&lt;span id=\"cb55-31\"&gt;&lt;a href=\"#cb55-31\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;Operations or programmatic steps the model used to derive its answer.&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb55-32\"&gt;&lt;a href=\"#cb55-32\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    )&lt;/span&gt;\n&lt;span id=\"cb55-33\"&gt;&lt;a href=\"#cb55-33\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    predicted_answer: &lt;span class=\"bu\"&gt;str&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.InputField(&lt;/span&gt;\n&lt;span id=\"cb55-34\"&gt;&lt;a href=\"#cb55-34\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;The answer predicted by the model for the given question.&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb55-35\"&gt;&lt;a href=\"#cb55-35\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    )&lt;/span&gt;\n&lt;span id=\"cb55-36\"&gt;&lt;a href=\"#cb55-36\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb55-37\"&gt;&lt;a href=\"#cb55-37\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    assessment_answer: Literal[&lt;/span&gt;\n&lt;span id=\"cb55-38\"&gt;&lt;a href=\"#cb55-38\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"st\"&gt;&quot;OK&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb55-39\"&gt;&lt;a href=\"#cb55-39\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"st\"&gt;&quot;NUMERICAL_ANSWER_WRONG&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb55-40\"&gt;&lt;a href=\"#cb55-40\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"st\"&gt;&quot;TEXTUAL_SELECTION_ANSWER_WRONG&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb55-41\"&gt;&lt;a href=\"#cb55-41\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"st\"&gt;&quot;FORMAT_ERROR&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb55-42\"&gt;&lt;a href=\"#cb55-42\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"st\"&gt;&quot;EVIDENCE_MISMATCH&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb55-43\"&gt;&lt;a href=\"#cb55-43\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"st\"&gt;&quot;GROUND_TRUTH_INCORRECT&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb55-44\"&gt;&lt;a href=\"#cb55-44\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    ] &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.OutputField(desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;Single categorical label.&quot;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-60\" class=\"cell\" data-execution_count=\"468\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb56\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb56-1\"&gt;&lt;a href=\"#cb56-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;selected_records[&lt;span class=\"dv\"&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;div class=\"cell-output cell-output-display\" data-execution_count=\"468\"&gt;\n&lt;pre&gt;&lt;code&gt;{&#39;model_name&#39;: &#39;openai/o4-mini-2025-04-16&#39;,\n &#39;turn_em_metric_score&#39;: 1.0,\n &#39;conversation_context&#39;: &#39;None&#39;,\n &#39;evidence_snippets&#39;: &quot;[PRE]\\nentergy corporation and subsidiaries management&#39;s financial discussion and analysis refer to 201cselected financial data - five-year comparison of entergy corporation and subsidiaries 201d which accompanies entergy corporation 2019s financial statements in this report for further information with respect to operating statistics . in november 2007 the board approved a plan to pursue a separation of entergy 2019s non-utility nuclear business from entergy through a spin-off of the business to entergy shareholders . in april 2010 , entergy announced that it planned to unwind the business infrastructure associated with the proposed spin-off transaction . as a result of the plan to unwind the business infrastructure , entergy recorded expenses in 2010 for the write-off of certain capitalized costs incurred in connection with the planned spin-off transaction . these costs are discussed in more detail below and throughout this section . net revenue utility following is an analysis of the change in net revenue comparing 2010 to 2009 . amount ( in millions ) .\\n[/PRE]\\n[POST]\\nthe volume/weather variance is primarily due to an increase of 8362 gwh , or 8% ( 8 % ) , in billed electricity usage in all retail sectors , including the effect on the residential sector of colder weather in the first quarter 2010 compared to 2009 and warmer weather in the second and third quarters 2010 compared to 2009 . the industrial sector reflected strong sales growth on continuing signs of economic recovery . the improvement in this sector was primarily driven by inventory restocking and strong exports with the chemicals , refining , and miscellaneous manufacturing sectors leading the improvement . the retail electric price variance is primarily due to : increases in the formula rate plan riders at entergy gulf states louisiana effective november 2009 , january 2010 , and september 2010 , at entergy louisiana effective november 2009 , and at entergy mississippi effective july 2009 ; a base rate increase at entergy arkansas effective july 2010 ; rate actions at entergy texas , including base rate increases effective in may and august 2010 ; a formula rate plan provision of $ 16.6 million recorded in the third quarter 2009 for refunds that were made to customers in accordance with settlements approved by the lpsc ; and the recovery in 2009 by entergy arkansas of 2008 extraordinary storm costs , as approved by the apsc , which ceased in january 2010 . the recovery of storm costs is offset in other operation and maintenance expenses . see note 2 to the financial statements for further discussion of the proceedings referred to above. .\\n[/POST]&quot;,\n &#39;table&#39;: &#39;| Row | 2009 net revenue | volume/weather | retail electric price | provision for regulatory proceedings | rough production cost equalization | ano decommissioning trust | fuel recovery | other | 2010 net revenue |\\n|---|---|---|---|---|---|---|---|---|---|\\n| amount ( in millions ) | 4694.0 | 231.0 | 137.0 | 26.0 | 19.0 | -24.0 | -44.0 | 12.0 | 5051.0 |&#39;,\n &#39;question&#39;: &#39;what was the difference in net revenue between 2009 and 2010?&#39;,\n &#39;id&#39;: &#39;Single_ETR/2011/page_22.pdf-3&#39;,\n &#39;doc_pre_text&#39;: &quot;entergy corporation and subsidiaries management&#39;s financial discussion and analysis refer to 201cselected financial data - five-year comparison of entergy corporation and subsidiaries 201d which accompanies entergy corporation 2019s financial statements in this report for further information with respect to operating statistics . in november 2007 the board approved a plan to pursue a separation of entergy 2019s non-utility nuclear business from entergy through a spin-off of the business to entergy shareholders . in april 2010 , entergy announced that it planned to unwind the business infrastructure associated with the proposed spin-off transaction . as a result of the plan to unwind the business infrastructure , entergy recorded expenses in 2010 for the write-off of certain capitalized costs incurred in connection with the planned spin-off transaction . these costs are discussed in more detail below and throughout this section . net revenue utility following is an analysis of the change in net revenue comparing 2010 to 2009 . amount ( in millions ) .&quot;,\n &#39;doc_post_text&#39;: &#39;the volume/weather variance is primarily due to an increase of 8362 gwh , or 8% ( 8 % ) , in billed electricity usage in all retail sectors , including the effect on the residential sector of colder weather in the first quarter 2010 compared to 2009 and warmer weather in the second and third quarters 2010 compared to 2009 . the industrial sector reflected strong sales growth on continuing signs of economic recovery . the improvement in this sector was primarily driven by inventory restocking and strong exports with the chemicals , refining , and miscellaneous manufacturing sectors leading the improvement . the retail electric price variance is primarily due to : increases in the formula rate plan riders at entergy gulf states louisiana effective november 2009 , january 2010 , and september 2010 , at entergy louisiana effective november 2009 , and at entergy mississippi effective july 2009 ; a base rate increase at entergy arkansas effective july 2010 ; rate actions at entergy texas , including base rate increases effective in may and august 2010 ; a formula rate plan provision of $ 16.6 million recorded in the third quarter 2009 for refunds that were made to customers in accordance with settlements approved by the lpsc ; and the recovery in 2009 by entergy arkansas of 2008 extraordinary storm costs , as approved by the apsc , which ceased in january 2010 . the recovery of storm costs is offset in other operation and maintenance expenses . see note 2 to the financial statements for further discussion of the proceedings referred to above. .&#39;,\n &#39;doc_table&#39;: {&#39;amount ( in millions )&#39;: {&#39;2009 net revenue&#39;: 4694.0,\n   &#39;volume/weather&#39;: 231.0,\n   &#39;retail electric price&#39;: 137.0,\n   &#39;provision for regulatory proceedings&#39;: 26.0,\n   &#39;rough production cost equalization&#39;: 19.0,\n   &#39;ano decommissioning trust&#39;: -24.0,\n   &#39;fuel recovery&#39;: -44.0,\n   &#39;other&#39;: 12.0,\n   &#39;2010 net revenue&#39;: 5051.0}},\n &#39;dialogue_conv_questions&#39;: [&#39;what was the difference in net revenue between 2009 and 2010?&#39;,\n  &#39;and the specific value for 2009 again?&#39;,\n  &#39;so what was the percentage change during this time?&#39;],\n &#39;dialogue_conv_answers&#39;: [&#39;357&#39;, &#39;4694&#39;, &#39;7.61%&#39;],\n &#39;dialogue_turn_program&#39;: [&#39;subtract(5051, 4694)&#39;,\n  &#39;4694&#39;,\n  &#39;subtract(5051, 4694), divide(#0, 4694)&#39;],\n &#39;dialogue_executed_answers&#39;: [357.0, 4694.0, 0.07605],\n &#39;dialogue_qa_split&#39;: [False, False, False],\n &#39;features_num_dialogue_turns&#39;: 3,\n &#39;features_has_type2_question&#39;: False,\n &#39;features_has_duplicate_columns&#39;: False,\n &#39;features_has_non_numeric_values&#39;: False,\n &#39;ground_truth_answer&#39;: 357.0,\n &#39;reasoning&#39;: &#39;The table shows 2009 net revenue of 4,694.0 million and 2010 net revenue of 5,051.0 million. The difference is 5,051.0 minus 4,694.0, which equals 357.0 million.&#39;,\n &#39;ops&#39;: &#39;subtract(const_5051.0, const_4694.0)&#39;,\n &#39;answer&#39;: &#39;357.0&#39;}&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-61\" class=\"cell\" data-execution_count=\"469\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb58\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb58-1\"&gt;&lt;a href=\"#cb58-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;judge_examples &lt;span class=\"op\"&gt;=&lt;/span&gt; []&lt;/span&gt;\n&lt;span id=\"cb58-2\"&gt;&lt;a href=\"#cb58-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb58-3\"&gt;&lt;a href=\"#cb58-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"cf\"&gt;for&lt;/span&gt; record &lt;span class=\"kw\"&gt;in&lt;/span&gt; selected_records:&lt;/span&gt;\n&lt;span id=\"cb58-4\"&gt;&lt;a href=\"#cb58-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;if&lt;/span&gt; record[&lt;span class=\"st\"&gt;&quot;turn_em_metric_score&quot;&lt;/span&gt;] &lt;span class=\"op\"&gt;!=&lt;/span&gt; &lt;span class=\"dv\"&gt;1&lt;/span&gt;:&lt;/span&gt;\n&lt;span id=\"cb58-5\"&gt;&lt;a href=\"#cb58-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        judge_examples.append(&lt;/span&gt;\n&lt;span id=\"cb58-6\"&gt;&lt;a href=\"#cb58-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            dspy.Example(&lt;/span&gt;\n&lt;span id=\"cb58-7\"&gt;&lt;a href=\"#cb58-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                &lt;span class=\"bu\"&gt;id&lt;/span&gt;&lt;span class=\"op\"&gt;=&lt;/span&gt;record[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;],&lt;/span&gt;\n&lt;span id=\"cb58-8\"&gt;&lt;a href=\"#cb58-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                model_name&lt;span class=\"op\"&gt;=&lt;/span&gt;record[&lt;span class=\"st\"&gt;&quot;model_name&quot;&lt;/span&gt;],&lt;/span&gt;\n&lt;span id=\"cb58-9\"&gt;&lt;a href=\"#cb58-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                predicted_reasoning&lt;span class=\"op\"&gt;=&lt;/span&gt;record[&lt;span class=\"st\"&gt;&quot;reasoning&quot;&lt;/span&gt;],&lt;/span&gt;\n&lt;span id=\"cb58-10\"&gt;&lt;a href=\"#cb58-10\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                predicted_ops&lt;span class=\"op\"&gt;=&lt;/span&gt;record[&lt;span class=\"st\"&gt;&quot;ops&quot;&lt;/span&gt;],&lt;/span&gt;\n&lt;span id=\"cb58-11\"&gt;&lt;a href=\"#cb58-11\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                predicted_answer&lt;span class=\"op\"&gt;=&lt;/span&gt;record[&lt;span class=\"st\"&gt;&quot;answer&quot;&lt;/span&gt;],&lt;/span&gt;\n&lt;span id=\"cb58-12\"&gt;&lt;a href=\"#cb58-12\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                ground_truth_answer&lt;span class=\"op\"&gt;=&lt;/span&gt;record[&lt;span class=\"st\"&gt;&quot;ground_truth_answer&quot;&lt;/span&gt;],&lt;/span&gt;\n&lt;span id=\"cb58-13\"&gt;&lt;a href=\"#cb58-13\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                table&lt;span class=\"op\"&gt;=&lt;/span&gt;record[&lt;span class=\"st\"&gt;&quot;table&quot;&lt;/span&gt;],&lt;/span&gt;\n&lt;span id=\"cb58-14\"&gt;&lt;a href=\"#cb58-14\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                conversation_context&lt;span class=\"op\"&gt;=&lt;/span&gt;record[&lt;span class=\"st\"&gt;&quot;conversation_context&quot;&lt;/span&gt;],&lt;/span&gt;\n&lt;span id=\"cb58-15\"&gt;&lt;a href=\"#cb58-15\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                evidence_snippets&lt;span class=\"op\"&gt;=&lt;/span&gt;record[&lt;span class=\"st\"&gt;&quot;evidence_snippets&quot;&lt;/span&gt;],&lt;/span&gt;\n&lt;span id=\"cb58-16\"&gt;&lt;a href=\"#cb58-16\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                question&lt;span class=\"op\"&gt;=&lt;/span&gt;record[&lt;span class=\"st\"&gt;&quot;question&quot;&lt;/span&gt;],&lt;/span&gt;\n&lt;span id=\"cb58-17\"&gt;&lt;a href=\"#cb58-17\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            ).with_inputs(&lt;/span&gt;\n&lt;span id=\"cb58-18\"&gt;&lt;a href=\"#cb58-18\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                &lt;span class=\"st\"&gt;&quot;predicted_reasoning&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb58-19\"&gt;&lt;a href=\"#cb58-19\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                &lt;span class=\"st\"&gt;&quot;predicted_ops&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb58-20\"&gt;&lt;a href=\"#cb58-20\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                &lt;span class=\"st\"&gt;&quot;predicted_answer&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb58-21\"&gt;&lt;a href=\"#cb58-21\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                &lt;span class=\"st\"&gt;&quot;ground_truth_answer&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb58-22\"&gt;&lt;a href=\"#cb58-22\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                &lt;span class=\"st\"&gt;&quot;table&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb58-23\"&gt;&lt;a href=\"#cb58-23\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                &lt;span class=\"st\"&gt;&quot;conversation_context&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb58-24\"&gt;&lt;a href=\"#cb58-24\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                &lt;span class=\"st\"&gt;&quot;evidence_snippets&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb58-25\"&gt;&lt;a href=\"#cb58-25\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                &lt;span class=\"st\"&gt;&quot;question&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb58-26\"&gt;&lt;a href=\"#cb58-26\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            )&lt;/span&gt;\n&lt;span id=\"cb58-27\"&gt;&lt;a href=\"#cb58-27\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        )&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;/div&gt;\n&lt;p&gt;We’ll use Gemini Flash 2.5 as our judge model, for classifying the generated predictions for error analysis&lt;/p&gt;\n&lt;div id=\"cell-63\" class=\"cell\" data-execution_count=\"489\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb59\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb59-1\"&gt;&lt;a href=\"#cb59-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;from&lt;/span&gt; tqdm &lt;span class=\"im\"&gt;import&lt;/span&gt; tqdm&lt;/span&gt;\n&lt;span id=\"cb59-2\"&gt;&lt;a href=\"#cb59-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb59-3\"&gt;&lt;a href=\"#cb59-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;judge_lm &lt;span class=\"op\"&gt;=&lt;/span&gt; deepcopy(lm_gemini_flash_2_5)&lt;/span&gt;\n&lt;span id=\"cb59-4\"&gt;&lt;a href=\"#cb59-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb59-5\"&gt;&lt;a href=\"#cb59-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;judge_results &lt;span class=\"op\"&gt;=&lt;/span&gt; []&lt;/span&gt;\n&lt;span id=\"cb59-6\"&gt;&lt;a href=\"#cb59-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb59-7\"&gt;&lt;a href=\"#cb59-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"cf\"&gt;with&lt;/span&gt; mlflow.start_run(run_name&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;error_analysis_gemini_2.5_flash&quot;&lt;/span&gt;) &lt;span class=\"im\"&gt;as&lt;/span&gt; run:&lt;/span&gt;\n&lt;span id=\"cb59-8\"&gt;&lt;a href=\"#cb59-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;with&lt;/span&gt; dspy.context(lm&lt;span class=\"op\"&gt;=&lt;/span&gt;judge_lm, cache&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;, track_cost&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;):&lt;/span&gt;\n&lt;span id=\"cb59-9\"&gt;&lt;a href=\"#cb59-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;for&lt;/span&gt; example &lt;span class=\"kw\"&gt;in&lt;/span&gt; tqdm(judge_examples, desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;Judging examples&quot;&lt;/span&gt;):&lt;/span&gt;\n&lt;span id=\"cb59-10\"&gt;&lt;a href=\"#cb59-10\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            module &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.ChainOfThought(AssessmentSignature)&lt;/span&gt;\n&lt;span id=\"cb59-11\"&gt;&lt;a href=\"#cb59-11\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            jr &lt;span class=\"op\"&gt;=&lt;/span&gt; module(&lt;span class=\"op\"&gt;**&lt;/span&gt;example)&lt;/span&gt;\n&lt;span id=\"cb59-12\"&gt;&lt;a href=\"#cb59-12\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            jr[&lt;span class=\"st\"&gt;&quot;assessment_reasoning&quot;&lt;/span&gt;] &lt;span class=\"op\"&gt;=&lt;/span&gt; jr[&lt;span class=\"st\"&gt;&quot;reasoning&quot;&lt;/span&gt;]&lt;/span&gt;\n&lt;span id=\"cb59-13\"&gt;&lt;a href=\"#cb59-13\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            &lt;span class=\"kw\"&gt;del&lt;/span&gt; jr[&lt;span class=\"st\"&gt;&quot;reasoning&quot;&lt;/span&gt;]&lt;/span&gt;\n&lt;span id=\"cb59-14\"&gt;&lt;a href=\"#cb59-14\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            judge_results.append(&lt;/span&gt;\n&lt;span id=\"cb59-15\"&gt;&lt;a href=\"#cb59-15\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                {&lt;/span&gt;\n&lt;span id=\"cb59-16\"&gt;&lt;a href=\"#cb59-16\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                    &lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;: example[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;],&lt;/span&gt;\n&lt;span id=\"cb59-17\"&gt;&lt;a href=\"#cb59-17\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                    &lt;span class=\"st\"&gt;&quot;model_name&quot;&lt;/span&gt;: example[&lt;span class=\"st\"&gt;&quot;model_name&quot;&lt;/span&gt;],&lt;/span&gt;\n&lt;span id=\"cb59-18\"&gt;&lt;a href=\"#cb59-18\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                    &lt;span class=\"st\"&gt;&quot;question&quot;&lt;/span&gt;: example[&lt;span class=\"st\"&gt;&quot;question&quot;&lt;/span&gt;],&lt;/span&gt;\n&lt;span id=\"cb59-19\"&gt;&lt;a href=\"#cb59-19\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                    &lt;span class=\"st\"&gt;&quot;ground_truth_answer&quot;&lt;/span&gt;: example[&lt;span class=\"st\"&gt;&quot;ground_truth_answer&quot;&lt;/span&gt;],&lt;/span&gt;\n&lt;span id=\"cb59-20\"&gt;&lt;a href=\"#cb59-20\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                    &lt;span class=\"st\"&gt;&quot;predicted_answer&quot;&lt;/span&gt;: example[&lt;span class=\"st\"&gt;&quot;predicted_answer&quot;&lt;/span&gt;],&lt;/span&gt;\n&lt;span id=\"cb59-21\"&gt;&lt;a href=\"#cb59-21\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                    &lt;span class=\"st\"&gt;&quot;assessment_answer&quot;&lt;/span&gt;: jr[&lt;span class=\"st\"&gt;&quot;assessment_answer&quot;&lt;/span&gt;],&lt;/span&gt;\n&lt;span id=\"cb59-22\"&gt;&lt;a href=\"#cb59-22\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                    &lt;span class=\"st\"&gt;&quot;assessment_reasoning&quot;&lt;/span&gt;: jr[&lt;span class=\"st\"&gt;&quot;assessment_reasoning&quot;&lt;/span&gt;],&lt;/span&gt;\n&lt;span id=\"cb59-23\"&gt;&lt;a href=\"#cb59-23\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                }&lt;/span&gt;\n&lt;span id=\"cb59-24\"&gt;&lt;a href=\"#cb59-24\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            )&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;div class=\"cell-output cell-output-stderr\"&gt;\n&lt;pre&gt;&lt;code&gt;Judging examples:   1%|          | 2/289 [00:00&lt;00:17, 16.77it/s]2025/07/28 20:07:50 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:   1%|▏         | 4/289 [00:00&lt;00:19, 14.79it/s]2025/07/28 20:07:50 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:   2%|▏         | 6/289 [00:00&lt;00:19, 14.85it/s]2025/07/28 20:07:50 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:50 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:   4%|▍         | 11/289 [00:00&lt;00:22, 12.42it/s]2025/07/28 20:07:51 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:   5%|▍         | 14/289 [00:00&lt;00:18, 15.05it/s]2025/07/28 20:07:51 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:51 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:   6%|▌         | 17/289 [00:01&lt;00:15, 18.13it/s]2025/07/28 20:07:51 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:51 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:   7%|▋         | 20/289 [00:01&lt;00:13, 19.77it/s]2025/07/28 20:07:51 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:   8%|▊         | 24/289 [00:01&lt;00:11, 23.48it/s]2025/07/28 20:07:51 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  10%|▉         | 28/289 [00:01&lt;00:09, 26.52it/s]2025/07/28 20:07:51 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  11%|█         | 32/289 [00:01&lt;00:09, 27.24it/s]2025/07/28 20:07:51 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:52 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:52 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  12%|█▏        | 35/289 [00:01&lt;00:10, 23.43it/s]2025/07/28 20:07:52 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  13%|█▎        | 38/289 [00:01&lt;00:10, 23.92it/s]2025/07/28 20:07:52 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:52 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  14%|█▍        | 41/289 [00:01&lt;00:10, 23.64it/s]2025/07/28 20:07:52 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  15%|█▌        | 44/289 [00:02&lt;00:10, 24.06it/s]2025/07/28 20:07:52 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:52 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  16%|█▋        | 47/289 [00:02&lt;00:09, 24.36it/s]2025/07/28 20:07:52 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  17%|█▋        | 50/289 [00:02&lt;00:09, 24.44it/s]2025/07/28 20:07:52 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:52 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:52 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  18%|█▊        | 53/289 [00:02&lt;00:10, 23.14it/s]2025/07/28 20:07:52 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:53 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  20%|██        | 59/289 [00:02&lt;00:11, 20.29it/s]2025/07/28 20:07:53 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  21%|██▏       | 62/289 [00:03&lt;00:13, 16.86it/s]2025/07/28 20:07:53 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:53 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  22%|██▏       | 65/289 [00:03&lt;00:11, 19.32it/s]2025/07/28 20:07:53 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:53 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:53 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  24%|██▎       | 68/289 [00:03&lt;00:10, 20.77it/s]2025/07/28 20:07:53 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:53 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:53 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  25%|██▍       | 71/289 [00:03&lt;00:09, 22.32it/s]2025/07/28 20:07:53 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  26%|██▌       | 74/289 [00:03&lt;00:09, 22.84it/s]2025/07/28 20:07:53 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  27%|██▋       | 77/289 [00:03&lt;00:09, 22.32it/s]2025/07/28 20:07:54 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  28%|██▊       | 80/289 [00:03&lt;00:10, 20.68it/s]2025/07/28 20:07:54 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  30%|██▉       | 86/289 [00:04&lt;00:09, 21.69it/s]2025/07/28 20:07:54 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:54 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:54 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  31%|███       | 89/289 [00:04&lt;00:09, 21.10it/s]2025/07/28 20:07:54 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  32%|███▏      | 92/289 [00:04&lt;00:09, 21.50it/s]2025/07/28 20:07:54 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:54 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  33%|███▎      | 95/289 [00:04&lt;00:08, 22.81it/s]2025/07/28 20:07:54 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  34%|███▍      | 98/289 [00:04&lt;00:07, 23.91it/s]2025/07/28 20:07:55 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  35%|███▍      | 101/289 [00:04&lt;00:07, 24.41it/s]2025/07/28 20:07:55 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:55 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  36%|███▌      | 104/289 [00:04&lt;00:08, 20.70it/s]2025/07/28 20:07:55 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:55 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  37%|███▋      | 107/289 [00:05&lt;00:11, 16.11it/s]2025/07/28 20:07:55 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  38%|███▊      | 110/289 [00:05&lt;00:09, 18.39it/s]2025/07/28 20:07:55 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:55 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  39%|███▉      | 114/289 [00:05&lt;00:08, 21.66it/s]2025/07/28 20:07:55 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:55 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:55 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  41%|████      | 118/289 [00:05&lt;00:07, 24.12it/s]2025/07/28 20:07:56 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:56 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  42%|████▏     | 122/289 [00:05&lt;00:06, 25.92it/s]2025/07/28 20:07:56 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  44%|████▍     | 128/289 [00:05&lt;00:06, 23.89it/s]2025/07/28 20:07:56 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:56 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  45%|████▌     | 131/289 [00:06&lt;00:06, 22.85it/s]2025/07/28 20:07:56 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  46%|████▋     | 134/289 [00:06&lt;00:06, 23.46it/s]2025/07/28 20:07:56 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  47%|████▋     | 137/289 [00:06&lt;00:06, 23.90it/s]2025/07/28 20:07:56 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:56 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  48%|████▊     | 140/289 [00:06&lt;00:06, 23.84it/s]2025/07/28 20:07:56 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  52%|█████▏    | 149/289 [00:06&lt;00:05, 24.60it/s]2025/07/28 20:07:57 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:57 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:57 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  54%|█████▎    | 155/289 [00:07&lt;00:06, 22.09it/s]2025/07/28 20:07:57 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:57 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:57 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  55%|█████▍    | 158/289 [00:07&lt;00:07, 18.30it/s]2025/07/28 20:07:57 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:57 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  56%|█████▌    | 161/289 [00:07&lt;00:06, 19.50it/s]2025/07/28 20:07:57 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:57 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  57%|█████▋    | 164/289 [00:07&lt;00:05, 21.21it/s]2025/07/28 20:07:58 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:58 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  58%|█████▊    | 168/289 [00:07&lt;00:05, 23.87it/s]2025/07/28 20:07:58 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  60%|█████▉    | 172/289 [00:07&lt;00:04, 25.66it/s]2025/07/28 20:07:58 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:58 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  61%|██████    | 175/289 [00:07&lt;00:04, 26.17it/s]2025/07/28 20:07:58 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  62%|██████▏   | 178/289 [00:08&lt;00:05, 20.48it/s]2025/07/28 20:07:58 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  63%|██████▎   | 181/289 [00:08&lt;00:05, 19.97it/s]2025/07/28 20:07:58 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:58 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  64%|██████▎   | 184/289 [00:08&lt;00:04, 21.03it/s]2025/07/28 20:07:58 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:58 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:58 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  65%|██████▍   | 187/289 [00:08&lt;00:04, 21.89it/s]2025/07/28 20:07:59 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:59 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:59 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  66%|██████▌   | 190/289 [00:08&lt;00:04, 20.94it/s]2025/07/28 20:07:59 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  67%|██████▋   | 193/289 [00:08&lt;00:04, 21.33it/s]2025/07/28 20:07:59 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  68%|██████▊   | 196/289 [00:09&lt;00:04, 21.37it/s]2025/07/28 20:07:59 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:59 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  69%|██████▉   | 199/289 [00:09&lt;00:05, 17.97it/s]2025/07/28 20:07:59 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  70%|██████▉   | 201/289 [00:09&lt;00:05, 16.87it/s]2025/07/28 20:07:59 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  70%|███████   | 203/289 [00:09&lt;00:05, 14.73it/s]2025/07/28 20:08:00 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:00 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  71%|███████▏  | 206/289 [00:09&lt;00:04, 17.68it/s]2025/07/28 20:08:00 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  74%|███████▎  | 213/289 [00:09&lt;00:03, 23.63it/s]2025/07/28 20:08:00 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  75%|███████▍  | 216/289 [00:10&lt;00:02, 24.77it/s]2025/07/28 20:08:00 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  76%|███████▌  | 219/289 [00:10&lt;00:02, 25.95it/s]2025/07/28 20:08:00 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:00 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  77%|███████▋  | 222/289 [00:10&lt;00:02, 22.83it/s]2025/07/28 20:08:00 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:00 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  78%|███████▊  | 225/289 [00:10&lt;00:03, 19.59it/s]2025/07/28 20:08:00 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:00 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:01 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  79%|███████▉  | 228/289 [00:10&lt;00:03, 19.79it/s]2025/07/28 20:08:01 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  80%|███████▉  | 231/289 [00:10&lt;00:02, 20.88it/s]2025/07/28 20:08:01 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  81%|████████  | 234/289 [00:10&lt;00:02, 22.36it/s]2025/07/28 20:08:01 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  82%|████████▏ | 237/289 [00:11&lt;00:02, 22.83it/s]2025/07/28 20:08:01 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:01 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:01 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  83%|████████▎ | 240/289 [00:11&lt;00:02, 22.23it/s]2025/07/28 20:08:01 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:01 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  84%|████████▍ | 243/289 [00:11&lt;00:02, 21.50it/s]2025/07/28 20:08:01 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:01 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  85%|████████▌ | 246/289 [00:11&lt;00:02, 14.67it/s]2025/07/28 20:08:02 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  86%|████████▌ | 249/289 [00:11&lt;00:02, 16.99it/s]2025/07/28 20:08:02 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:02 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:02 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  87%|████████▋ | 252/289 [00:11&lt;00:01, 19.29it/s]2025/07/28 20:08:02 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  89%|████████▊ | 256/289 [00:12&lt;00:01, 22.46it/s]2025/07/28 20:08:02 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:02 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  90%|████████▉ | 260/289 [00:12&lt;00:01, 24.88it/s]2025/07/28 20:08:02 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:02 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  91%|█████████ | 263/289 [00:12&lt;00:01, 24.21it/s]2025/07/28 20:08:02 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  92%|█████████▏| 266/289 [00:12&lt;00:00, 25.37it/s]2025/07/28 20:08:02 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:02 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  93%|█████████▎| 269/289 [00:12&lt;00:00, 20.30it/s]2025/07/28 20:08:03 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  94%|█████████▍| 272/289 [00:12&lt;00:00, 19.67it/s]2025/07/28 20:08:03 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:03 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  95%|█████████▌| 275/289 [00:12&lt;00:00, 20.71it/s]2025/07/28 20:08:03 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:03 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  96%|█████████▌| 278/289 [00:13&lt;00:00, 21.31it/s]2025/07/28 20:08:03 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:03 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  97%|█████████▋| 281/289 [00:13&lt;00:00, 22.55it/s]2025/07/28 20:08:03 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:03 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  98%|█████████▊| 284/289 [00:13&lt;00:00, 22.90it/s]2025/07/28 20:08:03 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  99%|█████████▉| 287/289 [00:13&lt;00:00, 23.65it/s]2025/07/28 20:08:03 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:03 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples: 100%|██████████| 289/289 [00:13&lt;00:00, 21.43it/s]&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-stdout\"&gt;\n&lt;pre&gt;&lt;code&gt;🏃 View run error_analysis_gemini_2.5_flash at: http://localhost:5000/#/experiments/1/runs/d415524ddcf94cd086f2f221c2f6f177\n🧪 View experiment at: http://localhost:5000/#/experiments/1&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n\n&lt;div&gt;\n  &lt;style scoped&gt;\n  button {\n    border: none;\n    border-radius: 4px;\n    background-color: rgb(34, 114, 180);\n    font-family: -apple-system, \"system-ui\", \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial;\n    font-size: 13px;\n    color: white;\n    margin-top: 8px;\n    margin-bottom: 8px;\n    padding: 8px 16px;\n    cursor: pointer;\n  }\n  button:hover {\n    background-color: rgb(66, 153, 224);\n  }\n  &lt;/style&gt;\n  &lt;button\n    onclick=\"\n        const display = this.nextElementSibling.style.display;\n        const isCollapsed = display === 'none';\n        this.nextElementSibling.style.display = isCollapsed ? null : 'none';\n\n        const verb = isCollapsed ? 'Collapse' : 'Expand';\n        this.innerText = `${verb} MLflow Trace`;\n    \"\n  &gt;Collapse MLflow Trace&lt;/button&gt;\n  &lt;iframe\n    id=\"trace-renderer\"\n    style=\"width: 100%; height: 500px; border: none; resize: vertical;\"\n    src=\"http://localhost:5000/static-files/lib/notebook-trace-renderer/index.html?trace_id=f51ec31b099c4ccb884824cd84faf244&amp;experiment_id=1&amp;trace_id=2b2a5bac43db4bdf8f1ba27a0c72707f&amp;experiment_id=1&amp;trace_id=33d30ce093eb4bcb8959b7e7b14f4f03&amp;experiment_id=1&amp;trace_id=585d29108d074c8eb2546d615be4e058&amp;experiment_id=1&amp;trace_id=f458046f22604e4cbb206f2ddea55891&amp;experiment_id=1&amp;trace_id=fae282bd8d524323a37fbafd71e5e50f&amp;experiment_id=1&amp;trace_id=e0f8503464d846308c8ac03dd3897e1a&amp;experiment_id=1&amp;trace_id=2f17ef3a251a4472920aac663506297b&amp;experiment_id=1&amp;trace_id=cb93f2fdd18b4a1289219be14632eeb9&amp;experiment_id=1&amp;trace_id=29a36ca6d3bb4720860417319bbe8d68&amp;experiment_id=1&amp;version=3.1.4\"\n  /&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-64\" class=\"cell\" data-execution_count=\"490\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb62\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb62-1\"&gt;&lt;a href=\"#cb62-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;import&lt;/span&gt; seaborn &lt;span class=\"im\"&gt;as&lt;/span&gt; sns&lt;/span&gt;\n&lt;span id=\"cb62-2\"&gt;&lt;a href=\"#cb62-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span class=\"im\"&gt;as&lt;/span&gt; plt&lt;/span&gt;\n&lt;span id=\"cb62-3\"&gt;&lt;a href=\"#cb62-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb62-4\"&gt;&lt;a href=\"#cb62-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;df &lt;span class=\"op\"&gt;=&lt;/span&gt; pd.DataFrame(judge_results)&lt;/span&gt;\n&lt;span id=\"cb62-5\"&gt;&lt;a href=\"#cb62-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;grouped &lt;span class=\"op\"&gt;=&lt;/span&gt; (&lt;/span&gt;\n&lt;span id=\"cb62-6\"&gt;&lt;a href=\"#cb62-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    df.groupby([&lt;span class=\"st\"&gt;&quot;model_name&quot;&lt;/span&gt;, &lt;span class=\"st\"&gt;&quot;assessment_answer&quot;&lt;/span&gt;]).size().reset_index(name&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;count&quot;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb62-7\"&gt;&lt;a href=\"#cb62-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;)&lt;/span&gt;\n&lt;span id=\"cb62-8\"&gt;&lt;a href=\"#cb62-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;plt.figure(figsize&lt;span class=\"op\"&gt;=&lt;/span&gt;(&lt;span class=\"dv\"&gt;10&lt;/span&gt;, &lt;span class=\"dv\"&gt;6&lt;/span&gt;))&lt;/span&gt;\n&lt;span id=\"cb62-9\"&gt;&lt;a href=\"#cb62-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;ax &lt;span class=\"op\"&gt;=&lt;/span&gt; sns.barplot(data&lt;span class=\"op\"&gt;=&lt;/span&gt;grouped, x&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;model_name&quot;&lt;/span&gt;, y&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;count&quot;&lt;/span&gt;, hue&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;assessment_answer&quot;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb62-10\"&gt;&lt;a href=\"#cb62-10\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;plt.title(&lt;span class=\"st\"&gt;&quot;Assessment Answer Counts by Model&quot;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb62-11\"&gt;&lt;a href=\"#cb62-11\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;plt.ylabel(&lt;span class=\"st\"&gt;&quot;Count&quot;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb62-12\"&gt;&lt;a href=\"#cb62-12\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;plt.xlabel(&lt;span class=\"st\"&gt;&quot;Model Name&quot;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb62-13\"&gt;&lt;a href=\"#cb62-13\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;plt.legend(title&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;Assessment Answer&quot;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb62-14\"&gt;&lt;a href=\"#cb62-14\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;plt.tight_layout()&lt;/span&gt;\n&lt;span id=\"cb62-15\"&gt;&lt;a href=\"#cb62-15\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb62-16\"&gt;&lt;a href=\"#cb62-16\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;# Add value annotations&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb62-17\"&gt;&lt;a href=\"#cb62-17\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"cf\"&gt;for&lt;/span&gt; p &lt;span class=\"kw\"&gt;in&lt;/span&gt; ax.patches:&lt;/span&gt;\n&lt;span id=\"cb62-18\"&gt;&lt;a href=\"#cb62-18\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    height &lt;span class=\"op\"&gt;=&lt;/span&gt; p.get_height()&lt;/span&gt;\n&lt;span id=\"cb62-19\"&gt;&lt;a href=\"#cb62-19\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;if&lt;/span&gt; height &lt;span class=\"op\"&gt;&gt;&lt;/span&gt; &lt;span class=\"dv\"&gt;0&lt;/span&gt;:&lt;/span&gt;\n&lt;span id=\"cb62-20\"&gt;&lt;a href=\"#cb62-20\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        ax.annotate(&lt;/span&gt;\n&lt;span id=\"cb62-21\"&gt;&lt;a href=\"#cb62-21\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            &lt;span class=\"ss\"&gt;f&quot;&lt;/span&gt;&lt;span class=\"sc\"&gt;{&lt;/span&gt;&lt;span class=\"bu\"&gt;int&lt;/span&gt;(height)&lt;span class=\"sc\"&gt;}&lt;/span&gt;&lt;span class=\"ss\"&gt;&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb62-22\"&gt;&lt;a href=\"#cb62-22\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            (p.get_x() &lt;span class=\"op\"&gt;+&lt;/span&gt; p.get_width() &lt;span class=\"op\"&gt;/&lt;/span&gt; &lt;span class=\"dv\"&gt;2&lt;/span&gt;, height),&lt;/span&gt;\n&lt;span id=\"cb62-23\"&gt;&lt;a href=\"#cb62-23\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            ha&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;center&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb62-24\"&gt;&lt;a href=\"#cb62-24\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            va&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;bottom&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb62-25\"&gt;&lt;a href=\"#cb62-25\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            fontsize&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"dv\"&gt;10&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb62-26\"&gt;&lt;a href=\"#cb62-26\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            color&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;black&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb62-27\"&gt;&lt;a href=\"#cb62-27\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            xytext&lt;span class=\"op\"&gt;=&lt;/span&gt;(&lt;span class=\"dv\"&gt;0&lt;/span&gt;, &lt;span class=\"dv\"&gt;2&lt;/span&gt;),&lt;/span&gt;\n&lt;span id=\"cb62-28\"&gt;&lt;a href=\"#cb62-28\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            textcoords&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;offset points&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb62-29\"&gt;&lt;a href=\"#cb62-29\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        )&lt;/span&gt;\n&lt;span id=\"cb62-30\"&gt;&lt;a href=\"#cb62-30\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb62-31\"&gt;&lt;a href=\"#cb62-31\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;plt.show()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;div&gt;\n&lt;figure&gt;\n&lt;p&gt;&lt;a href=\"2025-09-01-cl-dspy-modelling_files/figure-html/cell-40-output-1.png\" class=\"lightbox\" data-gallery=\"quarto-lightbox-gallery-1\"&gt;&lt;img src=\"2025-09-01-cl-dspy-modelling_files/figure-html/cell-40-output-1.png\" class=\"img-fluid\" /&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;/figure&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-65\" class=\"cell\" data-execution_count=\"502\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb63\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb63-1\"&gt;&lt;a href=\"#cb63-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;df.to_csv(&lt;span class=\"st\"&gt;&#39;./judge_results/gate_and_probe_judge_results.csv&#39;&lt;/span&gt;, index&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;False&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;/div&gt;\n&lt;p&gt;From the analysis above, we see that: - Majority of the errors for all our selected models are due to &lt;strong&gt;incorrect ground truth&lt;/strong&gt;. - We also see cases where the model was unable to generate the answer in the format as expected by the ground truth. - Finally, somewhat surpringly, we see some results marked as “OK”, even though we only selected records that didn’t match the ground truth using our &lt;em&gt;exact match&lt;/em&gt; metric.&lt;/p&gt;\n&lt;p&gt;Let’s look through this more closely:&lt;/p&gt;\n&lt;div id=\"cell-67\" class=\"cell\" data-execution_count=\"503\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb64\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb64-1\"&gt;&lt;a href=\"#cb64-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;df[df[&lt;span class=\"st\"&gt;&quot;assessment_answer&quot;&lt;/span&gt;] &lt;span class=\"op\"&gt;==&lt;/span&gt; &lt;span class=\"st\"&gt;&quot;GROUND_TRUTH_INCORRECT&quot;&lt;/span&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;div class=\"cell-output cell-output-display\" data-execution_count=\"503\"&gt;\n&lt;div&gt;\n&lt;div&gt;\n&lt;style scoped&gt;\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n&lt;/style&gt;\n\n&lt;table class=\"dataframe\" data-quarto-postprocess=\"true\" data-border=\"1\"&gt;\n&lt;thead&gt;\n&lt;tr class=\"header\" style=\"text-align: right;\"&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;id&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;model_name&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;question&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;ground_truth_answer&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;predicted_answer&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;assessment_answer&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;assessment_reasoning&lt;/th&gt;\n&lt;/tr&gt;\n&lt;/thead&gt;\n&lt;tbody&gt;\n&lt;tr class=\"odd\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;0&lt;/td&gt;\n&lt;td&gt;Single_ETR/2011/page_22.pdf-3&lt;/td&gt;\n&lt;td&gt;openai/o4-mini-2025-04-16&lt;/td&gt;\n&lt;td&gt;so what was the percentage change during this time?&lt;/td&gt;\n&lt;td&gt;7.605000e-02&lt;/td&gt;\n&lt;td&gt;7.6%&lt;/td&gt;\n&lt;td&gt;GROUND_TRUTH_INCORRECT&lt;/td&gt;\n&lt;td&gt;The question asks for a \"percentage change\". The model correctly c...&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"even\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;1&lt;/td&gt;\n&lt;td&gt;Single_ETR/2004/page_258.pdf-4&lt;/td&gt;\n&lt;td&gt;openai/o4-mini-2025-04-16&lt;/td&gt;\n&lt;td&gt;what is the percent change?&lt;/td&gt;\n&lt;td&gt;1.473800e-01&lt;/td&gt;\n&lt;td&gt;14.7%&lt;/td&gt;\n&lt;td&gt;GROUND_TRUTH_INCORRECT&lt;/td&gt;\n&lt;td&gt;The question asks for the \"percent change\". The predicted answer p...&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"odd\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;3&lt;/td&gt;\n&lt;td&gt;Single_ADI/2011/page_83.pdf-2&lt;/td&gt;\n&lt;td&gt;openai/o4-mini-2025-04-16&lt;/td&gt;\n&lt;td&gt;what growth rate does this represent?&lt;/td&gt;\n&lt;td&gt;8.290600e-01&lt;/td&gt;\n&lt;td&gt;82.9%&lt;/td&gt;\n&lt;td&gt;GROUND_TRUTH_INCORRECT&lt;/td&gt;\n&lt;td&gt;The question asks for a 'growth rate', which is typically expresse...&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"even\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;4&lt;/td&gt;\n&lt;td&gt;Single_CB/2008/page_243.pdf-3&lt;/td&gt;\n&lt;td&gt;openai/o4-mini-2025-04-16&lt;/td&gt;\n&lt;td&gt;what was the percent change?&lt;/td&gt;\n&lt;td&gt;7.368000e-02&lt;/td&gt;\n&lt;td&gt;7.37&lt;/td&gt;\n&lt;td&gt;GROUND_TRUTH_INCORRECT&lt;/td&gt;\n&lt;td&gt;The question asks for the \"percent change\". The model correctly ca...&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"odd\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;5&lt;/td&gt;\n&lt;td&gt;Single_AMT/2015/page_50.pdf-1&lt;/td&gt;\n&lt;td&gt;openai/o4-mini-2025-04-16&lt;/td&gt;\n&lt;td&gt;what was the low for share price for the quarter ended 12/31/15?&lt;/td&gt;\n&lt;td&gt;8.732000e+01&lt;/td&gt;\n&lt;td&gt;90.2&lt;/td&gt;\n&lt;td&gt;GROUND_TRUTH_INCORRECT&lt;/td&gt;\n&lt;td&gt;The question asks for the low share price for the quarter ended 12...&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"even\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;...&lt;/td&gt;\n&lt;td&gt;...&lt;/td&gt;\n&lt;td&gt;...&lt;/td&gt;\n&lt;td&gt;...&lt;/td&gt;\n&lt;td&gt;...&lt;/td&gt;\n&lt;td&gt;...&lt;/td&gt;\n&lt;td&gt;...&lt;/td&gt;\n&lt;td&gt;...&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"odd\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;282&lt;/td&gt;\n&lt;td&gt;Single_SLG/2017/page_114.pdf-3&lt;/td&gt;\n&lt;td&gt;openai/o3-2025-04-16&lt;/td&gt;\n&lt;td&gt;so what was the percentage of pension plan contributions out of th...&lt;/td&gt;\n&lt;td&gt;2.302800e-01&lt;/td&gt;\n&lt;td&gt;23.03&lt;/td&gt;\n&lt;td&gt;GROUND_TRUTH_INCORRECT&lt;/td&gt;\n&lt;td&gt;The question asks for a \"percentage\". The model correctly calculat...&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"even\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;283&lt;/td&gt;\n&lt;td&gt;Single_JPM/2008/page_177.pdf-4&lt;/td&gt;\n&lt;td&gt;openai/o3-2025-04-16&lt;/td&gt;\n&lt;td&gt;what was the total amount of resale agreements in 2008, in millions?&lt;/td&gt;\n&lt;td&gt;2.080000e+04&lt;/td&gt;\n&lt;td&gt;200,265&lt;/td&gt;\n&lt;td&gt;GROUND_TRUTH_INCORRECT&lt;/td&gt;\n&lt;td&gt;The question asks for the 'total amount of resale agreements in 20...&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"odd\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;284&lt;/td&gt;\n&lt;td&gt;Double_IPG/2014/page_95.pdf&lt;/td&gt;\n&lt;td&gt;openai/o3-2025-04-16&lt;/td&gt;\n&lt;td&gt;and what is it for the the 2009 one?&lt;/td&gt;\n&lt;td&gt;1.218121e+07&lt;/td&gt;\n&lt;td&gt;435259&lt;/td&gt;\n&lt;td&gt;GROUND_TRUTH_INCORRECT&lt;/td&gt;\n&lt;td&gt;The question asks for the value for \"the 2009 one\". The previous t...&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"even\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;286&lt;/td&gt;\n&lt;td&gt;Single_APTV/2018/page_36.pdf-2&lt;/td&gt;\n&lt;td&gt;openai/o3-2025-04-16&lt;/td&gt;\n&lt;td&gt;how much does the change in the value of the aptiv plc represent i...&lt;/td&gt;\n&lt;td&gt;3.080000e-01&lt;/td&gt;\n&lt;td&gt;30.8%&lt;/td&gt;\n&lt;td&gt;GROUND_TRUTH_INCORRECT&lt;/td&gt;\n&lt;td&gt;The question asks for the answer \"in percentage\". The model correc...&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"odd\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;288&lt;/td&gt;\n&lt;td&gt;Single_RCL/2016/page_7.pdf-3&lt;/td&gt;\n&lt;td&gt;openai/o3-2025-04-16&lt;/td&gt;\n&lt;td&gt;what percentage change does this represent?&lt;/td&gt;\n&lt;td&gt;1.600000e-01&lt;/td&gt;\n&lt;td&gt;16.0&lt;/td&gt;\n&lt;td&gt;GROUND_TRUTH_INCORRECT&lt;/td&gt;\n&lt;td&gt;The question asks for a 'percentage change'. The model correctly c...&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/tbody&gt;\n&lt;/table&gt;\n\n&lt;p&gt;226 rows × 7 columns&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;Aha! We see that while the &lt;em&gt;predicted answer&lt;/em&gt; didnt match the ground truth exactly, it’s &lt;strong&gt;actually&lt;/strong&gt; correct for all these cases. We can further use these examples to improve our &lt;strong&gt;exact match&lt;/strong&gt; metric implementation!&lt;/p&gt;\n&lt;p&gt;The above results are &lt;strong&gt;not conclusive&lt;/strong&gt; by any means, since the LLM-as-a-judge approach also has known flaws. However, it does give us some pointers on how to improve the model performance from here!&lt;/p&gt;\n&lt;div id=\"quarto-navigation-envelope\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar-title\"&gt;Shubham Gupta&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar-title\"&gt;Shubham Gupta&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:About\"&gt;About&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:/about.html\"&gt;/about.html&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:https://github.com/goodhamgupta\"&gt;https://github.com/goodhamgupta&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:/index.xml\"&gt;/index.xml&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;div id=\"quarto-meta-markdown\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden\" data-render-id=\"quarto-metatitle\"&gt;Shubham Gupta - Curriculum Learning 🤝 DSPy: Modelling&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-twittercardtitle\"&gt;Shubham Gupta - Curriculum Learning 🤝 DSPy: Modelling&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-ogcardtitle\"&gt;Shubham Gupta - Curriculum Learning 🤝 DSPy: Modelling&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-metasitename\"&gt;Shubham Gupta&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-twittercarddesc\"&gt;Mapping ConvFinQA and crafting a curriculum for financial QA&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-ogcardddesc\"&gt;Mapping ConvFinQA and crafting a curriculum for financial QA&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;/section&gt;\n&lt;/section&gt;\n\n&lt;/main&gt; &lt;!-- /main --&gt;\n&lt;script id = \"quarto-html-after-body\" type=\"application/javascript\"&gt;\nwindow.document.addEventListener(\"DOMContentLoaded\", function (event) {\n  const toggleBodyColorMode = (bsSheetEl) =&gt; {\n    const mode = bsSheetEl.getAttribute(\"data-mode\");\n    const bodyEl = window.document.querySelector(\"body\");\n    if (mode === \"dark\") {\n      bodyEl.classList.add(\"quarto-dark\");\n      bodyEl.classList.remove(\"quarto-light\");\n    } else {\n      bodyEl.classList.add(\"quarto-light\");\n      bodyEl.classList.remove(\"quarto-dark\");\n    }\n  }\n  const toggleBodyColorPrimary = () =&gt; {\n    const bsSheetEl = window.document.querySelector(\"link#quarto-bootstrap\");\n    if (bsSheetEl) {\n      toggleBodyColorMode(bsSheetEl);\n    }\n  }\n  toggleBodyColorPrimary();  \n  const disableStylesheet = (stylesheets) =&gt; {\n    for (let i=0; i &lt; stylesheets.length; i++) {\n      const stylesheet = stylesheets[i];\n      stylesheet.rel = 'prefetch';\n    }\n  }\n  const enableStylesheet = (stylesheets) =&gt; {\n    for (let i=0; i &lt; stylesheets.length; i++) {\n      const stylesheet = stylesheets[i];\n      stylesheet.rel = 'stylesheet';\n    }\n  }\n  const manageTransitions = (selector, allowTransitions) =&gt; {\n    const els = window.document.querySelectorAll(selector);\n    for (let i=0; i &lt; els.length; i++) {\n      const el = els[i];\n      if (allowTransitions) {\n        el.classList.remove('notransition');\n      } else {\n        el.classList.add('notransition');\n      }\n    }\n  }\n  const toggleGiscusIfUsed = (isAlternate, darkModeDefault) =&gt; {\n    const baseTheme = document.querySelector('#giscus-base-theme')?.value ?? 'light';\n    const alternateTheme = document.querySelector('#giscus-alt-theme')?.value ?? 'dark';\n    let newTheme = '';\n    if(darkModeDefault) {\n      newTheme = isAlternate ? baseTheme : alternateTheme;\n    } else {\n      newTheme = isAlternate ? alternateTheme : baseTheme;\n    }\n    const changeGiscusTheme = () =&gt; {\n      // From: https://github.com/giscus/giscus/issues/336\n      const sendMessage = (message) =&gt; {\n        const iframe = document.querySelector('iframe.giscus-frame');\n        if (!iframe) return;\n        iframe.contentWindow.postMessage({ giscus: message }, 'https://giscus.app');\n      }\n      sendMessage({\n        setConfig: {\n          theme: newTheme\n        }\n      });\n    }\n    const isGiscussLoaded = window.document.querySelector('iframe.giscus-frame') !== null;\n    if (isGiscussLoaded) {\n      changeGiscusTheme();\n    }\n  }\n  const toggleColorMode = (alternate) =&gt; {\n    // Switch the stylesheets\n    const alternateStylesheets = window.document.querySelectorAll('link.quarto-color-scheme.quarto-color-alternate');\n    manageTransitions('#quarto-margin-sidebar .nav-link', false);\n    if (alternate) {\n      enableStylesheet(alternateStylesheets);\n      for (const sheetNode of alternateStylesheets) {\n        if (sheetNode.id === \"quarto-bootstrap\") {\n          toggleBodyColorMode(sheetNode);\n        }\n      }\n    } else {\n      disableStylesheet(alternateStylesheets);\n      toggleBodyColorPrimary();\n    }\n    manageTransitions('#quarto-margin-sidebar .nav-link', true);\n    // Switch the toggles\n    const toggles = window.document.querySelectorAll('.quarto-color-scheme-toggle');\n    for (let i=0; i &lt; toggles.length; i++) {\n      const toggle = toggles[i];\n      if (toggle) {\n        if (alternate) {\n          toggle.classList.add(\"alternate\");     \n        } else {\n          toggle.classList.remove(\"alternate\");\n        }\n      }\n    }\n    // Hack to workaround the fact that safari doesn't\n    // properly recolor the scrollbar when toggling (#1455)\n    if (navigator.userAgent.indexOf('Safari') &gt; 0 && navigator.userAgent.indexOf('Chrome') == -1) {\n      manageTransitions(\"body\", false);\n      window.scrollTo(0, 1);\n      setTimeout(() =&gt; {\n        window.scrollTo(0, 0);\n        manageTransitions(\"body\", true);\n      }, 40);  \n    }\n  }\n  const isFileUrl = () =&gt; { \n    return window.location.protocol === 'file:';\n  }\n  const hasAlternateSentinel = () =&gt; {  \n    let styleSentinel = getColorSchemeSentinel();\n    if (styleSentinel !== null) {\n      return styleSentinel === \"alternate\";\n    } else {\n      return false;\n    }\n  }\n  const setStyleSentinel = (alternate) =&gt; {\n    const value = alternate ? \"alternate\" : \"default\";\n    if (!isFileUrl()) {\n      window.localStorage.setItem(\"quarto-color-scheme\", value);\n    } else {\n      localAlternateSentinel = value;\n    }\n  }\n  const getColorSchemeSentinel = () =&gt; {\n    if (!isFileUrl()) {\n      const storageValue = window.localStorage.getItem(\"quarto-color-scheme\");\n      return storageValue != null ? storageValue : localAlternateSentinel;\n    } else {\n      return localAlternateSentinel;\n    }\n  }\n  const darkModeDefault = false;\n  let localAlternateSentinel = darkModeDefault ? 'alternate' : 'default';\n  // Dark / light mode switch\n  window.quartoToggleColorScheme = () =&gt; {\n    // Read the current dark / light value \n    let toAlternate = !hasAlternateSentinel();\n    toggleColorMode(toAlternate);\n    setStyleSentinel(toAlternate);\n    toggleGiscusIfUsed(toAlternate, darkModeDefault);\n  };\n  // Ensure there is a toggle, if there isn't float one in the top right\n  if (window.document.querySelector('.quarto-color-scheme-toggle') === null) {\n    const a = window.document.createElement('a');\n    a.classList.add('top-right');\n    a.classList.add('quarto-color-scheme-toggle');\n    a.href = \"\";\n    a.onclick = function() { try { window.quartoToggleColorScheme(); } catch {} return false; };\n    const i = window.document.createElement(\"i\");\n    i.classList.add('bi');\n    a.appendChild(i);\n    window.document.body.appendChild(a);\n  }\n  // Switch to dark mode if need be\n  if (hasAlternateSentinel()) {\n    toggleColorMode(true);\n  } else {\n    toggleColorMode(false);\n  }\n  const icon = \"\";\n  const anchorJS = new window.AnchorJS();\n  anchorJS.options = {\n    placement: 'right',\n    icon: icon\n  };\n  anchorJS.add('.anchored');\n  const isCodeAnnotation = (el) =&gt; {\n    for (const clz of el.classList) {\n      if (clz.startsWith('code-annotation-')) {                     \n        return true;\n      }\n    }\n    return false;\n  }\n  const clipboard = new window.ClipboardJS('.code-copy-button', {\n    text: function(trigger) {\n      const codeEl = trigger.previousElementSibling.cloneNode(true);\n      for (const childEl of codeEl.children) {\n        if (isCodeAnnotation(childEl)) {\n          childEl.remove();\n        }\n      }\n      return codeEl.innerText;\n    }\n  });\n  clipboard.on('success', function(e) {\n    // button target\n    const button = e.trigger;\n    // don't keep focus\n    button.blur();\n    // flash \"checked\"\n    button.classList.add('code-copy-button-checked');\n    var currentTitle = button.getAttribute(\"title\");\n    button.setAttribute(\"title\", \"Copied!\");\n    let tooltip;\n    if (window.bootstrap) {\n      button.setAttribute(\"data-bs-toggle\", \"tooltip\");\n      button.setAttribute(\"data-bs-placement\", \"left\");\n      button.setAttribute(\"data-bs-title\", \"Copied!\");\n      tooltip = new bootstrap.Tooltip(button, \n        { trigger: \"manual\", \n          customClass: \"code-copy-button-tooltip\",\n          offset: [0, -8]});\n      tooltip.show();    \n    }\n    setTimeout(function() {\n      if (tooltip) {\n        tooltip.hide();\n        button.removeAttribute(\"data-bs-title\");\n        button.removeAttribute(\"data-bs-toggle\");\n        button.removeAttribute(\"data-bs-placement\");\n      }\n      button.setAttribute(\"title\", currentTitle);\n      button.classList.remove('code-copy-button-checked');\n    }, 1000);\n    // clear code selection\n    e.clearSelection();\n  });\n  const viewSource = window.document.getElementById('quarto-view-source') ||\n                     window.document.getElementById('quarto-code-tools-source');\n  if (viewSource) {\n    const sourceUrl = viewSource.getAttribute(\"data-quarto-source-url\");\n    viewSource.addEventListener(\"click\", function(e) {\n      if (sourceUrl) {\n        // rstudio viewer pane\n        if (/\\bcapabilities=\\b/.test(window.location)) {\n          window.open(sourceUrl);\n        } else {\n          window.location.href = sourceUrl;\n        }\n      } else {\n        const modal = new bootstrap.Modal(document.getElementById('quarto-embedded-source-code-modal'));\n        modal.show();\n      }\n      return false;\n    });\n  }\n  function toggleCodeHandler(show) {\n    return function(e) {\n      const detailsSrc = window.document.querySelectorAll(\".cell &gt; details &gt; .sourceCode\");\n      for (let i=0; i&lt;detailsSrc.length; i++) {\n        const details = detailsSrc[i].parentElement;\n        if (show) {\n          details.open = true;\n        } else {\n          details.removeAttribute(\"open\");\n        }\n      }\n      const cellCodeDivs = window.document.querySelectorAll(\".cell &gt; .sourceCode\");\n      const fromCls = show ? \"hidden\" : \"unhidden\";\n      const toCls = show ? \"unhidden\" : \"hidden\";\n      for (let i=0; i&lt;cellCodeDivs.length; i++) {\n        const codeDiv = cellCodeDivs[i];\n        if (codeDiv.classList.contains(fromCls)) {\n          codeDiv.classList.remove(fromCls);\n          codeDiv.classList.add(toCls);\n        } \n      }\n      return false;\n    }\n  }\n  const hideAllCode = window.document.getElementById(\"quarto-hide-all-code\");\n  if (hideAllCode) {\n    hideAllCode.addEventListener(\"click\", toggleCodeHandler(false));\n  }\n  const showAllCode = window.document.getElementById(\"quarto-show-all-code\");\n  if (showAllCode) {\n    showAllCode.addEventListener(\"click\", toggleCodeHandler(true));\n  }\n  function tippyHover(el, contentFn, onTriggerFn, onUntriggerFn) {\n    const config = {\n      allowHTML: true,\n      maxWidth: 500,\n      delay: 100,\n      arrow: false,\n      appendTo: function(el) {\n          return el.parentElement;\n      },\n      interactive: true,\n      interactiveBorder: 10,\n      theme: 'quarto',\n      placement: 'bottom-start',\n    };\n    if (contentFn) {\n      config.content = contentFn;\n    }\n    if (onTriggerFn) {\n      config.onTrigger = onTriggerFn;\n    }\n    if (onUntriggerFn) {\n      config.onUntrigger = onUntriggerFn;\n    }\n    window.tippy(el, config); \n  }\n  const xrefs = window.document.querySelectorAll('a.quarto-xref');\n  const processXRef = (id, note) =&gt; {\n    // Strip column container classes\n    const stripColumnClz = (el) =&gt; {\n      el.classList.remove(\"page-full\", \"page-columns\");\n      if (el.children) {\n        for (const child of el.children) {\n          stripColumnClz(child);\n        }\n      }\n    }\n    stripColumnClz(note)\n    if (id === null || id.startsWith('sec-')) {\n      // Special case sections, only their first couple elements\n      const container = document.createElement(\"div\");\n      if (note.children && note.children.length &gt; 2) {\n        container.appendChild(note.children[0].cloneNode(true));\n        for (let i = 1; i &lt; note.children.length; i++) {\n          const child = note.children[i];\n          if (child.tagName === \"P\" && child.innerText === \"\") {\n            continue;\n          } else {\n            container.appendChild(child.cloneNode(true));\n            break;\n          }\n        }\n        if (window.Quarto?.typesetMath) {\n          window.Quarto.typesetMath(container);\n        }\n        return container.innerHTML\n      } else {\n        if (window.Quarto?.typesetMath) {\n          window.Quarto.typesetMath(note);\n        }\n        return note.innerHTML;\n      }\n    } else {\n      // Remove any anchor links if they are present\n      const anchorLink = note.querySelector('a.anchorjs-link');\n      if (anchorLink) {\n        anchorLink.remove();\n      }\n      if (window.Quarto?.typesetMath) {\n        window.Quarto.typesetMath(note);\n      }\n      // TODO in 1.5, we should make sure this works without a callout special case\n      if (note.classList.contains(\"callout\")) {\n        return note.outerHTML;\n      } else {\n        return note.innerHTML;\n      }\n    }\n  }\n  for (var i=0; i&lt;xrefs.length; i++) {\n    const xref = xrefs[i];\n    tippyHover(xref, undefined, function(instance) {\n      instance.disable();\n      let url = xref.getAttribute('href');\n      let hash = undefined; \n      if (url.startsWith('#')) {\n        hash = url;\n      } else {\n        try { hash = new URL(url).hash; } catch {}\n      }\n      if (hash) {\n        const id = hash.replace(/^#\\/?/, \"\");\n        const note = window.document.getElementById(id);\n        if (note !== null) {\n          try {\n            const html = processXRef(id, note.cloneNode(true));\n            instance.setContent(html);\n          } finally {\n            instance.enable();\n            instance.show();\n          }\n        } else {\n          // See if we can fetch this\n          fetch(url.split('#')[0])\n          .then(res =&gt; res.text())\n          .then(html =&gt; {\n            const parser = new DOMParser();\n            const htmlDoc = parser.parseFromString(html, \"text/html\");\n            const note = htmlDoc.getElementById(id);\n            if (note !== null) {\n              const html = processXRef(id, note);\n              instance.setContent(html);\n            } \n          }).finally(() =&gt; {\n            instance.enable();\n            instance.show();\n          });\n        }\n      } else {\n        // See if we can fetch a full url (with no hash to target)\n        // This is a special case and we should probably do some content thinning / targeting\n        fetch(url)\n        .then(res =&gt; res.text())\n        .then(html =&gt; {\n          const parser = new DOMParser();\n          const htmlDoc = parser.parseFromString(html, \"text/html\");\n          const note = htmlDoc.querySelector('main.content');\n          if (note !== null) {\n            // This should only happen for chapter cross references\n            // (since there is no id in the URL)\n            // remove the first header\n            if (note.children.length &gt; 0 && note.children[0].tagName === \"HEADER\") {\n              note.children[0].remove();\n            }\n            const html = processXRef(null, note);\n            instance.setContent(html);\n          } \n        }).finally(() =&gt; {\n          instance.enable();\n          instance.show();\n        });\n      }\n    }, function(instance) {\n    });\n  }\n      let selectedAnnoteEl;\n      const selectorForAnnotation = ( cell, annotation) =&gt; {\n        let cellAttr = 'data-code-cell=\"' + cell + '\"';\n        let lineAttr = 'data-code-annotation=\"' +  annotation + '\"';\n        const selector = 'span[' + cellAttr + '][' + lineAttr + ']';\n        return selector;\n      }\n      const selectCodeLines = (annoteEl) =&gt; {\n        const doc = window.document;\n        const targetCell = annoteEl.getAttribute(\"data-target-cell\");\n        const targetAnnotation = annoteEl.getAttribute(\"data-target-annotation\");\n        const annoteSpan = window.document.querySelector(selectorForAnnotation(targetCell, targetAnnotation));\n        const lines = annoteSpan.getAttribute(\"data-code-lines\").split(\",\");\n        const lineIds = lines.map((line) =&gt; {\n          return targetCell + \"-\" + line;\n        })\n        let top = null;\n        let height = null;\n        let parent = null;\n        if (lineIds.length &gt; 0) {\n            //compute the position of the single el (top and bottom and make a div)\n            const el = window.document.getElementById(lineIds[0]);\n            top = el.offsetTop;\n            height = el.offsetHeight;\n            parent = el.parentElement.parentElement;\n          if (lineIds.length &gt; 1) {\n            const lastEl = window.document.getElementById(lineIds[lineIds.length - 1]);\n            const bottom = lastEl.offsetTop + lastEl.offsetHeight;\n            height = bottom - top;\n          }\n          if (top !== null && height !== null && parent !== null) {\n            // cook up a div (if necessary) and position it \n            let div = window.document.getElementById(\"code-annotation-line-highlight\");\n            if (div === null) {\n              div = window.document.createElement(\"div\");\n              div.setAttribute(\"id\", \"code-annotation-line-highlight\");\n              div.style.position = 'absolute';\n              parent.appendChild(div);\n            }\n            div.style.top = top - 2 + \"px\";\n            div.style.height = height + 4 + \"px\";\n            div.style.left = 0;\n            let gutterDiv = window.document.getElementById(\"code-annotation-line-highlight-gutter\");\n            if (gutterDiv === null) {\n              gutterDiv = window.document.createElement(\"div\");\n              gutterDiv.setAttribute(\"id\", \"code-annotation-line-highlight-gutter\");\n              gutterDiv.style.position = 'absolute';\n              const codeCell = window.document.getElementById(targetCell);\n              const gutter = codeCell.querySelector('.code-annotation-gutter');\n              gutter.appendChild(gutterDiv);\n            }\n            gutterDiv.style.top = top - 2 + \"px\";\n            gutterDiv.style.height = height + 4 + \"px\";\n          }\n          selectedAnnoteEl = annoteEl;\n        }\n      };\n      const unselectCodeLines = () =&gt; {\n        const elementsIds = [\"code-annotation-line-highlight\", \"code-annotation-line-highlight-gutter\"];\n        elementsIds.forEach((elId) =&gt; {\n          const div = window.document.getElementById(elId);\n          if (div) {\n            div.remove();\n          }\n        });\n        selectedAnnoteEl = undefined;\n      };\n        // Handle positioning of the toggle\n    window.addEventListener(\n      \"resize\",\n      throttle(() =&gt; {\n        elRect = undefined;\n        if (selectedAnnoteEl) {\n          selectCodeLines(selectedAnnoteEl);\n        }\n      }, 10)\n    );\n    function throttle(fn, ms) {\n    let throttle = false;\n    let timer;\n      return (...args) =&gt; {\n        if(!throttle) { // first call gets through\n            fn.apply(this, args);\n            throttle = true;\n        } else { // all the others get throttled\n            if(timer) clearTimeout(timer); // cancel #2\n            timer = setTimeout(() =&gt; {\n              fn.apply(this, args);\n              timer = throttle = false;\n            }, ms);\n        }\n      };\n    }\n      // Attach click handler to the DT\n      const annoteDls = window.document.querySelectorAll('dt[data-target-cell]');\n      for (const annoteDlNode of annoteDls) {\n        annoteDlNode.addEventListener('click', (event) =&gt; {\n          const clickedEl = event.target;\n          if (clickedEl !== selectedAnnoteEl) {\n            unselectCodeLines();\n            const activeEl = window.document.querySelector('dt[data-target-cell].code-annotation-active');\n            if (activeEl) {\n              activeEl.classList.remove('code-annotation-active');\n            }\n            selectCodeLines(clickedEl);\n            clickedEl.classList.add('code-annotation-active');\n          } else {\n            // Unselect the line\n            unselectCodeLines();\n            clickedEl.classList.remove('code-annotation-active');\n          }\n        });\n      }\n  const findCites = (el) =&gt; {\n    const parentEl = el.parentElement;\n    if (parentEl) {\n      const cites = parentEl.dataset.cites;\n      if (cites) {\n        return {\n          el,\n          cites: cites.split(' ')\n        };\n      } else {\n        return findCites(el.parentElement)\n      }\n    } else {\n      return undefined;\n    }\n  };\n  var bibliorefs = window.document.querySelectorAll('a[role=\"doc-biblioref\"]');\n  for (var i=0; i&lt;bibliorefs.length; i++) {\n    const ref = bibliorefs[i];\n    const citeInfo = findCites(ref);\n    if (citeInfo) {\n      tippyHover(citeInfo.el, function() {\n        var popup = window.document.createElement('div');\n        citeInfo.cites.forEach(function(cite) {\n          var citeDiv = window.document.createElement('div');\n          citeDiv.classList.add('hanging-indent');\n          citeDiv.classList.add('csl-entry');\n          var biblioDiv = window.document.getElementById('ref-' + cite);\n          if (biblioDiv) {\n            citeDiv.innerHTML = biblioDiv.innerHTML;\n          }\n          popup.appendChild(citeDiv);\n        });\n        return popup.innerHTML;\n      });\n    }\n  }\n});\n&lt;/script&gt;\n&lt;script src=\"https://giscus.app/client.js\"\n        data-repo=\"goodhamgupta/personal_blog\"\n        data-repo-id=\"R_kgDOLXv-xA\"\n        data-category=\"General\"\n        data-category-id=\"DIC_kwDOLXv-xM4Cdogy\"\n        data-mapping=\"title\"\n        data-reactions-enabled=\"1\"\n        data-emit-metadata=\"0\"\n        data-input-position=\"top\"\n        data-theme=\"light\"\n        data-lang=\"en\"\n        crossorigin=\"anonymous\"\n        async&gt;\n&lt;/script&gt;\n&lt;input type=\"hidden\" id=\"giscus-base-theme\" value=\"light\"&gt;\n&lt;input type=\"hidden\" id=\"giscus-alt-theme\" value=\"dark\"&gt;\n&lt;/div&gt; &lt;!-- /content --&gt;\n&lt;script&gt;var lightboxQuarto = GLightbox({\"closeEffect\":\"zoom\",\"descPosition\":\"bottom\",\"openEffect\":\"zoom\",\"selector\":\".lightbox\",\"loop\":false});\nwindow.onload = () =&gt; {\n  lightboxQuarto.on('slide_before_load', (data) =&gt; {\n    const { slideIndex, slideNode, slideConfig, player, trigger } = data;\n    const href = trigger.getAttribute('href');\n    if (href !== null) {\n      const imgEl = window.document.querySelector(`a[href=\"${href}\"] img`);\n      if (imgEl !== null) {\n        const srcAttr = imgEl.getAttribute(\"src\");\n        if (srcAttr && srcAttr.startsWith(\"data:\")) {\n          slideConfig.href = srcAttr;\n        }\n      }\n    } \n  });\n\n  lightboxQuarto.on('slide_after_load', (data) =&gt; {\n    const { slideIndex, slideNode, slideConfig, player, trigger } = data;\n    if (window.Quarto?.typesetMath) {\n      window.Quarto.typesetMath(slideNode);\n    }\n  });\n\n};\n          &lt;/script&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;"
  },
  {
    "objectID": "posts/2020-01-14-first-post.html",
    "href": "posts/2020-01-14-first-post.html",
    "title": "Yo!",
    "section": "",
    "text": "Yo!\nSuper excited to finally get my own blog. Hope to write out those long pending articles ASAP now. Stay tuned!"
  },
  {
    "objectID": "posts/2020-04-23-tag-lm.html",
    "href": "posts/2020-04-23-tag-lm.html",
    "title": "TagLM",
    "section": "",
    "text": "This is the TagLM paper mentioned in Lecture 13 in the CS224N course title Semi-supervised sequence tagging with bidirectional language models\nThis paper demonstrates how we can use context embeddings from BiLSTM models and use it for sequence labelling tasks"
  },
  {
    "objectID": "posts/2020-04-23-tag-lm.html#overview",
    "href": "posts/2020-04-23-tag-lm.html#overview",
    "title": "TagLM",
    "section": "Overview",
    "text": "Overview\n\nExtract word and LM embeddings for every token\nPrepare embedding by concatinating both embeddings\nse them in supervised sequence tagging model"
  },
  {
    "objectID": "posts/2020-04-23-tag-lm.html#baseline",
    "href": "posts/2020-04-23-tag-lm.html#baseline",
    "title": "TagLM",
    "section": "Baseline",
    "text": "Baseline\n\nBaseline model is hierachical neural tagging model\nObtain word and character embeddings. Concatenate them to form final embedding.\n\\[ x_k = [c_k;w_k] \\]\nChar embedding: Can be obtained via CNN or RNN\nWord embedding: Use pretrained embeddings\nUse multiple bidirectional RNN to learn context embedding\nFor every token, concatenate forward and backward hidden states at each layer\n2nd layer will use the above output and predict next hidden state\nUse GRU or LSTM depending on task\nUse output of final layer to predict score for each possible tag using dense layer\nBetter to predict tags for full sequence than for a single token\nTHEREFORE, add another layer with parameters for each label bigram.\nCompute sentence conditional random field loss(CRF) using forward-backward algorithm.\nUse Viterbi algorithm to find most likely sequence\n\n\n\nOverview of architecture\n\n\nLM embedding will be created by concatenating forward and backward embeddings. No parameter sharing between these two embeddings."
  },
  {
    "objectID": "posts/2020-04-23-tag-lm.html#analysis",
    "href": "posts/2020-04-23-tag-lm.html#analysis",
    "title": "TagLM",
    "section": "Analysis",
    "text": "Analysis\n\nSecond RNN captures interactions between task specific context\nBackward LM addition has significant performance gains\nModel size makes a difference. Using bigger CNN model lead to  0.3 percent improvement\nAlso tried training the model JUST ON THE CoNLL data. Reduced model size\nIncluding embeddings from this model decreased performance compared to baseline system.\nReplacing task specific RNN with using LM embeddings with a dense layer and CRF reduced performance\nImprovement shown by transferring knowledge from other tasks almost disappers when the initial model is trained on a large dataset."
  },
  {
    "objectID": "posts/2025-07-06-gpu-puzzles-p1.html",
    "href": "posts/2025-07-06-gpu-puzzles-p1.html",
    "title": "GPUs go brrr with Mojo: Fundamentals",
    "section": "",
    "text": "Back on the blog after a long hiatus - this time, I’m shifting gears from just reviewing papers(which are available on my GitHub) to diving deep into hands-on implementations.\nI’ve always been interested in systems programming, but somehow never really picked it up. The rate of progress in the GenAI space has been exponential recently, with players like Google [1] reportedly processing 9.7 trillion tokens a month. Companies are now investing more time and resources in making these Large Language Models as fast and cheap as possible, by improving training and inference efficiency using “moar” compute.\nI briefly spoke about GPU computing last year, and finally decided to learn it this summer. The goal is to eventually be able to implement kernels for fast matmuls, softmax, and FlashAttention."
  },
  {
    "objectID": "posts/2025-07-06-gpu-puzzles-p1.html#why-mojo",
    "href": "posts/2025-07-06-gpu-puzzles-p1.html#why-mojo",
    "title": "GPUs go brrr with Mojo: Fundamentals",
    "section": "Why Mojo?",
    "text": "Why Mojo?\nI’ve tried learning Rust multiple times, along with a few stints of trying C, C++ and Zig, but I never really felt as comfortable in these languages as I do in Python and Elixir.\nIn early 2023, Modular announced Mojo🔥, a new systems-programming language promising:\n\nPython-like syntax\nSupport for both CPU and GPU architectures\nKernel autofusion\nBuilds on MLIR\nTraits and bounds checking\nInteropeability with PTX, Python, C\n\nModular has since announced Max, their AI inference platform, built on Mojo. The released all kernels available as part of the platform, along with their own version[2] of Sasha Rush’s GPU Puzzles [3] in Mojo. IMO, their kernels were much easier to read compared to CUDA/Triton implementations. I also enjoyed the “Democratising AI Compute”[4] series by Chris Lattner, and thus I decided to learn a bit more about how to write these kernels in Mojo."
  },
  {
    "objectID": "posts/2025-07-06-gpu-puzzles-p1.html#gpu-memory",
    "href": "posts/2025-07-06-gpu-puzzles-p1.html#gpu-memory",
    "title": "GPUs go brrr with Mojo: Fundamentals",
    "section": "GPU 101",
    "text": "GPU 101\nGPUs (Graphics Processing Units) are massively parallel processors optimized for throughput over latency. In GPU programming we:\n\nLay out data and computation as a grid of thread blocks.\nLaunch a kernel from the CPU (host) to run on the GPU (device).\nExploit thousands of lightweight threads all executing the same code (Single Instruction, Multiple Threads or SIMT).\n\nModern chips had two ways to spend their billions of transistors:\n\nCPUs invest them in large caches, branch predictors and out-of-order logic to minimize latency for one or a few threads.\nGPUs invest them in thousands of simple cores and huge register files to maximize throughput for many threads, assuming those threads can tolerate latency by waiting in parallel.\n\nThe rest of this section unpacks how that single design choice shows up in memory, execution and program flow.\n\n1. Memory hierarchy – hide latency with tons of threads\nCPUs invest transistors in large caches to minimize latency. GPUs take the opposite approach: they use thousands of threads to hide latency instead of avoiding it.\nGPU memory hierarchy (slowest/largest to fastest/smallest):\n\nGlobal (HBM): High Bandwidth Memory—the GPU’s main memory, large but high-latency, visible to all threads\n\nShared (SRAM): fast on-chip memory, ~100x faster than HBM\n\nRegisters: per-thread storage, fastest access, ~1000x faster than HBM\n\n\n\n\nSource: FlashAttention [5]. Metrics shown are for an NVIDIA A100 GPU.\n\n\nThe key insight: when threads wait for slow global memory (~400-800 cycles), the GPU immediately switches to other threads. This keeps compute units busy while data moves through the hierarchy.\n\n\n2. Execution hierarchy – launch enough warps to hide stalls\n\n\n\nGPU Execution Hierachy\n\n\nBuilding from the bottom up:\n\nThread: the basic execution unit with its own registers\nWarp: 32 threads executing the same instruction together (the basic unit of GPU scheduling)\n\nBlock: a group of threads that share shared memory and can synchronize\n\nGrid: a collection of blocks distributed across SMs\n\nGPUs schedule threads in groups of 32 (warps). When one warp stalls on memory, the scheduler switches to another warp instantly. More resident warps = better latency hiding.\n\n\n3. Program flow – CPU launches, GPU streams\n\nThe CPU launches kernels asynchronously and goes back to other work. Inside the GPU each warp executes the same instruction (SIMT). Divergent branches disable some lanes and waste those cores.\n\nHost allocates and copies data to GPU global memory\n\nHost launches the kernel with a specified grid and block size\n\nDevice executes the kernel in parallel across threads\n\nHost retrieves results from GPU memory\n\n\n\nPutting it together\nFast GPU kernels keep cores busy by:\n\nStaging hot data in shared or registers\nLaunching enough threads to mask global-memory latency\nWriting branch-free, data-parallel code\n\nWe will cover the practical implications of the above topics as we go through the puzzles."
  },
  {
    "objectID": "posts/2025-07-06-gpu-puzzles-p1.html#infrastructure",
    "href": "posts/2025-07-06-gpu-puzzles-p1.html#infrastructure",
    "title": "GPUs go brrr with Mojo: Fundamentals",
    "section": "Infrastructure",
    "text": "Infrastructure\nIf you plan on solving these puzzles, remember to pick a compatible GPU and follow the setup instructions\nI completed the puzzles on a instance with a RTX4090 Ti chip, rented via Prime Intellect at 0.22 $/hr!\nNote: The Modular team has created beautiful Manim visualizations for each puzzle, making the concepts much more intuitive. I’ll walk through these visualizations as we tackle each problem."
  },
  {
    "objectID": "posts/2020-05-11-longformer.html",
    "href": "posts/2020-05-11-longformer.html",
    "title": "LongFormer",
    "section": "",
    "text": "The NLP world had its ImageNet moment with the introduction of the Transformer in the paper Attention is All you Need.\nThe ability to be able to process multiple words/tokens in parallel and train models without labeled data(using self-attention) led to the creation of multiple models which gave us SOTA results on many interesting tasks such as Question Answering, Summarization, etc.\nHowever, the biggest drawback is the Transformer architecture is the limitation it has on the number of tokens it can process at a once, due to exponentially increasing memory and compute requirements(typically about 512 tokens), causing the performance to deteriorate over large documents.\nLongformer by the team at Allen AI aims to address this problem and demonstrate it’s application to do transfer learning for large documents.\nOther approaches to are described in recent work such as Transformer XL, Blockwise, Reformer, etc. Their characteristics are mentioned below:\n\n\n\n\nComparison"
  },
  {
    "objectID": "posts/2020-05-11-longformer.html#sliding-window-attention",
    "href": "posts/2020-05-11-longformer.html#sliding-window-attention",
    "title": "LongFormer",
    "section": "Sliding Window Attention",
    "text": "Sliding Window Attention\n\nTLDR : Similar to kernels for CNN which apply a matrix operation to a set of pixels and move onto the next set, apply attention to tokens in current window only.\nIn this, we change the attention objective to only focus on the tokens that occur in a context window \\(w\\).\nEach token will be able to attend to \\(\\frac{1}{2}w\\) number of tokens to it’s left and right.\nQuestion: But doesn’t this limit the number of tokens being taken into account to only the tokens in the window?\n\nYes, it does. This is why we stack multiple layers of self-attention. As shown in the image below, the green neuron learns from the first 3 tokens(Lionel, Messi, is). However, the brown neuron learns from the green, yellow, and red neuron, who together learn from the first 5 tokens. This way, we can apply attention to long sequences(Lionel, Messi, is, the, true).\n\nAs with the CNN, we will have \\(l\\) layers to this sliding window attention(multi-head attention) implemented to learn low level and high-level features. A balance should be found between the number of layers \\(l\\)(efficiency) and the window size \\(w\\)(model representation capacity).\n\n\n\n\nSliding Window Attention\n\n\n\nPros: Reduces computation from \\(O(n^2)\\) to \\(O(n*w)\\) i.e the computation complexity will only scale linearly now.\nCons: To learn dependencies for a large sequence, we would either have to increase the window size \\(w\\) or increase the number of layers \\(l\\), both of which will cause an increase in the amount of memory and processing power required to train and test the model."
  },
  {
    "objectID": "posts/2020-05-11-longformer.html#dilated-sliding-window",
    "href": "posts/2020-05-11-longformer.html#dilated-sliding-window",
    "title": "LongFormer",
    "section": "Dilated Sliding Window",
    "text": "Dilated Sliding Window\n\nTLDR: Use dilation instead of window attention i.e for some particular window size, take alternate elements while performing self-attention.\nTo solve the problem for long sequences, the authors propose that instead of considering all tokens in window \\(w\\), consider alternate(or any number \\(d\\))tokens instead. The range of tokens will now be \\(l * d * w\\), which will be large for even a small value of \\(d\\).\nPros: This small change will allow us to cover a wider range of tokens without significant changes to the architecture.\nCons: Skipping tokens might lead to loss of information in the lower layers which will get propagated to the higher layers. This will lead to unstable training and poor model performance."
  },
  {
    "objectID": "posts/2020-05-11-longformer.html#global-attention",
    "href": "posts/2020-05-11-longformer.html#global-attention",
    "title": "LongFormer",
    "section": "Global Attention",
    "text": "Global Attention\n\nTLDR: Use full attention for certain tokens depending on the task. This is an engineering choice.\nIn BERT style models, optimal representation for input sequence varies by task.\n\nFor MLM, local context is used to predict the masked word\nFor classification, [CLS] token is used.\nFor QnA, the question is concatenated with the document to help model learn through self-attention.\n\nThe windowed and dilated attention is not flexible enough to learn task-specific representations.\nHence, for some tokens enable global tokens i.e at these tokens, all tokens in the sequence can attend to it. For classification, enable global attention on the [CLS] token.\nPros:\n\nAdding global attention improves performance for specific tasks. Since these tokens are limited in number, the complexity still stays at \\(O(n)\\).\nIt also increases the representational power of the model.\n\n\n\nLinear Projections\n\nTLDR: Use two sets of Q,K and V matrices, one for sliding window attention, one for global attention.\nAttention is defined as:\n\\[\n\\begin{aligned}\nAttention(Q,K,V) = softmax(\\frac{QK^T}{\\sqrt{d_k}})V\n\\end{aligned}\n\\]\nWe will use two different sets of Q,K and V matrices for sliding window and global attention.\n\\(Q_g\\), \\(K_g\\), \\(V_g\\) are initialized with \\(Q_s\\), \\(K_s\\), \\(V_s\\)\n\n\n\n\nBanded Matrix\n\n\n\nBanded Matrix(Source)\n\n\n\n\nCompressed Banded Matrix\n\n\n\nCompressed Banded Matrix(Source)\n\n\n\nCUDA Kernels\n\nOne of the important and interesting contributions of this paper is the implementation of matrix multiplication via CUDA kernels.\nIn the dilated sliding window, the matrix formed is called a band matrix i.e there are diagonal bands of indices that have values and the other values are 0.\nImplementing matrix operations for band matrices using native for loops and via frameworks is not easy and optimized.\nThe authors have provided custom CUDA kernels implemented using TVM for this banded matrix operations.\nAs demonstrated in the image below, the custom CUDA kernels have a significant impact on the time and memory consumption of the model. The kernels and implementation for the longformer are available here. \n\nLongFormer Performance"
  },
  {
    "objectID": "posts/2020-05-11-longformer.html#attention-pattern",
    "href": "posts/2020-05-11-longformer.html#attention-pattern",
    "title": "LongFormer",
    "section": "Attention Pattern",
    "text": "Attention Pattern\n\nIn multi-head attention, each head computes a different score.\nTo get a good representation of all tokens, the authors propose that normal sliding window attention can be used for the lower layers, and dilated sliding window attention can be used the higher layers(top 1-2 layers).\nThe reasoning for this approach is that in the lower layers, the local context is more important, and in the upper layers, the global context is more important. Hence, it is acceptable to skip over a few tokens in the upper layers."
  },
  {
    "objectID": "posts/2020-05-11-longformer.html#task-and-datasets",
    "href": "posts/2020-05-11-longformer.html#task-and-datasets",
    "title": "LongFormer",
    "section": "Task and Datasets",
    "text": "Task and Datasets\n\nThe authors focus on character level modeling because the sequences are naturally longer than those of word-level language modeling.\nDatasets that were used are text8 and enwik8."
  },
  {
    "objectID": "posts/2020-05-11-longformer.html#training-and-evaluation",
    "href": "posts/2020-05-11-longformer.html#training-and-evaluation",
    "title": "LongFormer",
    "section": "Training and Evaluation",
    "text": "Training and Evaluation\n\nThe model was trained in multiple phases.\n\nThe window and sequence length was increased in each phase. This is to allow local context from tokens to be learned efficiently.\nOverall five training phases used, starting from the token length of 2048 to 23040 (45x more than vanilla BERT).\nTwo models were created for evaluation:\n\nSmall model: 12 layers, 512 hidden size\nLarge model: 30 layers, 512 hidden sizes (2.5x larger)\n\nDuring the model evaluation, the model can run on a sequence length of 32256(63x more than vanilla BERT)."
  },
  {
    "objectID": "posts/2020-05-11-longformer.html#results",
    "href": "posts/2020-05-11-longformer.html#results",
    "title": "LongFormer",
    "section": "Results",
    "text": "Results\n\n\n\nResults\n\n\n\nLongformer achieves SOTA using the small models with BPC of 1.10 and 1.00 for text8 and enwik8.\nThe large model was only tested on enwik8 due to the computational cost of training.\nIt’s also important to note that, while the large model did not achieve SOTA, it performs much better than it’s counterparts who have almost 2x more parameters."
  },
  {
    "objectID": "posts/2020-05-11-longformer.html#copy-initialization-trick",
    "href": "posts/2020-05-11-longformer.html#copy-initialization-trick",
    "title": "LongFormer",
    "section": "Copy initialization trick",
    "text": "Copy initialization trick\n\nSince the MLM objective pretraining objective is expensive, the authors continue to train from the checkpoints of the RoBERTA model.\nThe attention mechanism is replaced with the new attention module.\nFor the position embeddings:\n\nRoBERTA has position embeddings for 512 tokens.\nLongFormer can support position embeddings for 4096 tokens(larger for larger GPU)\nTo use the weight checkpoints from RoBERTA, instead of random initialization, copy the 512 position embeddings multiple times as analysis of the BERT attention heads showed a strong learned bias to attend to the local context."
  },
  {
    "objectID": "posts/2020-05-11-longformer.html#pretraining",
    "href": "posts/2020-05-11-longformer.html#pretraining",
    "title": "LongFormer",
    "section": "Pretraining",
    "text": "Pretraining\n\nApart from the datasets(Books corpus + English Wikipedia) used in RoBERTA, \\(\\frac{1}{3}^{rd}\\) Realnews dataset was added with tokens larger than 1200.\nBoth models(small and large) trained with varying gradient updates.\n\n\n\n\nCopy init\n\n\n\nMLM BPC for RoBERTA with various model config"
  },
  {
    "objectID": "posts/2025-07-20-gpu-puzzles-p2.html",
    "href": "posts/2025-07-20-gpu-puzzles-p2.html",
    "title": "GPUs go brrr with Mojo: Algorithms",
    "section": "",
    "text": "Picking up right where the the last post left off, this follow-up dives into the bread-and-butter building blocks of deep-learning kernels. We’ll implement and benchmark core algorithms-sliding-window pools, tile-wise convolutions, warp-level scans, and more."
  },
  {
    "objectID": "posts/2025-07-20-gpu-puzzles-p2.html#raw-memory",
    "href": "posts/2025-07-20-gpu-puzzles-p2.html#raw-memory",
    "title": "GPUs go brrr with Mojo: Algorithms",
    "section": "Raw Memory",
    "text": "Raw Memory\n\n\nSolution\n\n\n\np10.mojo\n\nfn dot_product(\n    output: UnsafePointer[Scalar[dtype]],\n    a: UnsafePointer[Scalar[dtype]],\n    b: UnsafePointer[Scalar[dtype]],\n    size: Int,\n):\n    global_idx = block_dim.x * block_idx.x + thread_idx.x\n    local_idx = thread_idx.x\n    if global_idx &lt; size:\n        shared[local_idx] = a[global_idx] * b[global_idx]\n\n    barrier()\n\n    stride = TPB // 2\n    while(stride &gt; 0):\n        if local_idx &lt; stride:\n            shared[local_idx] += shared[local_idx + stride]\n        \n        barrier()\n        stride = stride // 2\n    \n    # only allow thread 0 to write result\n    if local_idx == 0:\n        output[0] = shared[0]\n\n\nNote: Instead of doing the parallel reduction, we could also implement the solution using a loop:\n-    stride = TPB // 2\n-    while(stride &gt; 0):\n-        if local_idx &lt; stride:\n-            shared[local_idx] += shared[local_idx + stride]\n-        \n-        barrier()\n-        stride = stride // 2\n-    \n-    # only allow thread 0 to write result\n-    if local_idx == 0:\n-        output[0] = shared[0]\n+    if global_idx &lt; size:\n+        for idx in range(size):\n+            output[0] = output[0] + shared[idx]\nWhile this approach also gives the correct answer for this puzzle, it has multiple problems:\n\nRace conditions: Multiple threads would simultaneously try to update output[0] without synchronization, causing lost updates.\nThread divergence: When threads in a warp take different execution paths (some running the loop, others not), the GPU must serialize execution, destroying parallelism.\nRedundant computation: Every qualifying thread would compute the exact same sum over the entire array, wasting compute resources.\nMemory bottleneck: Repeated atomic operations to the same memory location (output[0]) create severe contention."
  },
  {
    "objectID": "posts/2025-07-20-gpu-puzzles-p2.html#layouttensor",
    "href": "posts/2025-07-20-gpu-puzzles-p2.html#layouttensor",
    "title": "GPUs go brrr with Mojo: Algorithms",
    "section": "LayoutTensor",
    "text": "LayoutTensor\n\n\nSolution\n\n\n\np10.mojo\n\nalias TPB = 8\nalias SIZE = 8\nalias BLOCKS_PER_GRID = (1, 1)\nalias THREADS_PER_BLOCK = (SIZE, 1)\nalias dtype = DType.float32\nalias layout = Layout.row_major(SIZE)\nalias out_layout = Layout.row_major(1)\n\nfn dot_product[\n    in_layout: Layout, out_layout: Layout\n](\n    output: LayoutTensor[mut=True, dtype, out_layout],\n    a: LayoutTensor[mut=True, dtype, in_layout],\n    b: LayoutTensor[mut=True, dtype, in_layout],\n    size: Int,\n):\n    # Use LayoutTensorBuilder instead of stack_allocation\n    shared = tb[dtype]().row_major[TPB]().shared().alloc()\n    global_idx = block_dim.x * block_idx.x + thread_idx.x\n    local_idx = thread_idx.x\n\n    if global_idx &lt; size:\n        shared[local_idx] = a[global_idx] * b[global_idx]\n\n    barrier()\n\n    stride = TPB // 2\n    while(stride &gt; 0):\n        if local_idx &lt; stride:\n            shared[local_idx] += shared[local_idx + stride]\n        \n        barrier()\n        stride = stride // 2\n    \n    # only allow thread 0 to write result\n    if local_idx == 0:\n        output[0] = shared[0]"
  },
  {
    "objectID": "posts/2025-07-20-gpu-puzzles-p2.html#single-block-with-shared-memory",
    "href": "posts/2025-07-20-gpu-puzzles-p2.html#single-block-with-shared-memory",
    "title": "GPUs go brrr with Mojo: Algorithms",
    "section": "Single Block with Shared Memory",
    "text": "Single Block with Shared Memory\nFor this version, we assume that we only have a single block, and both the input data and the kernel fit within a block.\n\nThe implementation is:\n\nIntialise shared memory for both the input and the kernel\nLoad data in the shared memory, and use barrier() to sync all threads before performing computations.\nIn a loop, multiple the value of input and kernel, and add to a local variable.\nAssign the local variable to the right output index.\n\n\n\nSolution\n\n\n\np11.mojo\n\nalias TPB = 8\nalias SIZE = 6\nalias CONV = 3\nalias BLOCKS_PER_GRID = (1, 1)\nalias THREADS_PER_BLOCK = (TPB, 1)\nalias dtype = DType.float32\nalias in_layout = Layout.row_major(SIZE)\nalias out_layout = Layout.row_major(SIZE)\nalias conv_layout = Layout.row_major(CONV)\n\n\nfn conv_1d_simple[\n    in_layout: Layout, out_layout: Layout, conv_layout: Layout\n](\n    output: LayoutTensor[mut=False, dtype, out_layout],\n    a: LayoutTensor[mut=False, dtype, in_layout],\n    b: LayoutTensor[mut=False, dtype, conv_layout],\n):\n    global_i = block_dim.x * block_idx.x + thread_idx.x\n    local_i = thread_idx.x\n    # This is oversized! I've explained it later :)\n    shared_a = tb[dtype]().row_major[TPB]().shared().alloc()\n    shared_b = tb[dtype]().row_major[TPB]().shared().alloc()\n\n    # This can also be optimised, as shown later.\n    if global_i &lt; SIZE:\n        shared_a[local_i] = a[global_i]\n        shared_b[local_i] = b[global_i]\n    \n\n    barrier()\n\n    if global_i &lt; SIZE:\n\n        # Ensure the local var has the same type as the output\n        # to avoid type casting errors.\n        var local_sum: output.element_type = 0\n\n        # Perform loop unrolling.\n        @parameter\n        for j in range(CONV):\n            if local_i + j &lt; SIZE:\n                local_sum += shared_a[local_i + j] * shared_b[j]\n        \n        output[global_i] = local_sum\n\n\nI deliberately allocate shared_a and shared_b with the block width (TPB) instead of the input length (SIZE) and filter length (CONV). The extra space isn’t needed for correctness-the kernel only touches the first SIZE/CONV elements-but it nicely demonstrates LayoutTensor’s masking: out-of-range indices are silently ignored. This trick keeps the buffer shape uniform across puzzles without cluttering the code with edge-case branches. The flip side is a bit of wasted shared memory, which can pinch if your kernel is already pushing the SRAM limit.\nThe optimal allocation of shared memory would be:\n-    shared_a = tb[dtype]().row_major[TPB]().shared().alloc()\n-    shared_b = tb[dtype]().row_major[TPB]().shared().alloc()\n+    # Allocate exactly SIZE elements -&gt; smaller shared-mem footprint\n+    shared_a = tb[dtype]().row_major[SIZE]().shared().alloc()\n+    # Allocate exactly CONV elements -&gt; smaller shared-mem footprint\n+    shared_b = tb[dtype]().row_major[CONV]().shared().alloc()\n...\n\n-    if global_i &lt; SIZE:\n-        shared_a[local_i] = a[global_i]\n-        shared_b[local_i] = b[global_i]\n+    if global_i &lt; SIZE:\n+        shared_a[local_i] = a[global_i]\n+    if global_i &lt; CONV:\n+        shared_b[local_i] = b[global_i]\n\nLoop Unrolling\n@parameter is Mojo’s implementation of loop unrolling. This has the same functionality as pragma unroll(N) in CUDA.\nWhen unroll is in effect, the optimizer determines and applies the best unrolling factor for each loop; in some cases, the loop control might be modified to avoid unnecessary branching. The compiler remains the final arbiter of whether the loop is unrolled[4].\n@parameter isn’t limited to loops/branches-you can slap it on an inner function and Mojo will build a parametric closure, defined as[5]:\n\nA parametric closure is a nested function decorated with @parameter. Any values it captures from the surrounding scope are treated as compile-time constants. The compiler materialises one specialised version of the closure for every distinct set of captured values\n\nExample:\n\n\nparametric_closure.mojo\n\nfn make_shift(off: Int):\n    @parameter            # ← specialised per ‘off'\n    fn shift(x: Int) -&gt; Int:\n        return x + off\n    return shift\n\nlet s1 = make_shift(1)    # emits shift-$off=1\nlet s4 = make_shift(4)    # emits shift-$off=4\n\nNo runtime captures, no heap boxing-the constant off is literally spliced into the generated IR, so calls to s1/s4 inline like normal code and can be further unrolled or constant-folded.\nWhy is this safe? Mojo’s origin system[6] assigns each compile-time constant its own immutable origin. The closure therefore can’t outlive or mutate the thing it captured; once the surrounding scope ends those origins die too, guaranteeing that the specialised code never touches expired storage.\nIn summary, you get closure ergonomics plus “zero-cost abstraction”[7] performance-ideal for GPU kernels where every cycle and register matters."
  },
  {
    "objectID": "posts/2025-07-20-gpu-puzzles-p2.html#block-boundary",
    "href": "posts/2025-07-20-gpu-puzzles-p2.html#block-boundary",
    "title": "GPUs go brrr with Mojo: Algorithms",
    "section": "Block Boundary",
    "text": "Block Boundary\nWe now aim to perform convolution over an input that is larger than a single block. Due to the nature of convolution operation, this introduces interesting boundary conditions. Specifically, the output of block N now depends on block N - 1, when N &gt; 1.\nThe blue cells are the data owned by the current thread-block. The orange cells are the first few elements of the next block that the convolution window will inevitably peek at.\n\n\nProblem statement\nRun a 1-D convolution with a CONV₂-tap kernel over an input that is longer than one block (TPB threads). We want every thread to:\n\nPull data from shared memory only (once it’s loaded, stay in-block)\n\nAvoid divergent branches and random global reads\n\nKeep the load pattern fully coalesced\n\nNaïve global loads meet none of those goals-once a window crosses the block edge the tail threads must issue conditional, straggling reads (i.e. each thread grabs a lone, scattered element from global memory instead of part of one tidy, coalesced burst).\n\n\nThe halo idea\nGive each block an in-block “fence extension”:\nshared_a = …[TPB + (CONV₂ − 1)]   # main slice + halo\nThe extra (CONV₂ − 1) slots-the halo-mirror the first (CONV₂ − 1) elements of the next block (or zeros if we’re already at EOF). That single change guarantees that every sliding window lives in one contiguous span of shared memory.\nThe elements that are involved in multiple tiles and loaded by multiple blocks are commonly referred to as halo cells or skirt cells since they “hang” from the side of the part that is used solely by a single block[8].\nLoading recipe (matches the numbered arrows in the figure):\n\nBulk copy - all TPB threads dump their element:\nshared_a[t] = a[blockStart + t]\nHalo fill - threads t &lt; (CONV₂ − 1) copy the tail:\nshared_a[TPB + t] = (a[blockStart + TPB + t] if in-range else 0)\nKernel stash - threads t &lt; CONV₂ cache the weights:\nshared_b[t] = b[t]\nbarrier() - everyone syncs\n\nAfter step 4 every thread sees:\n      main slice              halo\n[ … local_i … TPB − 1 | TPB … TPB+CONV₂−2 ]\nCode to perform the actual computation is the same as in Puzzle 10.\nOne barrier, no branches and 100 % shared-memory hits ensure our kernel is fast and efficient!\n\n\nSolution\n\n\n\np11_block_boundary.mojo\n\nalias SIZE_2 = 15\nalias CONV_2 = 4\nalias BLOCKS_PER_GRID_2 = (2, 1)\nalias THREADS_PER_BLOCK_2 = (TPB, 1)\nalias in_2_layout = Layout.row_major(SIZE_2)\nalias out_2_layout = Layout.row_major(SIZE_2)\nalias conv_2_layout = Layout.row_major(CONV_2)\n\nfn conv_1d_block_boundary[\n    in_layout: Layout, out_layout: Layout, conv_layout: Layout, dtype: DType\n](\n    output: LayoutTensor[mut=False, dtype, out_layout],\n    a: LayoutTensor[mut=False, dtype, in_layout],\n    b: LayoutTensor[mut=False, dtype, conv_layout],\n):\n    global_i = block_dim.x * block_idx.x + thread_idx.x\n    local_i  = thread_idx.x\n\n    # input slice + halo\n    shared_a = tb[dtype]().row_major[TPB + CONV_2 - 1]().shared().alloc()\n\n    # load kernel\n    shared_b = tb[dtype]().row_major[CONV_2]().shared().alloc()\n\n    if global_i &lt; SIZE_2:\n        # coalesced load of main slice\n        shared_a[local_i] = a[global_i]                  \n\n    # only first CONV_2 threads participate\n    if local_i &lt; CONV_2:\n        # load kernel into shared memory\n        shared_b[local_i] = b[local_i]                   \n\n    # threads responsible for halo load\n    if local_i &lt; CONV_2 - 1:\n        # element that lives in next block\n        var next_idx = global_i + TPB                    \n        # pad with zeros\n        shared_a[local_i + TPB] = a[next_idx] if next_idx &lt; SIZE_2 else 0.0\n\n    barrier()\n\n    # skip threads mapping past the end\n    if global_i &lt; SIZE_2:\n        var local_sum: output.element_type = 0.0\n\n        @parameter                                       \n        for j in range(CONV_2):                          \n            # dot product of window & kernel\n            local_sum += shared_a[local_i + j] * shared_b[j]\n        output[global_i] = local_sum\n\npixi run p11 --block-boundary\n# out: HostBuffer([14.0, 20.0, 26.0, 32.0, 38.0, 44.0, 50.0, 56.0, 62.0, 68.0, 74.0, 80.0, 41.0, 14.0, 0.0])\n# expected: HostBuffer([14.0, 20.0, 26.0, 32.0, 38.0, 44.0, 50.0, 56.0, 62.0, 68.0, 74.0, 80.0, 41.0, 14.0, 0.0])"
  },
  {
    "objectID": "posts/2025-07-20-gpu-puzzles-p2.html#hillis-steele-algorithm",
    "href": "posts/2025-07-20-gpu-puzzles-p2.html#hillis-steele-algorithm",
    "title": "GPUs go brrr with Mojo: Algorithms",
    "section": "Hillis-Steele Algorithm",
    "text": "Hillis-Steele Algorithm\nA straightforward parallel scan is the Hillis-Steele approach: at each distance d = 1, 2, 4, … every element adds in the value from d positions back. This is the same as the method shown in Puzzle 10\n# inclusive scan, power-of-two length\ndef hillis_steele_scan(a, ⊕):\n    n = len(a)\n    temp = a.copy()\n    d = 1\n    while d &lt; n:\n        for i in range(n):\n            temp[i] = a[i] if i &lt; d else a[i - d] ⊕ a[i]\n        a, temp = temp, a\n        d *= 2\n    return a\nIn Mojo, this looks as follows:\n\n\nSolution\n\n\n\np12_simple.mojo\n\nfn prefix_sum_simple[\n    layout: Layout\n](\n    output: LayoutTensor[mut=False, dtype, layout],\n    a: LayoutTensor[mut=False, dtype, layout],\n    size: Int,\n):\n    global_i = block_dim.x * block_idx.x + thread_idx.x\n    local_i = thread_idx.x\n    for idx in range(Int(log2(Scalar[dtype](TPB)))):\n        if local_i &gt;= offset and local_i &lt; SIZE:\n            shared[local_i] += shared[local_i - offset]\n\n        barrier()\n        offset *= 2\n\n    if global_i &lt; SIZE:\n        output[global_i] = shared[local_i]\n\npixi run p12 --simple\n# out: HostBuffer([0.0, 1.0, 3.0, 6.0, 10.0, 15.0, 21.0, 28.0])\n# expected: HostBuffer([0.0, 1.0, 3.0, 6.0, 10.0, 15.0, 21.0, 28.0])\nEach of the log₂(n) rounds does up to n parallel additions (one per active element), so total work is \\(\\sum_k n = nlog(n)\\). Because rounds are serialized by barriers, the longest dependency chain is one add per round i.e \\(O(log n)\\)."
  },
  {
    "objectID": "posts/2025-07-20-gpu-puzzles-p2.html#blellochs-twopass-algorithm",
    "href": "posts/2025-07-20-gpu-puzzles-p2.html#blellochs-twopass-algorithm",
    "title": "GPUs go brrr with Mojo: Algorithms",
    "section": "Blelloch’s Two‐Pass Algorithm",
    "text": "Blelloch’s Two‐Pass Algorithm\nBlelloch’s two-pass scan does Θ(n) work by splitting the job into an up-sweep (build a reduction tree) and a down-sweep (propagate prefixes) [11].\nWhy prefer it over the classic Hillis-Steele (Algorithm 1)?\n\nHardware constraints: Hillis-Steele assumes one processor per element and updates the array in-place every round. A real GPU doesn’t grant that luxury: a “1024-thread” block actually runs in 32-thread warps that time-slice on the same SM. When warp 0 pauses and warp 1 resumes, in-place writes from one warp can overwrite data the other still needs.\nSynchronisation cost: Avoiding the overwrite requires a barrier after every addition - log₂(n) rounds × n threads ⇒ Θ(n log n) operations plus all those barriers.\n\nBlelloch’s fix to these problems is to break the up-sweep and down-sweep into separate phases:\n\nUp-sweep and down-sweep touch disjoint tree levels, so threads never trample each other within a phase.\nOnly two global barriers are needed (one between the phases, one at the end).\nNow you get Θ(n) work and correctness, even for arrays much bigger than a warp.\n\nThe result is a scan that is both faster and safer on modern GPUs.\n\nUp-sweep (reduce)\n\nBuild a binary reduction tree over log₂(n) rounds:\n\nRound 1 (step=1): sum each adjacent pair, storing results at indices 1, 3, 5, …\nRound 2 (step=2): merge those partial sums into blocks of 4, writing into indices 3, 7, 11, …\nContinue doubling the span each round until step = n/2\n\nAfter the final round, a[n-1] holds the overall total\n\n Up-Sweep: combining elements in a binary-tree fashion-build partial sums until the final element holds the total.\n\n\nDown-sweep (propagate)\nAfter the up-sweep leaves a[n-1] containing the overall sum, we walk the tree top-down to scatter prefix sums into every slot:\n\nInitialize the down-sweep with a window size of step = n/2.\n\nLoop as long as step &gt;= 1:\n\nPartition the array into blocks of size 2*step. For each block starting at index i:\n\nTemporarily store the left-child total from a[i + step - 1].\n\nOverwrite that left slot with the right-child subtotal from a[i + 2*step - 1].\n\nAdd the saved left-child total to the right slot, giving the correct prefix for that subtree.\n\n\nIssue a barrier() so all threads sync before shrinking the window.\n\nHalve the window: step = step / 2.\n\n\nWith each pass, the partial sums trickle down one level of the binary tree; after log₂(n) iterations every element holds its exclusive prefix sum.\n\n\nDown Sweep: siblings swap and accumulate, driving the scan from root back to leaves.\nTotal Operations: \\(\\Theta(n)\\), parallel depth: \\(\\Theta(\\log_2 n)\\).\n\n\nSolution (Blelloch up-sweep + down-sweep)\n\n\n\np12_blelloch.mojo\n\nfn prefix_sum_blelloch[\n    layout: Layout\n](\n    output:   LayoutTensor[mut=True, dtype, layout],\n    a:     LayoutTensor[mut=False, dtype, layout],\n    size:  Int,\n):\n    global_idx = block_idx.x*block_dim.x + thread_idx.x\n    local_idx = thread_idx.x\n    shared = tb[dtype]().row_major[SIZE]().shared().alloc()\n\n    if global_idx &lt; size:\n        shared[local_idx] = a[global_idx]\n    barrier()\n\n    # Up-sweep\n    var stride = 1\n    while stride &lt; size:\n        step = stride * 2\n        if (local_idx % step == step - 1) and (local_idx &lt; size):\n            shared[local_idx] += shared[local_idx - stride]\n        barrier()\n        stride = step\n\n    # Down-sweep\n    if local_idx == size - 1:\n        shared[local_idx] = 0\n    barrier()\n\n    var half = stride &gt;&gt; 1\n    while half &gt; 0:\n        step = half * 2\n        if (local_idx % step == step - 1) and (local_idx &lt; size):\n            t = shared[local_idx - half]\n            shared[local_idx - half] = shared[local_idx]\n            shared[local_idx] += t\n        barrier()\n        half = half &gt;&gt; 1\n\n    if global_idx &lt; size:\n        output[global_idx] = shared[local_idx] + a[global_idx]\n\npixi run p12 --blelloch\n# out: HostBuffer([0.0, 1.0, 3.0, 6.0, 10.0, 15.0, 21.0, 28.0])\n# expected: HostBuffer([0.0, 1.0, 3.0, 6.0, 10.0, 15.0, 21.0, 28.0])\n\nThis is not the most efficient implementation, but I hope this provides some intuition about the algorithm!"
  },
  {
    "objectID": "posts/2025-07-20-gpu-puzzles-p2.html#block-boundary-1",
    "href": "posts/2025-07-20-gpu-puzzles-p2.html#block-boundary-1",
    "title": "GPUs go brrr with Mojo: Algorithms",
    "section": "Block Boundary",
    "text": "Block Boundary\nThe key difference in this version is that now we have an input array that is larger than the size of a single block.\nWe split the global scan into two bite-sized passes:\n\nPhase 1 - Local Scan\n\nEach block copies its slice into shared memory.\n\nPerform an in-block naive scan/Blelloch scan exactly as in the single-block case.\n\nThe last thread of the block stashes the block’s total after the scan into an auxiliary slot at the tail of output:\n#  |&lt;---  SIZE_2  ---&gt;|&lt;-- #blocks --&gt;|\n#  [   prefix sums   ][ block totals ]\n\n\n\nPhase 2 - Propagate block totals\n\nEvery thread grabs the aggregate from the previous block (totals[block_id-1]) and adds it to its own prefix.\nNow every element holds the inclusive scan over the whole array.\n\n\nWe launch the above phases as two separate kernels.\nA host-side synchronisation sits between the launches. That call flushes the work queue and waits until Phase 1 has fully committed its writes to global memory, ensuring the per-block totals are complete and visible before Phase 2 starts consuming them. Skip the sync and the driver is free to overlap or reorder the kernels, letting Phase 2 read garbage.\n\n\nSolution (Block Boundary Version)\n\n\n\np12_block_boundary.mojo\n\nfn prefix_sum_local_phase[\n    out_layout: Layout, in_layout: Layout\n](\n    output: LayoutTensor[mut=False, dtype, out_layout],\n    a: LayoutTensor[mut=False, dtype, in_layout],\n    size: Int,\n):\n    global_i = block_dim.x * block_idx.x + thread_idx.x\n    local_i = thread_idx.x\n    shared = tb[dtype]().row_major[EXTENDED_SIZE]().shared().alloc()\n\n    if global_i &lt; SIZE_2:\n        shared[local_i] = a[global_i]\n    \n    barrier()\n    offset = 1\n\n    for idx in range(Int(log2(Scalar[dtype](TPB)))):\n        if local_i &gt;= offset and local_i &lt; SIZE_2:\n            shared[local_i] += shared[local_i - offset]\n\n        barrier()\n        offset *= 2\n\n    if global_i &lt; SIZE_2:\n        output[global_i] = shared[local_i]\n    \n    if local_i == TPB - 1:\n        output[size + block_idx.x] += shared[local_i]\n\n\n# Kernel 2: Add block sums to their respective blocks\nfn prefix_sum_block_sum_phase[\n    layout: Layout\n](output: LayoutTensor[mut=False, dtype, layout], size: Int):\n    global_i = block_dim.x * block_idx.x + thread_idx.x\n    # FILL ME IN (roughly 3 lines)\n    if block_idx.x &gt; 0 and global_i &lt; size:\n        prev_block_sum = output[SIZE_2 + block_idx.x - 1]\n        output[global_i] += prev_block_sum\n\npixi run p12\n# out: HostBuffer([0.0, 1.0, 3.0, 6.0, 10.0, 15.0, 21.0, 28.0, 36.0, 45.0, 55.0, 66.0, 78.0, 91.0, 105.0, 28.0, 77.0]) # last 2 elements are the block sums\n# expected: HostBuffer([0.0, 1.0, 3.0, 6.0, 10.0, 15.0, 21.0, 28.0, 36.0, 45.0, 55.0, 66.0, 78.0, 91.0, 105.0])"
  },
  {
    "objectID": "posts/2025-07-20-gpu-puzzles-p2.html#global-memory-version",
    "href": "posts/2025-07-20-gpu-puzzles-p2.html#global-memory-version",
    "title": "GPUs go brrr with Mojo: Algorithms",
    "section": "Global Memory Version",
    "text": "Global Memory Version\nBased on the 2D indexing section, each thread computes one C[row, col] by loading A[row, k] and B[k, col] from global memory, multiplying and accumulating over k. We unroll the k‐loop to cut loop overhead and boost throughput.\n\n\nSolution\n\n\n\np14_naive.mojo\n\nfn naive_matmul[\n    layout: Layout, size: Int\n](\n    output: LayoutTensor[mut=False, dtype, layout],\n    a: LayoutTensor[mut=False, dtype, layout],\n    b: LayoutTensor[mut=False, dtype, layout],\n):\n    row = block_dim.y * block_idx.y + thread_idx.y\n    col = block_dim.x * block_idx.x + thread_idx.x\n\n    if row &lt; SIZE and col &lt; SIZE:\n        # Need this to ensure the mojo compiler knows\n        # the type of `running_sum`, otherwise it will\n        # complain\n        var running_sum: output.element_type = 0\n\n        @parameter\n        for k in range(SIZE):\n            running_sum += a[row, k] * b[k, col]\n        output[row, col] = running_sum\n\npixi run p14 --naive\n# out: HostBuffer([4.0, 6.0, 12.0, 22.0])\n# expected: HostBuffer([4.0, 6.0, 12.0, 22.0])"
  },
  {
    "objectID": "posts/2025-07-20-gpu-puzzles-p2.html#shared-memory-version",
    "href": "posts/2025-07-20-gpu-puzzles-p2.html#shared-memory-version",
    "title": "GPUs go brrr with Mojo: Algorithms",
    "section": "Shared Memory Version",
    "text": "Shared Memory Version\nThe previous version suffers from repeated global memory reads. We can optimize this using shared memory:\n\nLoad matrix tiles once\nSynchronize threads\nCompute using the cached data.\n\n\n\n\nMatmul with shared memory\n\n\n\n\nSolution\n\n\n\np14_shared.mojo\n\nfn single_block_matmul[\n    layout: Layout, size: Int\n](\n    output: LayoutTensor[mut=False, dtype, layout],\n    a: LayoutTensor[mut=False, dtype, layout],\n    b: LayoutTensor[mut=False, dtype, layout],\n):\n    row = block_dim.y * block_idx.y + thread_idx.y\n    col = block_dim.x * block_idx.x + thread_idx.x\n    local_row = thread_idx.y\n    local_col = thread_idx.x\n    shared_a = tb[dtype]().row_major[TPB, TPB]().shared().alloc()\n    shared_b = tb[dtype]().row_major[TPB, TPB]().shared().alloc()\n    if row &lt; size and col &lt; size and local_row &lt; size and local_col &lt; size:\n        shared_a[local_row, local_col] = a[row, col]\n        shared_b[local_row, local_col] = b[row, col]\n\n    barrier()\n    if row &lt; size and col &lt; size and local_row &lt; size and local_col &lt; size:\n        var running_sum: output.element_type = 0.0\n\n        @parameter\n        for k in range(size):\n            running_sum += a[local_row, k] * b[k, local_col]\n\n        output[row, col] = running_sum\n\npixi run p14 --naive\n# out: HostBuffer([4.0, 6.0, 12.0, 22.0])\n# expected: HostBuffer([4.0, 6.0, 12.0, 22.0])\nThe Roofline Model offers a first-order answer to a GPU performance question: is my kernel limited by arithmetic throughput or by memory bandwidth?\nIt does so by plotting operational intensity (FLOPs per byte) against two ceilings - the hardware’s peak FLOP/s and peak DRAM bandwidth—so you can see at a glance which resource is the bottleneck."
  },
  {
    "objectID": "posts/2025-07-20-gpu-puzzles-p2.html#roofline-model",
    "href": "posts/2025-07-20-gpu-puzzles-p2.html#roofline-model",
    "title": "GPUs go brrr with Mojo: Algorithms",
    "section": "Roofline Model",
    "text": "Roofline Model\n\nNote: The Modular GPU Puzzles guide already walks through the full roofline derivation, but we’ll repeat it here so that you can follow along without leaving this post.\n\nThe first step is abstracting the hardware-software complexity into a tractable model.\n\nHardware Model\nClassic roofline assumes ideal hardware with perfect overlap:\n\n\n\nSource: NHR at FAU[13]\n\n\nThe cartoon GPU has only two levers:\n\nCompute engine — peak rate \\(P_{peak}\\) (FLOP/s, integer ops/s, etc.)\nMemory datapath — peak bandwidth \\(b_s\\) (bytes/s)\n\n\n\nSoftware Model\n\n\n\nSoftware abstraction: complex GPU kernel simplified to steady-state loop with N flops and V bytes per iteration. Credits: NHR at FAU[13]\n\n\nWe collapse the kernel’s steady-state loop to:\n\n\\(N\\) floating-point operations per iteration\n\\(V\\) bytes moved per iteration\n\nThe operational intensity is defined as:\n\\[I = \\frac{N}{V} \\text{ flop/byte}\\]\nThis ratio is all that survives of the algorithm - prologue/epilogue work, control flow, and synchronizations are swept aside.\nHardware Assumptions:\n\n\n\n\n\n\n\n\n\n\n#\nAssumption\nWorks because…\nReality\nBreaks when…\n\n\n\n\nH1\nPeak DRAM bandwidth is reachable\nIdeal streaming\nRequires 100% streaming, &gt;1MB tiles\nStrided or tiny tiles\n\n\nH2\nPeak FLOP/s reachable\nFull FMA rate\nAll ALUs busy every cycle\nDivergence, low occupancy\n\n\nH3\nOne bandwidth number is enough\nDRAM dominates\nL1/L2/SMEM add separate roofs\nLower-level choke points\n\n\n\nSoftware Assumptions:\n\n\n\n\n\n\n\n\n\n\n#\nAssumption\nWorks because…\nReality\nBreaks when…\n\n\n\n\nS1\nLoads fully hide latency\n1000s inflight warps\nRequires deep pipelining\nShort kernels, frequent syncs\n\n\nS2\nSingle operational intensity\nSteady-state loop\nReal kernels mix phases\nGather/scatter, epilogue code\n\n\nS3\nLaunch/transfer overhead small\nLong kernel runs\nAmortised over many iterations\nMicro-benchmarks, chaining\n\n\n\n\n\nNaive Roofline Model\nWith these assumptions, hardware and software collapse to one parameter—the operational intensity \\(I\\)—and attainable performance becomes\n\\[\n\\begin{aligned}\nP(I) &= \\min\\!\\bigl(P_{\\text{peak}},\\, I\\,b_s\\bigr) \\\\\nI_{\\text{crit}} &= \\frac{P_{\\text{peak}}}{b_s}\n\\end{aligned}\n\\]\nAt the critical intensity \\(I_{crit}\\), the bandwidth and compute roofs intersect, splitting kernels into two classes:\n\nMemory-bound (\\(I &lt; I_{crit}\\)) -&gt; Performance rises linearly with \\(I\\)\nCompute-bound (\\(I \\geq I_{crit}\\)) -&gt; Performance plateaus at \\(P_{peak}\\)\n\n\n\n\nRoofline model: sloped red line shows memory bandwidth limit, flat blue line is compute peak, kernel’s operational intensity marked as a dot.\n\n\n\n\nWhere the Roofline Model Fails\nEven in small puzzle kernels, these assumptions falter. In real workloads, they break down completely.\nWhat actually works:\n\nMeasure real limits with tools like Nsight or rocprof\nRedraw the roofline using measured ceilings—L2 roof, Tensor-core roof, not just DRAM and peak FLOPs\nAdjust your kernel: boost \\(I\\) (tiling, shared memory, tensor ops) or raise the ceilings (improve occupancy, reduce stalls)\n\n\nUnfortunately no Nsight eye-candy as of yet - my ncu setup hit a permissions wall. I’ll fix it and share a profiler deep-dive soon. Stay tuned!\n\nThe textbook roofline is a guide, not reality. Measure, adapt, and push your kernel as close to the real limits as you can."
  },
  {
    "objectID": "posts/2025-07-20-gpu-puzzles-p2.html#roofline-estimation",
    "href": "posts/2025-07-20-gpu-puzzles-p2.html#roofline-estimation",
    "title": "GPUs go brrr with Mojo: Algorithms",
    "section": "Roofline Estimation",
    "text": "Roofline Estimation\nLet’s apply the roofline model to a 3×3 matrix multiplication, which is still small enough to hand-calculate.\nThe RTX 4000 Ada provides[14]:\n\nPeak compute: 26.7 TFLOPS (single-precision)\n\nPeak DRAM bandwidth: 360 GB/s\n\nCritical intensity: \\(I_{crit} = \\frac{26.7 \\times 10^{12}}{360 \\times 10^9} = 74.2\\) FLOP/byte\n\n\nNaive MatMul Analysis\nFor \\(C = A \\times B\\) where all matrices are 3×3:\n\nCompute work\n\nEach output element is a dot product of length 3\n3 fused multiply-adds -&gt; 3 FLOPs per output element\n9 elements -&gt; 27 FLOPs total\n\n\n\nDRAM traffic\n\nLoad matrix A: 9 floats × 4 bytes = 36 bytes\nLoad matrix B: 9 floats × 4 bytes = 36 bytes\n\nStore matrix C: 9 floats × 4 bytes = 36 bytes\nTotal: 108 bytes\n\n\n\nOperational intensity:\n\\[I_{naive} = \\frac{27 \\text{ FLOPs}}{108 \\text{ bytes}} = 0.25 \\text{ FLOP/byte}\\]\nSince \\(I_{naive} = 0.25 \\ll I_{crit} = 74.2\\), this kernel is memory-bound.\n\n\nPredicted performance\n\\[\n\\begin{aligned}\nP_{naive} \\;\\; & = \\min(26.7~\\text{TFLOPS},\\; 0.25 \\times 360~\\text{GB/s}) \\\\\n               & = \\min(26.7~\\text{TFLOPS},\\; 90~\\text{GFLOPS}) \\\\\n               & = \\boxed{90~\\text{GFLOPS}}\n\\end{aligned}\n\\]\n\n\n\nShared Memory Optimization\nBy staging 3×3 tiles of A and B in shared memory, each element feeds all three required dot products instead of being fetched repeatedly from DRAM.\n\nImproved traffic pattern\n\nDRAM loads for A and B drop by ~3×\nStores remain unchanged (36 bytes)\nApproximate traffic: \\((36+36)/3 + 36 = 60\\) bytes\n\n\n\nNew operational intensity\n\\[I_{shared} = \\frac{27 \\text{ FLOPs}}{60 \\text{ bytes}} = 0.45 \\text{ FLOP/byte}\\]\n\n\nPredicted performance\n\\[\n\\begin{aligned}\nP_{shared} \\;\\; & = \\min(26.7~\\text{TFLOPS},\\; 0.45 \\times 360~\\text{GB/s}) \\\\\n                & = \\min(26.7~\\text{TFLOPS},\\; 162~\\text{GFLOPS}) \\\\\n                & = \\boxed{162~\\text{GFLOPS}}\n\\end{aligned}\n\\]\nThis gives us a 1.8× speedup from shared memory optimization, but we’re still memory-bound.\n\n\n\nRTX 4000 Ada Roofline for Matmul\n\n\n\n\nPlot Code\n\n\n\nroofline_plot.py\n\n# /// script\n# dependencies = [\n#   \"matplotlib\",\n#   \"numpy\",\n# ]\n# ///\n\n# Run using uv run roofline_plot.py\nimport matplotlib.pyplot as plt\nimport numpy as np\n\npeak_compute = 26.7 * 1000  # Convert to GFLOPS\npeak_bandwidth = 360  # GB/s\ncritical_intensity = peak_compute / peak_bandwidth\n\nkernels = [\n    {\"name\": \"Naive 3×3\", \"intensity\": 0.25, \"performance\": 90, \"color\": \"#f39c12\"},\n    {\"name\": \"Shared 3×3\", \"intensity\": 0.45, \"performance\": 162, \"color\": \"#27ae60\"}\n]\n\ndef generate_roofline_data():\n    # Memory-bound region\n    memory_intensities = np.arange(0.01, critical_intensity, 0.05)\n    memory_performance = memory_intensities * peak_bandwidth\n\n    # Compute-bound region\n    compute_intensities = np.arange(critical_intensity, 1000, 5)\n    compute_performance = np.full_like(compute_intensities, peak_compute)\n\n    return memory_intensities, memory_performance, compute_intensities, compute_performance\n\nfig, ax = plt.subplots(figsize=(10, 6.5))\n\nax.set_xscale('log', base=10)\nax.set_yscale('log', base=10)\n\nmem_i, mem_p, comp_i, comp_p = generate_roofline_data()\n\nax.loglog(mem_i, mem_p, color=\"#e74c3c\", linewidth=3, label=\"Memory-bound\")\nax.loglog(comp_i, comp_p, color=\"#3498db\", linewidth=3, label=\"Compute-bound\")\n\nax.axhline(y=peak_compute, color=\"#3498db\", linestyle=\"--\", alpha=0.7, linewidth=1)\nax.axvline(x=critical_intensity, color=\"#999\", linestyle=\"--\", alpha=0.7, linewidth=1)\n\nfor kernel in kernels:\n    ax.loglog(kernel[\"intensity\"], kernel[\"performance\"],\n             'o', color=kernel[\"color\"], markersize=8,\n             markeredgecolor=\"#333\", markeredgewidth=2)\n\n    # Add kernel labels with better positioning to avoid overlap\n    if kernel[\"name\"] == \"Naive 3×3\":\n        offset_x = kernel[\"intensity\"] * 0.7  # Move left\n        offset_y = kernel[\"performance\"] * 0.65  # Move down\n    else:  # Shared 3×3\n        offset_x = kernel[\"intensity\"] * 1.4  # Move right\n        offset_y = kernel[\"performance\"] * 1.3  # Move up\n\n    ax.annotate(kernel[\"name\"],\n               (kernel[\"intensity\"], kernel[\"performance\"]),\n               xytext=(offset_x, offset_y),\n               fontsize=11, fontweight=\"bold\", ha=\"center\",\n               bbox=dict(boxstyle=\"round,pad=0.3\", facecolor=\"white\", alpha=0.8))\n\nax.text(1.5, peak_bandwidth * 1.5, \"Memory-bound\",\n        color=\"#e74c3c\", fontsize=14, fontweight=\"bold\", ha=\"center\")\nax.text(200, peak_compute * 0.8, \"Compute-bound\",\n        color=\"#3498db\", fontsize=14, fontweight=\"bold\")\n\nax.text(critical_intensity * 1.3, peak_compute * 1.1,\n        f\"I_crit = {critical_intensity:.1f}\",\n        color=\"#f39c12\", fontsize=12, fontweight=\"bold\")\n\nax.set_xlim(0.1, 1000)\nax.set_ylim(10, 30000)\nax.set_xlabel(\"Operational Intensity (FLOP/byte) - Log_10 Scale\", fontsize=12)\nax.set_ylabel(\"Performance (GFLOP/s) - Log_10 Scale\", fontsize=12)\nax.grid(True, alpha=0.3)\n\nlegend_elements = [plt.Line2D([0], [0], marker='o', color='w',\n                             markerfacecolor=k[\"color\"], markersize=8,\n                             label=k[\"name\"], markeredgecolor=\"#333\")\n                  for k in kernels]\nax.legend(handles=legend_elements, loc=\"lower right\")\n\nplt.tight_layout()\nplt.savefig('./mojo_gpu_puzzles/p14_roofline_naive_and_shared.png', bbox_inches='tight')\n\nprint(\"Performance Analysis:\")\nprint(\"-\" * 40)\nfor kernel in kernels:\n    efficiency = (kernel[\"performance\"] / peak_compute) * 100\n    print(f\"{kernel['name']}:\")\n    print(f\"  Intensity: {kernel['intensity']} FLOP/byte\")\n    print(f\"  Performance: {kernel['performance']} GFLOP/s\")\n    print(f\"  Efficiency: {efficiency:.1f}% of peak\")\n\n\n\n\n\nKey Insights\n\nIntensity grows with matrix size - For naive \\(N \\times N\\) GEMM: \\(I = \\frac{N^3}{4N^2} = \\frac{N}{4}\\) FLOP/byte\nSmall kernels are bandwidth-bound - Even perfect caching can’t reach the 74 FLOP/byte crossover until \\(N \\approx 300\\)\nShared memory helps, but only up to the ridge - Further speedups require compute-side tuning (tensor cores, ILP, etc.)\n\nNext, we’ll look at one specific optimisation for Matmul: Tile-based GEMM!"
  },
  {
    "objectID": "posts/2025-07-20-gpu-puzzles-p2.html#tiled-matrix-multiplication-gemm",
    "href": "posts/2025-07-20-gpu-puzzles-p2.html#tiled-matrix-multiplication-gemm",
    "title": "GPUs go brrr with Mojo: Algorithms",
    "section": "Tiled Matrix-Multiplication (GEMM)",
    "text": "Tiled Matrix-Multiplication (GEMM)\nOur shared-memory kernel already cut global-DRAM traffic by loading each A[i,k] / B[k,j] element once per thread row/column instead of once per output multiply.\nFor large matrices, however, even that version still:\n\nBrings the entire row of A and column of B into shared SRAM, quickly exhausting the 48–112 KiB available per SM.\nLeaves many threads idle while others finish their portion of the dot-product.\nMisses an opportunity to keep a hot, register-resident accumulator and hide global-latency behind computation.\n\nEnter tiling / blocking — the canonical GPU GEMM strategy.\n\nTile?\nThink of an N×N matmul as a chessboard. Instead of letting every thread wander across the whole board, we slice it into T×T sub-squares (tiles).\nA thread-block is assigned one output tile, and:\n\nCooperatively loads the matching T×T A-tile and B-tile from global DRAM to shared memory (two coalesced 2-D memcpy’s).\nPerforms T fused-multiply-add sweeps of that data, each thread keeping its running sum in a register.\nBarriers, slides the tile window by T along the inner-k dimension, and repeats until the dot-product is complete.\nFinally writes the T×T block of C back to DRAM.\n\n\n\n\nMatmul Operation for a 4x4 Matrix, computing the first 4 output elements. Credits: Simon Oz\n\n\nEach element of A/B is now read once per tile - independent of N, and re-used T times, boosting arithmetic intensity from O(1) to O(T) FLOP/B.\n\n\nMemory mapping for tiled GEMM\nThe memory hierachy(discussed in the previous post), is utilised as follows:\n\nRegisters: per-thread accumulators that hold partial C values across all tile iterations\nShared SRAM: the current A_tile and B_tile, cooperatively loaded once and reused T times\n\nGlobal HBM: original A, B matrices and final C; each element touched once per tile load/store\n\n\n\nRaw Memory\n\n\nManual Indexing Tiled Matmul\n\n\n\np14_matmul_tiled_manual.mojo\n\n\nalias SIZE_TILED = 8 # Size of the matrix we are multiplying, NOT the size of a tile\nalias BLOCKS_PER_GRID_TILED = (3, 3)  # each block convers 3x3 elements\nalias THREADS_PER_BLOCK_TILED = (TPB, TPB)\nalias layout_tiled = Layout.row_major(SIZE_TILED, SIZE_TILED)\n\n\nfn matmul_tiled[\n    layout: Layout, size: Int\n](\n    output: LayoutTensor[mut=False, dtype, layout],\n    a: LayoutTensor[mut=False, dtype, layout],\n    b: LayoutTensor[mut=False, dtype, layout],\n):\n    local_row = thread_idx.y\n    local_col = thread_idx.x\n    global_row = block_idx.y * TPB + local_row\n    global_col = block_idx.x * TPB + local_col\n\n    shared_a = tb[dtype]().row_major[TPB, TPB]().shared().alloc()\n    shared_b = tb[dtype]().row_major[TPB, TPB]().shared().alloc()\n\n    var local_sum: output.element_type = 0.0\n\n    @parameter\n    # (size + TPB - 1) // TPB == ceil(size / TPB) -&gt; number of tile-steps we need\n    for tile in range((size + TPB - 1) // TPB):\n        # Load elements of A into shared mem\n        if global_row &lt; size and (tile * TPB + local_col) &lt; size:\n            shared_a[local_row, local_col] = a[\n                global_row, tile * TPB + local_col\n            ]\n\n        # Load elements of B into shared mem\n        if global_col &lt; size and (tile * TPB + local_row) &lt; size:\n            shared_b[local_row, local_col] = b[\n                tile * TPB + local_row, global_col\n            ]\n\n        barrier()\n\n        # Perform matmul\n        if global_row &lt; size and global_col &lt; size:\n\n            @parameter\n            for k in range(min(TPB, size - tile * TPB)):\n                local_sum += shared_a[local_row, k] * shared_b[k, local_col]\n\n            barrier()\n\n        if global_row &lt; size and global_col &lt; size:\n            output[global_row, global_col] = local_sum\n\npixi run p14 --tiled\n# out: HostBuffer([2240.0, 2296.0, 2352.0, 2408.0, 2464.0, 2520.0, 2576.0, 2632.0, 5824.0, 6008.0, 6192.0, 6376.0, 6560.0, 6744.0, 6928.0, 7112.0, 9408.0, 9720.0, 10032.0, 10344.0, 10656.0, 10968.0, 11280.0, 11592.0, 12992.0, 13432.0, 13872.0, 14312.0, 14752.0, 15192.0, 15632.0, 16072.0, 16576.0, 17144.0, 17712.0, 18280.0, 18848.0, 19416.0, 19984.0, 20552.0, 20160.0, 20856.0, 21552.0, 22248.0, 22944.0, 23640.0, 24336.0, 25032.0, 23744.0, 24568.0, 25392.0, 26216.0, 27040.0, 27864.0, 28688.0, 29512.0, 27328.0, 28280.0, 29232.0, 30184.0, 31136.0, 32088.0, 33040.0, 33992.0])\n# expected: HostBuffer([2240.0, 2296.0, 2352.0, 2408.0, 2464.0, 2520.0, 2576.0, 2632.0, 5824.0, 6008.0, 6192.0, 6376.0, 6560.0, 6744.0, 6928.0, 7112.0, 9408.0, 9720.0, 10032.0, 10344.0, 10656.0, 10968.0, 11280.0, 11592.0, 12992.0, 13432.0, 13872.0, 14312.0, 14752.0, 15192.0, 15632.0, 16072.0, 16576.0, 17144.0, 17712.0, 18280.0, 18848.0, 19416.0, 19984.0, 20552.0, 20160.0, 20856.0, 21552.0, 22248.0, 22944.0, 23640.0, 24336.0, 25032.0, 23744.0, 24568.0, 25392.0, 26216.0, 27040.0, 27864.0, 28688.0, 29512.0, 27328.0, 28280.0, 29232.0, 30184.0, 31136.0, 32088.0, 33040.0, 33992.0])\n\nThe new formulas in the tiling implementation deserve explanation. Let’s break them down into key concepts:\n\nHow many Tiles are needed?\nThis is the expression: range((size + TPB - 1) // TPB)\nThe key idea here is: Step through k by TPB each time; if there’s a leftover chunk, do one last tile for it.\n\n\n\nMapping of elements to tiles when size=17 and TPB=8\n\n\nThe above example needs 3 tiles. Ceiling division captures this with a simple formula: \\[\n\\lceil\\frac{size}{TPB}\\rceil = \\lfloor\\frac{size + TPB - 1}{TPB}\\rfloor\n\\]\n\n\nWhich element does a thread fetch in this tile?\nEach thread snags two scalars—one from A, one from B.\ntile is simply “which chunk of k are we on?”\nInside a block, a thread owns a single output cell C[global_row, global_col]. To finish that cell it must walk k, multiplying aligned pairs (A[row, k], B[k, col]).\nOn tile t the fetches are\nA = a[global_row, t*TPB + local_col]\nB = b[t*TPB + local_row, global_col]\n\n\n\nTiled 9×9 matmul: Each thread loads 3x3 A and 3x3 B elements per tile, computes a partial sum, then syncs. Tile size = 3×3, 9 threads per block.\n\n\nBoth reads cover the same k-slice (t*TPB … t*TPB+TPB-1), so every multiply in this round lives entirely in shared memory.\n\n\nWhy do we swap local_row and local_col for B?\nGPUs coalesce global memory when adjacent threads read adjacent addresses. With the swap:\n\nFor A: neighboring threads in x-direction (local_col) read consecutive k’s ⇒ coalesced\nFor B: neighboring threads in y-direction (local_row) read consecutive k’s ⇒ also coalesced\n\nWithout the swap, one matrix would be fetched “strided” collapsing into 32 separate memory transactions per warp - a 32× slowdown on bandwidth-bound kernels.\nQuick primer: Shared memory isn’t one monolithic block. It’s chopped into 32 independent “banks”[15] [16].\n\n\n\nShared memory banking: conflict-free access (left) vs bank conflicts (right). When multiple threads access different addresses in the same bank, hardware serializes the requests. Source: CUDA Programming Blogspot\n\n\nEach is a tiny SRAM with its own read/write port that can service one request (or one 32-bit access per cycle). A warp hits peak bandwidth only when every thread lands in a different bank (or all hit the same address, which hardware can broadcast). If two threads target different addresses inside the same bank during the same cycle, the hardware must serialize them, referred to as a bank conflict.\nBeyond coalescing, our tile layout also sidesteps these conflicts. Because b_shared[k, threadIdx.x] maps each thread to a distinct bank (while a_shared[threadIdx.y, k] is broadcast-friendly), all 32 memory ports stay busy with zero serialization.\n\n\nChoosing the Right Tile Size\nWhile the current puzzle selects \\(TPB=3\\) with tile size \\(TPBxTPB\\), choosing the tile size is a balancing act.\nExact numbers vary with GPU, kernel, and precision [[17]][18].\nI’m still learning the dark art of GPU perf tuning, so I’ll save the details for a future post once I’ve had more time to experiment.\nTLDR: For each tile, we will sync (barrier), compute, shift to next tile, repeat. But this is just the baseline - there’s always a deeper optimization rabbit hole!\n\n\n\nLayoutTensor\nWhile the manual tiling approach works, it suffers from indexing complexity that obscures the algorithm’s intent and creates opportunities for bugs. Mojo’s LayoutTensor API provides an elegant solution that maintains performance while dramatically improving code clarity.\n\nThe Pain of Manual Indexing\nThe manual implementation requires careful coordinate arithmetic:\n\nNested index calculations like tile * TPB + local_col that can easily introduce off-by-one errors\nSeparate bounds checking for each matrix load operation\nExplicit management of tile boundaries and edge cases\nCode that prioritizes performance over readability\n\nLayoutTensor provides a tile() method that creates zero-copy [7] views into sub-regions of tensors [19]. This eliminates manual indexing gymnastics while keeping identical performance.\nA LayoutTensor.tile[tile_height, tile_width](block_row, block_col) call returns a view of the specified tile without copying data, at no cost!\nThe transformation from manual indexing to LayoutTensor simplifies the loading logic:\n# Load elements of A into shared mem\n- if global_row &lt; size and (tile * TPB + local_col) &lt; size:\n-     shared_a[local_row, local_col] = a[\n-         global_row, tile * TPB + local_col\n-     ]\n- \n- # Load elements of B into shared mem  \n- if global_col &lt; size and (tile * TPB + local_row) &lt; size:\n-     shared_b[local_row, local_col] = b[\n-         tile * TPB + local_row, global_col\n-     ]\n# Create tile views (zero-copy)\n+ a_tile = a.tile[TPB, TPB](block_idx.y, idx)\n+ b_tile = b.tile[TPB, TPB](idx, block_idx.x)\n\n# Asynchronous copy to shared memory\n+ copy_dram_to_sram_async[thread_layout=load_a_layout](a_shared, a_tile)\n+ copy_dram_to_sram_async[thread_layout=load_b_layout](b_shared, b_tile)\n\n# Synchronize all async copies\n+ async_copy_wait_all()\nFull solution looks as follows:\n\n\nLayoutTensor Tiled Matmul\n\n\n\np14_matmul_layout_tensor.mojo\n\nalias SIZE_TILED = 9\nalias BLOCKS_PER_GRID_TILED = (3, 3)  # each block covers 3x3 elements\nalias THREADS_PER_BLOCK_TILED = (TPB, TPB)\nalias layout_tiled = Layout.row_major(SIZE_TILED, SIZE_TILED)\n\n\nfn matmul_tiled[\n    layout: Layout, size: Int\n](\n    output: LayoutTensor[mut=True, dtype, layout],\n    a: LayoutTensor[mut=False, dtype, layout],\n    b: LayoutTensor[mut=False, dtype, layout],\n):\n    # LayoutTensor APIs\n    out_tile = output.tile[TPB, TPB](block_idx.y, block_idx.x)\n    a_shared = tb[dtype]().row_major[TPB, TPB]().shared().alloc()\n    b_shared = tb[dtype]().row_major[TPB, TPB]().shared().alloc()\n    local_row = thread_idx.y\n    local_col = thread_idx.x\n\n    var local_sum: output.element_type = 0.0\n\n    alias load_a_layout = Layout.row_major[1, TPB]()\n    alias load_b_layout = Layout.row_major[TPB, 1]()\n    \n    @parameter\n    for idx in range((size + TPB - 1) // TPB):\n        a_tile = a.tile[TPB, TPB](block_idx.y, idx)\n        b_tile = b.tile[TPB, TPB](idx, block_idx.x)\n\n        copy_dram_to_sram_async[thread_layout=load_a_layout](a_shared, a_tile)\n        copy_dram_to_sram_async[thread_layout=load_b_layout](b_shared, b_tile)\n\n        async_copy_wait_all()\n\n        @parameter\n        for k in range(min(TPB, size - idx * TPB)):\n            local_sum += a_shared[local_row, k] * b_shared[k, local_col]\n\n        barrier()\n\n    # Store result after all tiles processed\n    if (\n        block_idx.y * TPB + local_row &lt; size\n        and block_idx.x * TPB + local_col &lt; size\n    ):\n        out_tile[local_row, local_col] = local_sum\n\n\n\n\nSynchronization and Memory Hierarchy\nThe copy_dram_to_sram_async() function [20] enables asynchronous memory transfers from global to shared memory, while async_copy_wait_all() [21] provides a synchronization barrier that ensures all pending transfers complete before computation proceeds.\nThis pattern allows the GPU to:\n\nOverlap memory transfers with other computations using dedicated copy engines\nUtilize specialized hardware for efficient data movement\nMaintain correct execution ordering across thread blocks\nBypass intermediate registers for improved memory hierarchy efficiency\n\nImportant: async_copy_wait_all() only synchronizes the asynchronous copy operations—threads still need explicit barriers (barrier()) to ensure all threads in a block see the shared memory data before computation begins."
  },
  {
    "objectID": "posts/2020-08-31-bison.html",
    "href": "posts/2020-08-31-bison.html",
    "title": "BERT + BM25 = BISON",
    "section": "",
    "text": "This paper aims to create a framework to map query and doc into semantic vectors via self-attention models.\nWe cant use prior knowledge about important tokens for models based on self-attention.\n\nWords are split into different tokens using a tokenization mechanism such as WordPiece. We cannot translate word-level knowledge into different tokens.\n\nHowever, from classical information retrieval, we know that prior knowledge about the word is important. For example, ERNIE used a Knowledge Graph to achieve SOTA on several GLUE tasks.\nFurthermore, documents have different fields with varying degrees of importance such as text, header, filetypes, etc. We cannot combine these fields directly because their importance varies for a task.\nKey takeaways:\n\nCombine BM25 to learn attention scores with Query(Q) and Key(K) matrices, which are used in self-attention.\nWord weight sharing to reduce knowledge discrepancy between tokens and words.\nCombine multiple fields by placing different fields in different segments using a BM25F, a variation of BM25."
  },
  {
    "objectID": "posts/2020-08-31-bison.html#overview-of-bison",
    "href": "posts/2020-08-31-bison.html#overview-of-bison",
    "title": "BERT + BM25 = BISON",
    "section": "Overview of BISON",
    "text": "Overview of BISON\n\n\n\nBISON Architecture\n\n\n\nThe framework has 4 important parts:\n\nWord level BM25: In this, we prepend the CLS token to the query and use combined fields representation for the documents.\nToken level representation: As is the norm, we will use the token, position and segment embedding\nBISON Encoder: This will encode the query q and the document d into semantic spacy by siamese structure making it possible to serve the model online. The architecture consists of 3 stacked BISON layers.\nScoring: The documents are scored using the cosine similarity metric."
  },
  {
    "objectID": "posts/2020-08-31-bison.html#bison-encoder-weighted-self-attention",
    "href": "posts/2020-08-31-bison.html#bison-encoder-weighted-self-attention",
    "title": "BERT + BM25 = BISON",
    "section": "BISON Encoder: Weighted Self Attention",
    "text": "BISON Encoder: Weighted Self Attention\n\nAs we know from the original “Attention” paper, attention is computed using the query, key, and value matrices.\nTo the above, we will add the importance of tokens via BM25. We will introduce w_i and multiply with above attention to get new attention score i.e Weighted Self Attention \\[ A_{ij}^w = w_j\\frac{q_i.k_j^T}{\\sqrt{d}} \\]\n\n\n\n\nWeighted Self Attention\n\n\n\nMathematically, it is represented as:\n\n\\[WeightedSelfAttention(Q,K,W,V) = softmax(W (.) \\frac{QK^T}{\\sqrt{d}}V\\]\n\nWSA is the main block unit. Multiple such units are tacked to get the multi-head structure.\nRescaling by \\(W^o\\), we get Complex Weighted Self Attention(CWSA).\nA fully connected layer is added. In both CWSA and fully connected layer, layer norm and residual connections are used\n\n\\[CWSA = Concat(WeightedSelfAttention1,... WeightedSelfAttention, n)W^o\\]\n\\[CWSA_{out}=LayerNorm(CWSA + X)\\]\n\\[BISONEncoder = LayerNorm(CWSA_{out} + FeedForward(CWSA_{out}))\\]"
  },
  {
    "objectID": "posts/2020-08-31-bison.html#bm25-weight-generation",
    "href": "posts/2020-08-31-bison.html#bm25-weight-generation",
    "title": "BERT + BM25 = BISON",
    "section": "BM25 Weight generation",
    "text": "BM25 Weight generation\n\nUse BM25 for weight scores in query and BM25F for weight scores in multi-field documents\nBM25F, a variation of BM25, is for documents with different fields, each having different importance in terms of relevance saturation and length normalization. Find additional details in the file here.\n\n\nInherent Query BM25\n\nFor a given query, BM25 is calculated within the query.\n\n\\(l_q\\): query length\n\\(avl_q\\): query average length along collection\n\n\n\\[\nw_i^{BM25} = idf_i \\frac{tf_i}{tf_i + k_1(1-b+b \\frac{l_q}{avl_q})}\n\\]\n\n\nInherent Document BM25F\n\nBM25F is implemented by assigning different degrees of importance to the different zones in a document such as title, header, footer, filetype, text, etc. For a \\(word_j\\) in a document field \\(c\\), it’s frequency \\(f_j^c\\) is defined as:\n\n\\[\natf_j^c = \\frac{fw_c . tf_j^c}{1.0 + fln_c . (\\frac{fl_c}{avl_c}-1.0)}\n\\]\n\nThe corresponding BM25F score is computed as\n\n\\[\nw_j^{BM25F} = idf_j\\frac{atf_j}{k_1 + atf_j}\n\\]"
  },
  {
    "objectID": "posts/2020-08-31-bison.html#whole-word-weight-sharing",
    "href": "posts/2020-08-31-bison.html#whole-word-weight-sharing",
    "title": "BERT + BM25 = BISON",
    "section": "Whole word weight sharing",
    "text": "Whole word weight sharing\n\nBERT uses wordpiece to produce tokens from raw text. However, because of this, we cannot directly apply the prior knowledge we obtained from B-52.\nSolution: Assign the same word weight to all tokens for a given word. This way, a token might have a different weight depending on the context of the given word."
  },
  {
    "objectID": "posts/2020-08-31-bison.html#combined-fields-representation",
    "href": "posts/2020-08-31-bison.html#combined-fields-representation",
    "title": "BERT + BM25 = BISON",
    "section": "Combined Fields Representation",
    "text": "Combined Fields Representation\n\nDocuments typically consist of different fields, each of which provides complementary information. Thus, these fields need to be taken into consideration. Typical fields considered are:\n\nPrimitive Fields(Title, URL, header, etc.)\nOther fields(anchor, click signal via parsing search log, etc)\n\nFor the experiment, only the following fields were picked for performance reasons(the body has too much text to encode in a single space):\n\nTitle\nAnchor\nURL\nClicked query\n\nFor each field, we learn their representation individually and combine them. Further, we also restrict the number of tokens for each of the above fields to a total of 128 tokens.\n\n20 tokens each for Title, Anchor and URL.\nOnly consider the top 5 clicked queries for a maximum of 68 tokens.\n\nFor given fields, the document representation \\(\\phi(D)\\) is given by:\n\n\\[\n\\phi(D) = A_{f_i}(\\phi_{F_1}(F_1)+ \\phi_{F_2}(F_2)+...+\\phi_{F_n}(F_n))\n\\]\n\nHere,\n\n\\(F_i\\) is the field\n\\(\\phi(F_1)\\) denotes the representation learned for each field \\(F_i\\)\n\\(A_{f_i}\\) is a function to aggregate all representations\n\nThe remaining tokens(512-128=384) are used to encode the query."
  },
  {
    "objectID": "posts/2020-08-31-bison.html#optimization",
    "href": "posts/2020-08-31-bison.html#optimization",
    "title": "BERT + BM25 = BISON",
    "section": "Optimization",
    "text": "Optimization\n\nThe [CLS] token from the last layer is used as a representation for the query and the document\nMatching score \\(s\\) is computed as: \\[\ns = cos(BISON(query)_{last cls}, BISON(document)_{last cls})\n\\]\nCross entropy loss is used to determine if the retrieved document is relevant or not. \\[\nLoss = -ylog(\\delta(w.s+b))-(1-y)log(1 - \\delta(w.s+b))\n\\]"
  },
  {
    "objectID": "posts/2020-08-31-bison.html#intrinsic-evaluation",
    "href": "posts/2020-08-31-bison.html#intrinsic-evaluation",
    "title": "BERT + BM25 = BISON",
    "section": "Intrinsic evaluation",
    "text": "Intrinsic evaluation\n\nSelected 1400 representative queries and 7 million query document pairs from Bing’s search log\nPerformance-wise, USE performs the worst as it performs well only on homogeneous data, and query document pairs are heterogeneous.\nBISON outperforms all baseline models significantly."
  },
  {
    "objectID": "posts/2020-08-31-bison.html#ms-marco",
    "href": "posts/2020-08-31-bison.html#ms-marco",
    "title": "BERT + BM25 = BISON",
    "section": "MS Marco",
    "text": "MS Marco\n\nSimilar steps followed for document full ranking task on the MS Marco dataset.\nFor each query, the top 1000 documents are returned and MR is used as performance metrics."
  },
  {
    "objectID": "posts/2020-03-12-tutorial.html",
    "href": "posts/2020-03-12-tutorial.html",
    "title": "Bayesian Golf Putting Model",
    "section": "",
    "text": "This is inspired from Dr. Andrew Gelman’s case study, which can be found here. Specifically:\n\nThis is heavily inspired by Colin Caroll’s Blog present here. A lot of the plotting code from his blog post has been reused.\nJosh Duncan’s blog post on the same topic which can be found here.\n\nThis is not a novel solution. It is merely a replication of Dr. Gelman’s blog in PyMC3.\n\n\n\nThis is based on a popular blog post by Dr. Andrew Gelman. Here, we are given data from professional golfers on the proportion of success putts from a number of tries. Our aim is to identify:\n\nCan we model the probability of success in golf putting as a function of distance from the hole?\n\n\n\n\n\nimport pandas as pd\nimport numpy as np\nimport pymc3 as pm\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nWARNING (theano.tensor.blas): Using NumPy C-API based implementation for BLAS functions.\n\n\nThe source repository is present here\n\ndata = np.array([[2,1443,1346],\n[3,694,577],\n[4,455,337],\n[5,353,208],\n[6,272,149],\n[7,256,136],\n[8,240,111],\n[9,217,69],\n[10,200,67],\n[11,237,75],\n[12,202,52],\n[13,192,46],\n[14,174,54],\n[15,167,28],\n[16,201,27],\n[17,195,31],\n[18,191,33],\n[19,147,20],\n[20,152,24]])\n\ndf = pd.DataFrame(data, columns=[\n    'distance', \n    'tries', \n    'success_count'\n])\n\n\ndf\n\n\n\n\n\n\n\n\n\ndistance\ntries\nsuccess_count\n\n\n\n\n0\n2\n1443\n1346\n\n\n1\n3\n694\n577\n\n\n2\n4\n455\n337\n\n\n3\n5\n353\n208\n\n\n4\n6\n272\n149\n\n\n5\n7\n256\n136\n\n\n6\n8\n240\n111\n\n\n7\n9\n217\n69\n\n\n8\n10\n200\n67\n\n\n9\n11\n237\n75\n\n\n10\n12\n202\n52\n\n\n11\n13\n192\n46\n\n\n12\n14\n174\n54\n\n\n13\n15\n167\n28\n\n\n14\n16\n201\n27\n\n\n15\n17\n195\n31\n\n\n16\n18\n191\n33\n\n\n17\n19\n147\n20\n\n\n18\n20\n152\n24\n\n\n\n\n\n\n\n\nThe variables have the following format:\n\n\n\nVariable\nUnits\nDescription\n\n\n\n\ndistance\nfeet\nDistance from the hole for the putt attempt\n\n\ntries\ncount\nNumber of attempts at the chosen distance\n\n\nsuccess_count\ncount\nThe total successful putts\n\n\n\nLets try to visualize the dataset:\n\ndf['success_prob'] = df.success_count / df.tries\n\n\nsns.set()\nplt.figure(figsize=(16, 6))\nax = sns.scatterplot(x='distance', y='success_prob', data=df, s=200)\nax.set(xlabel='Distance from hole(ft)', ylabel='Probability of Success')\n\n[Text(0, 0.5, 'Probability of Success'),\n Text(0.5, 0, 'Distance from hole(ft)')]\n\n\n\n\n\n\n\n\n\nWe can notice that the probability of success decreases as the distance increases."
  },
  {
    "objectID": "posts/2020-03-12-tutorial.html#disclaimer",
    "href": "posts/2020-03-12-tutorial.html#disclaimer",
    "title": "Bayesian Golf Putting Model",
    "section": "",
    "text": "This is inspired from Dr. Andrew Gelman’s case study, which can be found here. Specifically:\n\nThis is heavily inspired by Colin Caroll’s Blog present here. A lot of the plotting code from his blog post has been reused.\nJosh Duncan’s blog post on the same topic which can be found here.\n\nThis is not a novel solution. It is merely a replication of Dr. Gelman’s blog in PyMC3."
  },
  {
    "objectID": "posts/2020-03-12-tutorial.html#problem",
    "href": "posts/2020-03-12-tutorial.html#problem",
    "title": "Bayesian Golf Putting Model",
    "section": "",
    "text": "This is based on a popular blog post by Dr. Andrew Gelman. Here, we are given data from professional golfers on the proportion of success putts from a number of tries. Our aim is to identify:\n\nCan we model the probability of success in golf putting as a function of distance from the hole?"
  },
  {
    "objectID": "posts/2020-03-12-tutorial.html#eda",
    "href": "posts/2020-03-12-tutorial.html#eda",
    "title": "Bayesian Golf Putting Model",
    "section": "",
    "text": "import pandas as pd\nimport numpy as np\nimport pymc3 as pm\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nWARNING (theano.tensor.blas): Using NumPy C-API based implementation for BLAS functions.\n\n\nThe source repository is present here\n\ndata = np.array([[2,1443,1346],\n[3,694,577],\n[4,455,337],\n[5,353,208],\n[6,272,149],\n[7,256,136],\n[8,240,111],\n[9,217,69],\n[10,200,67],\n[11,237,75],\n[12,202,52],\n[13,192,46],\n[14,174,54],\n[15,167,28],\n[16,201,27],\n[17,195,31],\n[18,191,33],\n[19,147,20],\n[20,152,24]])\n\ndf = pd.DataFrame(data, columns=[\n    'distance', \n    'tries', \n    'success_count'\n])\n\n\ndf\n\n\n\n\n\n\n\n\n\ndistance\ntries\nsuccess_count\n\n\n\n\n0\n2\n1443\n1346\n\n\n1\n3\n694\n577\n\n\n2\n4\n455\n337\n\n\n3\n5\n353\n208\n\n\n4\n6\n272\n149\n\n\n5\n7\n256\n136\n\n\n6\n8\n240\n111\n\n\n7\n9\n217\n69\n\n\n8\n10\n200\n67\n\n\n9\n11\n237\n75\n\n\n10\n12\n202\n52\n\n\n11\n13\n192\n46\n\n\n12\n14\n174\n54\n\n\n13\n15\n167\n28\n\n\n14\n16\n201\n27\n\n\n15\n17\n195\n31\n\n\n16\n18\n191\n33\n\n\n17\n19\n147\n20\n\n\n18\n20\n152\n24\n\n\n\n\n\n\n\n\nThe variables have the following format:\n\n\n\nVariable\nUnits\nDescription\n\n\n\n\ndistance\nfeet\nDistance from the hole for the putt attempt\n\n\ntries\ncount\nNumber of attempts at the chosen distance\n\n\nsuccess_count\ncount\nThe total successful putts\n\n\n\nLets try to visualize the dataset:\n\ndf['success_prob'] = df.success_count / df.tries\n\n\nsns.set()\nplt.figure(figsize=(16, 6))\nax = sns.scatterplot(x='distance', y='success_prob', data=df, s=200)\nax.set(xlabel='Distance from hole(ft)', ylabel='Probability of Success')\n\n[Text(0, 0.5, 'Probability of Success'),\n Text(0.5, 0, 'Distance from hole(ft)')]\n\n\n\n\n\n\n\n\n\nWe can notice that the probability of success decreases as the distance increases."
  },
  {
    "objectID": "posts/2020-03-12-tutorial.html#geometry-based-model",
    "href": "posts/2020-03-12-tutorial.html#geometry-based-model",
    "title": "Bayesian Golf Putting Model",
    "section": "Geometry based Model",
    "text": "Geometry based Model\n\nWe’ll try to accomodate the physics associated with the problem. Specically, we assume:\n\nAssumptions\n\nThe golfers can hit the ball in any direction with some small error. This error could be because of inaccuracy, errors in the human, etc.\nThis error refers to the angle of the shot.\nWe assume the angle is normally distributed.\n\n\nImplications\n\nThe ball goes in whenever the angle is small enough for it to hit the cup of the hole!\nLonger putt \\(\\implies\\) Larger error \\(\\implies\\) Lower success rate than shorter putt\n\nFrom Dr. Gelman’s blog, we obtain the formula as:\n\n\\(Pr(|angle| &lt; sin^{-1}(\\frac{(R-r)}{x})) = 2\\phi\\big(\\frac{sin^{-1}\\frac{R-r}{x}}{\\sigma}\\big) - 1\\)\n\n\\(\\phi \\implies\\) Cumulative Normal Distribution Function.\nHence, our model will now have two big parts:\n\\[y_j \\sim binomial(n_j, p_j)\\]\n\\[p_j = 2\\phi\\big(\\frac{sin^{-1}\\frac{R-r}{x}}{\\sigma}\\big) - 1\\]\nTypically, the diameter of a golf ball is 1.68 inches and the cup is 4.25 inches i.e\n\\[r = 1.68 \\text{inch}\\] \\[R = 4.25 \\text{inch}\\]\n\nball_radius = (1.68/2)/12\ncup_radius = (4.25/2)/12\n\n\ndef calculate_prob(angle, distance):\n    \"\"\"\n    Calculate probability that the ball with fall in the hole given the angle of the shot \n    and the distance from the hole.\n    \"\"\"\n    rad = angle * np.pi / 180.0\n    arcsin = np.arcsin((cup_radius - ball_radius)/ distance)\n    return 2 * scipy.stats.norm(0, rad).cdf(arcsin) - 1\n\n\nplt.figure(figsize=(16, 6))\nls = np.linspace(0, df.distance.max(), 200)\nax = sns.scatterplot(\n    x='distance', \n    y='success_prob', \n    data=df, \n    s=100,\n    legend='full'\n)\nfor angle in [0.5, 1, 2, 5, 20]:\n    ax.plot(\n        ls, \n        calculate_prob(angle, ls), \n        label=f\"Angle={angle}\"\n    )\nax.set(\n    xlabel='Distance from hole(ft)', \n    ylabel='Probability of Success'\n)\nax.legend()\n\n\n\n\n\n\n\n\nLet us now add this to our model!\n\nimport theano.tensor as tt\n\n\ndef calculate_phi(num):\n    \"cdf for standard normal\"\n    q = tt.erf(num / tt.sqrt(2.0)) # ERF is the Gaussian Error \n    return (1.0 + q) / 2.\n\n\nwith pm.Model() as model:\n    angle_of_shot_radians = pm.HalfNormal('angle_of_shot_radians')\n    angle_of_shot_degrees = pm.Deterministic(\n        'angle_of_shot_degrees',\n        (angle_of_shot_radians * 180.0) / np.pi\n    )\n    p_ball_goes_in = pm.Deterministic(\n        'p_ball_goes_in',\n        2 * calculate_phi(\n                tt.arcsin(\n                    (cup_radius - ball_radius)/ df.distance\n                ) / angle_of_shot_radians\n            )\n        ) - 1\n    p_success = pm.Binomial(\n        'p_success',\n        n=df.tries, \n        p=p_ball_goes_in, \n        observed=df.success_count\n    )\n\n\npm.model_to_graphviz(model)\n\n\n\n\n\n\n\n\n\nwith model:\n    trace = pm.sample(4000, tune=1000, chains=4)\n\nAuto-assigning NUTS sampler...\nInitializing NUTS using jitter+adapt_diag...\nERROR (theano.gof.opt): Optimization failure due to: local_grad_log_erfc_neg\nERROR (theano.gof.opt): node: Elemwise{true_div}(Elemwise{mul,no_inplace}.0, Elemwise{erfc,no_inplace}.0)\nERROR (theano.gof.opt): TRACEBACK:\nERROR (theano.gof.opt): Traceback (most recent call last):\n  File \"/home/goodhamgupta/shubham/blog/_notebooks/.env/lib/python3.6/site-packages/theano/gof/opt.py\", line 2034, in process_node\n    replacements = lopt.transform(node)\n  File \"/home/goodhamgupta/shubham/blog/_notebooks/.env/lib/python3.6/site-packages/theano/tensor/opt.py\", line 6789, in local_grad_log_erfc_neg\n    if not exp.owner.inputs[0].owner:\nAttributeError: 'NoneType' object has no attribute 'owner'\n\nMultiprocess sampling (4 chains in 2 jobs)\nNUTS: [angle_of_shot_radians]\nSampling 4 chains, 0 divergences: 100%|██████████| 20000/20000 [00:10&lt;00:00, 1943.54draws/s]\nThe acceptance probability does not match the target. It is 0.8844154441842546, but should be close to 0.8. Try to increase the number of tuning steps.\n\n\n\npm.summary(trace).head(2)\n\n\n\n\n\n\n\n\n\nmean\nsd\nhpd_3%\nhpd_97%\nmcse_mean\nmcse_sd\ness_mean\ness_sd\ness_bulk\ness_tail\nr_hat\n\n\n\n\nangle_of_shot_radians\n0.027\n0.000\n0.026\n0.027\n0.0\n0.0\n6641.0\n6641.0\n6641.0\n10874.0\n1.0\n\n\nangle_of_shot_degrees\n1.527\n0.023\n1.484\n1.570\n0.0\n0.0\n6641.0\n6641.0\n6641.0\n10874.0\n1.0\n\n\n\n\n\n\n\n\n\npm.plot_posterior(trace['angle_of_shot_degrees'])\n\narray([&lt;matplotlib.axes._subplots.AxesSubplot object at 0x7fdfe4c24f60&gt;],\n      dtype=object)\n\n\n\n\n\n\n\n\n\nFrom the above results, we can see:\n\nPyMC3 has estimated\n\n\\(angle_of_shot_degrees\\) to be \\(1.53 \\pm 0.023\\)\n\nThe MCSE is almost 0 \\(\\implies\\) The simulation has run long enough for the chains to converge.\n\\(r\\_hat = 1.0\\) tells us that the chains have mixed well i.e hairy hedgehog pattern.\n\nLet’s visualize the fit with this new model:\n\ngeo_model_prob = calculate_prob(\n    trace['angle_of_shot_degrees'].mean(), \n    df.distance\n)\n\n\nsns.set()\nplt.figure(figsize=(16, 6))\n\nax = sns.scatterplot(x='distance', y=df.success_prob, data=df, s=200, label='Actual')\n\nsns.scatterplot(x='distance', y=df.posterior_success_prob, data=df, label='Logistic Regression',ax=ax, color='red', s=100)\nsns.scatterplot(x='distance', y=geo_model_prob, data=df, label='Geometry based ',ax=ax, color='orange', s=100)\n\nsns.lineplot(x='distance', y=df.posterior_success_prob, data=df,ax=ax, color='red')\nsns.lineplot(x='distance', y=geo_model_prob, data=df,ax=ax, color='orange')\n\nax.set(xlabel='Distance from hole(ft)', ylabel='Probability of Success')\n\n[Text(0, 0.5, 'Probability of Success'),\n Text(0.5, 0, 'Distance from hole(ft)')]\n\n\n\n\n\n\n\n\n\n\nWe can see that the geometry based model fits better than the logistic regression model.\nWhile this model is not completely accurate, it suggests that angle is a good variable to model the problem. Using this model, we can be more confident about extrapolating the data.\nFor the same 50ft putt, the probability now is:\n\n\nimport scipy\nlr_result = np.round(\n    100 * scipy.special.expit(2.223 + -0.255 * 50).mean(),\n    5\n)\ngeo_result = np.round(\n    100 * calculate_prob(\n        trace['angle_of_shot_degrees'].mean(), \n        50\n    ).mean(),\n    5\n)\n\nprint(\n    f\"Logistic Regression Model: {lr_result}% \\n\"\\\n    f\"Geometry Based Model: {geo_result}%\"\n)\n\nLogistic Regression Model: 0.00268% \nGeometry Based Model: 6.40322%"
  },
  {
    "objectID": "posts/2020-03-12-tutorial.html#new-data",
    "href": "posts/2020-03-12-tutorial.html#new-data",
    "title": "Bayesian Golf Putting Model",
    "section": "New Data!",
    "text": "New Data!\nMark Broadie obtained new data about the golfers. Let’s see how our model performs on this new dataset.\nFirst, we’ll look at the summary of the dataset.\n\n#  golf putting data from Broadie (2018)\nnew_golf_data = np.array([\n[0.28, 45198, 45183],\n[0.97, 183020, 182899],\n[1.93, 169503, 168594],\n[2.92, 113094, 108953],\n[3.93, 73855, 64740],\n[4.94, 53659, 41106],\n[5.94, 42991, 28205],\n[6.95, 37050, 21334],\n[7.95, 33275, 16615],\n[8.95, 30836, 13503],\n[9.95, 28637, 11060],\n[10.95, 26239, 9032],\n[11.95, 24636, 7687],\n[12.95, 22876, 6432],\n[14.43, 41267, 9813],\n[16.43, 35712, 7196],\n[18.44, 31573, 5290],\n[20.44, 28280, 4086],\n[21.95, 13238, 1642],\n[24.39, 46570, 4767],\n[28.40, 38422, 2980],\n[32.39, 31641, 1996],\n[36.39, 25604, 1327],\n[40.37, 20366, 834],\n[44.38, 15977, 559],\n[48.37, 11770, 311],\n[52.36, 8708, 231],\n[57.25, 8878, 204],\n[63.23, 5492, 103],\n[69.18, 3087, 35],\n[75.19, 1742, 24],\n])\n\nnew_df = pd.DataFrame(\n    new_golf_data, \n    columns=['distance', 'tries', 'success_count']\n)\n\n\nnew_geo_model_prob = calculate_prob(\n    trace['angle_of_shot_degrees'].mean(), \n    new_df.distance\n)\n\n\nnew_df['success_prob'] = new_df.success_count / new_df.tries\nsns.set()\nplt.figure(figsize=(16, 6))\nax = sns.scatterplot(x='distance', y='success_prob', data=df, label='Old Dataset', s=200)\nsns.scatterplot(x='distance', y='success_prob', data=new_df,label='New Dataset', s=200, ax=ax)\nsns.scatterplot(x='distance', y=new_geo_model_prob, data=new_df, label='Geometry based Model ',ax=ax, color='red', s=100)\nax.set(\n    xlabel='Distance from hole(ft)', \n    ylabel='Probability of Success'\n)\nplt.setp(ax.get_legend().get_texts(), fontsize='25')\n\n\n\n\n\n\n\n\nWe can see:\n\nSuccess rate is similar in the 0-20 feet range for both datasets.\nBeyond 20 ft, success rate is lower than expected. These attempts are more difficult, even after we have accounted for increased angular precision."
  },
  {
    "objectID": "posts/2020-03-12-tutorial.html#moar-features",
    "href": "posts/2020-03-12-tutorial.html#moar-features",
    "title": "Bayesian Golf Putting Model",
    "section": "Moar features!",
    "text": "Moar features!\nTo get the ball in, along with the angle, we should also need to take into account if the ball was hit hard enough.\nFrom Colin Caroll’s Blog, we have the following: &gt; Mark Broadie made the following assumptions - If a putt goes short or more than 3 feet past the hole, it will not go in. - Golfers aim for 1 foot past the hole - The distance the ball goes, \\(u\\), is distributed as: \\[ u \\sim \\mathcal{N}\\left(1 + \\text{distance}, \\sigma_{\\text{distance}} (1 + \\text{distance})\\right), \\] where we will learn \\(\\sigma_{\\text{distance}}\\).\nAfter working through the geometry and algebra, we get:\n\\[P(\\text{Good shot}) = \\bigg(2\\phi\\big(\\frac{sin^{-1}(\\frac{R-r}{x})}{\\sigma_{angle}}\\big)-1\\bigg)\\bigg(\\phi\\bigg(\\frac{2}{(x+1)\\sigma_{distance}}\\bigg) - \\phi\\bigg(\\frac{-1}{(x+1)\\sigma_{distance}}\\bigg)\\bigg)\\]\nLet’s write this down in PyMC3\n\nOVERSHOT = 1.0\nDISTANCE_TOLERANCE = 3.0\ndistances = new_df.distance.values\nwith pm.Model() as model:\n    angle_of_shot_radians = pm.HalfNormal('angle_of_shot_radians')\n    angle_of_shot_degrees = pm.Deterministic(\n        'angle_of_shot_degrees',\n        (angle_of_shot_radians * 180.0) / np.pi\n    )\n    \n    variance_of_distance = pm.HalfNormal('variance_of_distance')\n    p_good_angle = pm.Deterministic(\n        'p_good_angle',\n        2 * calculate_phi(\n                tt.arcsin(\n                    (cup_radius - ball_radius)/ distances\n                ) / angle_of_shot_radians\n            )\n        ) - 1\n    p_good_distance = pm.Deterministic(\n        'p_good_distance',\n        calculate_phi(\n            (DISTANCE_TOLERANCE - OVERSHOT) / ((distances + OVERSHOT) * variance_of_distance)) \n        - calculate_phi(\n            -OVERSHOT / ((distances + OVERSHOT) * variance_of_distance))\n\n    )\n    p_success = pm.Binomial(\n        'p_success',\n        n=new_df.tries, \n        p=p_good_angle * p_good_distance, \n        observed=new_df.success_count\n    )\n    \n\n\npm.model_to_graphviz(model)\n\n\n\n\n\n\n\n\n\nwith model:\n    trace = pm.sample(1000, tune=1000, chains=4)\n\nAuto-assigning NUTS sampler...\nInitializing NUTS using jitter+adapt_diag...\nMultiprocess sampling (4 chains in 2 jobs)\nNUTS: [variance_of_distance, angle_of_shot_radians]\nSampling 4 chains, 0 divergences: 100%|██████████| 8000/8000 [00:08&lt;00:00, 969.28draws/s] \nThe number of effective samples is smaller than 25% for some parameters.\n\n\n\npm.summary(trace).head(3)\n\n\n\n\n\n\n\n\n\nmean\nsd\nhpd_3%\nhpd_97%\nmcse_mean\nmcse_sd\ness_mean\ness_sd\ness_bulk\ness_tail\nr_hat\n\n\n\n\nangle_of_shot_radians\n0.013\n0.000\n0.013\n0.013\n0.0\n0.0\n865.0\n865.0\n862.0\n1109.0\n1.0\n\n\nangle_of_shot_degrees\n0.761\n0.003\n0.755\n0.768\n0.0\n0.0\n865.0\n865.0\n862.0\n1109.0\n1.0\n\n\nvariance_of_distance\n0.137\n0.001\n0.136\n0.138\n0.0\n0.0\n855.0\n855.0\n855.0\n1186.0\n1.0\n\n\n\n\n\n\n\n\n\npm.plot_posterior(trace['variance_of_distance'])\n\narray([&lt;matplotlib.axes._subplots.AxesSubplot object at 0x7fdff74693c8&gt;],\n      dtype=object)\n\n\n\n\n\n\n\n\n\n\nwith model:\n    distance_posterior = pm.sample_posterior_predictive(trace)\n\n100%|██████████| 4000/4000 [00:04&lt;00:00, 846.25it/s]\n\n\n\ndef calculate_prob_distance(angle, distance, ls):\n    \"\"\"\n    Calculate the probability the ball will land inside the hole\n    given the variance in angle and distance.\n    \n    NOTE: Adapted from Colin Carroll's Blog.\n    \"\"\"\n    norm = scipy.stats.norm(0, 1)\n    prob_angle = 2 * norm.cdf(\n        np.arcsin((cup_radius - ball_radius) / ls) / angle) - 1\n    prob_distance_one = norm.cdf(\n        (DISTANCE_TOLERANCE - OVERSHOT) / ((ls + OVERSHOT) * distance)\n    )\n    prob_distance_two = norm.cdf(-OVERSHOT / ((ls + OVERSHOT) * distance))\n    prob_distance = prob_distance_one - prob_distance_two\n    \n    return prob_angle * prob_distance\n\n\nls = np.linspace(0, new_df.distance.max(), 200)\n\n\nnew_df['success_prob'] = new_df.success_count / new_df.tries\nsns.set()\nplt.figure(figsize=(16, 6))\nax = sns.scatterplot(\n    x='distance', \n    y='success_prob',\n    data=new_df,\n    label='Actual', \n    s=200\n)\nsns.scatterplot(\n    x='distance', \n    y=new_geo_model_prob, \n    data=new_df, \n    label='Angle only Model',\n    ax=ax, \n    color='red', \n    s=100\n)\n\nsns.scatterplot(\n    x='distance', \n    y=calculate_prob_distance(\n        trace['angle_of_shot_radians'].mean(), \n        trace['variance_of_distance'].mean(),\n        new_df.distance\n    ), \n    data=new_df, \n    label='Distance + Angle based Model ',\n    ax=ax, \n    color='black', \n    s=100\n)\nax.set(\n    xlabel='Distance from hole(ft)', \n    ylabel='Probability of Success'\n)\n\nplt.setp(ax.get_legend().get_texts(), fontsize='25')\n\n\n\n\n\n\n\n\nFrom the graph, we can conclude that:\n\nThe model is good at distance lower than 10 ft and distances higher than 40ft.\nThere is some mismatch between 10ft to 40ft, but overall this is a good fit."
  },
  {
    "objectID": "posts/2020-03-12-tutorial.html#whats-the-point",
    "href": "posts/2020-03-12-tutorial.html#whats-the-point",
    "title": "Bayesian Golf Putting Model",
    "section": "What’s the point?",
    "text": "What’s the point?\nUsing Bayesian analysis, we want to be able to quantify the unvertainity with each of our predictions. Since each prediction is a distribution, we can utilize this to see where the putts will fall if they do not fall in the hole.\n\ndef simulate_from_distance(trace, distance_to_hole, trials=10_000):\n    n_samples = trace['angle_of_shot_radians'].shape[0]\n\n    idxs = np.random.randint(0, n_samples, trials)\n    variance_of_shot = trace['angle_of_shot_radians'][idxs]\n    variance_of_distance = trace['variance_of_distance'][idxs]\n\n    theta = np.random.normal(0, variance_of_shot)\n    distance = np.random.normal(distance_to_hole + OVERSHOT, (distance_to_hole + OVERSHOT) * variance_of_distance)\n\n    final_position = np.array([distance * np.cos(theta), distance * np.sin(theta)])\n\n    made_it = np.abs(theta) &lt; np.arcsin((cup_radius - ball_radius) / distance_to_hole)\n    made_it = made_it * (final_position[0] &gt; distance_to_hole) * (final_position[0] &lt; distance_to_hole + DISTANCE_TOLERANCE)\n    \n    _, ax = plt.subplots()\n\n    ax.plot(0, 0, 'k.', lw=1, mfc='black', ms=150 / distance_to_hole)\n    ax.plot(*final_position[:, ~made_it], '.', alpha=0.1, mfc='r', ms=250 / distance_to_hole, mew=0.5)\n    ax.plot(distance_to_hole, 0, 'ko', lw=1, mfc='black', ms=350 / distance_to_hole)\n\n    ax.set_facecolor(\"#e6ffdb\")\n    ax.set_title(f\"Final position of {trials:,d} putts from {distance_to_hole}ft.\\n({100 * made_it.mean():.1f}% made)\")\n    return ax\n\nsimulate_from_distance(trace, distance_to_hole=10);"
  },
  {
    "objectID": "posts/2020-04-21-knowledge-lm.html",
    "href": "posts/2020-04-21-knowledge-lm.html",
    "title": "T5’s Closed-Book Exam",
    "section": "",
    "text": "Introduction\n\nThis is a new paper which explores the limits of using their new T5 titled How Much Knowledge Can You Pack Into The Parameters of a Language Model?. model in a context-free QA domain.\nAs with the T5 model itself, it is very interesting to see these one-model-to-rule-them-all architectures as they exhibit some form of generalization.\nI found this paper from Adam Roberts twitter thread which is available here\nCore Idea: This paper will test two main things:\n\nHow well does the model create a knowledge base such that it can answer questions just based on this base and no other information.\nDo model with more parameters store more information? Measuring knowledge retreiving ability is used to check this point.\n\n\n\n\nPaper Introduction\n\nReading Comprehension: Given a question and context, lookup and give the answer.\nOpen domain question answering: Random context-independent questions. It is given entire context(all the information possible in the world) and the model is expected to deduce the answer. Open book exam.\nHere, problem is similar to open book exam + no context given at all. Model should retreive info from parameters and return the values. Closed book exam.\nT5: Treat every NLP task as text-to-text problem using encoder decoder Transformer.\nFor natural questions dataset, evaluation is done as follows:\nFirst method:\n\nIgnore all “unanswerable” and “long answer” type questions.\nmodel trained to output single answer\nQuestions with answers longer than 5 tokens are ignored\nAnswers normalized before comparsion\nAnswer is correct if it matches any of the annotated answers\n\nSecond method:\n\nConsidered correct only if model predicts all the answers correctly\n\nFor fine tuning, use AdaFactor Optimizer(need to read more about this one)\n\n\n\nResults\n\nSOTA on Natural Questions(NQ) and WebQuestions(WQ) dataset. Worst performance on TriviaQA(TQA).\nPerformance increases with model size.\nGuu et all(2020) performs better than T5 on NQ and WQ. Need to read this paper as well. It\n\nRetreives Revevant documents\nAnswers questions in end-to-end fashion\n\nClosed-book model seem to perform on par with open-book models, leading to new research directions.\nFor multiple answer type questions, T5 lower than SOTA BUT much better than baseline that was published with the paper. Therefore, T5 can perform well on these types of questions as well.\n\n\n\nDrawbacks\n\nModel is far too expensive to train.\nOpen-book models provide some indication of what information was used to answer the problem. HOWEVER, T5 just has a distribution over parameters that cannot be interpreted.\nMLE does not gurantee the model will learn a fact. Therefore, difficult to ensure the model learns specific information during pre-training\nMeasure and improve performance on difficult QA tasks like DROP, which needs reasoning ability."
  },
  {
    "objectID": "posts/2020-03-14-realm.html",
    "href": "posts/2020-03-14-realm.html",
    "title": "REALM: Retrieval-Augmented Language MOdel Pre-Training",
    "section": "",
    "text": "REALM is a paper mentioned in the T5 paper titled: How Much Knowledge Can You Pack Into The Parameters of a Language Model?\nTLDR: This paper retrieves documents that have the information present while solving Question-Answer type problems.\n\nNOTE: This post is more like my running notes while reading the paper than a comprehensive blog. I will update this blog once I learn a little more about the transformer architecture.\n\nIntroduced a latent knowledge retriever, which can attend and retrieve documents over large corpus and can be trained in unsupervised manner using masked language modelling technique and backprop through retreiver which considers lots of docs.\n\n\n\nTraining process for REALM\n\n\nKey point: Train retriever using a performance-based signal from unsupervised text.\nRetrieval based LM =&gt; Moar computational resources =&gt; Moar money\n\nSolution: Computation performed for each doc is cached and can be used again. Best doc selected using Maximum Inner Product Search(MIPS). Read the paper here.\n\nREALM retriever can be used on downstream tasks via transfer learning.\nREALM is SOTA on NQ-Open, WQ and CuratedTrec."
  },
  {
    "objectID": "posts/2020-03-14-realm.html#retreive-then-predict-generative-process",
    "href": "posts/2020-03-14-realm.html#retreive-then-predict-generative-process",
    "title": "REALM: Retrieval-Augmented Language MOdel Pre-Training",
    "section": "Retreive-then-predict generative process",
    "text": "Retreive-then-predict generative process\n\nTraining: Masked-LM. Fine-tuning: Open QA task\nComputing chance of the document given a question decomposed into two steps:\n\nFunction to be computed: \\[p(y\\|x)\\]\nGiven \\[x\\],retrive documents \\[z\\] from corpus \\[Z\\]. Modelled as: \\[p(z\\|x)\\]\nCondition of both \\[z\\] and \\[x\\] to generate output \\[y\\] i.e \\[p(y\\|z, x)\\]\nOverall likelihood \\[y\\] is generated by treating \\[z\\] as latent variable and marginalizing over all documents \\[z\\]\n\\[\np(y\\|x) = \\sum_{z \\epsilon Z} p(y\\|z, x) * p(z\\|x)\n\\]"
  },
  {
    "objectID": "posts/2020-03-14-realm.html#neural-knowledge-retriever",
    "href": "posts/2020-03-14-realm.html#neural-knowledge-retriever",
    "title": "REALM: Retrieval-Augmented Language MOdel Pre-Training",
    "section": "Neural Knowledge Retriever",
    "text": "Neural Knowledge Retriever\n\nDense inner product model.\n\\[\n\\begin{aligned}\n    p(z\\|x) = \\frac{exp(f(x,z))}{\\sum_{z'}{exp(f(x,z'))}} \\\\\n    f(x,z) = Embed_{input}(x)^TEmbed_{doc}(z)\n\\end{aligned}\n\\]\n\\[Embed_{input}\\] and \\[Embed_{doc}\\] are embedding functions\n\\[f(x,z)\\] is called relevance score. It is inner product of vector embeddings.\nRelevant Distribution is softmax over all relevance scores\nEmbedding implement using BERT-style transformers. Join using &lt;SEP&gt;, prefix using &lt;CLS&gt; and append &lt;SEP&gt; as the end token. \\[\\begin{aligned}\n        \\\\ join_{BERT}(x) = [CLS]x[SEP]\n        \\\\ join_{BERT}(x_1, x_2) = [CLS]x_1[SEP]x_2[SEP]\n    \\end{aligned}\\]\nPass above into transformer, which gives over vector for each token. Perform linear projection to reduce dimensionality of vector \\[\\begin{aligned}\n    \\\\ Embed_{input}(x) = W_{input}BERT_{CLS}(join_{BERT}(x))\n    \\\\ Embed_{doc}(z) = W_{doc}BERT_{CLS}(join_{BERT}(z_{title}, z_{body}))\n\\end{aligned}\\]"
  },
  {
    "objectID": "posts/2020-03-14-realm.html#knowledge-augmented-encoder",
    "href": "posts/2020-03-14-realm.html#knowledge-augmented-encoder",
    "title": "REALM: Retrieval-Augmented Language MOdel Pre-Training",
    "section": "Knowledge-Augmented Encoder",
    "text": "Knowledge-Augmented Encoder\n\nGiven input \\[x\\] and relevant doc \\[z\\], this defines \\[p(y\\|z,x)\\]\nJoin \\[x\\] and \\[z\\] into single sequence and feed into transformer\nHere, training is different for pre-training vs fine-tuning\n\nFor pre-training, predict [MASK] token. Use same Masked LM(MLM) loss as in Transformer(Devlin et al.)\nFor Open-QA, we need to produce string \\[y\\].\nAssumption: \\[y\\] occurs as sequence of tokens in some document in the corpus."
  },
  {
    "objectID": "posts/2020-03-14-realm.html#training",
    "href": "posts/2020-03-14-realm.html#training",
    "title": "REALM: Retrieval-Augmented Language MOdel Pre-Training",
    "section": "Training",
    "text": "Training\n\nCompute gradients in \\[\\theta\\] and \\[\\phi\\] and optimize using SGD.\nChallenge: Computing \\[p(y\\|x)\\]\nApprox by summing over top \\[k\\] documents with highest prob under \\[p(z\\|x)\\]\nQuestion: How to find top \\[k\\] docs? Answer: Use MIPS\nNeed to precompute \\[Embed_{doc}(x)\\] for all docs. Problem? It changes with each step of SGD.\nSolution: Async refresh \\(Embed_{doc}\\) every 500 steps\nUse MIPS to select top \\(k\\) docs. For these docs, recompute \\(p(z\\|x)\\) using new \\(\\theta\\).\n\n\nImplementing async MIPS refreshes\n\nTwo jobs running in parallel:\n\nPrimary trainer: Perform gradient updates on parameters\nSecondary index builder: Embeds and indexes the docs\n\n\n\nAsync MIPS implementation\n\n\nAsync refresh used only for pre-training\nFor fine tuning, build index once from pre-trained \\(\\theta\\) and use it.\n\n\n\n\nWhat does retriever learn?\n\nRetriever promotes docs that improve accuracy\nThis can be analyzed by analyzing gradient wrt the parameters\n\n\n\nInjecting inductive biases into pre-trianing\n\nSalient span masking: Some questions require only local context. Select named entities and dates and mask one of them. Performs better.\nNull document: Add null document to top \\[k\\] documents to allow answers even when no context is required\nProhibiting trivial retrievals: If knowledge corpus \\[Z\\] is the same as pre-training corpus \\[X\\], it can predict \\[y\\] by looking at \\[x\\] in \\[z\\]. Exclude trivial candidate\nInitialization: Warm up \\[Embed_{input}\\] and \\[Embed_{doc}\\] using Inverse Cloze Task(ICT) i.e model trained to retrieve the doc where the sentence came from."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Tech Musings",
    "section": "",
    "text": "Curriculum Learning 🤝 DSPy: Modelling\n\n\n\n\n\nMapping ConvFinQA and crafting a curriculum for financial QA\n\n\n\n\n\nSep 1, 2025\n\n\n1 min\n\n\n\n\n\n\n\n\n\n\n\n\nCurriculum Learning 🤝 DSPy: Exploration\n\n\n\n\n\nMapping ConvFinQA and crafting a curriculum for financial QA\n\n\n\n\n\nAug 31, 2025\n\n\n10 min\n\n\n\n\n\n\n\n\n\n\n\n\nCracking the Anthropic CTF\n\n\n\n\n\nIntersection of steganography x neural networks, with API credits as a reward!\n\n\n\n\n\nAug 5, 2025\n\n\n15 min\n\n\n\n\n\n\n\n\n\n\n\n\nGPUs go brrr with Mojo: Algorithms\n\n\n\n\n\nMoar GPU puzzles with slide-n-sum pooling, tile-flipping convs & warp-speed scans\n\n\n\n\n\nJul 20, 2025\n\n\n56 min\n\n\n\n\n\n\n\n\n\n\n\n\nGPUs go brrr with Mojo: Fundamentals\n\n\n\n\n\nLearning GPU programming fundamentals through hands-on Mojo implementations\n\n\n\n\n\nJul 6, 2025\n\n\n16 min\n\n\n\n\n\n\n\n\n\n\n\n\nBERT + BM25 = BISON\n\n\n\n\n\nA new framework for information retrieval from documents\n\n\n\n\n\nAug 31, 2020\n\n\n7 min\n\n\n\n\n\n\n\n\n\n\n\n\nLongFormer\n\n\n\n\n\nTransformers for loooong documents\n\n\n\n\n\nMay 11, 2020\n\n\n9 min\n\n\n\n\n\n\n\n\n\n\n\n\nTagLM\n\n\n\n\n\n\n\n\n\n\n\nApr 23, 2020\n\n\n3 min\n\n\n\n\n\n\n\n\n\n\n\n\nT5’s Closed-Book Exam\n\n\n\n\n\nMeasure the amount of information stored in a model\n\n\n\n\n\nApr 21, 2020\n\n\n4 min\n\n\n\n\n\n\n\n\n\n\n\n\nAttention is all you need\n\n\n\n\n\n\n\n\n\n\n\nApr 20, 2020\n\n\n5 min\n\n\n\n\n\n\n\n\n\n\n\n\nREALM: Retrieval-Augmented Language MOdel Pre-Training\n\n\n\n\n\nA better Q&A system based on knowledge retrieval\n\n\n\n\n\nMar 14, 2020\n\n\n7 min\n\n\n\n\n\n\n\n\n\n\n\n\nBayesian Golf Putting Model\n\n\n\n\n\nAre you the next Tiger Woods?\n\n\n\n\n\nMar 12, 2020\n\n\n6 min\n\n\n\n\n\n\n\n\n\n\n\n\nYo!\n\n\n\n\n\nFirst post\n\n\n\n\n\nJan 14, 2020\n\n\n1 min\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "2025-09-01-cl-dspy-modelling.html",
    "href": "2025-09-01-cl-dspy-modelling.html",
    "title": "Curriculum Learning 🤝 DSPy: Modelling",
    "section": "",
    "text": "With EDA & feature engineering done we now “train” our model.\nTraditionally, LLMs applications are built using hand-rolled prompts. These prompts are often brittle and difficult to optimize, especially when dealing with complex tasks.\nInstead, we aim to move from prompting to programming, and use DSPy to build our models.\nWhy DSPy instead of hand-rolled prompts?\nTL;DR: DSPy turns brittle prompt tinkering into robust, testable, and optimizable code.\nDocs: https://docs.dspy.ai/"
  },
  {
    "objectID": "2025-09-01-cl-dspy-modelling.html#evaluation-metrics",
    "href": "2025-09-01-cl-dspy-modelling.html#evaluation-metrics",
    "title": "Curriculum Learning 🤝 DSPy: Modelling",
    "section": "Evaluation Metrics",
    "text": "Evaluation Metrics\nFor this exploratory analysis, we need a clear metric to measure model performance across our curriculum learning experiments. Following the original ConvFinQA paper, we adopt Exact Match (EM) as our primary evaluation metric.\n\nPrimary Metric: Turn-level EM\nTurn-level EM measures whether the generated answer for a specific dialogue turn exactly matches the gold standard answer. This binary metric (1 for exact match, 0 otherwise) provides a strict but interpretable measure of performance that directly aligns with the task requirements.\nWe choose this as our primary metric for several reasons: - Simplicity: Easy to implement and interpret for initial experimentation - Strictness: Financial reasoning requires precision—approximate answers can be misleading - Comparability: Direct comparison with baseline results from the original paper - Curriculum sensitivity: Clear signal for measuring improvement across difficulty levels\n\n\nAdditional Metrics (Future Work)\nThere are several other metrics could be useful:\nConversation-level metrics like Dialogue Mean EM and Joint EM would better capture multi-turn reasoning dependencies, but add complexity to curriculum design. Since our curriculum is based on individual example difficulty rather than conversation-level complexity, turn-level metrics are more appropriate for this phase.\nDiagnostic metrics such as Exec-agree % and numeric error analysis would help distinguish between reasoning failures and execution errors. However, for establishing whether curriculum learning improves over random sampling, the binary success signal from exact match provides sufficient discriminative power.\nEfficiency metrics like program length and evidence tokens could reveal interesting patterns about how curriculum learning affects model behavior, but are secondary to establishing basic performance improvements.\nWe’ve skipped the other metrics for now for the sake of brevity."
  },
  {
    "objectID": "2025-09-01-cl-dspy-modelling.html#model-list",
    "href": "2025-09-01-cl-dspy-modelling.html#model-list",
    "title": "Curriculum Learning 🤝 DSPy: Modelling",
    "section": "Model List",
    "text": "Model List\nThe state of language models has significantly changed since the paper was released. It no longer makes sense to use the exact same model(s) as the paper.\nInstead, we will use the following categories of model:\n\nNon-Reasoning Models\n\nThese models are the usual next-token prediction models, and start generating an answer immediately.\nWe will benchmark the following models here:\n\nGPT-4.1\nGPT-4.1-mini\n\n\nReasoning Models\n\nThese models are the latest language models that are capable of reasoning and generating answers based on the context provided.\nReasoning models are designed to perform multi-step, explicit logical inference to arrive at a conclusion.\nWe will benchmark the following models here:\n\nOAI o4-mini\nAnthropic Sonnet 4.0\nGoogle Gemini Flash 2.5\nGoogle Gemini Flash 2.5 Lite\n\n\nFrontier Models\n\nThese are the true “large” language models, developed by frontier labs. They excel in instruction following, reasoning and solving a variety of tasks.\nHowever, these models are expensive. As such, we will try to avoid using them for a final solution.\nWe will benchmark the following models here:\n\nOAI o3\nAnthropic Opus 4.0\nGoogle Gemini Pro 2.5\n\n\nOpen Source\n\nWe also want to measure the performance of open-source models, as it will help quantify the gap between them and proprietary models.\nOpen-source models are especially required in domains where data sovereignty is a concern.\nWe will only benchmark:\n\nQwen3-32B\n\n\n\n\nModel Selection\nDue to cost and time constraints, we can’t afford to optimise all models. Hence, we’ll aim to narrow down the list of models to a few “promising” models. Specifically, instead of just using the performance of the models on the “easy” validation set, we will use a combination of two datasets:\n\nGate - 50 Easy dialogs, teacher - forced. Drop model if Turn-EM &lt; 0.55.\nProbe - 30-dialog mixed micro-set (15 Medium + 15 Hard, closed loop). Keep model only if Final-Turn EM ≥ 0.35, Dialogue-mean EM ≥ 0.35\n\nThis two-stage filter zaps obviously weak models fast yet retains ones whose strength shows up on multi-step reasoning / long context.\n\n\nMetrics Tracking\nGiven that we plan on iterating over multiple datasets, multiple models, multiple algorithms with different hyperparameters, we will a solution to efficiency track our progress.\nWe aim to use MLFlow, as it has the following features:\n\nMLflow Tracking: logs training, runs, and artifacts for DSPy.\nMLflow Model: packages DSPy programs for reproducible deployment.\nMLflow Evaluate: natively evaluates GenAI outputs for fast iteration.\nMLflow Tracing: auto-logs and debugs DSPy internals with one command.\n\nIn production, the deployment pipeline would look as follows:\n\n   DSPy Production deployment with MLFlow. Source: MLFlow Docs"
  },
  {
    "objectID": "2025-09-01-cl-dspy-modelling.html#setup",
    "href": "2025-09-01-cl-dspy-modelling.html#setup",
    "title": "Curriculum Learning 🤝 DSPy: Modelling",
    "section": "Setup",
    "text": "Setup\n\n\nCode\nimport mlflow\nfrom IPython.display import IFrame, HTML, display\n\nmlflow.set_tracking_uri(\"http://localhost:5000\")\nmlflow.dspy.autolog(log_compiles=True, log_evals=True, log_traces_from_compile=True)\nresult = mlflow.set_experiment(\"DSPy\")\n\n# Display MLFlow UI in an iframe to prevent HTML document conflicts\nprint(f\"Experiment: {result.name} (ID: {result.experiment_id})\")\ndisplay(HTML(f'&lt;p&gt;&lt;a href=\"http://localhost:5000/#/experiments/{result.experiment_id}\" target=\"_blank\"&gt;View MLFlow Experiment UI&lt;/a&gt;&lt;/p&gt;'))\n\n\n&lt;Experiment: artifact_location='mlflow-artifacts:/1', creation_time=1753611058221, experiment_id='1', last_update_time=1753611058221, lifecycle_stage='active', name='DSPy', tags={}&gt;\n\n\n\n\nCode\nimport os\n\nimport dotenv\nimport dspy\n\ndotenv.load_dotenv(\"../.env\")\nMAX_TOKENS = 20_000\n\nlm_oai_gpt_4_1 = dspy.LM(\n    \"openai/gpt-4.1-2025-04-14\",\n    api_key=os.environ[\"OPENAI_API_KEY\"],\n    max_tokens=MAX_TOKENS,\n)\nlm_oai_gpt_4_1_mini = dspy.LM(\n    \"openai/gpt-4.1-mini-2025-04-14\",\n    api_key=os.environ[\"OPENAI_API_KEY\"],\n    max_tokens=MAX_TOKENS,\n)\n\nlm_oai_o4_mini = dspy.LM(\n    \"openai/o4-mini-2025-04-16\",\n    api_key=os.environ[\"OPENAI_API_KEY\"],\n    temperature=1.0,\n    max_tokens=MAX_TOKENS,\n)\nlm_anthropic_sonnet_4_0 = dspy.LM(\n    \"anthropic/claude-sonnet-4-20250514\",\n    api_key=os.environ[\"ANTHROPIC_API_KEY\"],\n    max_tokens=MAX_TOKENS,\n)\nlm_gemini_flash_2_5 = dspy.LM(\n    \"gemini/gemini-2.5-flash\",\n    api_key=os.environ[\"GEMINI_API_KEY\"],\n    max_tokens=MAX_TOKENS,\n)\nlm_gemini_flash_2_5_lite = dspy.LM(\n    \"gemini/gemini-2.5-flash-lite\",\n    api_key=os.environ[\"GEMINI_API_KEY\"],\n    max_tokens=MAX_TOKENS,\n)\n\nlm_oai_o3 = dspy.LM(\n    \"openai/o3-2025-04-16\",\n    api_key=os.environ[\"OPENAI_API_KEY\"],\n    temperature=1.0,\n    max_tokens=MAX_TOKENS,\n)\nlm_anthropic_opus_4_0 = dspy.LM(\n    \"anthropic/claude-opus-4-20250514\",\n    api_key=os.environ[\"ANTHROPIC_API_KEY\"],\n    max_tokens=MAX_TOKENS,\n)\nlm_gemini_pro_2_5 = dspy.LM(\n    \"gemini/gemini-2.5-pro\",\n    api_key=os.environ[\"GEMINI_API_KEY\"],\n    max_tokens=MAX_TOKENS,\n)\n\nlm_qwen3_32b = dspy.LM(\n    \"ollama/qwen3:32b\",\n    api_base=\"http://localhost:11434\",\n    api_key=\"\",\n    max_tokens=MAX_TOKENS,\n)\n\n\n\n\nCode\nimport dspy\n\nllms = [\n    lm_oai_gpt_4_1,\n    lm_oai_gpt_4_1_mini,\n    lm_oai_o4_mini,\n    lm_anthropic_sonnet_4_0,\n    lm_gemini_flash_2_5,\n    lm_gemini_flash_2_5_lite,\n    lm_oai_o3,\n    lm_anthropic_opus_4_0,\n    lm_gemini_pro_2_5,\n    lm_qwen3_32b,\n]\n\n\nclass Echo(dspy.Signature):\n    \"\"\"Echoes the input prompt.\"\"\"\n\n    prompt = dspy.InputField()\n    output = dspy.OutputField()\n\n\nwith mlflow.start_run(run_name=\"Setup\") as run:\n    for lm in llms:\n        try:\n            with dspy.context(lm=lm, track_usage=True, cache=True):\n                if lm in [lm_oai_gpt_4_1, lm_oai_gpt_4_1_mini]:\n                    program = dspy.Predict(\"instruction -&gt; answer\")\n                else:\n                    program = dspy.ChainOfThought(\"instruction -&gt; answer\")\n                response = program(instruction=\"What is the date?\")\n                if getattr(response, \"reasoning\", None):\n                    print(f\"{lm.model} Reasoning: {response.reasoning}\")\n                print(f\"{lm.model}: {response.answer}\")\n        except Exception as e:\n            print(f\"{getattr(lm, 'model', lm)}: ERROR - {e}\")\n\n\nopenai/gpt-4.1-2025-04-14: Today's date is June 13, 2024.\nopenai/gpt-4.1-mini-2025-04-14: The current date is June 15, 2024.\nopenai/o4-mini-2025-04-16 Reasoning: The user asked for the current date. I will provide today's date in a clear, human-readable format.\nopenai/o4-mini-2025-04-16: The current date is May 30, 2024.\nanthropic/claude-sonnet-4-20250514 Reasoning: The user is asking for the current date. However, I don't have access to real-time information or the ability to know what the current date is. I should explain that I cannot provide the current date and suggest how they can find this information.\nanthropic/claude-sonnet-4-20250514: I don't have access to real-time information, so I cannot tell you the current date. To find today's date, you can:\n- Check your computer, phone, or other device\n- Search \"what is today's date\" in a search engine\n- Ask a voice assistant like Siri, Alexa, or Google Assistant\ngemini/gemini-2.5-flash Reasoning: The user is asking for the current date. I will provide today's date.\ngemini/gemini-2.5-flash: June 10, 2024\ngemini/gemini-2.5-flash-lite Reasoning: The user is asking for the current date. I need to access the current date and format it as requested.\ngemini/gemini-2.5-flash-lite: The current date is October 26, 2023.\nopenai/o3-2025-04-16 Reasoning: I don’t have real-time access to the system clock, so I’m unable to determine the exact current date at the moment of this response.\nopenai/o3-2025-04-16: I’m sorry, I don’t have access to real-time information to tell today’s date.\nanthropic/claude-opus-4-20250514 Reasoning: The user is asking for the current date. However, as an AI assistant, I don't have access to real-time information and cannot provide the current date. I should explain this limitation clearly to the user.\nanthropic/claude-opus-4-20250514: I don't have access to real-time information, so I cannot tell you today's date. To get the current date, you can check your device's calendar, search \"what's today's date\" in a search engine, or ask a voice assistant with real-time capabilities.\ngemini/gemini-2.5-pro Reasoning: The user has asked for the current date. I will access my internal system's real-time clock to provide the current calendar date.\ngemini/gemini-2.5-pro: Today's date is September 10, 2024.\nollama/qwen3:32b Reasoning: I cannot access real-time data or the current date. My knowledge is static and up to July 2024. To find the current date, please check your device's clock or calendar.\nollama/qwen3:32b: I cannot provide the current date as I do not have access to real-time information. Please check your device's clock or calendar for the current date.\n🏃 View run Setup at: http://localhost:5000/#/experiments/1/runs/20df48ca1ad2461d9dcc0b1575caec6d\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n\n\n\n\n  \n  Collapse MLflow Trace\n  \n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-10\" class=\"cell\" data-execution_count=\"11\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb6\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb6-1\"&gt;&lt;a href=\"#cb6-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;import&lt;/span&gt; json&lt;/span&gt;\n&lt;span id=\"cb6-2\"&gt;&lt;a href=\"#cb6-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb6-3\"&gt;&lt;a href=\"#cb6-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;data &lt;span class=\"op\"&gt;=&lt;/span&gt; json.load(&lt;span class=\"bu\"&gt;open&lt;/span&gt;(&lt;span class=\"st\"&gt;&quot;../data/convfinqa_dataset.json&quot;&lt;/span&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;/div&gt;\n&lt;/section&gt;\n&lt;section id=\"model-selection-1\" class=\"level2\"&gt;\n&lt;h2&gt;Model Selection&lt;/h2&gt;\n&lt;p&gt;In the &lt;strong&gt;easy&lt;/strong&gt; problems stage, we will select a relatively straightforward implementation. Specifically, we will provide the model with all context, and ask it to answer the question in a zero-shot manner.&lt;/p&gt;\n&lt;p&gt;This will help us identify strong baseline performance, and identify any issues with the model’s ability to understand the problem.&lt;/p&gt;\n&lt;p&gt;First, we will create the DSPy signatures for our dataset. Signatures are used to define the input and output of a model.&lt;/p&gt;\n&lt;p&gt;Specifically, we will have two types of signatures: one that doesn’t support reasoning model(for direct prediction models like GPT-4.1), and one that does support reasoning mode(for the reasoning models like o3, gemini pro, etc.)&lt;/p&gt;\n&lt;div id=\"cell-13\" class=\"cell\" data-execution_count=\"260\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb7\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb7-1\"&gt;&lt;a href=\"#cb7-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"kw\"&gt;class&lt;/span&gt; SolveTurnWithoutReasoning(dspy.Signature):&lt;/span&gt;\n&lt;span id=\"cb7-2\"&gt;&lt;a href=\"#cb7-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    conversation_context: &lt;span class=\"bu\"&gt;str&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.InputField(desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;Conversation so far&quot;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb7-3\"&gt;&lt;a href=\"#cb7-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    evidence_snippets: &lt;span class=\"bu\"&gt;str&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.InputField(&lt;/span&gt;\n&lt;span id=\"cb7-4\"&gt;&lt;a href=\"#cb7-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;Snippets of evidence surrounding the table&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb7-5\"&gt;&lt;a href=\"#cb7-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    )&lt;/span&gt;\n&lt;span id=\"cb7-6\"&gt;&lt;a href=\"#cb7-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    table: &lt;span class=\"bu\"&gt;str&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.InputField(desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;Input financial table with metrics&quot;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb7-7\"&gt;&lt;a href=\"#cb7-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    question: &lt;span class=\"bu\"&gt;str&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.InputField(desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;Question to answer&quot;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb7-8\"&gt;&lt;a href=\"#cb7-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb7-9\"&gt;&lt;a href=\"#cb7-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    ops: &lt;span class=\"bu\"&gt;str&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.OutputField(&lt;/span&gt;\n&lt;span id=\"cb7-10\"&gt;&lt;a href=\"#cb7-10\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;Comma-separated ConvFinQA DSL program. Allowed ops: add(x, y), subtract(x, y), multiply(x, y), divide(x, y), exp(x, y), greater(x, y). Args may be constants (e.g., const_100), numbers (int or float), or prior step refs (#0, #1…). Order always follows the pattern x &lt;op&gt; y—pick x and y deliberately. Example: subtract(const_100, 42), divide(#0, 3.14). Convert to percentages only if explicitly asked in the question.&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb7-11\"&gt;&lt;a href=\"#cb7-11\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    )&lt;/span&gt;\n&lt;span id=\"cb7-12\"&gt;&lt;a href=\"#cb7-12\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    answer: &lt;span class=\"bu\"&gt;str&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.OutputField(&lt;/span&gt;\n&lt;span id=\"cb7-13\"&gt;&lt;a href=\"#cb7-13\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;Final answer. This will be a single number, or a boolean string(yes/no)&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb7-14\"&gt;&lt;a href=\"#cb7-14\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    )&lt;/span&gt;\n&lt;span id=\"cb7-15\"&gt;&lt;a href=\"#cb7-15\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb7-16\"&gt;&lt;a href=\"#cb7-16\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb7-17\"&gt;&lt;a href=\"#cb7-17\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"kw\"&gt;class&lt;/span&gt; SolveTurnWithReasoning(dspy.Signature):&lt;/span&gt;\n&lt;span id=\"cb7-18\"&gt;&lt;a href=\"#cb7-18\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    conversation_context: &lt;span class=\"bu\"&gt;str&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.InputField(desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;Conversation so far&quot;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb7-19\"&gt;&lt;a href=\"#cb7-19\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    evidence_snippets: &lt;span class=\"bu\"&gt;str&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.InputField(&lt;/span&gt;\n&lt;span id=\"cb7-20\"&gt;&lt;a href=\"#cb7-20\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;Snippets of evidence surrounding the table&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb7-21\"&gt;&lt;a href=\"#cb7-21\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    )&lt;/span&gt;\n&lt;span id=\"cb7-22\"&gt;&lt;a href=\"#cb7-22\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    table: &lt;span class=\"bu\"&gt;str&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.InputField(desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;Input financial table with metrics&quot;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb7-23\"&gt;&lt;a href=\"#cb7-23\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    question: &lt;span class=\"bu\"&gt;str&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.InputField(desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;Question to answer&quot;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb7-24\"&gt;&lt;a href=\"#cb7-24\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb7-25\"&gt;&lt;a href=\"#cb7-25\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    reasoning: &lt;span class=\"bu\"&gt;str&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.OutputField(&lt;/span&gt;\n&lt;span id=\"cb7-26\"&gt;&lt;a href=\"#cb7-26\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;Reasoning behind the answer. Carefully analyze the conversation_context, and especially the evidence_snippets and table for the given question, and generate your reasoning before generating the ops and answer.&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb7-27\"&gt;&lt;a href=\"#cb7-27\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    )&lt;/span&gt;\n&lt;span id=\"cb7-28\"&gt;&lt;a href=\"#cb7-28\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    ops: &lt;span class=\"bu\"&gt;str&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.OutputField(&lt;/span&gt;\n&lt;span id=\"cb7-29\"&gt;&lt;a href=\"#cb7-29\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;Comma-separated ConvFinQA DSL program. Allowed ops: add(x, y), subtract(x, y), multiply(x, y), divide(x, y), exp(x, y), greater(x, y). Args may be constants (e.g., const_100), numbers (int or float), or prior step refs (#0, #1…). Order always follows the pattern x &lt;op&gt; y—pick x and y deliberately. Example: subtract(const_100, 42), divide(#0, 3.14). Convert to percentages only if explicitly asked in the question.&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb7-30\"&gt;&lt;a href=\"#cb7-30\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    )&lt;/span&gt;\n&lt;span id=\"cb7-31\"&gt;&lt;a href=\"#cb7-31\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    answer: &lt;span class=\"bu\"&gt;str&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.OutputField(&lt;/span&gt;\n&lt;span id=\"cb7-32\"&gt;&lt;a href=\"#cb7-32\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;Final answer. This will be a single number, or a boolean string(yes/no)&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb7-33\"&gt;&lt;a href=\"#cb7-33\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    )&lt;/span&gt;\n&lt;span id=\"cb7-34\"&gt;&lt;a href=\"#cb7-34\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb7-35\"&gt;&lt;a href=\"#cb7-35\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb7-36\"&gt;&lt;a href=\"#cb7-36\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"kw\"&gt;class&lt;/span&gt; TurnSolver(dspy.Module):&lt;/span&gt;\n&lt;span id=\"cb7-37\"&gt;&lt;a href=\"#cb7-37\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"co\"&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb7-38\"&gt;&lt;a href=\"#cb7-38\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    In the context of this series of interconnected finance-related queries and the additional information provided by the pretext, table data, and posttext from a company&#39;s financial filings, please provide a response to the final question. This may require extracting information from the context and performing mathematical calculations. Please take into account the information provided in the preceding questions and their answers when formulating your response: &lt;/span&gt;&lt;span class=\"ch\"&gt;\\n\\n&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb7-39\"&gt;&lt;a href=\"#cb7-39\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    &quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb7-40\"&gt;&lt;a href=\"#cb7-40\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb7-41\"&gt;&lt;a href=\"#cb7-41\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"kw\"&gt;def&lt;/span&gt; &lt;span class=\"fu\"&gt;__init__&lt;/span&gt;(&lt;span class=\"va\"&gt;self&lt;/span&gt;, reasoning_lm&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;False&lt;/span&gt;):&lt;/span&gt;\n&lt;span id=\"cb7-42\"&gt;&lt;a href=\"#cb7-42\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"bu\"&gt;super&lt;/span&gt;().&lt;span class=\"fu\"&gt;__init__&lt;/span&gt;()&lt;/span&gt;\n&lt;span id=\"cb7-43\"&gt;&lt;a href=\"#cb7-43\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;if&lt;/span&gt; reasoning_lm:&lt;/span&gt;\n&lt;span id=\"cb7-44\"&gt;&lt;a href=\"#cb7-44\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            &lt;span class=\"va\"&gt;self&lt;/span&gt;.pred &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.ChainOfThought(SolveTurnWithReasoning)&lt;/span&gt;\n&lt;span id=\"cb7-45\"&gt;&lt;a href=\"#cb7-45\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;else&lt;/span&gt;:&lt;/span&gt;\n&lt;span id=\"cb7-46\"&gt;&lt;a href=\"#cb7-46\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            &lt;span class=\"va\"&gt;self&lt;/span&gt;.pred &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.Predict(SolveTurnWithoutReasoning)&lt;/span&gt;\n&lt;span id=\"cb7-47\"&gt;&lt;a href=\"#cb7-47\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb7-48\"&gt;&lt;a href=\"#cb7-48\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"kw\"&gt;def&lt;/span&gt; forward(&lt;span class=\"va\"&gt;self&lt;/span&gt;, conversation_context, evidence_snippets, table, question):&lt;/span&gt;\n&lt;span id=\"cb7-49\"&gt;&lt;a href=\"#cb7-49\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"co\"&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb7-50\"&gt;&lt;a href=\"#cb7-50\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;        Run the model to solve a single turn.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb7-51\"&gt;&lt;a href=\"#cb7-51\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb7-52\"&gt;&lt;a href=\"#cb7-52\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;        Args:&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb7-53\"&gt;&lt;a href=\"#cb7-53\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;            conversation_context (str): Conversation so far.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb7-54\"&gt;&lt;a href=\"#cb7-54\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;            evidence_snippets (str): Evidence text around the table.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb7-55\"&gt;&lt;a href=\"#cb7-55\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;            table (str): Financial table in markdown.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb7-56\"&gt;&lt;a href=\"#cb7-56\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;            question (str): Question to answer.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb7-57\"&gt;&lt;a href=\"#cb7-57\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb7-58\"&gt;&lt;a href=\"#cb7-58\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;        Returns:&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb7-59\"&gt;&lt;a href=\"#cb7-59\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;            dspy.Prediction: Model output with reasoning, ops, and answer.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb7-60\"&gt;&lt;a href=\"#cb7-60\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;        &quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb7-61\"&gt;&lt;a href=\"#cb7-61\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;return&lt;/span&gt; &lt;span class=\"va\"&gt;self&lt;/span&gt;.pred(&lt;/span&gt;\n&lt;span id=\"cb7-62\"&gt;&lt;a href=\"#cb7-62\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            conversation_context&lt;span class=\"op\"&gt;=&lt;/span&gt;conversation_context,&lt;/span&gt;\n&lt;span id=\"cb7-63\"&gt;&lt;a href=\"#cb7-63\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            evidence_snippets&lt;span class=\"op\"&gt;=&lt;/span&gt;evidence_snippets,&lt;/span&gt;\n&lt;span id=\"cb7-64\"&gt;&lt;a href=\"#cb7-64\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            table&lt;span class=\"op\"&gt;=&lt;/span&gt;table,&lt;/span&gt;\n&lt;span id=\"cb7-65\"&gt;&lt;a href=\"#cb7-65\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            question&lt;span class=\"op\"&gt;=&lt;/span&gt;question,&lt;/span&gt;\n&lt;span id=\"cb7-66\"&gt;&lt;a href=\"#cb7-66\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        )&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;/div&gt;\n&lt;p&gt;Next, we define a few helper functions to format our dataset for the DSPy model. We intentionally don’t spend too much time here for now, and will come back to this later, during the &lt;em&gt;optimization&lt;/em&gt; phase.&lt;/p&gt;\n&lt;div id=\"cell-15\" class=\"cell\" data-execution_count=\"405\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb8\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb8-1\"&gt;&lt;a href=\"#cb8-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"kw\"&gt;def&lt;/span&gt; norm_ans(x):&lt;/span&gt;\n&lt;span id=\"cb8-2\"&gt;&lt;a href=\"#cb8-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"co\"&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-3\"&gt;&lt;a href=\"#cb8-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    Normalize an answer for comparison.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-4\"&gt;&lt;a href=\"#cb8-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb8-5\"&gt;&lt;a href=\"#cb8-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    Converts input to string, strips whitespace, removes percent signs,&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-6\"&gt;&lt;a href=\"#cb8-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    and attempts to cast to float. If conversion fails, returns the cleaned string.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-7\"&gt;&lt;a href=\"#cb8-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb8-8\"&gt;&lt;a href=\"#cb8-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    Args:&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-9\"&gt;&lt;a href=\"#cb8-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;        x: The answer to normalize (str, float, or int).&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-10\"&gt;&lt;a href=\"#cb8-10\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb8-11\"&gt;&lt;a href=\"#cb8-11\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    Returns:&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-12\"&gt;&lt;a href=\"#cb8-12\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;        float or str: Normalized float if possible, else cleaned string.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-13\"&gt;&lt;a href=\"#cb8-13\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    &quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-14\"&gt;&lt;a href=\"#cb8-14\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    s &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"bu\"&gt;str&lt;/span&gt;(x).strip().replace(&lt;span class=\"st\"&gt;&quot;%&quot;&lt;/span&gt;, &lt;span class=\"st\"&gt;&quot;&quot;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb8-15\"&gt;&lt;a href=\"#cb8-15\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;try&lt;/span&gt;:&lt;/span&gt;\n&lt;span id=\"cb8-16\"&gt;&lt;a href=\"#cb8-16\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;return&lt;/span&gt; &lt;span class=\"bu\"&gt;float&lt;/span&gt;(s)&lt;/span&gt;\n&lt;span id=\"cb8-17\"&gt;&lt;a href=\"#cb8-17\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;except&lt;/span&gt; &lt;span class=\"pp\"&gt;Exception&lt;/span&gt;:&lt;/span&gt;\n&lt;span id=\"cb8-18\"&gt;&lt;a href=\"#cb8-18\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;return&lt;/span&gt; s&lt;/span&gt;\n&lt;span id=\"cb8-19\"&gt;&lt;a href=\"#cb8-19\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb8-20\"&gt;&lt;a href=\"#cb8-20\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb8-21\"&gt;&lt;a href=\"#cb8-21\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"kw\"&gt;def&lt;/span&gt; _table_md(table_dict: &lt;span class=\"bu\"&gt;dict&lt;/span&gt;, max_cols: &lt;span class=\"bu\"&gt;int&lt;/span&gt; &lt;span class=\"op\"&gt;|&lt;/span&gt; &lt;span class=\"va\"&gt;None&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"va\"&gt;None&lt;/span&gt;) &lt;span class=\"op\"&gt;-&gt;&lt;/span&gt; &lt;span class=\"bu\"&gt;str&lt;/span&gt;:&lt;/span&gt;\n&lt;span id=\"cb8-22\"&gt;&lt;a href=\"#cb8-22\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"co\"&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-23\"&gt;&lt;a href=\"#cb8-23\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    Convert a dictionarised table to compact GitHub-markdown.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-24\"&gt;&lt;a href=\"#cb8-24\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb8-25\"&gt;&lt;a href=\"#cb8-25\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    Accepted shapes&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-26\"&gt;&lt;a href=\"#cb8-26\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    1) {row_name: {col_name: value, …}, …}   # regular 2-level mapping&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-27\"&gt;&lt;a href=\"#cb8-27\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    2) {col_name: value, …}                  # flat → coerced to single row&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-28\"&gt;&lt;a href=\"#cb8-28\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb8-29\"&gt;&lt;a href=\"#cb8-29\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    Guarantees&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-30\"&gt;&lt;a href=\"#cb8-30\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    • Original row order is kept.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-31\"&gt;&lt;a href=\"#cb8-31\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    • Column headers are kept in *first-seen* order; NO deduplication.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-32\"&gt;&lt;a href=\"#cb8-32\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    • max_cols (if given) truncates *after* enumeration, duplicates included.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-33\"&gt;&lt;a href=\"#cb8-33\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    • None → &quot;&quot; and everything else is str()-ed.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-34\"&gt;&lt;a href=\"#cb8-34\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    &quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-35\"&gt;&lt;a href=\"#cb8-35\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;if&lt;/span&gt; &lt;span class=\"kw\"&gt;not&lt;/span&gt; table_dict:&lt;/span&gt;\n&lt;span id=\"cb8-36\"&gt;&lt;a href=\"#cb8-36\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;return&lt;/span&gt; &lt;span class=\"st\"&gt;&quot;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-37\"&gt;&lt;a href=\"#cb8-37\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb8-38\"&gt;&lt;a href=\"#cb8-38\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;if&lt;/span&gt; &lt;span class=\"bu\"&gt;all&lt;/span&gt;(&lt;span class=\"kw\"&gt;not&lt;/span&gt; &lt;span class=\"bu\"&gt;isinstance&lt;/span&gt;(v, &lt;span class=\"bu\"&gt;dict&lt;/span&gt;) &lt;span class=\"cf\"&gt;for&lt;/span&gt; v &lt;span class=\"kw\"&gt;in&lt;/span&gt; table_dict.values()):&lt;/span&gt;\n&lt;span id=\"cb8-39\"&gt;&lt;a href=\"#cb8-39\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"co\"&gt;# flat mapping → one anonymous row&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-40\"&gt;&lt;a href=\"#cb8-40\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        table_dict &lt;span class=\"op\"&gt;=&lt;/span&gt; {&lt;span class=\"st\"&gt;&quot;&quot;&lt;/span&gt;: &lt;span class=\"bu\"&gt;dict&lt;/span&gt;(table_dict)}&lt;/span&gt;\n&lt;span id=\"cb8-41\"&gt;&lt;a href=\"#cb8-41\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;else&lt;/span&gt;:&lt;/span&gt;\n&lt;span id=\"cb8-42\"&gt;&lt;a href=\"#cb8-42\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"co\"&gt;# ensure every value is a dict&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-43\"&gt;&lt;a href=\"#cb8-43\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        table_dict &lt;span class=\"op\"&gt;=&lt;/span&gt; {&lt;/span&gt;\n&lt;span id=\"cb8-44\"&gt;&lt;a href=\"#cb8-44\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            r: (v &lt;span class=\"cf\"&gt;if&lt;/span&gt; &lt;span class=\"bu\"&gt;isinstance&lt;/span&gt;(v, &lt;span class=\"bu\"&gt;dict&lt;/span&gt;) &lt;span class=\"cf\"&gt;else&lt;/span&gt; {&lt;span class=\"st\"&gt;&quot;&quot;&lt;/span&gt;: v}) &lt;span class=\"cf\"&gt;for&lt;/span&gt; r, v &lt;span class=\"kw\"&gt;in&lt;/span&gt; table_dict.items()&lt;/span&gt;\n&lt;span id=\"cb8-45\"&gt;&lt;a href=\"#cb8-45\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        }&lt;/span&gt;\n&lt;span id=\"cb8-46\"&gt;&lt;a href=\"#cb8-46\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb8-47\"&gt;&lt;a href=\"#cb8-47\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    row_ids &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"bu\"&gt;list&lt;/span&gt;(table_dict.keys())  &lt;span class=\"co\"&gt;# preserve caller order&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-48\"&gt;&lt;a href=\"#cb8-48\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb8-49\"&gt;&lt;a href=\"#cb8-49\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    cols: &lt;span class=\"bu\"&gt;list&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; []&lt;/span&gt;\n&lt;span id=\"cb8-50\"&gt;&lt;a href=\"#cb8-50\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;for&lt;/span&gt; r &lt;span class=\"kw\"&gt;in&lt;/span&gt; row_ids:&lt;/span&gt;\n&lt;span id=\"cb8-51\"&gt;&lt;a href=\"#cb8-51\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        cols.extend(table_dict[r].keys())&lt;/span&gt;\n&lt;span id=\"cb8-52\"&gt;&lt;a href=\"#cb8-52\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;if&lt;/span&gt; max_cols &lt;span class=\"kw\"&gt;is&lt;/span&gt; &lt;span class=\"kw\"&gt;not&lt;/span&gt; &lt;span class=\"va\"&gt;None&lt;/span&gt;:&lt;/span&gt;\n&lt;span id=\"cb8-53\"&gt;&lt;a href=\"#cb8-53\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        cols &lt;span class=\"op\"&gt;=&lt;/span&gt; cols[:max_cols]&lt;/span&gt;\n&lt;span id=\"cb8-54\"&gt;&lt;a href=\"#cb8-54\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb8-55\"&gt;&lt;a href=\"#cb8-55\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    header &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"st\"&gt;&quot;| Row | &quot;&lt;/span&gt; &lt;span class=\"op\"&gt;+&lt;/span&gt; &lt;span class=\"st\"&gt;&quot; | &quot;&lt;/span&gt;.join(&lt;span class=\"bu\"&gt;map&lt;/span&gt;(&lt;span class=\"bu\"&gt;str&lt;/span&gt;, cols)) &lt;span class=\"op\"&gt;+&lt;/span&gt; &lt;span class=\"st\"&gt;&quot; |&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-56\"&gt;&lt;a href=\"#cb8-56\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    sep &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"st\"&gt;&quot;|&quot;&lt;/span&gt; &lt;span class=\"op\"&gt;+&lt;/span&gt; &lt;span class=\"st\"&gt;&quot;---|&quot;&lt;/span&gt; &lt;span class=\"op\"&gt;*&lt;/span&gt; (&lt;span class=\"bu\"&gt;len&lt;/span&gt;(cols) &lt;span class=\"op\"&gt;+&lt;/span&gt; &lt;span class=\"dv\"&gt;1&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb8-57\"&gt;&lt;a href=\"#cb8-57\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    lines &lt;span class=\"op\"&gt;=&lt;/span&gt; [header, sep]&lt;/span&gt;\n&lt;span id=\"cb8-58\"&gt;&lt;a href=\"#cb8-58\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb8-59\"&gt;&lt;a href=\"#cb8-59\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;for&lt;/span&gt; r &lt;span class=\"kw\"&gt;in&lt;/span&gt; row_ids:&lt;/span&gt;\n&lt;span id=\"cb8-60\"&gt;&lt;a href=\"#cb8-60\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        vals &lt;span class=\"op\"&gt;=&lt;/span&gt; [&lt;span class=\"bu\"&gt;str&lt;/span&gt;(table_dict[r].get(c, &lt;span class=\"st\"&gt;&quot;&quot;&lt;/span&gt;)) &lt;span class=\"cf\"&gt;for&lt;/span&gt; c &lt;span class=\"kw\"&gt;in&lt;/span&gt; cols]&lt;/span&gt;\n&lt;span id=\"cb8-61\"&gt;&lt;a href=\"#cb8-61\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        lines.append(&lt;span class=\"st\"&gt;&quot;| &quot;&lt;/span&gt; &lt;span class=\"op\"&gt;+&lt;/span&gt; &lt;span class=\"bu\"&gt;str&lt;/span&gt;(r) &lt;span class=\"op\"&gt;+&lt;/span&gt; &lt;span class=\"st\"&gt;&quot; | &quot;&lt;/span&gt; &lt;span class=\"op\"&gt;+&lt;/span&gt; &lt;span class=\"st\"&gt;&quot; | &quot;&lt;/span&gt;.join(vals) &lt;span class=\"op\"&gt;+&lt;/span&gt; &lt;span class=\"st\"&gt;&quot; |&quot;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb8-62\"&gt;&lt;a href=\"#cb8-62\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb8-63\"&gt;&lt;a href=\"#cb8-63\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;return&lt;/span&gt; &lt;span class=\"st\"&gt;&quot;&lt;/span&gt;&lt;span class=\"ch\"&gt;\\n&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;&lt;/span&gt;.join(lines)&lt;/span&gt;\n&lt;span id=\"cb8-64\"&gt;&lt;a href=\"#cb8-64\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb8-65\"&gt;&lt;a href=\"#cb8-65\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb8-66\"&gt;&lt;a href=\"#cb8-66\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"kw\"&gt;def&lt;/span&gt; build_inputs_from_row(&lt;/span&gt;\n&lt;span id=\"cb8-67\"&gt;&lt;a href=\"#cb8-67\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    row,&lt;/span&gt;\n&lt;span id=\"cb8-68\"&gt;&lt;a href=\"#cb8-68\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    turn_idx,&lt;/span&gt;\n&lt;span id=\"cb8-69\"&gt;&lt;a href=\"#cb8-69\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"op\"&gt;*&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb8-70\"&gt;&lt;a href=\"#cb8-70\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    history_mode: &lt;span class=\"bu\"&gt;str&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"st\"&gt;&quot;teacher&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb8-71\"&gt;&lt;a href=\"#cb8-71\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    state: &lt;span class=\"bu\"&gt;dict&lt;/span&gt; &lt;span class=\"op\"&gt;|&lt;/span&gt; &lt;span class=\"va\"&gt;None&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"va\"&gt;None&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb8-72\"&gt;&lt;a href=\"#cb8-72\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    max_table_cols: &lt;span class=\"bu\"&gt;int&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"dv\"&gt;100&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb8-73\"&gt;&lt;a href=\"#cb8-73\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;):&lt;/span&gt;\n&lt;span id=\"cb8-74\"&gt;&lt;a href=\"#cb8-74\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"co\"&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-75\"&gt;&lt;a href=\"#cb8-75\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    history_mode: &#39;teacher&#39; | &#39;model&#39; | &#39;none&#39;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-76\"&gt;&lt;a href=\"#cb8-76\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    state: carries model predictions across turns when history_mode=&#39;model&#39;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-77\"&gt;&lt;a href=\"#cb8-77\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;           expected keys: {&#39;pred_answers&#39;: list[str|float]}&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-78\"&gt;&lt;a href=\"#cb8-78\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    evidence_builder: optional callable(row, turn_idx)-&gt;str; if None, use simple truncation.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-79\"&gt;&lt;a href=\"#cb8-79\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    &quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-80\"&gt;&lt;a href=\"#cb8-80\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    qs &lt;span class=\"op\"&gt;=&lt;/span&gt; row[&lt;span class=\"st\"&gt;&quot;dialogue_conv_questions&quot;&lt;/span&gt;]&lt;/span&gt;\n&lt;span id=\"cb8-81\"&gt;&lt;a href=\"#cb8-81\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    gold &lt;span class=\"op\"&gt;=&lt;/span&gt; row[&lt;span class=\"st\"&gt;&quot;dialogue_executed_answers&quot;&lt;/span&gt;]&lt;/span&gt;\n&lt;span id=\"cb8-82\"&gt;&lt;a href=\"#cb8-82\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb8-83\"&gt;&lt;a href=\"#cb8-83\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"co\"&gt;# ---- history ----&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-84\"&gt;&lt;a href=\"#cb8-84\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    history_lines &lt;span class=\"op\"&gt;=&lt;/span&gt; []&lt;/span&gt;\n&lt;span id=\"cb8-85\"&gt;&lt;a href=\"#cb8-85\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;for&lt;/span&gt; t &lt;span class=\"kw\"&gt;in&lt;/span&gt; &lt;span class=\"bu\"&gt;range&lt;/span&gt;(turn_idx):&lt;/span&gt;\n&lt;span id=\"cb8-86\"&gt;&lt;a href=\"#cb8-86\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        history_lines.append(&lt;span class=\"ss\"&gt;f&quot;Q&lt;/span&gt;&lt;span class=\"sc\"&gt;{&lt;/span&gt;t &lt;span class=\"op\"&gt;+&lt;/span&gt; &lt;span class=\"dv\"&gt;1&lt;/span&gt;&lt;span class=\"sc\"&gt;}&lt;/span&gt;&lt;span class=\"ss\"&gt;: &lt;/span&gt;&lt;span class=\"sc\"&gt;{&lt;/span&gt;qs[t]&lt;span class=\"sc\"&gt;}&lt;/span&gt;&lt;span class=\"ss\"&gt;&quot;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb8-87\"&gt;&lt;a href=\"#cb8-87\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;if&lt;/span&gt; history_mode &lt;span class=\"op\"&gt;==&lt;/span&gt; &lt;span class=\"st\"&gt;&quot;teacher&quot;&lt;/span&gt;:&lt;/span&gt;\n&lt;span id=\"cb8-88\"&gt;&lt;a href=\"#cb8-88\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            history_lines.append(&lt;span class=\"ss\"&gt;f&quot;A&lt;/span&gt;&lt;span class=\"sc\"&gt;{&lt;/span&gt;t &lt;span class=\"op\"&gt;+&lt;/span&gt; &lt;span class=\"dv\"&gt;1&lt;/span&gt;&lt;span class=\"sc\"&gt;}&lt;/span&gt;&lt;span class=\"ss\"&gt;: &lt;/span&gt;&lt;span class=\"sc\"&gt;{&lt;/span&gt;gold[t]&lt;span class=\"sc\"&gt;}&lt;/span&gt;&lt;span class=\"ss\"&gt;&quot;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb8-89\"&gt;&lt;a href=\"#cb8-89\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;elif&lt;/span&gt; (&lt;/span&gt;\n&lt;span id=\"cb8-90\"&gt;&lt;a href=\"#cb8-90\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            history_mode &lt;span class=\"op\"&gt;==&lt;/span&gt; &lt;span class=\"st\"&gt;&quot;model&quot;&lt;/span&gt; &lt;span class=\"kw\"&gt;and&lt;/span&gt; state &lt;span class=\"kw\"&gt;and&lt;/span&gt; &lt;span class=\"bu\"&gt;len&lt;/span&gt;(state.get(&lt;span class=\"st\"&gt;&quot;pred_answers&quot;&lt;/span&gt;, [])) &lt;span class=\"op\"&gt;&gt;&lt;/span&gt; t&lt;/span&gt;\n&lt;span id=\"cb8-91\"&gt;&lt;a href=\"#cb8-91\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        ):&lt;/span&gt;\n&lt;span id=\"cb8-92\"&gt;&lt;a href=\"#cb8-92\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            history_lines.append(&lt;span class=\"ss\"&gt;f&quot;A&lt;/span&gt;&lt;span class=\"sc\"&gt;{&lt;/span&gt;t &lt;span class=\"op\"&gt;+&lt;/span&gt; &lt;span class=\"dv\"&gt;1&lt;/span&gt;&lt;span class=\"sc\"&gt;}&lt;/span&gt;&lt;span class=\"ss\"&gt;: &lt;/span&gt;&lt;span class=\"sc\"&gt;{&lt;/span&gt;state[&lt;span class=\"st\"&gt;&#39;pred_answers&#39;&lt;/span&gt;][t]&lt;span class=\"sc\"&gt;}&lt;/span&gt;&lt;span class=\"ss\"&gt;&quot;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb8-93\"&gt;&lt;a href=\"#cb8-93\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;elif&lt;/span&gt; history_mode &lt;span class=\"op\"&gt;==&lt;/span&gt; &lt;span class=\"st\"&gt;&quot;none&quot;&lt;/span&gt;:&lt;/span&gt;\n&lt;span id=\"cb8-94\"&gt;&lt;a href=\"#cb8-94\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            &lt;span class=\"cf\"&gt;pass&lt;/span&gt;  &lt;span class=\"co\"&gt;# only questions&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-95\"&gt;&lt;a href=\"#cb8-95\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    conversation_context &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"st\"&gt;&quot;&lt;/span&gt;&lt;span class=\"ch\"&gt;\\n&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;&lt;/span&gt;.join(history_lines) &lt;span class=\"cf\"&gt;if&lt;/span&gt; history_lines &lt;span class=\"cf\"&gt;else&lt;/span&gt; &lt;span class=\"st\"&gt;&quot;None&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-96\"&gt;&lt;a href=\"#cb8-96\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb8-97\"&gt;&lt;a href=\"#cb8-97\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"co\"&gt;# compact pre/post: first N sentences&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-98\"&gt;&lt;a href=\"#cb8-98\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"co\"&gt;# def first_sents(txt, n):&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-99\"&gt;&lt;a href=\"#cb8-99\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"co\"&gt;#     if not txt: return &quot;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-100\"&gt;&lt;a href=\"#cb8-100\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"co\"&gt;#     # very light sentence split&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-101\"&gt;&lt;a href=\"#cb8-101\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"co\"&gt;#     parts = [p.strip() for p in txt.split(&quot;. &quot;) if p.strip()]&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-102\"&gt;&lt;a href=\"#cb8-102\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"co\"&gt;#     return &quot;. &quot;.join(parts[:n])&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-103\"&gt;&lt;a href=\"#cb8-103\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"co\"&gt;# pre = first_sents(row.get(&quot;doc_pre_text&quot;, &quot;&quot;) or &quot;&quot;, max_pre_sents)&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-104\"&gt;&lt;a href=\"#cb8-104\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"co\"&gt;# post= first_sents(row.get(&quot;doc_post_text&quot;, &quot;&quot;) or &quot;&quot;, max_post_sents)&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-105\"&gt;&lt;a href=\"#cb8-105\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"co\"&gt;# evidence_snippets = f&quot;[PRE]\\n{pre}\\n[/PRE]\\n[POST]\\n{post}\\n[/POST]&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-106\"&gt;&lt;a href=\"#cb8-106\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    evidence_snippets &lt;span class=\"op\"&gt;=&lt;/span&gt; (&lt;/span&gt;\n&lt;span id=\"cb8-107\"&gt;&lt;a href=\"#cb8-107\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"ss\"&gt;f&quot;[PRE]&lt;/span&gt;&lt;span class=\"ch\"&gt;\\n&lt;/span&gt;&lt;span class=\"sc\"&gt;{&lt;/span&gt;row[&lt;span class=\"st\"&gt;&#39;doc_pre_text&#39;&lt;/span&gt;]&lt;span class=\"sc\"&gt;}&lt;/span&gt;&lt;span class=\"ch\"&gt;\\n&lt;/span&gt;&lt;span class=\"ss\"&gt;[/PRE]&lt;/span&gt;&lt;span class=\"ch\"&gt;\\n&lt;/span&gt;&lt;span class=\"ss\"&gt;[POST]&lt;/span&gt;&lt;span class=\"ch\"&gt;\\n&lt;/span&gt;&lt;span class=\"sc\"&gt;{&lt;/span&gt;row[&lt;span class=\"st\"&gt;&#39;doc_post_text&#39;&lt;/span&gt;]&lt;span class=\"sc\"&gt;}&lt;/span&gt;&lt;span class=\"ch\"&gt;\\n&lt;/span&gt;&lt;span class=\"ss\"&gt;[/POST]&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-108\"&gt;&lt;a href=\"#cb8-108\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    )&lt;/span&gt;\n&lt;span id=\"cb8-109\"&gt;&lt;a href=\"#cb8-109\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    table_md &lt;span class=\"op\"&gt;=&lt;/span&gt; _table_md(row.get(&lt;span class=\"st\"&gt;&quot;doc_table&quot;&lt;/span&gt;, {}) &lt;span class=\"kw\"&gt;or&lt;/span&gt; {}, max_cols&lt;span class=\"op\"&gt;=&lt;/span&gt;max_table_cols)&lt;/span&gt;\n&lt;span id=\"cb8-110\"&gt;&lt;a href=\"#cb8-110\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb8-111\"&gt;&lt;a href=\"#cb8-111\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;return&lt;/span&gt; &lt;span class=\"bu\"&gt;dict&lt;/span&gt;(&lt;/span&gt;\n&lt;span id=\"cb8-112\"&gt;&lt;a href=\"#cb8-112\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        conversation_context&lt;span class=\"op\"&gt;=&lt;/span&gt;conversation_context,&lt;/span&gt;\n&lt;span id=\"cb8-113\"&gt;&lt;a href=\"#cb8-113\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        evidence_snippets&lt;span class=\"op\"&gt;=&lt;/span&gt;evidence_snippets,&lt;/span&gt;\n&lt;span id=\"cb8-114\"&gt;&lt;a href=\"#cb8-114\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        table&lt;span class=\"op\"&gt;=&lt;/span&gt;table_md,&lt;/span&gt;\n&lt;span id=\"cb8-115\"&gt;&lt;a href=\"#cb8-115\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        question&lt;span class=\"op\"&gt;=&lt;/span&gt;qs[turn_idx],&lt;/span&gt;\n&lt;span id=\"cb8-116\"&gt;&lt;a href=\"#cb8-116\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"op\"&gt;**&lt;/span&gt;row,&lt;/span&gt;\n&lt;span id=\"cb8-117\"&gt;&lt;a href=\"#cb8-117\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    )&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-16\" class=\"cell\" data-execution_count=\"406\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb9\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb9-1\"&gt;&lt;a href=\"#cb9-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"kw\"&gt;def&lt;/span&gt; evaluate_dialogues(model, df):&lt;/span&gt;\n&lt;span id=\"cb9-2\"&gt;&lt;a href=\"#cb9-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"co\"&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-3\"&gt;&lt;a href=\"#cb9-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    Evaluate a dialogue model on a DataFrame of conversations.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-4\"&gt;&lt;a href=\"#cb9-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb9-5\"&gt;&lt;a href=\"#cb9-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    Args:&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-6\"&gt;&lt;a href=\"#cb9-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;        model: Callable that takes unpacked input dict and returns an object with at least `.answer` (and optionally `.ops`).&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-7\"&gt;&lt;a href=\"#cb9-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;        df: pd.DataFrame with columns:&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-8\"&gt;&lt;a href=\"#cb9-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;            - &quot;dialogue_conv_questions&quot;: list of str, all questions in the conversation&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-9\"&gt;&lt;a href=\"#cb9-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;            - &quot;dialogue_executed_answers&quot;: list of str/float, all executed answers so far&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-10\"&gt;&lt;a href=\"#cb9-10\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;            - (other columns as needed by evidence_builder)&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-11\"&gt;&lt;a href=\"#cb9-11\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb9-12\"&gt;&lt;a href=\"#cb9-12\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    Returns:&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-13\"&gt;&lt;a href=\"#cb9-13\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;        dict with:&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-14\"&gt;&lt;a href=\"#cb9-14\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;            - &quot;turn_em_micro&quot;: float, micro-averaged exact match over all turns&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-15\"&gt;&lt;a href=\"#cb9-15\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;            - &quot;dlg_mean_em_macro&quot;: float, macro-averaged mean EM per dialogue&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-16\"&gt;&lt;a href=\"#cb9-16\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;            - &quot;joint_em&quot;: float, fraction of dialogues with all turns correct&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-17\"&gt;&lt;a href=\"#cb9-17\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;            - &quot;final_turn_em&quot;: float, EM on the final turn of each dialogue&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-18\"&gt;&lt;a href=\"#cb9-18\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;            - &quot;n_dialogues&quot;: int, number of dialogues&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-19\"&gt;&lt;a href=\"#cb9-19\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;            - &quot;n_turns&quot;: int, total number of turns&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-20\"&gt;&lt;a href=\"#cb9-20\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    &quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-21\"&gt;&lt;a href=\"#cb9-21\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    turn_hits &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"dv\"&gt;0&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-22\"&gt;&lt;a href=\"#cb9-22\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    turn_tot &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"dv\"&gt;0&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-23\"&gt;&lt;a href=\"#cb9-23\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"co\"&gt;# exec_hits = 0&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-24\"&gt;&lt;a href=\"#cb9-24\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    dlg_mean_ems &lt;span class=\"op\"&gt;=&lt;/span&gt; []&lt;/span&gt;\n&lt;span id=\"cb9-25\"&gt;&lt;a href=\"#cb9-25\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    dlg_joint_hits &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"dv\"&gt;0&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-26\"&gt;&lt;a href=\"#cb9-26\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    final_hits &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"dv\"&gt;0&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-27\"&gt;&lt;a href=\"#cb9-27\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb9-28\"&gt;&lt;a href=\"#cb9-28\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;for&lt;/span&gt; _, row &lt;span class=\"kw\"&gt;in&lt;/span&gt; df.iterrows():&lt;/span&gt;\n&lt;span id=\"cb9-29\"&gt;&lt;a href=\"#cb9-29\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        qs &lt;span class=\"op\"&gt;=&lt;/span&gt; row[&lt;span class=\"st\"&gt;&quot;dialogue_conv_questions&quot;&lt;/span&gt;]&lt;/span&gt;\n&lt;span id=\"cb9-30\"&gt;&lt;a href=\"#cb9-30\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        gold &lt;span class=\"op\"&gt;=&lt;/span&gt; row[&lt;span class=\"st\"&gt;&quot;dialogue_executed_answers&quot;&lt;/span&gt;]&lt;/span&gt;\n&lt;span id=\"cb9-31\"&gt;&lt;a href=\"#cb9-31\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        ems &lt;span class=\"op\"&gt;=&lt;/span&gt; []&lt;/span&gt;\n&lt;span id=\"cb9-32\"&gt;&lt;a href=\"#cb9-32\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        exec_flags &lt;span class=\"op\"&gt;=&lt;/span&gt; []&lt;/span&gt;\n&lt;span id=\"cb9-33\"&gt;&lt;a href=\"#cb9-33\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;for&lt;/span&gt; t &lt;span class=\"kw\"&gt;in&lt;/span&gt; &lt;span class=\"bu\"&gt;range&lt;/span&gt;(&lt;span class=\"bu\"&gt;len&lt;/span&gt;(qs)):&lt;/span&gt;\n&lt;span id=\"cb9-34\"&gt;&lt;a href=\"#cb9-34\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            inp &lt;span class=\"op\"&gt;=&lt;/span&gt; build_inputs_from_row(row, t)&lt;/span&gt;\n&lt;span id=\"cb9-35\"&gt;&lt;a href=\"#cb9-35\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            out &lt;span class=\"op\"&gt;=&lt;/span&gt; model(&lt;span class=\"op\"&gt;**&lt;/span&gt;inp)  &lt;span class=\"co\"&gt;# out.ops, out.answer&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-36\"&gt;&lt;a href=\"#cb9-36\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            pa &lt;span class=\"op\"&gt;=&lt;/span&gt; norm_ans(out.answer)&lt;/span&gt;\n&lt;span id=\"cb9-37\"&gt;&lt;a href=\"#cb9-37\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            ga &lt;span class=\"op\"&gt;=&lt;/span&gt; norm_ans(gold[t])&lt;/span&gt;\n&lt;span id=\"cb9-38\"&gt;&lt;a href=\"#cb9-38\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            em &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"bu\"&gt;float&lt;/span&gt;(pa &lt;span class=\"op\"&gt;==&lt;/span&gt; ga)&lt;/span&gt;\n&lt;span id=\"cb9-39\"&gt;&lt;a href=\"#cb9-39\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            ems.append(em)&lt;/span&gt;\n&lt;span id=\"cb9-40\"&gt;&lt;a href=\"#cb9-40\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            turn_hits &lt;span class=\"op\"&gt;+=&lt;/span&gt; em&lt;/span&gt;\n&lt;span id=\"cb9-41\"&gt;&lt;a href=\"#cb9-41\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            turn_tot &lt;span class=\"op\"&gt;+=&lt;/span&gt; &lt;span class=\"dv\"&gt;1&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-42\"&gt;&lt;a href=\"#cb9-42\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb9-43\"&gt;&lt;a href=\"#cb9-43\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            &lt;span class=\"co\"&gt;# (optional) exec check if you have your python DSL evaluator:&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-44\"&gt;&lt;a href=\"#cb9-44\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            &lt;span class=\"co\"&gt;# exec_ok = False&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-45\"&gt;&lt;a href=\"#cb9-45\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            &lt;span class=\"co\"&gt;# try:&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-46\"&gt;&lt;a href=\"#cb9-46\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            &lt;span class=\"co\"&gt;#     # exec_ok = (run_dsl(out.ops, inp) == ga)   # plug your interpreter&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-47\"&gt;&lt;a href=\"#cb9-47\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            &lt;span class=\"co\"&gt;#     exec_ok = False&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-48\"&gt;&lt;a href=\"#cb9-48\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            &lt;span class=\"co\"&gt;# except Exception:&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-49\"&gt;&lt;a href=\"#cb9-49\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            &lt;span class=\"co\"&gt;#     exec_ok = False&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-50\"&gt;&lt;a href=\"#cb9-50\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            &lt;span class=\"co\"&gt;# exec_flags.append(exec_ok)&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-51\"&gt;&lt;a href=\"#cb9-51\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            &lt;span class=\"co\"&gt;# exec_hits += float(exec_ok)&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-52\"&gt;&lt;a href=\"#cb9-52\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb9-53\"&gt;&lt;a href=\"#cb9-53\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        dlg_mean_ems.append(&lt;span class=\"bu\"&gt;sum&lt;/span&gt;(ems) &lt;span class=\"op\"&gt;/&lt;/span&gt; &lt;span class=\"bu\"&gt;len&lt;/span&gt;(ems))&lt;/span&gt;\n&lt;span id=\"cb9-54\"&gt;&lt;a href=\"#cb9-54\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;if&lt;/span&gt; &lt;span class=\"bu\"&gt;all&lt;/span&gt;(v &lt;span class=\"op\"&gt;==&lt;/span&gt; &lt;span class=\"fl\"&gt;1.0&lt;/span&gt; &lt;span class=\"cf\"&gt;for&lt;/span&gt; v &lt;span class=\"kw\"&gt;in&lt;/span&gt; ems):&lt;/span&gt;\n&lt;span id=\"cb9-55\"&gt;&lt;a href=\"#cb9-55\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            dlg_joint_hits &lt;span class=\"op\"&gt;+=&lt;/span&gt; &lt;span class=\"dv\"&gt;1&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-56\"&gt;&lt;a href=\"#cb9-56\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        final_hits &lt;span class=\"op\"&gt;+=&lt;/span&gt; ems[&lt;span class=\"op\"&gt;-&lt;/span&gt;&lt;span class=\"dv\"&gt;1&lt;/span&gt;]&lt;/span&gt;\n&lt;span id=\"cb9-57\"&gt;&lt;a href=\"#cb9-57\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb9-58\"&gt;&lt;a href=\"#cb9-58\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;return&lt;/span&gt; {&lt;/span&gt;\n&lt;span id=\"cb9-59\"&gt;&lt;a href=\"#cb9-59\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"st\"&gt;&quot;turn_em_micro&quot;&lt;/span&gt;: turn_hits &lt;span class=\"op\"&gt;/&lt;/span&gt; &lt;span class=\"bu\"&gt;max&lt;/span&gt;(&lt;span class=\"dv\"&gt;1&lt;/span&gt;, turn_tot),&lt;/span&gt;\n&lt;span id=\"cb9-60\"&gt;&lt;a href=\"#cb9-60\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"st\"&gt;&quot;dlg_mean_em_macro&quot;&lt;/span&gt;: &lt;span class=\"bu\"&gt;sum&lt;/span&gt;(dlg_mean_ems) &lt;span class=\"op\"&gt;/&lt;/span&gt; &lt;span class=\"bu\"&gt;max&lt;/span&gt;(&lt;span class=\"dv\"&gt;1&lt;/span&gt;, &lt;span class=\"bu\"&gt;len&lt;/span&gt;(dlg_mean_ems)),&lt;/span&gt;\n&lt;span id=\"cb9-61\"&gt;&lt;a href=\"#cb9-61\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"st\"&gt;&quot;joint_em&quot;&lt;/span&gt;: dlg_joint_hits &lt;span class=\"op\"&gt;/&lt;/span&gt; &lt;span class=\"bu\"&gt;max&lt;/span&gt;(&lt;span class=\"dv\"&gt;1&lt;/span&gt;, &lt;span class=\"bu\"&gt;len&lt;/span&gt;(dlg_mean_ems)),&lt;/span&gt;\n&lt;span id=\"cb9-62\"&gt;&lt;a href=\"#cb9-62\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"st\"&gt;&quot;final_turn_em&quot;&lt;/span&gt;: final_hits &lt;span class=\"op\"&gt;/&lt;/span&gt; &lt;span class=\"bu\"&gt;max&lt;/span&gt;(&lt;span class=\"dv\"&gt;1&lt;/span&gt;, &lt;span class=\"bu\"&gt;len&lt;/span&gt;(dlg_mean_ems)),&lt;/span&gt;\n&lt;span id=\"cb9-63\"&gt;&lt;a href=\"#cb9-63\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"co\"&gt;# &quot;exec_agree_rate&quot;: exec_hits / max(1, turn_tot),&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-64\"&gt;&lt;a href=\"#cb9-64\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"st\"&gt;&quot;n_dialogues&quot;&lt;/span&gt;: &lt;span class=\"bu\"&gt;len&lt;/span&gt;(dlg_mean_ems),&lt;/span&gt;\n&lt;span id=\"cb9-65\"&gt;&lt;a href=\"#cb9-65\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"st\"&gt;&quot;n_turns&quot;&lt;/span&gt;: turn_tot,&lt;/span&gt;\n&lt;span id=\"cb9-66\"&gt;&lt;a href=\"#cb9-66\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;/div&gt;\n&lt;p&gt;Next, we will create the DSPy metric, used to &lt;em&gt;evaluate&lt;/em&gt; the performance of our model.&lt;/p&gt;\n&lt;p&gt;We will focus on 2 parts to our metric: - If the answer is a floating point number, we will aim to compare it with the ground truth with some tolerance. - If the answer is a string, we will aim to perform &lt;strong&gt;exact match&lt;/strong&gt; via DSPy’s &lt;code&gt;exact_match&lt;/code&gt; metric.&lt;/p&gt;\n&lt;div id=\"cell-18\" class=\"cell\" data-execution_count=\"407\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb10\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb10-1\"&gt;&lt;a href=\"#cb10-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"kw\"&gt;def&lt;/span&gt; turn_em_metric(example, pred, trace&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;None&lt;/span&gt;):&lt;/span&gt;\n&lt;span id=\"cb10-2\"&gt;&lt;a href=\"#cb10-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"co\"&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb10-3\"&gt;&lt;a href=\"#cb10-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    Compute turn-level exact match (EM) metric for a single example/prediction pair.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb10-4\"&gt;&lt;a href=\"#cb10-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb10-5\"&gt;&lt;a href=\"#cb10-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    Args:&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb10-6\"&gt;&lt;a href=\"#cb10-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;        example: dict-like, must contain &quot;gold_answer&quot; key.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb10-7\"&gt;&lt;a href=\"#cb10-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;        pred: object with an &quot;answer&quot; attribute.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb10-8\"&gt;&lt;a href=\"#cb10-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb10-9\"&gt;&lt;a href=\"#cb10-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    Returns:&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb10-10\"&gt;&lt;a href=\"#cb10-10\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;        float: 1.0 if normalized prediction matches normalized gold answer (with tolerance for floats), else 0.0.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb10-11\"&gt;&lt;a href=\"#cb10-11\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    &quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb10-12\"&gt;&lt;a href=\"#cb10-12\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"im\"&gt;from&lt;/span&gt; dspy.evaluate.metrics &lt;span class=\"im\"&gt;import&lt;/span&gt; answer_exact_match&lt;/span&gt;\n&lt;span id=\"cb10-13\"&gt;&lt;a href=\"#cb10-13\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb10-14\"&gt;&lt;a href=\"#cb10-14\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    pa &lt;span class=\"op\"&gt;=&lt;/span&gt; norm_ans(pred.answer)&lt;/span&gt;\n&lt;span id=\"cb10-15\"&gt;&lt;a href=\"#cb10-15\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    ga &lt;span class=\"op\"&gt;=&lt;/span&gt; norm_ans(example[&lt;span class=\"st\"&gt;&quot;answer&quot;&lt;/span&gt;])&lt;/span&gt;\n&lt;span id=\"cb10-16\"&gt;&lt;a href=\"#cb10-16\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;if&lt;/span&gt; &lt;span class=\"bu\"&gt;isinstance&lt;/span&gt;(pa, &lt;span class=\"bu\"&gt;float&lt;/span&gt;) &lt;span class=\"kw\"&gt;and&lt;/span&gt; &lt;span class=\"bu\"&gt;isinstance&lt;/span&gt;(ga, &lt;span class=\"bu\"&gt;float&lt;/span&gt;):&lt;/span&gt;\n&lt;span id=\"cb10-17\"&gt;&lt;a href=\"#cb10-17\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;return&lt;/span&gt; &lt;span class=\"bu\"&gt;float&lt;/span&gt;(&lt;span class=\"bu\"&gt;abs&lt;/span&gt;(pa &lt;span class=\"op\"&gt;-&lt;/span&gt; ga) &lt;span class=\"op\"&gt;&lt;=&lt;/span&gt; &lt;span class=\"fl\"&gt;1e-2&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb10-18\"&gt;&lt;a href=\"#cb10-18\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;else&lt;/span&gt;:&lt;/span&gt;\n&lt;span id=\"cb10-19\"&gt;&lt;a href=\"#cb10-19\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"co\"&gt;# exact_match in DSPy needs the inputs to be in string format&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb10-20\"&gt;&lt;a href=\"#cb10-20\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"co\"&gt;# due to the normalisations DSPy performs internally.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb10-21\"&gt;&lt;a href=\"#cb10-21\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        ground_truth &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.Prediction(answer&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"bu\"&gt;str&lt;/span&gt;(example.answer))&lt;/span&gt;\n&lt;span id=\"cb10-22\"&gt;&lt;a href=\"#cb10-22\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        pred_answer &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.Prediction(answer&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"bu\"&gt;str&lt;/span&gt;(pred.answer))&lt;/span&gt;\n&lt;span id=\"cb10-23\"&gt;&lt;a href=\"#cb10-23\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;return&lt;/span&gt; &lt;span class=\"bu\"&gt;float&lt;/span&gt;(answer_exact_match(ground_truth, pred_answer))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-19\" class=\"cell\" data-execution_count=\"408\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb11\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb11-1\"&gt;&lt;a href=\"#cb11-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"kw\"&gt;def&lt;/span&gt; to_turn_examples(df, history_mode&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;teacher&quot;&lt;/span&gt;):&lt;/span&gt;\n&lt;span id=\"cb11-2\"&gt;&lt;a href=\"#cb11-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    examples &lt;span class=\"op\"&gt;=&lt;/span&gt; []&lt;/span&gt;\n&lt;span id=\"cb11-3\"&gt;&lt;a href=\"#cb11-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;for&lt;/span&gt; _, row &lt;span class=\"kw\"&gt;in&lt;/span&gt; df.iterrows():&lt;/span&gt;\n&lt;span id=\"cb11-4\"&gt;&lt;a href=\"#cb11-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        qs &lt;span class=\"op\"&gt;=&lt;/span&gt; row[&lt;span class=\"st\"&gt;&quot;dialogue_conv_questions&quot;&lt;/span&gt;]&lt;/span&gt;\n&lt;span id=\"cb11-5\"&gt;&lt;a href=\"#cb11-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        gold &lt;span class=\"op\"&gt;=&lt;/span&gt; row[&lt;span class=\"st\"&gt;&quot;dialogue_executed_answers&quot;&lt;/span&gt;]&lt;/span&gt;\n&lt;span id=\"cb11-6\"&gt;&lt;a href=\"#cb11-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;for&lt;/span&gt; t &lt;span class=\"kw\"&gt;in&lt;/span&gt; &lt;span class=\"bu\"&gt;range&lt;/span&gt;(&lt;span class=\"bu\"&gt;len&lt;/span&gt;(qs)):&lt;/span&gt;\n&lt;span id=\"cb11-7\"&gt;&lt;a href=\"#cb11-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            inp &lt;span class=\"op\"&gt;=&lt;/span&gt; build_inputs_from_row(row, t, history_mode&lt;span class=\"op\"&gt;=&lt;/span&gt;history_mode)&lt;/span&gt;\n&lt;span id=\"cb11-8\"&gt;&lt;a href=\"#cb11-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            ex &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"bu\"&gt;dict&lt;/span&gt;(&lt;span class=\"op\"&gt;**&lt;/span&gt;inp, answer&lt;span class=\"op\"&gt;=&lt;/span&gt;gold[t])&lt;/span&gt;\n&lt;span id=\"cb11-9\"&gt;&lt;a href=\"#cb11-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            examples.append(&lt;/span&gt;\n&lt;span id=\"cb11-10\"&gt;&lt;a href=\"#cb11-10\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                dspy.Example(&lt;span class=\"op\"&gt;**&lt;/span&gt;ex).with_inputs(&lt;/span&gt;\n&lt;span id=\"cb11-11\"&gt;&lt;a href=\"#cb11-11\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                    &lt;span class=\"st\"&gt;&quot;conversation_context&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb11-12\"&gt;&lt;a href=\"#cb11-12\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                    &lt;span class=\"st\"&gt;&quot;evidence_snippets&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb11-13\"&gt;&lt;a href=\"#cb11-13\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                    &lt;span class=\"st\"&gt;&quot;table&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb11-14\"&gt;&lt;a href=\"#cb11-14\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                    &lt;span class=\"st\"&gt;&quot;question&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb11-15\"&gt;&lt;a href=\"#cb11-15\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                )&lt;/span&gt;\n&lt;span id=\"cb11-16\"&gt;&lt;a href=\"#cb11-16\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            )&lt;/span&gt;\n&lt;span id=\"cb11-17\"&gt;&lt;a href=\"#cb11-17\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;return&lt;/span&gt; examples&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;/div&gt;\n&lt;p&gt;Next, we will prepare our datasets.&lt;/p&gt;\n&lt;p&gt;We will aim to use the splits as follows: - &lt;code&gt;train&lt;/code&gt;: Used primarily for the &lt;em&gt;optimisation&lt;/em&gt; phase. This will be discussed shortly. - &lt;code&gt;valid&lt;/code&gt;: Used to evaluate the performance of an LM on an optimised model &lt;em&gt;trained&lt;/em&gt; using the train dataset. - &lt;code&gt;test&lt;/code&gt;: Used to evaluate the performance of an LM on a held-out dataset. This will determine the overall stage performance.&lt;/p&gt;\n&lt;div id=\"cell-21\" class=\"cell\" data-execution_count=\"409\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb12\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb12-1\"&gt;&lt;a href=\"#cb12-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;import&lt;/span&gt; pandas &lt;span class=\"im\"&gt;as&lt;/span&gt; pd&lt;/span&gt;\n&lt;span id=\"cb12-2\"&gt;&lt;a href=\"#cb12-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb12-3\"&gt;&lt;a href=\"#cb12-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;train_df &lt;span class=\"op\"&gt;=&lt;/span&gt; pd.DataFrame(data[&lt;span class=\"st\"&gt;&quot;train&quot;&lt;/span&gt;])&lt;/span&gt;\n&lt;span id=\"cb12-4\"&gt;&lt;a href=\"#cb12-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;test_df &lt;span class=\"op\"&gt;=&lt;/span&gt; pd.DataFrame(data[&lt;span class=\"st\"&gt;&quot;dev&quot;&lt;/span&gt;])&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-22\" class=\"cell\" data-execution_count=\"410\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb13\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb13-1\"&gt;&lt;a href=\"#cb13-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;# Flatten features to remove the indexing gymnastics&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb13-2\"&gt;&lt;a href=\"#cb13-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;train_flat_df &lt;span class=\"op\"&gt;=&lt;/span&gt; pd.concat(&lt;/span&gt;\n&lt;span id=\"cb13-3\"&gt;&lt;a href=\"#cb13-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    [&lt;/span&gt;\n&lt;span id=\"cb13-4\"&gt;&lt;a href=\"#cb13-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        train_df.drop([&lt;span class=\"st\"&gt;&quot;doc&quot;&lt;/span&gt;, &lt;span class=\"st\"&gt;&quot;dialogue&quot;&lt;/span&gt;, &lt;span class=\"st\"&gt;&quot;features&quot;&lt;/span&gt;], axis&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"dv\"&gt;1&lt;/span&gt;),&lt;/span&gt;\n&lt;span id=\"cb13-5\"&gt;&lt;a href=\"#cb13-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        train_df[&lt;span class=\"st\"&gt;&quot;doc&quot;&lt;/span&gt;].&lt;span class=\"bu\"&gt;apply&lt;/span&gt;(pd.Series).add_prefix(&lt;span class=\"st\"&gt;&quot;doc_&quot;&lt;/span&gt;),&lt;/span&gt;\n&lt;span id=\"cb13-6\"&gt;&lt;a href=\"#cb13-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        train_df[&lt;span class=\"st\"&gt;&quot;dialogue&quot;&lt;/span&gt;].&lt;span class=\"bu\"&gt;apply&lt;/span&gt;(pd.Series).add_prefix(&lt;span class=\"st\"&gt;&quot;dialogue_&quot;&lt;/span&gt;),&lt;/span&gt;\n&lt;span id=\"cb13-7\"&gt;&lt;a href=\"#cb13-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        train_df[&lt;span class=\"st\"&gt;&quot;features&quot;&lt;/span&gt;].&lt;span class=\"bu\"&gt;apply&lt;/span&gt;(pd.Series).add_prefix(&lt;span class=\"st\"&gt;&quot;features_&quot;&lt;/span&gt;),&lt;/span&gt;\n&lt;span id=\"cb13-8\"&gt;&lt;a href=\"#cb13-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    ],&lt;/span&gt;\n&lt;span id=\"cb13-9\"&gt;&lt;a href=\"#cb13-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    axis&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"dv\"&gt;1&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb13-10\"&gt;&lt;a href=\"#cb13-10\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;)&lt;/span&gt;\n&lt;span id=\"cb13-11\"&gt;&lt;a href=\"#cb13-11\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb13-12\"&gt;&lt;a href=\"#cb13-12\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;test_flat_df &lt;span class=\"op\"&gt;=&lt;/span&gt; pd.concat(&lt;/span&gt;\n&lt;span id=\"cb13-13\"&gt;&lt;a href=\"#cb13-13\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    [&lt;/span&gt;\n&lt;span id=\"cb13-14\"&gt;&lt;a href=\"#cb13-14\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        test_df.drop([&lt;span class=\"st\"&gt;&quot;doc&quot;&lt;/span&gt;, &lt;span class=\"st\"&gt;&quot;dialogue&quot;&lt;/span&gt;, &lt;span class=\"st\"&gt;&quot;features&quot;&lt;/span&gt;], axis&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"dv\"&gt;1&lt;/span&gt;),&lt;/span&gt;\n&lt;span id=\"cb13-15\"&gt;&lt;a href=\"#cb13-15\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        test_df[&lt;span class=\"st\"&gt;&quot;doc&quot;&lt;/span&gt;].&lt;span class=\"bu\"&gt;apply&lt;/span&gt;(pd.Series).add_prefix(&lt;span class=\"st\"&gt;&quot;doc_&quot;&lt;/span&gt;),&lt;/span&gt;\n&lt;span id=\"cb13-16\"&gt;&lt;a href=\"#cb13-16\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        test_df[&lt;span class=\"st\"&gt;&quot;dialogue&quot;&lt;/span&gt;].&lt;span class=\"bu\"&gt;apply&lt;/span&gt;(pd.Series).add_prefix(&lt;span class=\"st\"&gt;&quot;dialogue_&quot;&lt;/span&gt;),&lt;/span&gt;\n&lt;span id=\"cb13-17\"&gt;&lt;a href=\"#cb13-17\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        test_df[&lt;span class=\"st\"&gt;&quot;features&quot;&lt;/span&gt;].&lt;span class=\"bu\"&gt;apply&lt;/span&gt;(pd.Series).add_prefix(&lt;span class=\"st\"&gt;&quot;features_&quot;&lt;/span&gt;),&lt;/span&gt;\n&lt;span id=\"cb13-18\"&gt;&lt;a href=\"#cb13-18\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    ],&lt;/span&gt;\n&lt;span id=\"cb13-19\"&gt;&lt;a href=\"#cb13-19\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    axis&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"dv\"&gt;1&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb13-20\"&gt;&lt;a href=\"#cb13-20\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-23\" class=\"cell\" data-execution_count=\"411\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb14\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb14-1\"&gt;&lt;a href=\"#cb14-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;train_flat_df.head()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;div class=\"cell-output cell-output-display\" data-execution_count=\"411\"&gt;\n&lt;div&gt;\n&lt;div&gt;\n&lt;style scoped&gt;\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n&lt;/style&gt;\n\n&lt;table class=\"dataframe\" data-quarto-postprocess=\"true\" data-border=\"1\"&gt;\n&lt;thead&gt;\n&lt;tr class=\"header\" style=\"text-align: right;\"&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;id&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;doc_pre_text&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;doc_post_text&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;doc_table&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;dialogue_conv_questions&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;dialogue_conv_answers&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;dialogue_turn_program&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;dialogue_executed_answers&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;dialogue_qa_split&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;features_num_dialogue_turns&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;features_has_type2_question&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;features_has_duplicate_columns&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;features_has_non_numeric_values&lt;/th&gt;\n&lt;/tr&gt;\n&lt;/thead&gt;\n&lt;tbody&gt;\n&lt;tr class=\"odd\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;0&lt;/td&gt;\n&lt;td&gt;Single_JKHY/2009/page_28.pdf-3&lt;/td&gt;\n&lt;td&gt;26 | 2009 annual report in fiscal 2008 , revenues in the credit un...&lt;/td&gt;\n&lt;td&gt;year ended june 30 , cash provided by operations increased $ 25587...&lt;/td&gt;\n&lt;td&gt;{'Year ended June 30, 2009': {'net income': 103102.0, 'non-cash ex...&lt;/td&gt;\n&lt;td&gt;[what is the net cash from operating activities in 2009?, what abo...&lt;/td&gt;\n&lt;td&gt;[206588, 181001, 25587, 14.1%]&lt;/td&gt;\n&lt;td&gt;[206588, 181001, subtract(206588, 181001), subtract(206588, 181001...&lt;/td&gt;\n&lt;td&gt;[206588.0, 181001.0, 25587.0, 0.14136]&lt;/td&gt;\n&lt;td&gt;[False, False, False, False]&lt;/td&gt;\n&lt;td&gt;4&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"even\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;1&lt;/td&gt;\n&lt;td&gt;Single_RSG/2008/page_114.pdf-2&lt;/td&gt;\n&lt;td&gt;substantially all of the goodwill and other intangible assets reco...&lt;/td&gt;\n&lt;td&gt;the above unaudited pro forma financial information includes adjus...&lt;/td&gt;\n&lt;td&gt;{'year ended december 31 2008 ( unaudited )': {'revenue': 9362.2, ...&lt;/td&gt;\n&lt;td&gt;[what were revenues in 2008?, what were they in 2007?, what was th...&lt;/td&gt;\n&lt;td&gt;[9362.2, 9244.9, 117.3, 1.3%]&lt;/td&gt;\n&lt;td&gt;[9362.2, 9244.9, subtract(9362.2, 9244.9), subtract(9362.2, 9244.9...&lt;/td&gt;\n&lt;td&gt;[9362.2, 9244.9, 117.3, 0.01269]&lt;/td&gt;\n&lt;td&gt;[False, False, False, False]&lt;/td&gt;\n&lt;td&gt;4&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"odd\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;2&lt;/td&gt;\n&lt;td&gt;Single_AAPL/2002/page_23.pdf-1&lt;/td&gt;\n&lt;td&gt;in a new business model such as the retail segment is inherently r...&lt;/td&gt;\n&lt;td&gt;.&lt;/td&gt;\n&lt;td&gt;{'2002': {'net sales': 5742.0, 'cost of sales': 4139.0, 'gross mar...&lt;/td&gt;\n&lt;td&gt;[what was the total of net sales in 2001?, and what was that in 20...&lt;/td&gt;\n&lt;td&gt;[5363, 7983, -2620, -32%]&lt;/td&gt;\n&lt;td&gt;[5363, 7983, subtract(5363, 7983), subtract(5363, 7983), divide(#0...&lt;/td&gt;\n&lt;td&gt;[5363.0, 7983.0, -2620.0, -0.3282]&lt;/td&gt;\n&lt;td&gt;[False, False, False, False]&lt;/td&gt;\n&lt;td&gt;4&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"even\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;3&lt;/td&gt;\n&lt;td&gt;Single_UPS/2009/page_33.pdf-2&lt;/td&gt;\n&lt;td&gt;( 1 ) includes shares repurchased through our publicly announced s...&lt;/td&gt;\n&lt;td&gt;.&lt;/td&gt;\n&lt;td&gt;{'12/31/04': {'united parcel service inc .': 100.0, 's&amp;p 500 index...&lt;/td&gt;\n&lt;td&gt;[what was the change in the performance of the united parcel servi...&lt;/td&gt;\n&lt;td&gt;[-24.05, -24.05%, 102.11, 2.11, 2.11%, -26.16%]&lt;/td&gt;\n&lt;td&gt;[subtract(75.95, const_100), subtract(75.95, const_100), divide(#0...&lt;/td&gt;\n&lt;td&gt;[-24.05, -0.2405, 102.11, 2.11, 0.0211, -0.2616]&lt;/td&gt;\n&lt;td&gt;[False, False, False, False, False, False]&lt;/td&gt;\n&lt;td&gt;6&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"odd\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;4&lt;/td&gt;\n&lt;td&gt;Double_UPS/2009/page_33.pdf&lt;/td&gt;\n&lt;td&gt;( 1 ) includes shares repurchased through our publicly announced s...&lt;/td&gt;\n&lt;td&gt;.&lt;/td&gt;\n&lt;td&gt;{'12/31/04': {'united parcel service inc .': 100.0, 's&amp;p 500 index...&lt;/td&gt;\n&lt;td&gt;[what was the fluctuation of the performance price of the ups from...&lt;/td&gt;\n&lt;td&gt;[-8.94, -8.9%, -24.05, -24.05%, 2.11, 2.11%, -26.16%]&lt;/td&gt;\n&lt;td&gt;[subtract(91.06, const_100), subtract(91.06, const_100), divide(#0...&lt;/td&gt;\n&lt;td&gt;[-8.94, -0.0894, -24.05, -0.2405, 2.11, 0.0211, -0.2616]&lt;/td&gt;\n&lt;td&gt;[False, False, True, True, True, True, True]&lt;/td&gt;\n&lt;td&gt;7&lt;/td&gt;\n&lt;td&gt;True&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/tbody&gt;\n&lt;/table&gt;\n\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-24\" class=\"cell\" data-execution_count=\"412\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb15\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb15-1\"&gt;&lt;a href=\"#cb15-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;easy_train_ids &lt;span class=\"op\"&gt;=&lt;/span&gt; pd.read_json(&lt;span class=\"st\"&gt;&quot;./splits/easy_train.jsonl&quot;&lt;/span&gt;, lines&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb15-2\"&gt;&lt;a href=\"#cb15-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;easy_valid_ids &lt;span class=\"op\"&gt;=&lt;/span&gt; pd.read_json(&lt;span class=\"st\"&gt;&quot;./splits/easy_valid.jsonl&quot;&lt;/span&gt;, lines&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb15-3\"&gt;&lt;a href=\"#cb15-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;easy_test_ids &lt;span class=\"op\"&gt;=&lt;/span&gt; pd.read_json(&lt;span class=\"st\"&gt;&quot;./splits/easy_test.jsonl&quot;&lt;/span&gt;, lines&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb15-4\"&gt;&lt;a href=\"#cb15-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb15-5\"&gt;&lt;a href=\"#cb15-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;medium_train_ids &lt;span class=\"op\"&gt;=&lt;/span&gt; pd.read_json(&lt;span class=\"st\"&gt;&quot;./splits/medium_train.jsonl&quot;&lt;/span&gt;, lines&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb15-6\"&gt;&lt;a href=\"#cb15-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;medium_valid_ids &lt;span class=\"op\"&gt;=&lt;/span&gt; pd.read_json(&lt;span class=\"st\"&gt;&quot;./splits/medium_valid.jsonl&quot;&lt;/span&gt;, lines&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb15-7\"&gt;&lt;a href=\"#cb15-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;medium_test_ids &lt;span class=\"op\"&gt;=&lt;/span&gt; pd.read_json(&lt;span class=\"st\"&gt;&quot;./splits/medium_test.jsonl&quot;&lt;/span&gt;, lines&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb15-8\"&gt;&lt;a href=\"#cb15-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb15-9\"&gt;&lt;a href=\"#cb15-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;hard_train_ids &lt;span class=\"op\"&gt;=&lt;/span&gt; pd.read_json(&lt;span class=\"st\"&gt;&quot;./splits/hard_train.jsonl&quot;&lt;/span&gt;, lines&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb15-10\"&gt;&lt;a href=\"#cb15-10\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;hard_valid_ids &lt;span class=\"op\"&gt;=&lt;/span&gt; pd.read_json(&lt;span class=\"st\"&gt;&quot;./splits/hard_valid.jsonl&quot;&lt;/span&gt;, lines&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb15-11\"&gt;&lt;a href=\"#cb15-11\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;hard_test_ids &lt;span class=\"op\"&gt;=&lt;/span&gt; pd.read_json(&lt;span class=\"st\"&gt;&quot;./splits/hard_test.jsonl&quot;&lt;/span&gt;, lines&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb15-12\"&gt;&lt;a href=\"#cb15-12\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb15-13\"&gt;&lt;a href=\"#cb15-13\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;easy_train_df &lt;span class=\"op\"&gt;=&lt;/span&gt; train_flat_df[train_flat_df[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;].isin(easy_train_ids[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;])].copy()&lt;/span&gt;\n&lt;span id=\"cb15-14\"&gt;&lt;a href=\"#cb15-14\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;easy_valid_df &lt;span class=\"op\"&gt;=&lt;/span&gt; train_flat_df[train_flat_df[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;].isin(easy_valid_ids[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;])].copy()&lt;/span&gt;\n&lt;span id=\"cb15-15\"&gt;&lt;a href=\"#cb15-15\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;easy_test_df &lt;span class=\"op\"&gt;=&lt;/span&gt; test_flat_df[test_flat_df[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;].isin(easy_test_ids[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;])].copy()&lt;/span&gt;\n&lt;span id=\"cb15-16\"&gt;&lt;a href=\"#cb15-16\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb15-17\"&gt;&lt;a href=\"#cb15-17\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;medium_train_df &lt;span class=\"op\"&gt;=&lt;/span&gt; train_flat_df[train_flat_df[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;].isin(medium_train_ids[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;])].copy()&lt;/span&gt;\n&lt;span id=\"cb15-18\"&gt;&lt;a href=\"#cb15-18\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;medium_valid_df &lt;span class=\"op\"&gt;=&lt;/span&gt; train_flat_df[train_flat_df[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;].isin(medium_valid_ids[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;])].copy()&lt;/span&gt;\n&lt;span id=\"cb15-19\"&gt;&lt;a href=\"#cb15-19\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;medium_test_df &lt;span class=\"op\"&gt;=&lt;/span&gt; test_flat_df[test_flat_df[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;].isin(medium_test_ids[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;])].copy()&lt;/span&gt;\n&lt;span id=\"cb15-20\"&gt;&lt;a href=\"#cb15-20\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb15-21\"&gt;&lt;a href=\"#cb15-21\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;hard_train_df &lt;span class=\"op\"&gt;=&lt;/span&gt; train_flat_df[train_flat_df[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;].isin(hard_train_ids[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;])].copy()&lt;/span&gt;\n&lt;span id=\"cb15-22\"&gt;&lt;a href=\"#cb15-22\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;hard_valid_df &lt;span class=\"op\"&gt;=&lt;/span&gt; train_flat_df[train_flat_df[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;].isin(hard_valid_ids[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;])].copy()&lt;/span&gt;\n&lt;span id=\"cb15-23\"&gt;&lt;a href=\"#cb15-23\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;hard_test_df &lt;span class=\"op\"&gt;=&lt;/span&gt; test_flat_df[test_flat_df[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;].isin(hard_test_ids[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;])].copy()&lt;/span&gt;\n&lt;span id=\"cb15-24\"&gt;&lt;a href=\"#cb15-24\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb15-25\"&gt;&lt;a href=\"#cb15-25\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"cf\"&gt;assert&lt;/span&gt; easy_train_ids.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;] &lt;span class=\"op\"&gt;==&lt;/span&gt; easy_train_df.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;]&lt;/span&gt;\n&lt;span id=\"cb15-26\"&gt;&lt;a href=\"#cb15-26\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"cf\"&gt;assert&lt;/span&gt; easy_valid_ids.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;] &lt;span class=\"op\"&gt;==&lt;/span&gt; easy_valid_df.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;]&lt;/span&gt;\n&lt;span id=\"cb15-27\"&gt;&lt;a href=\"#cb15-27\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"cf\"&gt;assert&lt;/span&gt; easy_test_ids.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;] &lt;span class=\"op\"&gt;==&lt;/span&gt; easy_test_df.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;]&lt;/span&gt;\n&lt;span id=\"cb15-28\"&gt;&lt;a href=\"#cb15-28\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"cf\"&gt;assert&lt;/span&gt; medium_train_ids.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;] &lt;span class=\"op\"&gt;==&lt;/span&gt; medium_train_df.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;]&lt;/span&gt;\n&lt;span id=\"cb15-29\"&gt;&lt;a href=\"#cb15-29\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"cf\"&gt;assert&lt;/span&gt; medium_valid_ids.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;] &lt;span class=\"op\"&gt;==&lt;/span&gt; medium_valid_df.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;]&lt;/span&gt;\n&lt;span id=\"cb15-30\"&gt;&lt;a href=\"#cb15-30\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"cf\"&gt;assert&lt;/span&gt; medium_test_ids.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;] &lt;span class=\"op\"&gt;==&lt;/span&gt; medium_test_df.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;]&lt;/span&gt;\n&lt;span id=\"cb15-31\"&gt;&lt;a href=\"#cb15-31\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"cf\"&gt;assert&lt;/span&gt; hard_train_ids.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;] &lt;span class=\"op\"&gt;==&lt;/span&gt; hard_train_df.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;]&lt;/span&gt;\n&lt;span id=\"cb15-32\"&gt;&lt;a href=\"#cb15-32\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"cf\"&gt;assert&lt;/span&gt; hard_valid_ids.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;] &lt;span class=\"op\"&gt;==&lt;/span&gt; hard_valid_df.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;]&lt;/span&gt;\n&lt;span id=\"cb15-33\"&gt;&lt;a href=\"#cb15-33\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"cf\"&gt;assert&lt;/span&gt; hard_test_ids.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;] &lt;span class=\"op\"&gt;==&lt;/span&gt; hard_test_df.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-25\" class=\"cell\" data-execution_count=\"413\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb16\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb16-1\"&gt;&lt;a href=\"#cb16-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;easy_train_examples &lt;span class=\"op\"&gt;=&lt;/span&gt; to_turn_examples(easy_train_df)&lt;/span&gt;\n&lt;span id=\"cb16-2\"&gt;&lt;a href=\"#cb16-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;easy_valid_examples &lt;span class=\"op\"&gt;=&lt;/span&gt; to_turn_examples(easy_valid_df)&lt;/span&gt;\n&lt;span id=\"cb16-3\"&gt;&lt;a href=\"#cb16-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;easy_test_examples &lt;span class=\"op\"&gt;=&lt;/span&gt; to_turn_examples(easy_test_df)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-26\" class=\"cell\" data-execution_count=\"414\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb17\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb17-1\"&gt;&lt;a href=\"#cb17-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"bu\"&gt;len&lt;/span&gt;(easy_train_examples &lt;span class=\"op\"&gt;+&lt;/span&gt; easy_valid_examples)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;div class=\"cell-output cell-output-display\" data-execution_count=\"414\"&gt;\n&lt;pre&gt;&lt;code&gt;852&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;We will used DSPy’s &lt;code&gt;Evaluate&lt;/code&gt; class to run our evals in parallel(internally, this is just implemented via threads)&lt;/p&gt;\n&lt;p&gt;To ensure our setup works as expected, we will run a simple test first.&lt;/p&gt;\n&lt;div id=\"cell-29\" class=\"cell\" data-execution_count=\"419\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb19\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb19-1\"&gt;&lt;a href=\"#cb19-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;from&lt;/span&gt; dspy.evaluate &lt;span class=\"im\"&gt;import&lt;/span&gt; Evaluate&lt;/span&gt;\n&lt;span id=\"cb19-2\"&gt;&lt;a href=\"#cb19-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb19-3\"&gt;&lt;a href=\"#cb19-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;evaluator &lt;span class=\"op\"&gt;=&lt;/span&gt; Evaluate(&lt;/span&gt;\n&lt;span id=\"cb19-4\"&gt;&lt;a href=\"#cb19-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    devset&lt;span class=\"op\"&gt;=&lt;/span&gt;easy_valid_examples[:&lt;span class=\"dv\"&gt;10&lt;/span&gt;],&lt;/span&gt;\n&lt;span id=\"cb19-5\"&gt;&lt;a href=\"#cb19-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    num_threads&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"dv\"&gt;32&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb19-6\"&gt;&lt;a href=\"#cb19-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    display_progress&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb19-7\"&gt;&lt;a href=\"#cb19-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    display_table&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb19-8\"&gt;&lt;a href=\"#cb19-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    provide_traceback&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb19-9\"&gt;&lt;a href=\"#cb19-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    return_all_scores&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb19-10\"&gt;&lt;a href=\"#cb19-10\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    return_outputs&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb19-11\"&gt;&lt;a href=\"#cb19-11\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;)&lt;/span&gt;\n&lt;span id=\"cb19-12\"&gt;&lt;a href=\"#cb19-12\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb19-13\"&gt;&lt;a href=\"#cb19-13\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb19-14\"&gt;&lt;a href=\"#cb19-14\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;from&lt;/span&gt; copy &lt;span class=\"im\"&gt;import&lt;/span&gt; deepcopy&lt;/span&gt;\n&lt;span id=\"cb19-15\"&gt;&lt;a href=\"#cb19-15\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb19-16\"&gt;&lt;a href=\"#cb19-16\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;tlm &lt;span class=\"op\"&gt;=&lt;/span&gt; deepcopy(lm_oai_gpt_4_1)&lt;/span&gt;\n&lt;span id=\"cb19-17\"&gt;&lt;a href=\"#cb19-17\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;tlm.cache &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"va\"&gt;False&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb19-18\"&gt;&lt;a href=\"#cb19-18\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb19-19\"&gt;&lt;a href=\"#cb19-19\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;# &lt;/span&gt;&lt;span class=\"al\"&gt;HACK&lt;/span&gt;&lt;span class=\"co\"&gt;: Weird bug in dspy where the context doesn&#39;t set the cache to False, causing answers to be returned from memory. I&#39;ve found that creating a deepcopy and setting the attribute manually fixes this.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb19-20\"&gt;&lt;a href=\"#cb19-20\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"cf\"&gt;with&lt;/span&gt; dspy.context(lm&lt;span class=\"op\"&gt;=&lt;/span&gt;tlm) &lt;span class=\"im\"&gt;as&lt;/span&gt; ctx:&lt;/span&gt;\n&lt;span id=\"cb19-21\"&gt;&lt;a href=\"#cb19-21\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    evaluator(TurnSolver(reasoning_lm&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;False&lt;/span&gt;), metric&lt;span class=\"op\"&gt;=&lt;/span&gt;turn_em_metric)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;div class=\"cell-output cell-output-stdout\"&gt;\n&lt;pre&gt;&lt;code&gt;Average Metric: 8.00 / 10 (80.0%): 100%|██████████| 10/10 [00:02&lt;00:00,  3.48it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/a5433773d6ef4e359825412ad138c520\n🧪 View experiment at: http://localhost:5000/#/experiments/1&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-stderr\"&gt;\n&lt;pre&gt;&lt;code&gt;2025/07/28 18:18:42 INFO dspy.evaluate.evaluate: Average Metric: 8.0 / 10 (80.0%)&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;div&gt;\n&lt;div&gt;\n&lt;style scoped&gt;\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n&lt;/style&gt;\n\n&lt;table class=\"dataframe\" data-quarto-postprocess=\"true\" data-border=\"1\"&gt;\n&lt;thead&gt;\n&lt;tr class=\"header\" style=\"text-align: right;\"&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;conversation_context&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;evidence_snippets&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;table&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;question&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;id&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;doc_pre_text&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;doc_post_text&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;doc_table&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;dialogue_conv_questions&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;dialogue_conv_answers&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;...&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;dialogue_executed_answers&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;dialogue_qa_split&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;features_num_dialogue_turns&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;features_has_type2_question&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;features_has_duplicate_columns&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;features_has_non_numeric_values&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;example_answer&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;ops&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;pred_answer&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;turn_em_metric&lt;/th&gt;\n&lt;/tr&gt;\n&lt;/thead&gt;\n&lt;tbody&gt;\n&lt;tr class=\"odd\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;0&lt;/td&gt;\n&lt;td&gt;None&lt;/td&gt;\n&lt;td&gt;[PRE] entergy corporation and subsidiaries management's financial ...&lt;/td&gt;\n&lt;td&gt;| Row | 2009 net revenue | volume/weather | retail electric price ...&lt;/td&gt;\n&lt;td&gt;what was the difference in net revenue between 2009 and 2010?&lt;/td&gt;\n&lt;td&gt;Single_ETR/2011/page_22.pdf-3&lt;/td&gt;\n&lt;td&gt;entergy corporation and subsidiaries management's financial discus...&lt;/td&gt;\n&lt;td&gt;the volume/weather variance is primarily due to an increase of 836...&lt;/td&gt;\n&lt;td&gt;{'amount ( in millions )': {'2009 net revenue': 4694.0, 'volume/we...&lt;/td&gt;\n&lt;td&gt;['what was the difference in net revenue between 2009 and 2010?', ...&lt;/td&gt;\n&lt;td&gt;[357, 4694, 7.61%]&lt;/td&gt;\n&lt;td&gt;...&lt;/td&gt;\n&lt;td&gt;[357.0, 4694.0, 0.07605]&lt;/td&gt;\n&lt;td&gt;[False, False, False]&lt;/td&gt;\n&lt;td&gt;3&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;357.00000&lt;/td&gt;\n&lt;td&gt;subtract(2010 net revenue, 2009 net revenue)&lt;/td&gt;\n&lt;td&gt;357.0&lt;/td&gt;\n&lt;td&gt;✔️ [1.000]&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"even\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;1&lt;/td&gt;\n&lt;td&gt;Q1: what was the difference in net revenue between 2009 and 2010?\\...&lt;/td&gt;\n&lt;td&gt;[PRE] entergy corporation and subsidiaries management's financial ...&lt;/td&gt;\n&lt;td&gt;| Row | 2009 net revenue | volume/weather | retail electric price ...&lt;/td&gt;\n&lt;td&gt;and the specific value for 2009 again?&lt;/td&gt;\n&lt;td&gt;Single_ETR/2011/page_22.pdf-3&lt;/td&gt;\n&lt;td&gt;entergy corporation and subsidiaries management's financial discus...&lt;/td&gt;\n&lt;td&gt;the volume/weather variance is primarily due to an increase of 836...&lt;/td&gt;\n&lt;td&gt;{'amount ( in millions )': {'2009 net revenue': 4694.0, 'volume/we...&lt;/td&gt;\n&lt;td&gt;['what was the difference in net revenue between 2009 and 2010?', ...&lt;/td&gt;\n&lt;td&gt;[357, 4694, 7.61%]&lt;/td&gt;\n&lt;td&gt;...&lt;/td&gt;\n&lt;td&gt;[357.0, 4694.0, 0.07605]&lt;/td&gt;\n&lt;td&gt;[False, False, False]&lt;/td&gt;\n&lt;td&gt;3&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;4694.00000&lt;/td&gt;\n&lt;td&gt;4694.0&lt;/td&gt;\n&lt;td&gt;4694.0&lt;/td&gt;\n&lt;td&gt;✔️ [1.000]&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"odd\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;2&lt;/td&gt;\n&lt;td&gt;Q1: what was the difference in net revenue between 2009 and 2010?\\...&lt;/td&gt;\n&lt;td&gt;[PRE] entergy corporation and subsidiaries management's financial ...&lt;/td&gt;\n&lt;td&gt;| Row | 2009 net revenue | volume/weather | retail electric price ...&lt;/td&gt;\n&lt;td&gt;so what was the percentage change during this time?&lt;/td&gt;\n&lt;td&gt;Single_ETR/2011/page_22.pdf-3&lt;/td&gt;\n&lt;td&gt;entergy corporation and subsidiaries management's financial discus...&lt;/td&gt;\n&lt;td&gt;the volume/weather variance is primarily due to an increase of 836...&lt;/td&gt;\n&lt;td&gt;{'amount ( in millions )': {'2009 net revenue': 4694.0, 'volume/we...&lt;/td&gt;\n&lt;td&gt;['what was the difference in net revenue between 2009 and 2010?', ...&lt;/td&gt;\n&lt;td&gt;[357, 4694, 7.61%]&lt;/td&gt;\n&lt;td&gt;...&lt;/td&gt;\n&lt;td&gt;[357.0, 4694.0, 0.07605]&lt;/td&gt;\n&lt;td&gt;[False, False, False]&lt;/td&gt;\n&lt;td&gt;3&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;0.07605&lt;/td&gt;\n&lt;td&gt;subtract(5051.0, 4694.0), divide(#0, 4694.0), multiply(#1, const_100)&lt;/td&gt;\n&lt;td&gt;7.61&lt;/td&gt;\n&lt;td&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"even\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;3&lt;/td&gt;\n&lt;td&gt;None&lt;/td&gt;\n&lt;td&gt;[PRE] entergy new orleans , inc . management's financial discussio...&lt;/td&gt;\n&lt;td&gt;| Row | 2003 net revenue | base rates | volume/weather | 2004 defe...&lt;/td&gt;\n&lt;td&gt;what was the net revenue in 2004?&lt;/td&gt;\n&lt;td&gt;Single_ETR/2004/page_258.pdf-4&lt;/td&gt;\n&lt;td&gt;entergy new orleans , inc . management's financial discussion and ...&lt;/td&gt;\n&lt;td&gt;the increase in base rates was effective june 2003 . the rate incr...&lt;/td&gt;\n&lt;td&gt;{'( in millions )': {'2003 net revenue': 208.3, 'base rates': 10.6...&lt;/td&gt;\n&lt;td&gt;[what was the net revenue in 2004?, what was the net revenue in 20...&lt;/td&gt;\n&lt;td&gt;[239.0, 208.3, 30.7, 14.7%]&lt;/td&gt;\n&lt;td&gt;...&lt;/td&gt;\n&lt;td&gt;[239.0, 208.3, 30.7, 0.14738]&lt;/td&gt;\n&lt;td&gt;[False, False, False, False]&lt;/td&gt;\n&lt;td&gt;4&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;239.00000&lt;/td&gt;\n&lt;td&gt;None&lt;/td&gt;\n&lt;td&gt;239.0&lt;/td&gt;\n&lt;td&gt;✔️ [1.000]&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"odd\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;4&lt;/td&gt;\n&lt;td&gt;Q1: what was the net revenue in 2004?\\nA1: 239.0&lt;/td&gt;\n&lt;td&gt;[PRE] entergy new orleans , inc . management's financial discussio...&lt;/td&gt;\n&lt;td&gt;| Row | 2003 net revenue | base rates | volume/weather | 2004 defe...&lt;/td&gt;\n&lt;td&gt;what was the net revenue in 2003?&lt;/td&gt;\n&lt;td&gt;Single_ETR/2004/page_258.pdf-4&lt;/td&gt;\n&lt;td&gt;entergy new orleans , inc . management's financial discussion and ...&lt;/td&gt;\n&lt;td&gt;the increase in base rates was effective june 2003 . the rate incr...&lt;/td&gt;\n&lt;td&gt;{'( in millions )': {'2003 net revenue': 208.3, 'base rates': 10.6...&lt;/td&gt;\n&lt;td&gt;[what was the net revenue in 2004?, what was the net revenue in 20...&lt;/td&gt;\n&lt;td&gt;[239.0, 208.3, 30.7, 14.7%]&lt;/td&gt;\n&lt;td&gt;...&lt;/td&gt;\n&lt;td&gt;[239.0, 208.3, 30.7, 0.14738]&lt;/td&gt;\n&lt;td&gt;[False, False, False, False]&lt;/td&gt;\n&lt;td&gt;4&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;208.30000&lt;/td&gt;\n&lt;td&gt;None&lt;/td&gt;\n&lt;td&gt;208.3&lt;/td&gt;\n&lt;td&gt;✔️ [1.000]&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"even\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;5&lt;/td&gt;\n&lt;td&gt;Q1: what was the net revenue in 2004?\\nA1: 239.0\\nQ2: what was the...&lt;/td&gt;\n&lt;td&gt;[PRE] entergy new orleans , inc . management's financial discussio...&lt;/td&gt;\n&lt;td&gt;| Row | 2003 net revenue | base rates | volume/weather | 2004 defe...&lt;/td&gt;\n&lt;td&gt;what was the change in value?&lt;/td&gt;\n&lt;td&gt;Single_ETR/2004/page_258.pdf-4&lt;/td&gt;\n&lt;td&gt;entergy new orleans , inc . management's financial discussion and ...&lt;/td&gt;\n&lt;td&gt;the increase in base rates was effective june 2003 . the rate incr...&lt;/td&gt;\n&lt;td&gt;{'( in millions )': {'2003 net revenue': 208.3, 'base rates': 10.6...&lt;/td&gt;\n&lt;td&gt;[what was the net revenue in 2004?, what was the net revenue in 20...&lt;/td&gt;\n&lt;td&gt;[239.0, 208.3, 30.7, 14.7%]&lt;/td&gt;\n&lt;td&gt;...&lt;/td&gt;\n&lt;td&gt;[239.0, 208.3, 30.7, 0.14738]&lt;/td&gt;\n&lt;td&gt;[False, False, False, False]&lt;/td&gt;\n&lt;td&gt;4&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;30.70000&lt;/td&gt;\n&lt;td&gt;subtract(239.0, 208.3)&lt;/td&gt;\n&lt;td&gt;30.7&lt;/td&gt;\n&lt;td&gt;✔️ [1.000]&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"odd\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;6&lt;/td&gt;\n&lt;td&gt;Q1: what was the net revenue in 2004? A1: 239.0 Q2: what was the n...&lt;/td&gt;\n&lt;td&gt;[PRE] entergy new orleans , inc . management's financial discussio...&lt;/td&gt;\n&lt;td&gt;| Row | 2003 net revenue | base rates | volume/weather | 2004 defe...&lt;/td&gt;\n&lt;td&gt;what is the percent change?&lt;/td&gt;\n&lt;td&gt;Single_ETR/2004/page_258.pdf-4&lt;/td&gt;\n&lt;td&gt;entergy new orleans , inc . management's financial discussion and ...&lt;/td&gt;\n&lt;td&gt;the increase in base rates was effective june 2003 . the rate incr...&lt;/td&gt;\n&lt;td&gt;{'( in millions )': {'2003 net revenue': 208.3, 'base rates': 10.6...&lt;/td&gt;\n&lt;td&gt;[what was the net revenue in 2004?, what was the net revenue in 20...&lt;/td&gt;\n&lt;td&gt;[239.0, 208.3, 30.7, 14.7%]&lt;/td&gt;\n&lt;td&gt;...&lt;/td&gt;\n&lt;td&gt;[239.0, 208.3, 30.7, 0.14738]&lt;/td&gt;\n&lt;td&gt;[False, False, False, False]&lt;/td&gt;\n&lt;td&gt;4&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;0.14738&lt;/td&gt;\n&lt;td&gt;subtract(239.0, 208.3), divide(#0, 208.3), multiply(#1, 100)&lt;/td&gt;\n&lt;td&gt;14.72&lt;/td&gt;\n&lt;td&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"even\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;7&lt;/td&gt;\n&lt;td&gt;None&lt;/td&gt;\n&lt;td&gt;[PRE] nike , inc . notes to consolidated financial statements 2014...&lt;/td&gt;\n&lt;td&gt;| Row | severance and related costs | cash payments | non-cash sto...&lt;/td&gt;\n&lt;td&gt;what was the value of the sale of the starter brand?&lt;/td&gt;\n&lt;td&gt;Single_NKE/2009/page_81.pdf-1&lt;/td&gt;\n&lt;td&gt;nike , inc . notes to consolidated financial statements 2014 ( con...&lt;/td&gt;\n&lt;td&gt;the accrual balance as of may 31 , 2009 will be relieved throughou...&lt;/td&gt;\n&lt;td&gt;{'$ 2014': {'severance and related costs': 195.0, 'cash payments':...&lt;/td&gt;\n&lt;td&gt;['what was the value of the sale of the starter brand?', 'what was...&lt;/td&gt;\n&lt;td&gt;[60.0, 28.6, 31.4, 91%]&lt;/td&gt;\n&lt;td&gt;...&lt;/td&gt;\n&lt;td&gt;[60.0, 28.6, 31.4, 0.91083]&lt;/td&gt;\n&lt;td&gt;[False, False, False, False]&lt;/td&gt;\n&lt;td&gt;4&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;60.00000&lt;/td&gt;\n&lt;td&gt;None&lt;/td&gt;\n&lt;td&gt;60.0&lt;/td&gt;\n&lt;td&gt;✔️ [1.000]&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"odd\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;8&lt;/td&gt;\n&lt;td&gt;Q1: what was the value of the sale of the starter brand?\\nA1: 60.0&lt;/td&gt;\n&lt;td&gt;[PRE] nike , inc . notes to consolidated financial statements 2014...&lt;/td&gt;\n&lt;td&gt;| Row | severance and related costs | cash payments | non-cash sto...&lt;/td&gt;\n&lt;td&gt;what was the gain resulting from the sale?&lt;/td&gt;\n&lt;td&gt;Single_NKE/2009/page_81.pdf-1&lt;/td&gt;\n&lt;td&gt;nike , inc . notes to consolidated financial statements 2014 ( con...&lt;/td&gt;\n&lt;td&gt;the accrual balance as of may 31 , 2009 will be relieved throughou...&lt;/td&gt;\n&lt;td&gt;{'$ 2014': {'severance and related costs': 195.0, 'cash payments':...&lt;/td&gt;\n&lt;td&gt;['what was the value of the sale of the starter brand?', 'what was...&lt;/td&gt;\n&lt;td&gt;[60.0, 28.6, 31.4, 91%]&lt;/td&gt;\n&lt;td&gt;...&lt;/td&gt;\n&lt;td&gt;[60.0, 28.6, 31.4, 0.91083]&lt;/td&gt;\n&lt;td&gt;[False, False, False, False]&lt;/td&gt;\n&lt;td&gt;4&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;28.60000&lt;/td&gt;\n&lt;td&gt;None&lt;/td&gt;\n&lt;td&gt;28.6&lt;/td&gt;\n&lt;td&gt;✔️ [1.000]&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"even\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;9&lt;/td&gt;\n&lt;td&gt;Q1: what was the value of the sale of the starter brand?\\nA1: 60.0...&lt;/td&gt;\n&lt;td&gt;[PRE] nike , inc . notes to consolidated financial statements 2014...&lt;/td&gt;\n&lt;td&gt;| Row | severance and related costs | cash payments | non-cash sto...&lt;/td&gt;\n&lt;td&gt;what was the change in value?&lt;/td&gt;\n&lt;td&gt;Single_NKE/2009/page_81.pdf-1&lt;/td&gt;\n&lt;td&gt;nike , inc . notes to consolidated financial statements 2014 ( con...&lt;/td&gt;\n&lt;td&gt;the accrual balance as of may 31 , 2009 will be relieved throughou...&lt;/td&gt;\n&lt;td&gt;{'$ 2014': {'severance and related costs': 195.0, 'cash payments':...&lt;/td&gt;\n&lt;td&gt;['what was the value of the sale of the starter brand?', 'what was...&lt;/td&gt;\n&lt;td&gt;[60.0, 28.6, 31.4, 91%]&lt;/td&gt;\n&lt;td&gt;...&lt;/td&gt;\n&lt;td&gt;[60.0, 28.6, 31.4, 0.91083]&lt;/td&gt;\n&lt;td&gt;[False, False, False, False]&lt;/td&gt;\n&lt;td&gt;4&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;31.40000&lt;/td&gt;\n&lt;td&gt;subtract(60.0, 28.6)&lt;/td&gt;\n&lt;td&gt;31.4&lt;/td&gt;\n&lt;td&gt;✔️ [1.000]&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/tbody&gt;\n&lt;/table&gt;\n\n&lt;p&gt;10 rows × 21 columns&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n\n&lt;div&gt;\n  &lt;style scoped&gt;\n  button {\n    border: none;\n    border-radius: 4px;\n    background-color: rgb(34, 114, 180);\n    font-family: -apple-system, \"system-ui\", \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial;\n    font-size: 13px;\n    color: white;\n    margin-top: 8px;\n    margin-bottom: 8px;\n    padding: 8px 16px;\n    cursor: pointer;\n  }\n  button:hover {\n    background-color: rgb(66, 153, 224);\n  }\n  &lt;/style&gt;\n  &lt;button\n    onclick=\"\n        const display = this.nextElementSibling.style.display;\n        const isCollapsed = display === 'none';\n        this.nextElementSibling.style.display = isCollapsed ? null : 'none';\n\n        const verb = isCollapsed ? 'Collapse' : 'Expand';\n        this.innerText = `${verb} MLflow Trace`;\n    \"\n  &gt;Collapse MLflow Trace&lt;/button&gt;\n  &lt;iframe\n    id=\"trace-renderer\"\n    style=\"width: 100%; height: 500px; border: none; resize: vertical;\"\n    src=\"http://localhost:5000/static-files/lib/notebook-trace-renderer/index.html?trace_id=caea82d0bc0c4f0d800313b99bd69581&amp;experiment_id=1&amp;trace_id=ed4476c7920b49f3b2e909e88548e086&amp;experiment_id=1&amp;trace_id=6ba8b539ea0f49798599b294060d1213&amp;experiment_id=1&amp;trace_id=711aae8d07b14f619312af02495f941a&amp;experiment_id=1&amp;trace_id=fd97772c93064b3daf30f61009d81fe2&amp;experiment_id=1&amp;trace_id=5b665669eca649c9bd46b04a6f9737ad&amp;experiment_id=1&amp;trace_id=23be442a4d64413abe335a55bebe6a5a&amp;experiment_id=1&amp;trace_id=d057b5aed88a46fb8562a39db0ebd15d&amp;experiment_id=1&amp;trace_id=02f1ddeee02448f58babae2fb6afa3b9&amp;experiment_id=1&amp;trace_id=8e058d1aa41a4932a83c8f0505a867fd&amp;experiment_id=1&amp;version=3.1.4\"\n  /&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-30\" class=\"cell\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb22\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb22-1\"&gt;&lt;a href=\"#cb22-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;import&lt;/span&gt; random&lt;/span&gt;\n&lt;span id=\"cb22-2\"&gt;&lt;a href=\"#cb22-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb22-3\"&gt;&lt;a href=\"#cb22-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;random.seed(&lt;span class=\"dv\"&gt;42&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb22-4\"&gt;&lt;a href=\"#cb22-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb22-5\"&gt;&lt;a href=\"#cb22-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;bootstrap_rs_random_easy_subset &lt;span class=\"op\"&gt;=&lt;/span&gt; random.sample(easy_train_examples, &lt;span class=\"dv\"&gt;70&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-31\" class=\"cell\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb23\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb23-1\"&gt;&lt;a href=\"#cb23-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;import&lt;/span&gt; re&lt;/span&gt;\n&lt;span id=\"cb23-2\"&gt;&lt;a href=\"#cb23-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb23-3\"&gt;&lt;a href=\"#cb23-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;import&lt;/span&gt; litellm&lt;/span&gt;\n&lt;span id=\"cb23-4\"&gt;&lt;a href=\"#cb23-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;from&lt;/span&gt; dspy.teleprompt &lt;span class=\"im\"&gt;import&lt;/span&gt; BootstrapFewShotWithRandomSearch&lt;/span&gt;\n&lt;span id=\"cb23-5\"&gt;&lt;a href=\"#cb23-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb23-6\"&gt;&lt;a href=\"#cb23-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;# Config needed to prevent the optimizer from using _unsupported_ temperature&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb23-7\"&gt;&lt;a href=\"#cb23-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;# for reasoning models.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb23-8\"&gt;&lt;a href=\"#cb23-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;litellm.drop_params &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"va\"&gt;True&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb23-9\"&gt;&lt;a href=\"#cb23-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb23-10\"&gt;&lt;a href=\"#cb23-10\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb23-11\"&gt;&lt;a href=\"#cb23-11\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;config &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"bu\"&gt;dict&lt;/span&gt;(&lt;/span&gt;\n&lt;span id=\"cb23-12\"&gt;&lt;a href=\"#cb23-12\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    max_bootstrapped_demos&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"dv\"&gt;3&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb23-13\"&gt;&lt;a href=\"#cb23-13\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    max_labeled_demos&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"dv\"&gt;2&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb23-14\"&gt;&lt;a href=\"#cb23-14\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    num_candidate_programs&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"dv\"&gt;5&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb23-15\"&gt;&lt;a href=\"#cb23-15\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    num_threads&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"dv\"&gt;32&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb23-16\"&gt;&lt;a href=\"#cb23-16\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    max_rounds&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"dv\"&gt;1&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb23-17\"&gt;&lt;a href=\"#cb23-17\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;)&lt;/span&gt;\n&lt;span id=\"cb23-18\"&gt;&lt;a href=\"#cb23-18\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb23-19\"&gt;&lt;a href=\"#cb23-19\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;bootstrap_rs_easy_compiled_programs &lt;span class=\"op\"&gt;=&lt;/span&gt; []&lt;/span&gt;\n&lt;span id=\"cb23-20\"&gt;&lt;a href=\"#cb23-20\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb23-21\"&gt;&lt;a href=\"#cb23-21\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"cf\"&gt;with&lt;/span&gt; mlflow.start_run(run_name&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;bootstrap_few_shot_rs_easy&quot;&lt;/span&gt;):&lt;/span&gt;\n&lt;span id=\"cb23-22\"&gt;&lt;a href=\"#cb23-22\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;for&lt;/span&gt; candidate_lm &lt;span class=\"kw\"&gt;in&lt;/span&gt; selected_llms:&lt;/span&gt;\n&lt;span id=\"cb23-23\"&gt;&lt;a href=\"#cb23-23\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        run_name &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"ss\"&gt;f&quot;bootstrap_few_shot_rs_&lt;/span&gt;&lt;span class=\"sc\"&gt;{&lt;/span&gt;candidate_lm&lt;span class=\"sc\"&gt;.&lt;/span&gt;model&lt;span class=\"sc\"&gt;.&lt;/span&gt;replace(&lt;span class=\"st\"&gt;&#39;/&#39;&lt;/span&gt;, &lt;span class=\"st\"&gt;&#39;_&#39;&lt;/span&gt;)&lt;span class=\"sc\"&gt;}&lt;/span&gt;&lt;span class=\"ss\"&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb23-24\"&gt;&lt;a href=\"#cb23-24\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        sanitized_run_name &lt;span class=\"op\"&gt;=&lt;/span&gt; re.sub(&lt;span class=\"vs\"&gt;r&quot;[^a-zA-Z0-9_\\-]&quot;&lt;/span&gt;, &lt;span class=\"st\"&gt;&quot;_&quot;&lt;/span&gt;, run_name)&lt;/span&gt;\n&lt;span id=\"cb23-25\"&gt;&lt;a href=\"#cb23-25\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;with&lt;/span&gt; mlflow.start_run(run_name&lt;span class=\"op\"&gt;=&lt;/span&gt;sanitized_run_name, nested&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;):&lt;/span&gt;\n&lt;span id=\"cb23-26\"&gt;&lt;a href=\"#cb23-26\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            &lt;span class=\"cf\"&gt;with&lt;/span&gt; dspy.context(lm&lt;span class=\"op\"&gt;=&lt;/span&gt;candidate_lm) &lt;span class=\"im\"&gt;as&lt;/span&gt; ctx:&lt;/span&gt;\n&lt;span id=\"cb23-27\"&gt;&lt;a href=\"#cb23-27\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                teleprompter &lt;span class=\"op\"&gt;=&lt;/span&gt; BootstrapFewShotWithRandomSearch(&lt;/span&gt;\n&lt;span id=\"cb23-28\"&gt;&lt;a href=\"#cb23-28\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                    metric&lt;span class=\"op\"&gt;=&lt;/span&gt;turn_em_metric, &lt;span class=\"op\"&gt;**&lt;/span&gt;config&lt;/span&gt;\n&lt;span id=\"cb23-29\"&gt;&lt;a href=\"#cb23-29\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                )&lt;/span&gt;\n&lt;span id=\"cb23-30\"&gt;&lt;a href=\"#cb23-30\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                optimized_program &lt;span class=\"op\"&gt;=&lt;/span&gt; teleprompter.&lt;span class=\"bu\"&gt;compile&lt;/span&gt;(&lt;/span&gt;\n&lt;span id=\"cb23-31\"&gt;&lt;a href=\"#cb23-31\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                    dspy.ChainOfThought(SolveTurnWithReasoning),&lt;/span&gt;\n&lt;span id=\"cb23-32\"&gt;&lt;a href=\"#cb23-32\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                    trainset&lt;span class=\"op\"&gt;=&lt;/span&gt;bootstrap_rs_random_easy_subset,&lt;/span&gt;\n&lt;span id=\"cb23-33\"&gt;&lt;a href=\"#cb23-33\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                )&lt;/span&gt;\n&lt;span id=\"cb23-34\"&gt;&lt;a href=\"#cb23-34\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                bootstrap_rs_easy_compiled_programs.append(optimized_program)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;div class=\"cell-output cell-output-stdout\"&gt;\n&lt;pre&gt;&lt;code&gt;Going to sample between 1 and 3 traces per predictor.\nWill attempt to bootstrap 5 candidate sets.\nAverage Metric: 45.00 / 70 (64.3%): 100%|██████████| 70/70 [00:00&lt;00:00, 87.74it/s] \n🏃 View run eval_0 at: http://localhost:5000/#/experiments/3/runs/fcce9b07d50e41609bc04c3d9c2235c7\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nNew best score: 64.29 for seed -3\nScores so far: [64.29]\nBest score so far: 64.29\n  0%|          | 0/70 [00:00&lt;?, ?it/s]Average Metric: 26.00 / 38 (68.4%):  53%|█████▎    | 37/70 [00:00&lt;00:00, 82.89it/s]Average Metric: 46.00 / 70 (65.7%): 100%|██████████| 70/70 [00:00&lt;00:00, 76.35it/s]\n🏃 View run eval_1 at: http://localhost:5000/#/experiments/3/runs/7575401319f442499f871ca8d849bfd1\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nNew best score: 65.71 for seed -2\nScores so far: [64.29, 65.71]\nBest score so far: 65.71\nBootstrapped 3 full traces after 6 examples for up to 1 rounds, amounting to 6 attempts.\nAverage Metric: 47.00 / 70 (67.1%): 100%|██████████| 70/70 [00:01&lt;00:00, 62.67it/s]\n🏃 View run eval_2 at: http://localhost:5000/#/experiments/3/runs/3406309f3f0a4041a580021eaf5eff13\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nNew best score: 67.14 for seed -1\nScores so far: [64.29, 65.71, 67.14]\nBest score so far: 67.14\nBootstrapped 2 full traces after 2 examples for up to 1 rounds, amounting to 2 attempts.\nAverage Metric: 48.00 / 70 (68.6%): 100%|██████████| 70/70 [00:01&lt;00:00, 52.08it/s]\n🏃 View run eval_3 at: http://localhost:5000/#/experiments/3/runs/8cad7a93fb494289a4d6691d5796f84e\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nNew best score: 68.57 for seed 0\nScores so far: [64.29, 65.71, 67.14, 68.57]\nBest score so far: 68.57\nBootstrapped 1 full traces after 1 examples for up to 1 rounds, amounting to 1 attempts.\nAverage Metric: 46.00 / 70 (65.7%): 100%|██████████| 70/70 [00:01&lt;00:00, 54.10it/s]\n🏃 View run eval_4 at: http://localhost:5000/#/experiments/3/runs/ab8c076e18394080bbf9634eeff7af35\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nScores so far: [64.29, 65.71, 67.14, 68.57, 65.71]\nBest score so far: 68.57\nBootstrapped 1 full traces after 1 examples for up to 1 rounds, amounting to 1 attempts.\nAverage Metric: 45.00 / 70 (64.3%): 100%|██████████| 70/70 [00:01&lt;00:00, 44.09it/s]\n🏃 View run eval_5 at: http://localhost:5000/#/experiments/3/runs/679c914720674946a877f4a6a91665ee\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nScores so far: [64.29, 65.71, 67.14, 68.57, 65.71, 64.29]\nBest score so far: 68.57\nBootstrapped 1 full traces after 1 examples for up to 1 rounds, amounting to 1 attempts.\nAverage Metric: 47.00 / 70 (67.1%): 100%|██████████| 70/70 [00:01&lt;00:00, 61.09it/s]\n🏃 View run eval_6 at: http://localhost:5000/#/experiments/3/runs/ab818ec11652430b9bd68e17dc197665\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nScores so far: [64.29, 65.71, 67.14, 68.57, 65.71, 64.29, 67.14]\nBest score so far: 68.57\nBootstrapped 1 full traces after 1 examples for up to 1 rounds, amounting to 1 attempts.\nAverage Metric: 51.00 / 70 (72.9%): 100%|██████████| 70/70 [00:01&lt;00:00, 51.33it/s]\n🏃 View run eval_7 at: http://localhost:5000/#/experiments/3/runs/f9f17e61c1334a9ea6903ae3a1105fd8\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nNew best score: 72.86 for seed 4\nScores so far: [64.29, 65.71, 67.14, 68.57, 65.71, 64.29, 67.14, 72.86]\nBest score so far: 72.86\n8 candidate programs found.\n🏃 View run bootstrap_few_shot_rs_openai_o4-mini-2025-04-16 at: http://localhost:5000/#/experiments/3/runs/b08500752c9041d5acccbc261bd33931\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nGoing to sample between 1 and 3 traces per predictor.\nWill attempt to bootstrap 5 candidate sets.\n  0%|          | 0/70 [00:00&lt;?, ?it/s]Average Metric: 43.00 / 70 (61.4%): 100%|██████████| 70/70 [00:01&lt;00:00, 48.03it/s]\n🏃 View run eval_0 at: http://localhost:5000/#/experiments/3/runs/578a2f04172f4ecbb41d04350201b2d5\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nNew best score: 61.43 for seed -3\nScores so far: [61.43]\nBest score so far: 61.43\n  0%|          | 0/70 [00:00&lt;?, ?it/s]Average Metric: 29.00 / 42 (69.0%):  59%|█████▊    | 41/70 [00:01&lt;00:00, 32.19it/s]Average Metric: 35.00 / 51 (68.6%):  71%|███████▏  | 50/70 [00:01&lt;00:00, 42.39it/s]Average Metric: 47.00 / 70 (67.1%): 100%|██████████| 70/70 [00:01&lt;00:00, 43.35it/s]\n🏃 View run eval_1 at: http://localhost:5000/#/experiments/3/runs/cf868ddb4c5945149422186e878e4ee8\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nNew best score: 67.14 for seed -2\nScores so far: [61.43, 67.14]\nBest score so far: 67.14\nBootstrapped 3 full traces after 6 examples for up to 1 rounds, amounting to 6 attempts.\nAverage Metric: 46.00 / 70 (65.7%): 100%|██████████| 70/70 [00:01&lt;00:00, 65.12it/s]\n🏃 View run eval_2 at: http://localhost:5000/#/experiments/3/runs/a83ba7facae34ee2b495fd0bcb478044\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nScores so far: [61.43, 67.14, 65.71]\nBest score so far: 67.14\nBootstrapped 2 full traces after 2 examples for up to 1 rounds, amounting to 2 attempts.\nAverage Metric: 46.00 / 70 (65.7%): 100%|██████████| 70/70 [00:01&lt;00:00, 36.63it/s]\n🏃 View run eval_3 at: http://localhost:5000/#/experiments/3/runs/343b2f8e893044da9a9bee74f6be8853\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nScores so far: [61.43, 67.14, 65.71, 65.71]\nBest score so far: 67.14\nBootstrapped 1 full traces after 1 examples for up to 1 rounds, amounting to 1 attempts.\nAverage Metric: 45.00 / 70 (64.3%): 100%|██████████| 70/70 [00:01&lt;00:00, 37.96it/s]\n🏃 View run eval_4 at: http://localhost:5000/#/experiments/3/runs/3ad1f0eea05b4d7b88e7c47e2c0c29ab\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nScores so far: [61.43, 67.14, 65.71, 65.71, 64.29]\nBest score so far: 67.14\nBootstrapped 1 full traces after 1 examples for up to 1 rounds, amounting to 1 attempts.\nAverage Metric: 47.00 / 70 (67.1%): 100%|██████████| 70/70 [00:01&lt;00:00, 35.34it/s]\n🏃 View run eval_5 at: http://localhost:5000/#/experiments/3/runs/29b7cf7738bc47d89e81309a65595be0\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nScores so far: [61.43, 67.14, 65.71, 65.71, 64.29, 67.14]\nBest score so far: 67.14\nBootstrapped 1 full traces after 1 examples for up to 1 rounds, amounting to 1 attempts.\nAverage Metric: 48.00 / 70 (68.6%): 100%|██████████| 70/70 [00:02&lt;00:00, 31.53it/s]\n🏃 View run eval_6 at: http://localhost:5000/#/experiments/3/runs/d3a6322d0555421784dbb34087099455\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nNew best score: 68.57 for seed 3\nScores so far: [61.43, 67.14, 65.71, 65.71, 64.29, 67.14, 68.57]\nBest score so far: 68.57\nBootstrapped 1 full traces after 1 examples for up to 1 rounds, amounting to 1 attempts.\nAverage Metric: 60.00 / 70 (85.7%): 100%|██████████| 70/70 [00:02&lt;00:00, 28.22it/s] \n🏃 View run eval_7 at: http://localhost:5000/#/experiments/3/runs/93c1cafdbb6b440699788970eb6ffa88\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nNew best score: 85.71 for seed 4\nScores so far: [61.43, 67.14, 65.71, 65.71, 64.29, 67.14, 68.57, 85.71]\nBest score so far: 85.71\n8 candidate programs found.\n🏃 View run bootstrap_few_shot_rs_gemini_gemini-2_5-flash at: http://localhost:5000/#/experiments/3/runs/621ba195ed244875a4370e2050418a06\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nGoing to sample between 1 and 3 traces per predictor.\nWill attempt to bootstrap 5 candidate sets.\n  0%|          | 0/70 [00:00&lt;?, ?it/s]Average Metric: 22.00 / 29 (75.9%):  40%|████      | 28/70 [00:00&lt;00:00, 71.01it/s]Average Metric: 36.00 / 49 (73.5%):  69%|██████▊   | 48/70 [00:01&lt;00:00, 69.84it/s]Average Metric: 52.00 / 70 (74.3%): 100%|██████████| 70/70 [00:01&lt;00:00, 37.98it/s]\n🏃 View run eval_0 at: http://localhost:5000/#/experiments/3/runs/377a453f2e0745e38fc89508f7ab1d26\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nNew best score: 74.29 for seed -3\nScores so far: [74.29]\nBest score so far: 74.29\n  0%|          | 0/70 [00:00&lt;?, ?it/s]Average Metric: 1.00 / 4 (25.0%):   4%|▍         | 3/70 [00:00&lt;00:17,  3.91it/s] Average Metric: 5.00 / 8 (62.5%):  10%|█         | 7/70 [00:00&lt;00:16,  3.91it/s]Average Metric: 13.00 / 16 (81.2%):  23%|██▎       | 16/70 [00:00&lt;00:01, 39.80it/s]Average Metric: 30.00 / 41 (73.2%):  57%|█████▋    | 40/70 [00:01&lt;00:01, 17.35it/s]Average Metric: 33.00 / 44 (75.0%):  61%|██████▏   | 43/70 [00:01&lt;00:01, 17.35it/s]Average Metric: 52.00 / 70 (74.3%): 100%|██████████| 70/70 [00:01&lt;00:00, 36.77it/s]\n🏃 View run eval_1 at: http://localhost:5000/#/experiments/3/runs/d9e37616e88748d8890de6056370f801\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nScores so far: [74.29, 74.29]\nBest score so far: 74.29\nBootstrapped 3 full traces after 4 examples for up to 1 rounds, amounting to 4 attempts.\nAverage Metric: 52.00 / 70 (74.3%): 100%|██████████| 70/70 [00:01&lt;00:00, 35.80it/s]\n🏃 View run eval_2 at: http://localhost:5000/#/experiments/3/runs/7bfc22c9728f4862931e5bb8bf4d379e\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nScores so far: [74.29, 74.29, 74.29]\nBest score so far: 74.29\nBootstrapped 2 full traces after 2 examples for up to 1 rounds, amounting to 2 attempts.\nAverage Metric: 43.00 / 53 (81.1%):  76%|███████▌  | 53/70 [00:22&lt;00:09,  1.74it/s] Average Metric: 50.00 / 68 (73.5%):  97%|█████████▋| 68/70 [00:55&lt;00:04,  2.16s/it]Average Metric: 51.00 / 70 (72.9%): 100%|██████████| 70/70 [01:56&lt;00:00,  1.66s/it]\n🏃 View run eval_3 at: http://localhost:5000/#/experiments/3/runs/7cc38c776c8c40ad983a78690454b768\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nScores so far: [74.29, 74.29, 74.29, 72.86]\nBest score so far: 74.29\nBootstrapped 1 full traces after 1 examples for up to 1 rounds, amounting to 1 attempts.\nAverage Metric: 34.00 / 37 (91.9%):  53%|█████▎    | 37/70 [00:16&lt;00:15,  2.18it/s] Average Metric: 49.00 / 62 (79.0%):  89%|████████▊ | 62/70 [00:33&lt;00:07,  1.03it/s]Average Metric: 52.00 / 70 (74.3%): 100%|██████████| 70/70 [00:52&lt;00:00,  1.34it/s]\n🏃 View run eval_4 at: http://localhost:5000/#/experiments/3/runs/3d4799840b5145f38c55cd04a510b4eb\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nScores so far: [74.29, 74.29, 74.29, 72.86, 74.29]\nBest score so far: 74.29\nBootstrapped 1 full traces after 1 examples for up to 1 rounds, amounting to 1 attempts.\nAverage Metric: 53.00 / 70 (75.7%): 100%|██████████| 70/70 [00:49&lt;00:00,  1.41it/s] \n🏃 View run eval_5 at: http://localhost:5000/#/experiments/3/runs/826af9f09c4e4410b2b21424430e67f1\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nNew best score: 75.71 for seed 2\nScores so far: [74.29, 74.29, 74.29, 72.86, 74.29, 75.71]\nBest score so far: 75.71\nBootstrapped 1 full traces after 1 examples for up to 1 rounds, amounting to 1 attempts.\nAverage Metric: 44.00 / 48 (91.7%):  69%|██████▊   | 48/70 [00:18&lt;00:08,  2.53it/s] Average Metric: 53.00 / 70 (75.7%): 100%|██████████| 70/70 [01:02&lt;00:00,  1.13it/s]\n🏃 View run eval_6 at: http://localhost:5000/#/experiments/3/runs/a029e23cfbe14b92a2ba6ce26146642b\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nScores so far: [74.29, 74.29, 74.29, 72.86, 74.29, 75.71, 75.71]\nBest score so far: 75.71\nBootstrapped 1 full traces after 1 examples for up to 1 rounds, amounting to 1 attempts.\nAverage Metric: 56.00 / 70 (80.0%): 100%|██████████| 70/70 [00:44&lt;00:00,  1.58it/s] \n🏃 View run eval_7 at: http://localhost:5000/#/experiments/3/runs/861f0c753b754e6a8eb3372287edd9bc\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nNew best score: 80.0 for seed 4\nScores so far: [74.29, 74.29, 74.29, 72.86, 74.29, 75.71, 75.71, 80.0]\nBest score so far: 80.0\n8 candidate programs found.\n🏃 View run bootstrap_few_shot_rs_openai_o3-2025-04-16 at: http://localhost:5000/#/experiments/3/runs/8576b067ea60468ebc37cda1a17be1dc\n🧪 View experiment at: http://localhost:5000/#/experiments/3\n🏃 View run bootstrap_few_shot_rs_easy at: http://localhost:5000/#/experiments/3/runs/b5f08a070a634f74888fb8c42f24bfa3\n🧪 View experiment at: http://localhost:5000/#/experiments/3&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-stderr\"&gt;\n&lt;pre&gt;&lt;code&gt;2025/07/29 01:03:08 INFO dspy.evaluate.evaluate: Average Metric: 45.0 / 70 (64.3%)\n2025/07/29 01:03:08 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:03:08 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:03:09 INFO dspy.evaluate.evaluate: Average Metric: 46.0 / 70 (65.7%)\n  4%|▍         | 3/70 [00:00&lt;00:04, 13.83it/s]2025/07/29 01:03:09 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n  9%|▊         | 6/70 [00:00&lt;00:03, 16.05it/s]\n2025/07/29 01:03:11 INFO dspy.evaluate.evaluate: Average Metric: 47.0 / 70 (67.1%)\n  3%|▎         | 2/70 [00:00&lt;00:02, 32.62it/s]\n2025/07/29 01:03:12 INFO dspy.evaluate.evaluate: Average Metric: 48.0 / 70 (68.6%)\n  1%|▏         | 1/70 [00:00&lt;00:03, 18.44it/s]\n2025/07/29 01:03:15 INFO dspy.evaluate.evaluate: Average Metric: 46.0 / 70 (65.7%)\n  1%|▏         | 1/70 [00:00&lt;00:02, 24.59it/s]\n2025/07/29 01:03:17 INFO dspy.evaluate.evaluate: Average Metric: 45.0 / 70 (64.3%)\n  1%|▏         | 1/70 [00:00&lt;00:12,  5.70it/s]\n2025/07/29 01:03:19 INFO dspy.evaluate.evaluate: Average Metric: 47.0 / 70 (67.1%)\n  1%|▏         | 1/70 [00:00&lt;00:02, 28.38it/s]\n2025/07/29 01:03:21 INFO dspy.evaluate.evaluate: Average Metric: 51.0 / 70 (72.9%)\n2025/07/29 01:03:21 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:03:22 INFO dspy.evaluate.evaluate: Average Metric: 43.0 / 70 (61.4%)\n2025/07/29 01:03:23 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:03:24 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:03:24 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:03:24 INFO dspy.evaluate.evaluate: Average Metric: 47.0 / 70 (67.1%)\n  9%|▊         | 6/70 [00:00&lt;00:03, 16.98it/s]\n2025/07/29 01:03:27 INFO dspy.evaluate.evaluate: Average Metric: 46.0 / 70 (65.7%)\n  3%|▎         | 2/70 [00:00&lt;00:03, 21.93it/s]\n2025/07/29 01:03:30 INFO dspy.evaluate.evaluate: Average Metric: 46.0 / 70 (65.7%)\n  1%|▏         | 1/70 [00:00&lt;00:02, 28.87it/s]\n2025/07/29 01:03:32 INFO dspy.evaluate.evaluate: Average Metric: 45.0 / 70 (64.3%)\n  1%|▏         | 1/70 [00:00&lt;00:02, 25.21it/s]\n2025/07/29 01:03:34 INFO dspy.evaluate.evaluate: Average Metric: 47.0 / 70 (67.1%)\n  1%|▏         | 1/70 [00:00&lt;00:10,  6.34it/s]\n2025/07/29 01:03:38 INFO dspy.evaluate.evaluate: Average Metric: 48.0 / 70 (68.6%)\n  1%|▏         | 1/70 [00:00&lt;00:05, 13.59it/s]\n2025/07/29 01:03:41 INFO dspy.evaluate.evaluate: Average Metric: 60.0 / 70 (85.7%)\n2025/07/29 01:03:42 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:03:42 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:03:42 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:03:43 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:03:43 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:03:44 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:03:44 INFO dspy.evaluate.evaluate: Average Metric: 52.0 / 70 (74.3%)\n2025/07/29 01:03:44 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:03:45 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:03:45 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:03:45 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:03:46 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:03:46 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:03:46 INFO dspy.evaluate.evaluate: Average Metric: 52.0 / 70 (74.3%)\n  6%|▌         | 4/70 [00:00&lt;00:04, 15.37it/s]\n2025/07/29 01:03:49 INFO dspy.evaluate.evaluate: Average Metric: 52.0 / 70 (74.3%)\n  3%|▎         | 2/70 [00:12&lt;06:55,  6.11s/it]\n2025/07/29 01:04:25 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:05:26 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:05:59 INFO dspy.evaluate.evaluate: Average Metric: 51.0 / 70 (72.9%)\n  1%|▏         | 1/70 [00:05&lt;06:47,  5.90s/it]\n2025/07/29 01:06:22 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:06:40 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:06:57 INFO dspy.evaluate.evaluate: Average Metric: 52.0 / 70 (74.3%)\n  1%|▏         | 1/70 [00:03&lt;04:04,  3.55s/it]\n2025/07/29 01:07:51 INFO dspy.evaluate.evaluate: Average Metric: 53.0 / 70 (75.7%)\n  1%|▏         | 1/70 [00:05&lt;06:22,  5.54s/it]\n2025/07/29 01:08:16 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:08:59 INFO dspy.evaluate.evaluate: Average Metric: 53.0 / 70 (75.7%)\n  1%|▏         | 1/70 [00:04&lt;04:43,  4.11s/it]\n2025/07/29 01:09:48 INFO dspy.evaluate.evaluate: Average Metric: 56.0 / 70 (80.0%)&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"9aa596c147174804958bfd90f9e69998\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"2fac575b2f714ab3a5f079b5b8c068e7\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"9352e516d8b848579ba0d22b01c35fb2\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"dd46b6737ed8418484d64e9cef39a594\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"19d7fe20fa6b4fb7bb39768109a6e96f\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"d9ac51afacd244629a94d3d29cc78260\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"71a5a9849439471b90be1451f4ed6d8c\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"795ab895387b4c0e9eac571ee453ac88\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"650c0bd2cb2a4041bdf156931c25130c\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"f16c05df32404d64b8a8431d48d39234\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"0479a155634a4c4ba4d92bebca0b0727\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"ea69ff24378d45a3998851b5aa0962d4\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"8b8c7a6497d04213a381c037724d4895\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"bc397a6b03924336bbc43a1bd839784c\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"d43544d6f72f40dbaae08ad6b18cb0bd\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"4e7c85dbd6f64f61a359ea5a37c40ed0\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"6913487151e04ab7a89037c30da2cfd7\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"cf6a3e6ba2a646a093455efcf2d34a65\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"102094c059e84577861cd1271f22e414\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"d5351ffa3e234f7f92c3f1932b3dd438\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"d3e11c2f024d4ec090827c250d4258ca\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"3cff124f59634e5b9279882b0501180a\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"043eb11fea0a462684dac9bbb48f4f03\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"e694033bfb9e4689bd6c07fc39d0801c\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"db37866855a049b88bb7e4c9dd3597c6\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"93fd5af0c6644afc978088bc68e1ee83\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"5aa8485009e94f079807723d8dbc5ab2\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"e5cce25e5c7941d6bf6a39bcd3c76bf8\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"f90ceb161810483ab7c0fb2a38dd46e4\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"4d26bd076e4845b193dfa48d40f9e51b\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"2bceaac3cdcd48a0b05bc0f5e0c884a5\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"ab959aa00cf145d0984217e3c543fcd0\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"7a19b204ef7443e3964026a61386dbf3\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"0944c174ba5d4b7f888c2c78316eeb67\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"f58455aed23543369dda147cdcc46ee6\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"6f9faa0b381e48b4a3239439f9b5c8a0\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"14d1357491a342a6b3cbb1a778076b69\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"3146876614a146569534ee1e0cef7f86\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"36e21760751a482c874fbc57b485e178\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n\n&lt;div&gt;\n  &lt;style scoped&gt;\n  button {\n    border: none;\n    border-radius: 4px;\n    background-color: rgb(34, 114, 180);\n    font-family: -apple-system, \"system-ui\", \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial;\n    font-size: 13px;\n    color: white;\n    margin-top: 8px;\n    margin-bottom: 8px;\n    padding: 8px 16px;\n    cursor: pointer;\n  }\n  button:hover {\n    background-color: rgb(66, 153, 224);\n  }\n  &lt;/style&gt;\n  &lt;button\n    onclick=\"\n        const display = this.nextElementSibling.style.display;\n        const isCollapsed = display === 'none';\n        this.nextElementSibling.style.display = isCollapsed ? null : 'none';\n\n        const verb = isCollapsed ? 'Collapse' : 'Expand';\n        this.innerText = `${verb} MLflow Trace`;\n    \"\n  &gt;Collapse MLflow Trace&lt;/button&gt;\n  &lt;iframe\n    id=\"trace-renderer\"\n    style=\"width: 100%; height: 500px; border: none; resize: vertical;\"\n    src=\"http://localhost:5000/static-files/lib/notebook-trace-renderer/index.html?trace_id=bc6ccffd18824246934194a85933d3fd&amp;experiment_id=3&amp;trace_id=e37a0ba10d0543bb908e397933697d6d&amp;experiment_id=3&amp;trace_id=b37797a381b44f7eb13e1f42eca0567c&amp;experiment_id=3&amp;trace_id=9a18ced106784364ae12831ce45a8748&amp;experiment_id=3&amp;trace_id=3d7bb8edeb78492bac5473d6e52c4846&amp;experiment_id=3&amp;trace_id=d42d241ebb9e40b1affe006598cae983&amp;experiment_id=3&amp;trace_id=344ea0c049b946e8b780a9e02d720688&amp;experiment_id=3&amp;trace_id=4cac19ef64574b50b38d4baf81b360d5&amp;experiment_id=3&amp;trace_id=c4ca77588233486e9d234e95aa976329&amp;experiment_id=3&amp;trace_id=c9921423c3aa4f16933885eb15242313&amp;experiment_id=3&amp;version=3.1.4\"\n  /&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;From the above, it looks like GPT-4.1 gives an score of 80% on the validation set, WITHOUT ANY PROMPT ENGINEERING/FEW-SHOT PROMPTING. This is great!&lt;/p&gt;\n&lt;p&gt;As mentioned earlier, due to cost and time constraints, we want to first narrow down the list of models we want to test on the harder stages.&lt;/p&gt;\n&lt;p&gt;As a recap, our implementation strategy here will be as follows: instead of just using the performance of the models on the “easy” validation set, we will use a combination of two datasets:&lt;/p&gt;\n&lt;ol type=\"1\"&gt;\n&lt;li&gt;Gate - 50 Easy dialogs, teacher - forced. Drop model if Turn-EM &lt; 0.55.&lt;/li&gt;\n&lt;li&gt;Probe - 30-dialog mixed micro-set (15 Medium + 15 Hard, closed loop). Keep model only if Final-Turn EM ≥ 0.35, Dialogue-mean EM ≥ 0.35&lt;/li&gt;\n&lt;/ol&gt;\n&lt;p&gt;We will now create our “gate” and “probe” datasets.&lt;/p&gt;\n&lt;div id=\"cell-33\" class=\"cell\" data-execution_count=\"420\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb26\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb26-1\"&gt;&lt;a href=\"#cb26-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;gate_ids &lt;span class=\"op\"&gt;=&lt;/span&gt; easy_valid_ids.sample(&lt;span class=\"dv\"&gt;50&lt;/span&gt;, random_state&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"dv\"&gt;42&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb26-2\"&gt;&lt;a href=\"#cb26-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;probe_medium_ids &lt;span class=\"op\"&gt;=&lt;/span&gt; medium_valid_ids.sample(&lt;span class=\"dv\"&gt;15&lt;/span&gt;, random_state&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"dv\"&gt;42&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb26-3\"&gt;&lt;a href=\"#cb26-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;probe_hard_ids &lt;span class=\"op\"&gt;=&lt;/span&gt; hard_valid_ids.sample(&lt;span class=\"dv\"&gt;30&lt;/span&gt;, random_state&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"dv\"&gt;42&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb26-4\"&gt;&lt;a href=\"#cb26-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb26-5\"&gt;&lt;a href=\"#cb26-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;gate_df &lt;span class=\"op\"&gt;=&lt;/span&gt; easy_valid_df[easy_valid_df[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;].isin(gate_ids[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;])].copy()&lt;/span&gt;\n&lt;span id=\"cb26-6\"&gt;&lt;a href=\"#cb26-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;probe_df &lt;span class=\"op\"&gt;=&lt;/span&gt; pd.concat(&lt;/span&gt;\n&lt;span id=\"cb26-7\"&gt;&lt;a href=\"#cb26-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    [&lt;/span&gt;\n&lt;span id=\"cb26-8\"&gt;&lt;a href=\"#cb26-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        medium_valid_df[medium_valid_df[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;].isin(probe_medium_ids[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;])],&lt;/span&gt;\n&lt;span id=\"cb26-9\"&gt;&lt;a href=\"#cb26-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        hard_valid_df[hard_valid_df[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;].isin(probe_hard_ids[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;])],&lt;/span&gt;\n&lt;span id=\"cb26-10\"&gt;&lt;a href=\"#cb26-10\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    ]&lt;/span&gt;\n&lt;span id=\"cb26-11\"&gt;&lt;a href=\"#cb26-11\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;).copy()&lt;/span&gt;\n&lt;span id=\"cb26-12\"&gt;&lt;a href=\"#cb26-12\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb26-13\"&gt;&lt;a href=\"#cb26-13\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"cf\"&gt;assert&lt;/span&gt; gate_df.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;] &lt;span class=\"op\"&gt;==&lt;/span&gt; gate_ids.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;]&lt;/span&gt;\n&lt;span id=\"cb26-14\"&gt;&lt;a href=\"#cb26-14\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"cf\"&gt;assert&lt;/span&gt; probe_df.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;] &lt;span class=\"op\"&gt;==&lt;/span&gt; probe_medium_ids.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;] &lt;span class=\"op\"&gt;+&lt;/span&gt; probe_hard_ids.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;]&lt;/span&gt;\n&lt;span id=\"cb26-15\"&gt;&lt;a href=\"#cb26-15\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb26-16\"&gt;&lt;a href=\"#cb26-16\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;gate_examples &lt;span class=\"op\"&gt;=&lt;/span&gt; to_turn_examples(gate_df, history_mode&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;teacher&quot;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb26-17\"&gt;&lt;a href=\"#cb26-17\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;probe_examples &lt;span class=\"op\"&gt;=&lt;/span&gt; to_turn_examples(probe_df, history_mode&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;teacher&quot;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;/div&gt;\n&lt;p&gt;We will also save the &lt;code&gt;gate&lt;/code&gt; and &lt;code&gt;probe&lt;/code&gt; dataset ids, to compare performance of different models on them.&lt;/p&gt;\n&lt;div id=\"cell-35\" class=\"cell\" data-execution_count=\"500\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb27\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb27-1\"&gt;&lt;a href=\"#cb27-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;import&lt;/span&gt; os&lt;/span&gt;\n&lt;span id=\"cb27-2\"&gt;&lt;a href=\"#cb27-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb27-3\"&gt;&lt;a href=\"#cb27-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;os.makedirs(&lt;span class=\"st\"&gt;&quot;validation_datasets&quot;&lt;/span&gt;, exist_ok&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb27-4\"&gt;&lt;a href=\"#cb27-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb27-5\"&gt;&lt;a href=\"#cb27-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;gate_ids.to_json(&lt;span class=\"st\"&gt;&quot;validation_datasets/gate_ids.jsonl&quot;&lt;/span&gt;, orient&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;records&quot;&lt;/span&gt;, lines&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb27-6\"&gt;&lt;a href=\"#cb27-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;probe_medium_ids.to_json(&lt;/span&gt;\n&lt;span id=\"cb27-7\"&gt;&lt;a href=\"#cb27-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"st\"&gt;&quot;validation_datasets/probe_medium_ids.jsonl&quot;&lt;/span&gt;, orient&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;records&quot;&lt;/span&gt;, lines&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb27-8\"&gt;&lt;a href=\"#cb27-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;)&lt;/span&gt;\n&lt;span id=\"cb27-9\"&gt;&lt;a href=\"#cb27-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;probe_hard_ids.to_json(&lt;/span&gt;\n&lt;span id=\"cb27-10\"&gt;&lt;a href=\"#cb27-10\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"st\"&gt;&quot;validation_datasets/probe_hard_ids.jsonl&quot;&lt;/span&gt;, orient&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;records&quot;&lt;/span&gt;, lines&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb27-11\"&gt;&lt;a href=\"#cb27-11\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-36\" class=\"cell\" data-execution_count=\"421\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb28\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb28-1\"&gt;&lt;a href=\"#cb28-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;gate_examples[&lt;span class=\"dv\"&gt;0&lt;/span&gt;].toDict()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;div class=\"cell-output cell-output-display\" data-execution_count=\"421\"&gt;\n&lt;pre&gt;&lt;code&gt;{&#39;conversation_context&#39;: &#39;None&#39;,\n &#39;evidence_snippets&#39;: &quot;[PRE]\\nentergy corporation and subsidiaries management&#39;s financial discussion and analysis refer to 201cselected financial data - five-year comparison of entergy corporation and subsidiaries 201d which accompanies entergy corporation 2019s financial statements in this report for further information with respect to operating statistics . in november 2007 the board approved a plan to pursue a separation of entergy 2019s non-utility nuclear business from entergy through a spin-off of the business to entergy shareholders . in april 2010 , entergy announced that it planned to unwind the business infrastructure associated with the proposed spin-off transaction . as a result of the plan to unwind the business infrastructure , entergy recorded expenses in 2010 for the write-off of certain capitalized costs incurred in connection with the planned spin-off transaction . these costs are discussed in more detail below and throughout this section . net revenue utility following is an analysis of the change in net revenue comparing 2010 to 2009 . amount ( in millions ) .\\n[/PRE]\\n[POST]\\nthe volume/weather variance is primarily due to an increase of 8362 gwh , or 8% ( 8 % ) , in billed electricity usage in all retail sectors , including the effect on the residential sector of colder weather in the first quarter 2010 compared to 2009 and warmer weather in the second and third quarters 2010 compared to 2009 . the industrial sector reflected strong sales growth on continuing signs of economic recovery . the improvement in this sector was primarily driven by inventory restocking and strong exports with the chemicals , refining , and miscellaneous manufacturing sectors leading the improvement . the retail electric price variance is primarily due to : increases in the formula rate plan riders at entergy gulf states louisiana effective november 2009 , january 2010 , and september 2010 , at entergy louisiana effective november 2009 , and at entergy mississippi effective july 2009 ; a base rate increase at entergy arkansas effective july 2010 ; rate actions at entergy texas , including base rate increases effective in may and august 2010 ; a formula rate plan provision of $ 16.6 million recorded in the third quarter 2009 for refunds that were made to customers in accordance with settlements approved by the lpsc ; and the recovery in 2009 by entergy arkansas of 2008 extraordinary storm costs , as approved by the apsc , which ceased in january 2010 . the recovery of storm costs is offset in other operation and maintenance expenses . see note 2 to the financial statements for further discussion of the proceedings referred to above. .\\n[/POST]&quot;,\n &#39;table&#39;: &#39;| Row | 2009 net revenue | volume/weather | retail electric price | provision for regulatory proceedings | rough production cost equalization | ano decommissioning trust | fuel recovery | other | 2010 net revenue |\\n|---|---|---|---|---|---|---|---|---|---|\\n| amount ( in millions ) | 4694.0 | 231.0 | 137.0 | 26.0 | 19.0 | -24.0 | -44.0 | 12.0 | 5051.0 |&#39;,\n &#39;question&#39;: &#39;what was the difference in net revenue between 2009 and 2010?&#39;,\n &#39;id&#39;: &#39;Single_ETR/2011/page_22.pdf-3&#39;,\n &#39;doc_pre_text&#39;: &quot;entergy corporation and subsidiaries management&#39;s financial discussion and analysis refer to 201cselected financial data - five-year comparison of entergy corporation and subsidiaries 201d which accompanies entergy corporation 2019s financial statements in this report for further information with respect to operating statistics . in november 2007 the board approved a plan to pursue a separation of entergy 2019s non-utility nuclear business from entergy through a spin-off of the business to entergy shareholders . in april 2010 , entergy announced that it planned to unwind the business infrastructure associated with the proposed spin-off transaction . as a result of the plan to unwind the business infrastructure , entergy recorded expenses in 2010 for the write-off of certain capitalized costs incurred in connection with the planned spin-off transaction . these costs are discussed in more detail below and throughout this section . net revenue utility following is an analysis of the change in net revenue comparing 2010 to 2009 . amount ( in millions ) .&quot;,\n &#39;doc_post_text&#39;: &#39;the volume/weather variance is primarily due to an increase of 8362 gwh , or 8% ( 8 % ) , in billed electricity usage in all retail sectors , including the effect on the residential sector of colder weather in the first quarter 2010 compared to 2009 and warmer weather in the second and third quarters 2010 compared to 2009 . the industrial sector reflected strong sales growth on continuing signs of economic recovery . the improvement in this sector was primarily driven by inventory restocking and strong exports with the chemicals , refining , and miscellaneous manufacturing sectors leading the improvement . the retail electric price variance is primarily due to : increases in the formula rate plan riders at entergy gulf states louisiana effective november 2009 , january 2010 , and september 2010 , at entergy louisiana effective november 2009 , and at entergy mississippi effective july 2009 ; a base rate increase at entergy arkansas effective july 2010 ; rate actions at entergy texas , including base rate increases effective in may and august 2010 ; a formula rate plan provision of $ 16.6 million recorded in the third quarter 2009 for refunds that were made to customers in accordance with settlements approved by the lpsc ; and the recovery in 2009 by entergy arkansas of 2008 extraordinary storm costs , as approved by the apsc , which ceased in january 2010 . the recovery of storm costs is offset in other operation and maintenance expenses . see note 2 to the financial statements for further discussion of the proceedings referred to above. .&#39;,\n &#39;doc_table&#39;: {&#39;amount ( in millions )&#39;: {&#39;2009 net revenue&#39;: 4694.0,\n   &#39;volume/weather&#39;: 231.0,\n   &#39;retail electric price&#39;: 137.0,\n   &#39;provision for regulatory proceedings&#39;: 26.0,\n   &#39;rough production cost equalization&#39;: 19.0,\n   &#39;ano decommissioning trust&#39;: -24.0,\n   &#39;fuel recovery&#39;: -44.0,\n   &#39;other&#39;: 12.0,\n   &#39;2010 net revenue&#39;: 5051.0}},\n &#39;dialogue_conv_questions&#39;: [&#39;what was the difference in net revenue between 2009 and 2010?&#39;,\n  &#39;and the specific value for 2009 again?&#39;,\n  &#39;so what was the percentage change during this time?&#39;],\n &#39;dialogue_conv_answers&#39;: [&#39;357&#39;, &#39;4694&#39;, &#39;7.61%&#39;],\n &#39;dialogue_turn_program&#39;: [&#39;subtract(5051, 4694)&#39;,\n  &#39;4694&#39;,\n  &#39;subtract(5051, 4694), divide(#0, 4694)&#39;],\n &#39;dialogue_executed_answers&#39;: [357.0, 4694.0, 0.07605],\n &#39;dialogue_qa_split&#39;: [False, False, False],\n &#39;features_num_dialogue_turns&#39;: 3,\n &#39;features_has_type2_question&#39;: False,\n &#39;features_has_duplicate_columns&#39;: False,\n &#39;features_has_non_numeric_values&#39;: False,\n &#39;answer&#39;: 357.0}&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-37\" class=\"cell\" data-execution_count=\"422\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb30\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb30-1\"&gt;&lt;a href=\"#cb30-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;gate_examples[&lt;span class=\"dv\"&gt;0&lt;/span&gt;].inputs().toDict()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;div class=\"cell-output cell-output-display\" data-execution_count=\"422\"&gt;\n&lt;pre&gt;&lt;code&gt;{&#39;conversation_context&#39;: &#39;None&#39;,\n &#39;evidence_snippets&#39;: &quot;[PRE]\\nentergy corporation and subsidiaries management&#39;s financial discussion and analysis refer to 201cselected financial data - five-year comparison of entergy corporation and subsidiaries 201d which accompanies entergy corporation 2019s financial statements in this report for further information with respect to operating statistics . in november 2007 the board approved a plan to pursue a separation of entergy 2019s non-utility nuclear business from entergy through a spin-off of the business to entergy shareholders . in april 2010 , entergy announced that it planned to unwind the business infrastructure associated with the proposed spin-off transaction . as a result of the plan to unwind the business infrastructure , entergy recorded expenses in 2010 for the write-off of certain capitalized costs incurred in connection with the planned spin-off transaction . these costs are discussed in more detail below and throughout this section . net revenue utility following is an analysis of the change in net revenue comparing 2010 to 2009 . amount ( in millions ) .\\n[/PRE]\\n[POST]\\nthe volume/weather variance is primarily due to an increase of 8362 gwh , or 8% ( 8 % ) , in billed electricity usage in all retail sectors , including the effect on the residential sector of colder weather in the first quarter 2010 compared to 2009 and warmer weather in the second and third quarters 2010 compared to 2009 . the industrial sector reflected strong sales growth on continuing signs of economic recovery . the improvement in this sector was primarily driven by inventory restocking and strong exports with the chemicals , refining , and miscellaneous manufacturing sectors leading the improvement . the retail electric price variance is primarily due to : increases in the formula rate plan riders at entergy gulf states louisiana effective november 2009 , january 2010 , and september 2010 , at entergy louisiana effective november 2009 , and at entergy mississippi effective july 2009 ; a base rate increase at entergy arkansas effective july 2010 ; rate actions at entergy texas , including base rate increases effective in may and august 2010 ; a formula rate plan provision of $ 16.6 million recorded in the third quarter 2009 for refunds that were made to customers in accordance with settlements approved by the lpsc ; and the recovery in 2009 by entergy arkansas of 2008 extraordinary storm costs , as approved by the apsc , which ceased in january 2010 . the recovery of storm costs is offset in other operation and maintenance expenses . see note 2 to the financial statements for further discussion of the proceedings referred to above. .\\n[/POST]&quot;,\n &#39;table&#39;: &#39;| Row | 2009 net revenue | volume/weather | retail electric price | provision for regulatory proceedings | rough production cost equalization | ano decommissioning trust | fuel recovery | other | 2010 net revenue |\\n|---|---|---|---|---|---|---|---|---|---|\\n| amount ( in millions ) | 4694.0 | 231.0 | 137.0 | 26.0 | 19.0 | -24.0 | -44.0 | 12.0 | 5051.0 |&#39;,\n &#39;question&#39;: &#39;what was the difference in net revenue between 2009 and 2010?&#39;}&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;section id=\"gate-dataset-results\" class=\"level3\"&gt;\n&lt;h3&gt;Gate Dataset Results&lt;/h3&gt;\n&lt;div id=\"cell-39\" class=\"cell\" data-execution_count=\"423\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb32\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb32-1\"&gt;&lt;a href=\"#cb32-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;import&lt;/span&gt; re&lt;/span&gt;\n&lt;span id=\"cb32-2\"&gt;&lt;a href=\"#cb32-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb32-3\"&gt;&lt;a href=\"#cb32-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;from&lt;/span&gt; dspy.evaluate &lt;span class=\"im\"&gt;import&lt;/span&gt; Evaluate&lt;/span&gt;\n&lt;span id=\"cb32-4\"&gt;&lt;a href=\"#cb32-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb32-5\"&gt;&lt;a href=\"#cb32-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;results &lt;span class=\"op\"&gt;=&lt;/span&gt; []&lt;/span&gt;\n&lt;span id=\"cb32-6\"&gt;&lt;a href=\"#cb32-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb32-7\"&gt;&lt;a href=\"#cb32-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"cf\"&gt;with&lt;/span&gt; mlflow.start_run(run_name&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;gate_dataset_results&quot;&lt;/span&gt;) &lt;span class=\"im\"&gt;as&lt;/span&gt; parent_ctx:&lt;/span&gt;\n&lt;span id=\"cb32-8\"&gt;&lt;a href=\"#cb32-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;for&lt;/span&gt; candidate_lm &lt;span class=\"kw\"&gt;in&lt;/span&gt; llms:&lt;/span&gt;\n&lt;span id=\"cb32-9\"&gt;&lt;a href=\"#cb32-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        run_name &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"ss\"&gt;f&quot;gate_&lt;/span&gt;&lt;span class=\"sc\"&gt;{&lt;/span&gt;candidate_lm&lt;span class=\"sc\"&gt;.&lt;/span&gt;model&lt;span class=\"sc\"&gt;.&lt;/span&gt;replace(&lt;span class=\"st\"&gt;&#39;/&#39;&lt;/span&gt;, &lt;span class=\"st\"&gt;&#39;_&#39;&lt;/span&gt;)&lt;span class=\"sc\"&gt;}&lt;/span&gt;&lt;span class=\"ss\"&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb32-10\"&gt;&lt;a href=\"#cb32-10\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        sanitized_run_name &lt;span class=\"op\"&gt;=&lt;/span&gt; re.sub(&lt;span class=\"vs\"&gt;r&quot;[^a-zA-Z0-9_\\-]&quot;&lt;/span&gt;, &lt;span class=\"st\"&gt;&quot;_&quot;&lt;/span&gt;, run_name)&lt;/span&gt;\n&lt;span id=\"cb32-11\"&gt;&lt;a href=\"#cb32-11\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;with&lt;/span&gt; mlflow.start_run(run_name&lt;span class=\"op\"&gt;=&lt;/span&gt;sanitized_run_name, nested&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;):&lt;/span&gt;\n&lt;span id=\"cb32-12\"&gt;&lt;a href=\"#cb32-12\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            current_evaluator &lt;span class=\"op\"&gt;=&lt;/span&gt; Evaluate(&lt;/span&gt;\n&lt;span id=\"cb32-13\"&gt;&lt;a href=\"#cb32-13\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                devset&lt;span class=\"op\"&gt;=&lt;/span&gt;gate_examples[:&lt;span class=\"dv\"&gt;10&lt;/span&gt;],&lt;/span&gt;\n&lt;span id=\"cb32-14\"&gt;&lt;a href=\"#cb32-14\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                num_threads&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"dv\"&gt;32&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb32-15\"&gt;&lt;a href=\"#cb32-15\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                display_progress&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb32-16\"&gt;&lt;a href=\"#cb32-16\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                &lt;span class=\"co\"&gt;# display_table=True,&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb32-17\"&gt;&lt;a href=\"#cb32-17\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                &lt;span class=\"co\"&gt;# provide_traceback=True,&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb32-18\"&gt;&lt;a href=\"#cb32-18\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                return_all_scores&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb32-19\"&gt;&lt;a href=\"#cb32-19\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                return_outputs&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb32-20\"&gt;&lt;a href=\"#cb32-20\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            )&lt;/span&gt;\n&lt;span id=\"cb32-21\"&gt;&lt;a href=\"#cb32-21\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            &lt;span class=\"cf\"&gt;with&lt;/span&gt; dspy.context(lm&lt;span class=\"op\"&gt;=&lt;/span&gt;candidate_lm) &lt;span class=\"im\"&gt;as&lt;/span&gt; ctx:&lt;/span&gt;\n&lt;span id=\"cb32-22\"&gt;&lt;a href=\"#cb32-22\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                current_result &lt;span class=\"op\"&gt;=&lt;/span&gt; current_evaluator(&lt;/span&gt;\n&lt;span id=\"cb32-23\"&gt;&lt;a href=\"#cb32-23\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                    TurnSolver(reasoning_lm&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;), metric&lt;span class=\"op\"&gt;=&lt;/span&gt;turn_em_metric&lt;/span&gt;\n&lt;span id=\"cb32-24\"&gt;&lt;a href=\"#cb32-24\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                )&lt;/span&gt;\n&lt;span id=\"cb32-25\"&gt;&lt;a href=\"#cb32-25\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                results.append(current_result)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;div class=\"cell-output cell-output-stdout\"&gt;\n&lt;pre&gt;&lt;code&gt;Average Metric: 8.00 / 10 (80.0%): 100%|██████████| 10/10 [00:00&lt;00:00, 65.65it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/502b5457f9db44339a5afce34d13d847\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_openai_gpt-4_1-2025-04-14 at: http://localhost:5000/#/experiments/1/runs/7e61e1f47f4e408c8cec59ee1bf9c0dd\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 5.00 / 10 (50.0%): 100%|██████████| 10/10 [00:00&lt;00:00, 58.97it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/1b4ea94ac47e4660b30234d6ad78c8d8\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_openai_gpt-4_1-mini-2025-04-14 at: http://localhost:5000/#/experiments/1/runs/fa03278692c848e996a3e43e6422099f\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 6.00 / 10 (60.0%): 100%|██████████| 10/10 [00:00&lt;00:00, 79.01it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/ce1366eaa8c146eabba86650fae12f74\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_openai_o4-mini-2025-04-16 at: http://localhost:5000/#/experiments/1/runs/3d1fb9c72b914d5a942312db0a6a5088\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 6.00 / 10 (60.0%): 100%|██████████| 10/10 [00:00&lt;00:00, 81.33it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/9e00a96bfd114bbaa9e47dcb478b4423\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_anthropic_claude-sonnet-4-20250514 at: http://localhost:5000/#/experiments/1/runs/76c2180b1f3c4510ab13158d3b0d36eb\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 7.00 / 10 (70.0%): 100%|██████████| 10/10 [00:00&lt;00:00, 65.50it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/4a3c7957aaab4a4e972b06a7754fe6d4\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_gemini_gemini-2_5-flash at: http://localhost:5000/#/experiments/1/runs/aa191551b2844b57bb9d2db37e50c4f0\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n  0%|          | 0/10 [00:00&lt;?, ?it/s]Average Metric: 7.00 / 10 (70.0%): 100%|██████████| 10/10 [00:00&lt;00:00, 61.55it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/809ee64fbd164475b3592ff2340b2595\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_gemini_gemini-2_5-flash-lite at: http://localhost:5000/#/experiments/1/runs/90ea53b2a2484cc0a5302b7c8245184e\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 8.00 / 10 (80.0%): 100%|██████████| 10/10 [00:00&lt;00:00, 74.80it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/6f1bec87d6ce4137b10e055e94bf54d4\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_openai_o3-2025-04-16 at: http://localhost:5000/#/experiments/1/runs/7e4f8e42c8244b94af37787cacd12ee5\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 7.00 / 10 (70.0%): 100%|██████████| 10/10 [00:00&lt;00:00, 86.48it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/ab105090285e4b55a93205dc6f1bde64\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_anthropic_claude-opus-4-20250514 at: http://localhost:5000/#/experiments/1/runs/58c90aae89644af8a1d2c7dc845b0c07\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 8.00 / 10 (80.0%): 100%|██████████| 10/10 [00:00&lt;00:00, 39.63it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/e786a0b633844e7ebdb6a165561b81ec\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_gemini_gemini-2_5-pro at: http://localhost:5000/#/experiments/1/runs/9e1f42bcc8064a9383ed590c1add4d01\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 7.00 / 10 (70.0%): 100%|██████████| 10/10 [00:00&lt;00:00, 71.29it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/f4ae2cb32a2b401aa5ab8f7b02dc7b86\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_ollama_qwen3_32b at: http://localhost:5000/#/experiments/1/runs/ca6c0d988ca94f2998eb08f339fdf22a\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_dataset_results at: http://localhost:5000/#/experiments/1/runs/0b0e82f0b3724ec1afedde0d7a036dfe\n🧪 View experiment at: http://localhost:5000/#/experiments/1&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-stderr\"&gt;\n&lt;pre&gt;&lt;code&gt;2025/07/28 18:19:36 INFO dspy.evaluate.evaluate: Average Metric: 8.0 / 10 (80.0%)\n2025/07/28 18:19:37 INFO dspy.evaluate.evaluate: Average Metric: 5.0 / 10 (50.0%)\n2025/07/28 18:19:37 INFO dspy.evaluate.evaluate: Average Metric: 6.0 / 10 (60.0%)\n2025/07/28 18:19:37 INFO dspy.evaluate.evaluate: Average Metric: 6.0 / 10 (60.0%)\n2025/07/28 18:19:37 INFO dspy.evaluate.evaluate: Average Metric: 7.0 / 10 (70.0%)\n2025/07/28 18:19:37 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:19:37 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:19:38 INFO dspy.evaluate.evaluate: Average Metric: 7.0 / 10 (70.0%)\n2025/07/28 18:19:38 INFO dspy.evaluate.evaluate: Average Metric: 8.0 / 10 (80.0%)\n2025/07/28 18:19:38 INFO dspy.evaluate.evaluate: Average Metric: 7.0 / 10 (70.0%)\n2025/07/28 18:19:38 INFO dspy.evaluate.evaluate: Average Metric: 8.0 / 10 (80.0%)\n2025/07/28 18:19:39 INFO dspy.evaluate.evaluate: Average Metric: 7.0 / 10 (70.0%)&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n\n&lt;div&gt;\n  &lt;style scoped&gt;\n  button {\n    border: none;\n    border-radius: 4px;\n    background-color: rgb(34, 114, 180);\n    font-family: -apple-system, \"system-ui\", \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial;\n    font-size: 13px;\n    color: white;\n    margin-top: 8px;\n    margin-bottom: 8px;\n    padding: 8px 16px;\n    cursor: pointer;\n  }\n  button:hover {\n    background-color: rgb(66, 153, 224);\n  }\n  &lt;/style&gt;\n  &lt;button\n    onclick=\"\n        const display = this.nextElementSibling.style.display;\n        const isCollapsed = display === 'none';\n        this.nextElementSibling.style.display = isCollapsed ? null : 'none';\n\n        const verb = isCollapsed ? 'Collapse' : 'Expand';\n        this.innerText = `${verb} MLflow Trace`;\n    \"\n  &gt;Collapse MLflow Trace&lt;/button&gt;\n  &lt;iframe\n    id=\"trace-renderer\"\n    style=\"width: 100%; height: 500px; border: none; resize: vertical;\"\n    src=\"http://localhost:5000/static-files/lib/notebook-trace-renderer/index.html?trace_id=9f5fdac684c74647a0a88cbdcd16d89b&amp;experiment_id=1&amp;trace_id=3de6592234f74ca4ba6a450f2a01b37a&amp;experiment_id=1&amp;trace_id=31e022f38c354840b5abbe64b417306d&amp;experiment_id=1&amp;trace_id=0756d03769c4417e861f7171ecb7bcb8&amp;experiment_id=1&amp;trace_id=f1dcee538d454f96a41dc1d59c3a27f9&amp;experiment_id=1&amp;trace_id=283f1f0436c24afabdb9d865b3c0e802&amp;experiment_id=1&amp;trace_id=ddb2286507bd47fd8580b5e8dd923d7e&amp;experiment_id=1&amp;trace_id=427f384f2d604830844675df25de1226&amp;experiment_id=1&amp;trace_id=789bab02c70346c1a50c91de5f67376b&amp;experiment_id=1&amp;trace_id=2c112f9efbb44a9796a0ca64a43b8b5d&amp;experiment_id=1&amp;version=3.1.4\"\n  /&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-40\" class=\"cell\" data-execution_count=\"424\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb35\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb35-1\"&gt;&lt;a href=\"#cb35-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;import&lt;/span&gt; pandas &lt;span class=\"im\"&gt;as&lt;/span&gt; pd&lt;/span&gt;\n&lt;span id=\"cb35-2\"&gt;&lt;a href=\"#cb35-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb35-3\"&gt;&lt;a href=\"#cb35-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;df &lt;span class=\"op\"&gt;=&lt;/span&gt; pd.DataFrame(&lt;/span&gt;\n&lt;span id=\"cb35-4\"&gt;&lt;a href=\"#cb35-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    [&lt;/span&gt;\n&lt;span id=\"cb35-5\"&gt;&lt;a href=\"#cb35-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        {&lt;span class=\"st\"&gt;&quot;LLM&quot;&lt;/span&gt;: llms[idx].model, &lt;span class=\"st\"&gt;&quot;Evaluation Score&quot;&lt;/span&gt;: candidate[&lt;span class=\"dv\"&gt;0&lt;/span&gt;]}&lt;/span&gt;\n&lt;span id=\"cb35-6\"&gt;&lt;a href=\"#cb35-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;for&lt;/span&gt; idx, candidate &lt;span class=\"kw\"&gt;in&lt;/span&gt; &lt;span class=\"bu\"&gt;enumerate&lt;/span&gt;(results)&lt;/span&gt;\n&lt;span id=\"cb35-7\"&gt;&lt;a href=\"#cb35-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    ]&lt;/span&gt;\n&lt;span id=\"cb35-8\"&gt;&lt;a href=\"#cb35-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;)&lt;/span&gt;\n&lt;span id=\"cb35-9\"&gt;&lt;a href=\"#cb35-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"bu\"&gt;print&lt;/span&gt;(df)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;div class=\"cell-output cell-output-stdout\"&gt;\n&lt;pre&gt;&lt;code&gt;                                  LLM  Evaluation Score\n0           openai/gpt-4.1-2025-04-14              80.0\n1      openai/gpt-4.1-mini-2025-04-14              50.0\n2           openai/o4-mini-2025-04-16              60.0\n3  anthropic/claude-sonnet-4-20250514              60.0\n4             gemini/gemini-2.5-flash              70.0\n5        gemini/gemini-2.5-flash-lite              70.0\n6                openai/o3-2025-04-16              80.0\n7    anthropic/claude-opus-4-20250514              70.0\n8               gemini/gemini-2.5-pro              80.0\n9                    ollama/qwen3:32b              70.0&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;From the small test above, we see that most of the models score in a similar range. I think it’s expected that GPT-4.1-mini performs poorly, given that it’s a much smaller model compared to all the competetiors.&lt;/p&gt;\n&lt;p&gt;From the MLFlow logs, we also see that while Qwen3:32b has a relatively high score, inference is quite slow. For now, we will skip this model during the model selection phase, and revisit it later.&lt;/p&gt;\n&lt;div id=\"cell-42\" class=\"cell\" data-execution_count=\"425\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb37\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb37-1\"&gt;&lt;a href=\"#cb37-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;model_selection_llms &lt;span class=\"op\"&gt;=&lt;/span&gt; [&lt;/span&gt;\n&lt;span id=\"cb37-2\"&gt;&lt;a href=\"#cb37-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    lm_oai_gpt_4_1,&lt;/span&gt;\n&lt;span id=\"cb37-3\"&gt;&lt;a href=\"#cb37-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    lm_oai_gpt_4_1_mini,&lt;/span&gt;\n&lt;span id=\"cb37-4\"&gt;&lt;a href=\"#cb37-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    lm_oai_o4_mini,&lt;/span&gt;\n&lt;span id=\"cb37-5\"&gt;&lt;a href=\"#cb37-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    lm_anthropic_sonnet_4_0,&lt;/span&gt;\n&lt;span id=\"cb37-6\"&gt;&lt;a href=\"#cb37-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    lm_gemini_flash_2_5,&lt;/span&gt;\n&lt;span id=\"cb37-7\"&gt;&lt;a href=\"#cb37-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    lm_gemini_flash_2_5_lite,&lt;/span&gt;\n&lt;span id=\"cb37-8\"&gt;&lt;a href=\"#cb37-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    lm_oai_o3,&lt;/span&gt;\n&lt;span id=\"cb37-9\"&gt;&lt;a href=\"#cb37-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    lm_anthropic_opus_4_0,&lt;/span&gt;\n&lt;span id=\"cb37-10\"&gt;&lt;a href=\"#cb37-10\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    lm_gemini_pro_2_5,&lt;/span&gt;\n&lt;span id=\"cb37-11\"&gt;&lt;a href=\"#cb37-11\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-43\" class=\"cell\" data-execution_count=\"426\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb38\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb38-1\"&gt;&lt;a href=\"#cb38-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;import&lt;/span&gt; re&lt;/span&gt;\n&lt;span id=\"cb38-2\"&gt;&lt;a href=\"#cb38-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb38-3\"&gt;&lt;a href=\"#cb38-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;from&lt;/span&gt; dspy.evaluate &lt;span class=\"im\"&gt;import&lt;/span&gt; Evaluate&lt;/span&gt;\n&lt;span id=\"cb38-4\"&gt;&lt;a href=\"#cb38-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb38-5\"&gt;&lt;a href=\"#cb38-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;results &lt;span class=\"op\"&gt;=&lt;/span&gt; []&lt;/span&gt;\n&lt;span id=\"cb38-6\"&gt;&lt;a href=\"#cb38-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb38-7\"&gt;&lt;a href=\"#cb38-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"cf\"&gt;with&lt;/span&gt; mlflow.start_run(run_name&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;gate_dataset_results_full&quot;&lt;/span&gt;) &lt;span class=\"im\"&gt;as&lt;/span&gt; parent_ctx:&lt;/span&gt;\n&lt;span id=\"cb38-8\"&gt;&lt;a href=\"#cb38-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;for&lt;/span&gt; candidate_lm &lt;span class=\"kw\"&gt;in&lt;/span&gt; model_selection_llms:&lt;/span&gt;\n&lt;span id=\"cb38-9\"&gt;&lt;a href=\"#cb38-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        run_name &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"ss\"&gt;f&quot;gate_&lt;/span&gt;&lt;span class=\"sc\"&gt;{&lt;/span&gt;candidate_lm&lt;span class=\"sc\"&gt;.&lt;/span&gt;model&lt;span class=\"sc\"&gt;.&lt;/span&gt;replace(&lt;span class=\"st\"&gt;&#39;/&#39;&lt;/span&gt;, &lt;span class=\"st\"&gt;&#39;_&#39;&lt;/span&gt;)&lt;span class=\"sc\"&gt;}&lt;/span&gt;&lt;span class=\"ss\"&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb38-10\"&gt;&lt;a href=\"#cb38-10\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        sanitized_run_name &lt;span class=\"op\"&gt;=&lt;/span&gt; re.sub(&lt;span class=\"vs\"&gt;r&quot;[^a-zA-Z0-9_\\-]&quot;&lt;/span&gt;, &lt;span class=\"st\"&gt;&quot;_&quot;&lt;/span&gt;, run_name)&lt;/span&gt;\n&lt;span id=\"cb38-11\"&gt;&lt;a href=\"#cb38-11\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;with&lt;/span&gt; mlflow.start_run(run_name&lt;span class=\"op\"&gt;=&lt;/span&gt;sanitized_run_name, nested&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;):&lt;/span&gt;\n&lt;span id=\"cb38-12\"&gt;&lt;a href=\"#cb38-12\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            current_evaluator &lt;span class=\"op\"&gt;=&lt;/span&gt; Evaluate(&lt;/span&gt;\n&lt;span id=\"cb38-13\"&gt;&lt;a href=\"#cb38-13\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                devset&lt;span class=\"op\"&gt;=&lt;/span&gt;gate_examples,&lt;/span&gt;\n&lt;span id=\"cb38-14\"&gt;&lt;a href=\"#cb38-14\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                num_threads&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"dv\"&gt;32&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb38-15\"&gt;&lt;a href=\"#cb38-15\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                display_progress&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb38-16\"&gt;&lt;a href=\"#cb38-16\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                &lt;span class=\"co\"&gt;# display_table=True,&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb38-17\"&gt;&lt;a href=\"#cb38-17\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                &lt;span class=\"co\"&gt;# provide_traceback=True,&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb38-18\"&gt;&lt;a href=\"#cb38-18\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                return_all_scores&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb38-19\"&gt;&lt;a href=\"#cb38-19\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                return_outputs&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb38-20\"&gt;&lt;a href=\"#cb38-20\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            )&lt;/span&gt;\n&lt;span id=\"cb38-21\"&gt;&lt;a href=\"#cb38-21\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            &lt;span class=\"cf\"&gt;with&lt;/span&gt; dspy.context(lm&lt;span class=\"op\"&gt;=&lt;/span&gt;candidate_lm) &lt;span class=\"im\"&gt;as&lt;/span&gt; ctx:&lt;/span&gt;\n&lt;span id=\"cb38-22\"&gt;&lt;a href=\"#cb38-22\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                current_result &lt;span class=\"op\"&gt;=&lt;/span&gt; current_evaluator(&lt;/span&gt;\n&lt;span id=\"cb38-23\"&gt;&lt;a href=\"#cb38-23\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                    TurnSolver(reasoning_lm&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;), metric&lt;span class=\"op\"&gt;=&lt;/span&gt;turn_em_metric&lt;/span&gt;\n&lt;span id=\"cb38-24\"&gt;&lt;a href=\"#cb38-24\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                )&lt;/span&gt;\n&lt;span id=\"cb38-25\"&gt;&lt;a href=\"#cb38-25\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                results.append(current_result)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;div class=\"cell-output cell-output-stdout\"&gt;\n&lt;pre&gt;&lt;code&gt;Average Metric: 95.00 / 151 (62.9%): 100%|██████████| 151/151 [00:02&lt;00:00, 74.97it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/e18f45df89fb4a0e9e98e6f01d74bf71\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_openai_gpt-4_1-2025-04-14 at: http://localhost:5000/#/experiments/1/runs/f15c1d3760fc489b95ec5950f3e992b9\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 81.00 / 151 (53.6%): 100%|██████████| 151/151 [00:02&lt;00:00, 74.18it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/9f40a5f2dc2a4e09977f8b8c53822605\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_openai_gpt-4_1-mini-2025-04-14 at: http://localhost:5000/#/experiments/1/runs/c882d7c82d5f4a3abb510bf57d506c53\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 31.00 / 55 (56.4%):  36%|███▌      | 54/151 [00:00&lt;00:01, 53.34it/s]Average Metric: 44.00 / 72 (61.1%):  47%|████▋     | 71/151 [00:01&lt;00:01, 73.76it/s]Average Metric: 62.00 / 106 (58.5%):  70%|██████▉   | 105/151 [00:01&lt;00:00, 82.16it/s]Average Metric: 95.00 / 151 (62.9%): 100%|██████████| 151/151 [00:02&lt;00:00, 71.71it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/8154049643d040d39c7642b56ac6d7c5\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_openai_o4-mini-2025-04-16 at: http://localhost:5000/#/experiments/1/runs/938b45e4b5204804b4e4660feebf563a\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 95.00 / 151 (62.9%): 100%|██████████| 151/151 [00:02&lt;00:00, 70.44it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/599e8c7040b04b8c8f0ca24c6dc94d37\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_anthropic_claude-sonnet-4-20250514 at: http://localhost:5000/#/experiments/1/runs/4442e20dc743456b966821c18219c23e\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n  0%|          | 0/151 [00:00&lt;?, ?it/s]Average Metric: 31.00 / 47 (66.0%):  30%|███       | 46/151 [00:01&lt;00:02, 47.10it/s]Average Metric: 57.00 / 93 (61.3%):  62%|██████▏   | 93/151 [00:01&lt;00:00, 79.96it/s]Average Metric: 73.00 / 122 (59.8%):  80%|████████  | 121/151 [00:01&lt;00:00, 89.94it/s]Average Metric: 96.00 / 151 (63.6%): 100%|██████████| 151/151 [00:02&lt;00:00, 67.06it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/bcea3ffb8c6f4cbb98725e43e88cbdd0\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_gemini_gemini-2_5-flash at: http://localhost:5000/#/experiments/1/runs/7db59c48c06c4948adf754477705c360\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n  0%|          | 0/151 [00:00&lt;?, ?it/s]Average Metric: 8.00 / 12 (66.7%):   7%|▋         | 11/151 [00:00&lt;00:03, 38.23it/s]Average Metric: 9.00 / 13 (69.2%):   8%|▊         | 12/151 [00:00&lt;00:03, 38.23it/s]Average Metric: 18.00 / 29 (62.1%):  19%|█▉        | 29/151 [00:00&lt;00:01, 62.69it/s]Average Metric: 20.00 / 32 (62.5%):  21%|██        | 31/151 [00:00&lt;00:01, 62.69it/s]Average Metric: 20.00 / 33 (60.6%):  21%|██        | 32/151 [00:00&lt;00:01, 62.69it/s]Average Metric: 21.00 / 34 (61.8%):  22%|██▏       | 33/151 [00:00&lt;00:01, 62.69it/s]Average Metric: 22.00 / 38 (57.9%):  25%|██▍       | 37/151 [00:00&lt;00:01, 61.42it/s]Average Metric: 44.00 / 75 (58.7%):  49%|████▉     | 74/151 [00:01&lt;00:01, 57.41it/s]Average Metric: 44.00 / 76 (57.9%):  50%|████▉     | 75/151 [00:01&lt;00:01, 57.41it/s]Average Metric: 44.00 / 78 (56.4%):  51%|█████     | 77/151 [00:01&lt;00:01, 58.30it/s]Average Metric: 47.00 / 84 (56.0%):  56%|█████▌    | 84/151 [00:01&lt;00:01, 60.44it/s]Average Metric: 51.00 / 89 (57.3%):  58%|█████▊    | 88/151 [00:01&lt;00:01, 60.44it/s]Average Metric: 52.00 / 90 (57.8%):  59%|█████▉    | 89/151 [00:01&lt;00:01, 60.44it/s]Average Metric: 55.00 / 96 (57.3%):  63%|██████▎   | 95/151 [00:01&lt;00:00, 60.62it/s]Average Metric: 56.00 / 97 (57.7%):  64%|██████▎   | 96/151 [00:01&lt;00:00, 60.62it/s]Average Metric: 59.00 / 107 (55.1%):  70%|███████   | 106/151 [00:01&lt;00:00, 67.41it/s]Average Metric: 59.00 / 108 (54.6%):  72%|███████▏  | 108/151 [00:01&lt;00:00, 69.63it/s]Average Metric: 62.00 / 112 (55.4%):  74%|███████▎  | 111/151 [00:01&lt;00:00, 69.63it/s]Average Metric: 69.00 / 123 (56.1%):  81%|████████  | 122/151 [00:01&lt;00:00, 69.40it/s]Average Metric: 87.00 / 151 (57.6%): 100%|██████████| 151/151 [00:02&lt;00:00, 60.17it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/c348c68458124441865ac735d0b7d641\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_gemini_gemini-2_5-flash-lite at: http://localhost:5000/#/experiments/1/runs/598582fb690540e7baca55a097fee220\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 22.00 / 32 (68.8%):  21%|██        | 31/151 [00:00&lt;00:01, 64.25it/s]Average Metric: 69.00 / 100 (69.0%):  66%|██████▌   | 99/151 [00:01&lt;00:00, 62.91it/s]Average Metric: 106.00 / 151 (70.2%): 100%|██████████| 151/151 [00:02&lt;00:00, 51.93it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/853504669f224faf8773cf2d9436fb41\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_openai_o3-2025-04-16 at: http://localhost:5000/#/experiments/1/runs/f122d81f9c1d46d582ce64553f6ee3ea\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 103.00 / 151 (68.2%): 100%|██████████| 151/151 [00:02&lt;00:00, 67.19it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/96826db5718c45d6a2dc0b2c5526441e\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_anthropic_claude-opus-4-20250514 at: http://localhost:5000/#/experiments/1/runs/d329de90de1e40e0b467681f0442656a\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 103.00 / 151 (68.2%): 100%|██████████| 151/151 [00:02&lt;00:00, 71.07it/s] \n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/1fbbc1c758204d438fd050d77d524632\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_gemini_gemini-2_5-pro at: http://localhost:5000/#/experiments/1/runs/6e2dd13cb21f455c905159caa8335678\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_dataset_results_full at: http://localhost:5000/#/experiments/1/runs/51176a64c2af4fbc803a1e1f0775e924\n🧪 View experiment at: http://localhost:5000/#/experiments/1&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-stderr\"&gt;\n&lt;pre&gt;&lt;code&gt;2025/07/28 18:21:32 INFO dspy.evaluate.evaluate: Average Metric: 95.0 / 151 (62.9%)\n2025/07/28 18:21:34 INFO dspy.evaluate.evaluate: Average Metric: 81.0 / 151 (53.6%)\n2025/07/28 18:21:35 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:35 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:36 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:36 INFO dspy.evaluate.evaluate: Average Metric: 95.0 / 151 (62.9%)\n2025/07/28 18:21:38 INFO dspy.evaluate.evaluate: Average Metric: 95.0 / 151 (62.9%)\n2025/07/28 18:21:39 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:39 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:40 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:40 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:40 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:41 INFO dspy.evaluate.evaluate: Average Metric: 96.0 / 151 (63.6%)\n2025/07/28 18:21:41 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:41 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:41 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:41 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:41 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:41 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:41 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:41 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:41 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:41 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:41 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:41 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:41 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:41 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:42 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:42 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:42 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:42 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:42 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:42 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:42 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:42 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:42 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:42 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:42 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:42 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:42 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:43 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:43 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:43 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:43 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:43 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:43 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:43 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:43 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:43 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:43 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:43 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:43 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:43 INFO dspy.evaluate.evaluate: Average Metric: 87.0 / 151 (57.6%)\n2025/07/28 18:21:44 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:45 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:47 INFO dspy.evaluate.evaluate: Average Metric: 106.0 / 151 (70.2%)\n2025/07/28 18:21:49 INFO dspy.evaluate.evaluate: Average Metric: 103.0 / 151 (68.2%)\n2025/07/28 18:21:51 INFO dspy.evaluate.evaluate: Average Metric: 103.0 / 151 (68.2%)&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n\n&lt;div&gt;\n  &lt;style scoped&gt;\n  button {\n    border: none;\n    border-radius: 4px;\n    background-color: rgb(34, 114, 180);\n    font-family: -apple-system, \"system-ui\", \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial;\n    font-size: 13px;\n    color: white;\n    margin-top: 8px;\n    margin-bottom: 8px;\n    padding: 8px 16px;\n    cursor: pointer;\n  }\n  button:hover {\n    background-color: rgb(66, 153, 224);\n  }\n  &lt;/style&gt;\n  &lt;button\n    onclick=\"\n        const display = this.nextElementSibling.style.display;\n        const isCollapsed = display === 'none';\n        this.nextElementSibling.style.display = isCollapsed ? null : 'none';\n\n        const verb = isCollapsed ? 'Collapse' : 'Expand';\n        this.innerText = `${verb} MLflow Trace`;\n    \"\n  &gt;Collapse MLflow Trace&lt;/button&gt;\n  &lt;iframe\n    id=\"trace-renderer\"\n    style=\"width: 100%; height: 500px; border: none; resize: vertical;\"\n    src=\"http://localhost:5000/static-files/lib/notebook-trace-renderer/index.html?trace_id=5276eb031180473cb92d03ceca489d38&amp;experiment_id=1&amp;trace_id=0f2dffe6dfd74fe3b5697a0bffb47658&amp;experiment_id=1&amp;trace_id=35c112a62c334012a612cdca116e9b09&amp;experiment_id=1&amp;trace_id=e30a2c51605b4102b190affb869475f4&amp;experiment_id=1&amp;trace_id=1b74fe5cb6c8453b82c227eb63e11221&amp;experiment_id=1&amp;trace_id=5310ed582ac0431382787b65f63de317&amp;experiment_id=1&amp;trace_id=f713426ecd20413ba2acbb7af0228b2d&amp;experiment_id=1&amp;trace_id=0f44b811a42c41dd9d867b5e12f80044&amp;experiment_id=1&amp;trace_id=543c31429f2d4d7cb4d2284daf66b3f9&amp;experiment_id=1&amp;trace_id=d624a05b74cc43a0a69bc8b400465a69&amp;experiment_id=1&amp;version=3.1.4\"\n  /&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;We will now run the evaluation suite over the entire &lt;code&gt;gate dataset&lt;/code&gt; for all the models in the above list.&lt;/p&gt;\n&lt;div id=\"cell-45\" class=\"cell\" data-execution_count=\"427\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb41\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb41-1\"&gt;&lt;a href=\"#cb41-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;import&lt;/span&gt; pandas &lt;span class=\"im\"&gt;as&lt;/span&gt; pd&lt;/span&gt;\n&lt;span id=\"cb41-2\"&gt;&lt;a href=\"#cb41-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb41-3\"&gt;&lt;a href=\"#cb41-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;tdf &lt;span class=\"op\"&gt;=&lt;/span&gt; pd.DataFrame(&lt;/span&gt;\n&lt;span id=\"cb41-4\"&gt;&lt;a href=\"#cb41-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    [&lt;/span&gt;\n&lt;span id=\"cb41-5\"&gt;&lt;a href=\"#cb41-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        {&lt;span class=\"st\"&gt;&quot;LLM&quot;&lt;/span&gt;: llms[idx].model, &lt;span class=\"st\"&gt;&quot;Evaluation Score&quot;&lt;/span&gt;: candidate[&lt;span class=\"dv\"&gt;0&lt;/span&gt;]}&lt;/span&gt;\n&lt;span id=\"cb41-6\"&gt;&lt;a href=\"#cb41-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;for&lt;/span&gt; idx, candidate &lt;span class=\"kw\"&gt;in&lt;/span&gt; &lt;span class=\"bu\"&gt;enumerate&lt;/span&gt;(results)&lt;/span&gt;\n&lt;span id=\"cb41-7\"&gt;&lt;a href=\"#cb41-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    ]&lt;/span&gt;\n&lt;span id=\"cb41-8\"&gt;&lt;a href=\"#cb41-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;)&lt;/span&gt;\n&lt;span id=\"cb41-9\"&gt;&lt;a href=\"#cb41-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"bu\"&gt;print&lt;/span&gt;(tdf)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;div class=\"cell-output cell-output-stdout\"&gt;\n&lt;pre&gt;&lt;code&gt;                                  LLM  Evaluation Score\n0           openai/gpt-4.1-2025-04-14             62.91\n1      openai/gpt-4.1-mini-2025-04-14             53.64\n2           openai/o4-mini-2025-04-16             62.91\n3  anthropic/claude-sonnet-4-20250514             62.91\n4             gemini/gemini-2.5-flash             63.58\n5        gemini/gemini-2.5-flash-lite             57.62\n6                openai/o3-2025-04-16             70.20\n7    anthropic/claude-opus-4-20250514             68.21\n8               gemini/gemini-2.5-pro             68.21&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;From the above table, we see a few interesting things:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;By default, most of the &lt;strong&gt;reasoning&lt;/strong&gt; models perform better on the “gate” dataset, with OAI O3 performing the best with a score of 70.20%&lt;/li&gt;\n&lt;li&gt;Reasoning models from the remaining two frontier labs score the same i.e 68.21%&lt;/li&gt;\n&lt;li&gt;We also see that the smaller reasoning models perform similar across the labs, with an average score of 63.58%, but at a &lt;strong&gt;significantly lower cost&lt;/strong&gt;.&lt;/li&gt;\n&lt;li&gt;The outputs from sonnet-4 failed the structured output test, but this could be fixed using the DSPy TypingPredictor in the future. More on this later!&lt;/li&gt;\n&lt;li&gt;Finally, while a &lt;em&gt;non-reasoning&lt;/em&gt; model like GPT-4.1 performs as well as the small reasoning models, the price of input/outputs tokens for GPT-4.1 is significantly higher compared to it’s counterparts.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;We will also run the test over the “probe” dataset, before deciding our final list of LLMs based on the performance-to-cost ratio.&lt;/p&gt;\n&lt;/section&gt;\n&lt;section id=\"probe-dataset-results\" class=\"level3\"&gt;\n&lt;h3&gt;Probe Dataset Results&lt;/h3&gt;\n&lt;div id=\"cell-48\" class=\"cell\" data-execution_count=\"428\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb43\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb43-1\"&gt;&lt;a href=\"#cb43-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;import&lt;/span&gt; re&lt;/span&gt;\n&lt;span id=\"cb43-2\"&gt;&lt;a href=\"#cb43-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb43-3\"&gt;&lt;a href=\"#cb43-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;from&lt;/span&gt; dspy.evaluate &lt;span class=\"im\"&gt;import&lt;/span&gt; Evaluate&lt;/span&gt;\n&lt;span id=\"cb43-4\"&gt;&lt;a href=\"#cb43-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb43-5\"&gt;&lt;a href=\"#cb43-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;probe_results &lt;span class=\"op\"&gt;=&lt;/span&gt; []&lt;/span&gt;\n&lt;span id=\"cb43-6\"&gt;&lt;a href=\"#cb43-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb43-7\"&gt;&lt;a href=\"#cb43-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"cf\"&gt;with&lt;/span&gt; mlflow.start_run(run_name&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;probe_dataset_results_full&quot;&lt;/span&gt;) &lt;span class=\"im\"&gt;as&lt;/span&gt; parent_ctx:&lt;/span&gt;\n&lt;span id=\"cb43-8\"&gt;&lt;a href=\"#cb43-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;for&lt;/span&gt; candidate_lm &lt;span class=\"kw\"&gt;in&lt;/span&gt; model_selection_llms:&lt;/span&gt;\n&lt;span id=\"cb43-9\"&gt;&lt;a href=\"#cb43-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        run_name &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"ss\"&gt;f&quot;probe_&lt;/span&gt;&lt;span class=\"sc\"&gt;{&lt;/span&gt;candidate_lm&lt;span class=\"sc\"&gt;.&lt;/span&gt;model&lt;span class=\"sc\"&gt;.&lt;/span&gt;replace(&lt;span class=\"st\"&gt;&#39;/&#39;&lt;/span&gt;, &lt;span class=\"st\"&gt;&#39;_&#39;&lt;/span&gt;)&lt;span class=\"sc\"&gt;}&lt;/span&gt;&lt;span class=\"ss\"&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb43-10\"&gt;&lt;a href=\"#cb43-10\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        sanitized_run_name &lt;span class=\"op\"&gt;=&lt;/span&gt; re.sub(&lt;span class=\"vs\"&gt;r&quot;[^a-zA-Z0-9_\\-]&quot;&lt;/span&gt;, &lt;span class=\"st\"&gt;&quot;_&quot;&lt;/span&gt;, run_name)&lt;/span&gt;\n&lt;span id=\"cb43-11\"&gt;&lt;a href=\"#cb43-11\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;with&lt;/span&gt; mlflow.start_run(run_name&lt;span class=\"op\"&gt;=&lt;/span&gt;sanitized_run_name, nested&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;):&lt;/span&gt;\n&lt;span id=\"cb43-12\"&gt;&lt;a href=\"#cb43-12\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            current_evaluator &lt;span class=\"op\"&gt;=&lt;/span&gt; Evaluate(&lt;/span&gt;\n&lt;span id=\"cb43-13\"&gt;&lt;a href=\"#cb43-13\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                devset&lt;span class=\"op\"&gt;=&lt;/span&gt;probe_examples,&lt;/span&gt;\n&lt;span id=\"cb43-14\"&gt;&lt;a href=\"#cb43-14\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                num_threads&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"dv\"&gt;32&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb43-15\"&gt;&lt;a href=\"#cb43-15\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                display_progress&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb43-16\"&gt;&lt;a href=\"#cb43-16\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                &lt;span class=\"co\"&gt;# display_table=True,&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb43-17\"&gt;&lt;a href=\"#cb43-17\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                &lt;span class=\"co\"&gt;# provide_traceback=True,&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb43-18\"&gt;&lt;a href=\"#cb43-18\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                return_all_scores&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb43-19\"&gt;&lt;a href=\"#cb43-19\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                return_outputs&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb43-20\"&gt;&lt;a href=\"#cb43-20\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            )&lt;/span&gt;\n&lt;span id=\"cb43-21\"&gt;&lt;a href=\"#cb43-21\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            &lt;span class=\"cf\"&gt;with&lt;/span&gt; dspy.context(lm&lt;span class=\"op\"&gt;=&lt;/span&gt;candidate_lm) &lt;span class=\"im\"&gt;as&lt;/span&gt; ctx:&lt;/span&gt;\n&lt;span id=\"cb43-22\"&gt;&lt;a href=\"#cb43-22\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                current_result &lt;span class=\"op\"&gt;=&lt;/span&gt; current_evaluator(&lt;/span&gt;\n&lt;span id=\"cb43-23\"&gt;&lt;a href=\"#cb43-23\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                    TurnSolver(reasoning_lm&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;), metric&lt;span class=\"op\"&gt;=&lt;/span&gt;turn_em_metric&lt;/span&gt;\n&lt;span id=\"cb43-24\"&gt;&lt;a href=\"#cb43-24\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                )&lt;/span&gt;\n&lt;span id=\"cb43-25\"&gt;&lt;a href=\"#cb43-25\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                probe_results.append(current_result)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;div class=\"cell-output cell-output-stdout\"&gt;\n&lt;pre&gt;&lt;code&gt;Average Metric: 150.00 / 200 (75.0%): 100%|██████████| 200/200 [00:02&lt;00:00, 69.58it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/6cccc46d61ae4365b9921586ed0ef193\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run probe_openai_gpt-4_1-2025-04-14 at: http://localhost:5000/#/experiments/1/runs/3b839cca27264ffaaace2643e23975c7\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 130.00 / 200 (65.0%): 100%|██████████| 200/200 [00:03&lt;00:00, 60.95it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/8c371daf948343eb8a18370f1756a850\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run probe_openai_gpt-4_1-mini-2025-04-14 at: http://localhost:5000/#/experiments/1/runs/dcfce79bf36446929e2924273e0a2db5\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 79.00 / 102 (77.5%):  50%|█████     | 101/200 [00:02&lt;00:02, 36.80it/s]Average Metric: 122.00 / 157 (77.7%):  78%|███████▊  | 156/200 [00:03&lt;00:00, 48.01it/s]Average Metric: 157.00 / 200 (78.5%): 100%|██████████| 200/200 [00:03&lt;00:00, 53.12it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/758a3867a75541c2a3eab91ac6faf42b\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run probe_openai_o4-mini-2025-04-16 at: http://localhost:5000/#/experiments/1/runs/aafc2286d5ab4819aa467440328eed77\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 150.00 / 200 (75.0%): 100%|██████████| 200/200 [00:04&lt;00:00, 49.31it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/3b6644b108a241f99e8dd0e2e1d051fa\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run probe_anthropic_claude-sonnet-4-20250514 at: http://localhost:5000/#/experiments/1/runs/3b4f42a464cd4e3496f4b1755decd7ce\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 24.00 / 31 (77.4%):  15%|█▌        | 30/200 [00:00&lt;00:03, 50.11it/s]Average Metric: 148.00 / 200 (74.0%): 100%|██████████| 200/200 [00:03&lt;00:00, 51.35it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/99af33e15c234269aa69333eebecb916\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run probe_gemini_gemini-2_5-flash at: http://localhost:5000/#/experiments/1/runs/7d11aa5ec28841adafa6b0e66733e13d\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n  0%|          | 0/200 [00:00&lt;?, ?it/s]Average Metric: 11.00 / 16 (68.8%):   8%|▊         | 15/200 [00:00&lt;00:04, 41.77it/s]Average Metric: 18.00 / 24 (75.0%):  12%|█▏        | 23/200 [00:00&lt;00:03, 50.59it/s]Average Metric: 19.00 / 26 (73.1%):  12%|█▎        | 25/200 [00:00&lt;00:03, 50.59it/s]Average Metric: 21.00 / 31 (67.7%):  15%|█▌        | 30/200 [00:00&lt;00:02, 58.14it/s]Average Metric: 22.00 / 33 (66.7%):  16%|█▌        | 32/200 [00:00&lt;00:02, 58.14it/s]Average Metric: 27.00 / 42 (64.3%):  20%|██        | 41/200 [00:01&lt;00:04, 33.61it/s]Average Metric: 32.00 / 53 (60.4%):  26%|██▌       | 52/200 [00:01&lt;00:03, 43.63it/s]Average Metric: 36.00 / 61 (59.0%):  30%|███       | 60/200 [00:01&lt;00:02, 49.53it/s]Average Metric: 39.00 / 65 (60.0%):  32%|███▏      | 64/200 [00:01&lt;00:02, 60.32it/s]Average Metric: 39.00 / 66 (59.1%):  32%|███▎      | 65/200 [00:01&lt;00:02, 60.32it/s]Average Metric: 41.00 / 68 (60.3%):  34%|███▎      | 67/200 [00:01&lt;00:02, 60.32it/s]Average Metric: 54.00 / 84 (64.3%):  42%|████▏     | 83/200 [00:01&lt;00:01, 69.98it/s]Average Metric: 60.00 / 93 (64.5%):  46%|████▌     | 92/200 [00:01&lt;00:01, 70.30it/s]Average Metric: 62.00 / 96 (64.6%):  48%|████▊     | 95/200 [00:01&lt;00:01, 70.30it/s]Average Metric: 62.00 / 97 (63.9%):  48%|████▊     | 96/200 [00:01&lt;00:01, 70.30it/s]Average Metric: 62.00 / 98 (63.3%):  49%|████▉     | 98/200 [00:01&lt;00:01, 74.90it/s]Average Metric: 63.00 / 99 (63.6%):  49%|████▉     | 98/200 [00:01&lt;00:01, 74.90it/s]Average Metric: 64.00 / 102 (62.7%):  50%|█████     | 101/200 [00:01&lt;00:01, 74.90it/s]Average Metric: 65.00 / 103 (63.1%):  51%|█████     | 102/200 [00:01&lt;00:01, 74.90it/s]Average Metric: 73.00 / 115 (63.5%):  57%|█████▋    | 114/200 [00:02&lt;00:01, 56.16it/s]Average Metric: 76.00 / 119 (63.9%):  59%|█████▉    | 118/200 [00:02&lt;00:01, 56.16it/s]Average Metric: 78.00 / 123 (63.4%):  61%|██████    | 122/200 [00:02&lt;00:01, 53.09it/s]Average Metric: 82.00 / 129 (63.6%):  64%|██████▍   | 128/200 [00:02&lt;00:01, 45.61it/s]Average Metric: 82.00 / 130 (63.1%):  64%|██████▍   | 129/200 [00:02&lt;00:01, 45.61it/s]Average Metric: 82.00 / 134 (61.2%):  66%|██████▋   | 133/200 [00:02&lt;00:01, 46.87it/s]Average Metric: 83.00 / 135 (61.5%):  67%|██████▋   | 134/200 [00:02&lt;00:01, 46.87it/s]Average Metric: 99.00 / 159 (62.3%):  80%|███████▉  | 159/200 [00:03&lt;00:00, 46.30it/s]Average Metric: 104.00 / 165 (63.0%):  82%|████████▏ | 164/200 [00:03&lt;00:01, 35.61it/s]Average Metric: 105.00 / 166 (63.3%):  82%|████████▎ | 165/200 [00:03&lt;00:00, 35.61it/s]Average Metric: 105.00 / 167 (62.9%):  83%|████████▎ | 166/200 [00:03&lt;00:00, 35.61it/s]Average Metric: 128.00 / 200 (64.0%): 100%|██████████| 200/200 [00:03&lt;00:00, 52.47it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/20a1fa6983f349a0888cca2696bcae76\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run probe_gemini_gemini-2_5-flash-lite at: http://localhost:5000/#/experiments/1/runs/0c5ca9e2a1e84041b2937cd264727d94\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 48.00 / 61 (78.7%):  30%|███       | 60/200 [00:01&lt;00:03, 45.14it/s]Average Metric: 66.00 / 83 (79.5%):  41%|████      | 82/200 [00:01&lt;00:01, 76.08it/s]Average Metric: 162.00 / 200 (81.0%): 100%|██████████| 200/200 [00:03&lt;00:00, 52.77it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/513ceb4b58c44816894f0196c05f1d27\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run probe_openai_o3-2025-04-16 at: http://localhost:5000/#/experiments/1/runs/07039e1be0154904a14bf5b215b36bfb\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 160.00 / 200 (80.0%): 100%|██████████| 200/200 [00:04&lt;00:00, 46.05it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/fa3840a6fc86489195ff4b93ba3525d3\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run probe_anthropic_claude-opus-4-20250514 at: http://localhost:5000/#/experiments/1/runs/242a848220a34df18fefcd752c6b1edf\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 157.00 / 200 (78.5%): 100%|██████████| 200/200 [00:20&lt;00:00,  9.94it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/28468bf07dea42438e3b2835cf8bd5d1\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run probe_gemini_gemini-2_5-pro at: http://localhost:5000/#/experiments/1/runs/b9decff973db41ce9863d93d41eff7c3\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run probe_dataset_results_full at: http://localhost:5000/#/experiments/1/runs/7f0b1ff0f4e94143b9fb5509ed6319be\n🧪 View experiment at: http://localhost:5000/#/experiments/1&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-stderr\"&gt;\n&lt;pre&gt;&lt;code&gt;2025/07/28 18:22:15 INFO dspy.evaluate.evaluate: Average Metric: 150.0 / 200 (75.0%)\n2025/07/28 18:22:18 INFO dspy.evaluate.evaluate: Average Metric: 130.0 / 200 (65.0%)\n2025/07/28 18:22:20 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:21 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:22 INFO dspy.evaluate.evaluate: Average Metric: 157.0 / 200 (78.5%)\n2025/07/28 18:22:26 INFO dspy.evaluate.evaluate: Average Metric: 150.0 / 200 (75.0%)\n2025/07/28 18:22:27 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:30 INFO dspy.evaluate.evaluate: Average Metric: 148.0 / 200 (74.0%)\n2025/07/28 18:22:30 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:30 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:30 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:30 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:31 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:31 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:31 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:31 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:31 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:31 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:31 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:31 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:31 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:31 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:31 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:31 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:31 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:32 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:32 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:32 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:32 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:32 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:32 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:32 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:32 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:32 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:32 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:32 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:32 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:32 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:32 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:32 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:32 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:32 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:32 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:32 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:32 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:33 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:33 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:33 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:33 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:33 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:33 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:33 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:33 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:33 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:33 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:33 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:33 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:34 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:34 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:34 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:34 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:34 INFO dspy.evaluate.evaluate: Average Metric: 128.0 / 200 (64.0%)\n2025/07/28 18:22:35 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:36 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:38 INFO dspy.evaluate.evaluate: Average Metric: 162.0 / 200 (81.0%)\n2025/07/28 18:22:43 INFO dspy.evaluate.evaluate: Average Metric: 160.0 / 200 (80.0%)\n2025/07/28 18:23:03 INFO dspy.evaluate.evaluate: Average Metric: 157.0 / 200 (78.5%)&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n\n&lt;div&gt;\n  &lt;style scoped&gt;\n  button {\n    border: none;\n    border-radius: 4px;\n    background-color: rgb(34, 114, 180);\n    font-family: -apple-system, \"system-ui\", \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial;\n    font-size: 13px;\n    color: white;\n    margin-top: 8px;\n    margin-bottom: 8px;\n    padding: 8px 16px;\n    cursor: pointer;\n  }\n  button:hover {\n    background-color: rgb(66, 153, 224);\n  }\n  &lt;/style&gt;\n  &lt;button\n    onclick=\"\n        const display = this.nextElementSibling.style.display;\n        const isCollapsed = display === 'none';\n        this.nextElementSibling.style.display = isCollapsed ? null : 'none';\n\n        const verb = isCollapsed ? 'Collapse' : 'Expand';\n        this.innerText = `${verb} MLflow Trace`;\n    \"\n  &gt;Collapse MLflow Trace&lt;/button&gt;\n  &lt;iframe\n    id=\"trace-renderer\"\n    style=\"width: 100%; height: 500px; border: none; resize: vertical;\"\n    src=\"http://localhost:5000/static-files/lib/notebook-trace-renderer/index.html?trace_id=c5d368d7011e416bb8a6a45fb5757cc5&amp;experiment_id=1&amp;trace_id=c838fe37a1554a709c48aa7d91df4051&amp;experiment_id=1&amp;trace_id=e3e3b12245c145609fbd9f2ea7a38b35&amp;experiment_id=1&amp;trace_id=f05d4d95db7d4aceb8b4158a8cf0cfb0&amp;experiment_id=1&amp;trace_id=e996a1553f3b4c7b97af98bc3665f7aa&amp;experiment_id=1&amp;trace_id=02d784d19b414f16bc36df2f6cace3af&amp;experiment_id=1&amp;trace_id=a4955baaaf944dbbadcd4f05cb1c10aa&amp;experiment_id=1&amp;trace_id=fcaf8824996d4c7eab4d03bd198f2c33&amp;experiment_id=1&amp;trace_id=73db052bdbe1418eb46bc6ec442df95e&amp;experiment_id=1&amp;trace_id=66a0910a43384a9f993773961116b241&amp;experiment_id=1&amp;version=3.1.4\"\n  /&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-49\" class=\"cell\" data-execution_count=\"430\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb46\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb46-1\"&gt;&lt;a href=\"#cb46-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;import&lt;/span&gt; pandas &lt;span class=\"im\"&gt;as&lt;/span&gt; pd&lt;/span&gt;\n&lt;span id=\"cb46-2\"&gt;&lt;a href=\"#cb46-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb46-3\"&gt;&lt;a href=\"#cb46-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;tdf &lt;span class=\"op\"&gt;=&lt;/span&gt; pd.DataFrame(&lt;/span&gt;\n&lt;span id=\"cb46-4\"&gt;&lt;a href=\"#cb46-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    [&lt;/span&gt;\n&lt;span id=\"cb46-5\"&gt;&lt;a href=\"#cb46-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        {&lt;span class=\"st\"&gt;&quot;LLM&quot;&lt;/span&gt;: llms[idx].model, &lt;span class=\"st\"&gt;&quot;Evaluation Score&quot;&lt;/span&gt;: candidate[&lt;span class=\"dv\"&gt;0&lt;/span&gt;]}&lt;/span&gt;\n&lt;span id=\"cb46-6\"&gt;&lt;a href=\"#cb46-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;for&lt;/span&gt; idx, candidate &lt;span class=\"kw\"&gt;in&lt;/span&gt; &lt;span class=\"bu\"&gt;enumerate&lt;/span&gt;(probe_results)&lt;/span&gt;\n&lt;span id=\"cb46-7\"&gt;&lt;a href=\"#cb46-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    ]&lt;/span&gt;\n&lt;span id=\"cb46-8\"&gt;&lt;a href=\"#cb46-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;)&lt;/span&gt;\n&lt;span id=\"cb46-9\"&gt;&lt;a href=\"#cb46-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"bu\"&gt;print&lt;/span&gt;(tdf)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;div class=\"cell-output cell-output-stdout\"&gt;\n&lt;pre&gt;&lt;code&gt;                                  LLM  Evaluation Score\n0           openai/gpt-4.1-2025-04-14              75.0\n1      openai/gpt-4.1-mini-2025-04-14              65.0\n2           openai/o4-mini-2025-04-16              78.5\n3  anthropic/claude-sonnet-4-20250514              75.0\n4             gemini/gemini-2.5-flash              74.0\n5        gemini/gemini-2.5-flash-lite              64.0\n6                openai/o3-2025-04-16              81.0\n7    anthropic/claude-opus-4-20250514              80.0\n8               gemini/gemini-2.5-pro              78.5&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;From the above, we see that:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;Similar to the gate-only results, the &lt;em&gt;probe&lt;/em&gt; dataset results should that OAI o3 performs the best, with 81% accuracy.&lt;/li&gt;\n&lt;li&gt;Anthropic Opus is a close second, with 80% accuracy. However, it is &lt;strong&gt;significantly&lt;/strong&gt; more expensive, at $15/Million tokens 😱&lt;/li&gt;\n&lt;li&gt;Google’s Frontier model Gemini-pro is third, with 78% accuracy.&lt;/li&gt;\n&lt;li&gt;We see that the smaller reasoning models do quite well, with o4-mini getting around 78.5% accuracy, Anthropic sonnet-4 around 75% accuracy, and Google Gemini 2.5-flash at 74%. Note that, even here, Anthropic’s costs are significantly higher than the other models.&lt;/li&gt;\n&lt;li&gt;We also see that the “mini/lite” version of models provided by Google and OAI have similar performance, around ~65%.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Given the above insights, we can now select our models:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;strong&gt;Anthropic Cost&lt;/strong&gt;\n&lt;ul&gt;\n&lt;li&gt;All Anthropic models are significantly more expensive than the competitors, and have a performance on par or below the competetiors.&lt;/li&gt;\n&lt;li&gt;Hence, from our final list, we will exclude Anthropic models.&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Frontier Model Cost&lt;/strong&gt;\n&lt;ul&gt;\n&lt;li&gt;Frontier models are generally quite expensive.&lt;/li&gt;\n&lt;li&gt;From our tests, we see that OAI o3 has the best performace, with Google Gemini 2.5-pro having a performance on or below o3.&lt;/li&gt;\n&lt;li&gt;To save costs, we will keep only one frontier model in the final list i.e o3&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Smaller Reasoning Models&lt;/strong&gt;\n&lt;ul&gt;\n&lt;li&gt;We also see the following models showing promising results across the board:\n&lt;ul&gt;\n&lt;li&gt;o4-mini&lt;/li&gt;\n&lt;li&gt;gemini-2.5-flash&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Non reaosning models&lt;/strong&gt;\n&lt;ul&gt;\n&lt;li&gt;GPT-4.1 seems to perform as well as the smaller reasoning models, but it is about 50% more expensive($2/Million input tokens).&lt;/li&gt;\n&lt;li&gt;Given that we already plan to include models with similar reasoning capabilities, we will exclude GPT-4.1 from our final list.&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Small models&lt;/strong&gt;\n&lt;ul&gt;\n&lt;li&gt;Currently, the small models variants of all models are significantly behind the larger models.&lt;/li&gt;\n&lt;li&gt;While they are cost effective, and likely their performance can be increased with improvements to the prompts, fine-tuning, etc., we will skip this models for now due to time constraits.&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Hence, our final list of models will be:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;o3&lt;/li&gt;\n&lt;li&gt;o4-mini&lt;/li&gt;\n&lt;li&gt;gemini-2.5-flash&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/section&gt;\n&lt;section id=\"error-analysis\" class=\"level3\"&gt;\n&lt;h3&gt;Error Analysis&lt;/h3&gt;\n&lt;p&gt;Given that we have the results for the gate and probe datasets, we can perform some quick preliminary error analysis to understand the performance of the models on these datasets.&lt;/p&gt;\n&lt;p&gt;We will restrict our analysis to the final list of models(o3, o4-mini and gemini-2.5-flash).&lt;/p&gt;\n&lt;div id=\"cell-54\" class=\"cell\" data-execution_count=\"431\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb48\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb48-1\"&gt;&lt;a href=\"#cb48-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;final_selected_models &lt;span class=\"op\"&gt;=&lt;/span&gt; [&lt;/span&gt;\n&lt;span id=\"cb48-2\"&gt;&lt;a href=\"#cb48-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    lm_oai_o4_mini,&lt;/span&gt;\n&lt;span id=\"cb48-3\"&gt;&lt;a href=\"#cb48-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    lm_gemini_flash_2_5,&lt;/span&gt;\n&lt;span id=\"cb48-4\"&gt;&lt;a href=\"#cb48-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    lm_oai_o3,&lt;/span&gt;\n&lt;span id=\"cb48-5\"&gt;&lt;a href=\"#cb48-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-55\" class=\"cell\" data-execution_count=\"432\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb49\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb49-1\"&gt;&lt;a href=\"#cb49-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;gate_and_probe_results &lt;span class=\"op\"&gt;=&lt;/span&gt; results &lt;span class=\"op\"&gt;+&lt;/span&gt; probe_results&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-56\" class=\"cell\" data-execution_count=\"433\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb50\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb50-1\"&gt;&lt;a href=\"#cb50-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"bu\"&gt;len&lt;/span&gt;(gate_and_probe_results)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;div class=\"cell-output cell-output-display\" data-execution_count=\"433\"&gt;\n&lt;pre&gt;&lt;code&gt;18&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-57\" class=\"cell\" data-execution_count=\"437\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb52\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb52-1\"&gt;&lt;a href=\"#cb52-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;selected_records &lt;span class=\"op\"&gt;=&lt;/span&gt; []&lt;/span&gt;\n&lt;span id=\"cb52-2\"&gt;&lt;a href=\"#cb52-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"cf\"&gt;for&lt;/span&gt; idx, record &lt;span class=\"kw\"&gt;in&lt;/span&gt; &lt;span class=\"bu\"&gt;enumerate&lt;/span&gt;(gate_and_probe_results):&lt;/span&gt;\n&lt;span id=\"cb52-3\"&gt;&lt;a href=\"#cb52-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"co\"&gt;# Hack: Dirty hack to get results our selected LLMs. Sorry!&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb52-4\"&gt;&lt;a href=\"#cb52-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;if&lt;/span&gt; idx &lt;span class=\"kw\"&gt;in&lt;/span&gt; [&lt;span class=\"dv\"&gt;2&lt;/span&gt;, &lt;span class=\"dv\"&gt;4&lt;/span&gt;, &lt;span class=\"dv\"&gt;6&lt;/span&gt;, &lt;span class=\"dv\"&gt;11&lt;/span&gt;, &lt;span class=\"dv\"&gt;13&lt;/span&gt;, &lt;span class=\"dv\"&gt;15&lt;/span&gt;]:&lt;/span&gt;\n&lt;span id=\"cb52-5\"&gt;&lt;a href=\"#cb52-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;for&lt;/span&gt; example, prediction, score &lt;span class=\"kw\"&gt;in&lt;/span&gt; record[&lt;span class=\"dv\"&gt;1&lt;/span&gt;]:&lt;/span&gt;\n&lt;span id=\"cb52-6\"&gt;&lt;a href=\"#cb52-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            model_idx &lt;span class=\"op\"&gt;=&lt;/span&gt; idx &lt;span class=\"cf\"&gt;if&lt;/span&gt; idx &lt;span class=\"op\"&gt;&lt;&lt;/span&gt; &lt;span class=\"dv\"&gt;9&lt;/span&gt; &lt;span class=\"cf\"&gt;else&lt;/span&gt; idx &lt;span class=\"op\"&gt;-&lt;/span&gt; &lt;span class=\"dv\"&gt;9&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb52-7\"&gt;&lt;a href=\"#cb52-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            example_copy &lt;span class=\"op\"&gt;=&lt;/span&gt; deepcopy(example)&lt;/span&gt;\n&lt;span id=\"cb52-8\"&gt;&lt;a href=\"#cb52-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            example_copy[&lt;span class=\"st\"&gt;&quot;ground_truth_answer&quot;&lt;/span&gt;] &lt;span class=\"op\"&gt;=&lt;/span&gt; example_copy[&lt;span class=\"st\"&gt;&quot;answer&quot;&lt;/span&gt;]&lt;/span&gt;\n&lt;span id=\"cb52-9\"&gt;&lt;a href=\"#cb52-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            &lt;span class=\"kw\"&gt;del&lt;/span&gt; example_copy[&lt;span class=\"st\"&gt;&quot;answer&quot;&lt;/span&gt;]&lt;/span&gt;\n&lt;span id=\"cb52-10\"&gt;&lt;a href=\"#cb52-10\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb52-11\"&gt;&lt;a href=\"#cb52-11\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            selected_records.append(&lt;/span&gt;\n&lt;span id=\"cb52-12\"&gt;&lt;a href=\"#cb52-12\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                {&lt;/span&gt;\n&lt;span id=\"cb52-13\"&gt;&lt;a href=\"#cb52-13\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                    &lt;span class=\"st\"&gt;&quot;model_name&quot;&lt;/span&gt;: model_selection_llms[model_idx].model,&lt;/span&gt;\n&lt;span id=\"cb52-14\"&gt;&lt;a href=\"#cb52-14\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                    &lt;span class=\"st\"&gt;&quot;turn_em_metric_score&quot;&lt;/span&gt;: score,&lt;/span&gt;\n&lt;span id=\"cb52-15\"&gt;&lt;a href=\"#cb52-15\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                    &lt;span class=\"op\"&gt;**&lt;/span&gt;example_copy.toDict(),&lt;/span&gt;\n&lt;span id=\"cb52-16\"&gt;&lt;a href=\"#cb52-16\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                    &lt;span class=\"op\"&gt;**&lt;/span&gt;prediction.toDict(),&lt;/span&gt;\n&lt;span id=\"cb52-17\"&gt;&lt;a href=\"#cb52-17\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                }&lt;/span&gt;\n&lt;span id=\"cb52-18\"&gt;&lt;a href=\"#cb52-18\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            )&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-58\" class=\"cell\" data-execution_count=\"441\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb53\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb53-1\"&gt;&lt;a href=\"#cb53-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;selected_records[&lt;span class=\"dv\"&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;div class=\"cell-output cell-output-display\" data-execution_count=\"441\"&gt;\n&lt;pre&gt;&lt;code&gt;{&#39;model_name&#39;: &#39;openai/o4-mini-2025-04-16&#39;,\n &#39;turn_em_metric_score&#39;: 1.0,\n &#39;conversation_context&#39;: &#39;None&#39;,\n &#39;evidence_snippets&#39;: &quot;[PRE]\\nentergy corporation and subsidiaries management&#39;s financial discussion and analysis refer to 201cselected financial data - five-year comparison of entergy corporation and subsidiaries 201d which accompanies entergy corporation 2019s financial statements in this report for further information with respect to operating statistics . in november 2007 the board approved a plan to pursue a separation of entergy 2019s non-utility nuclear business from entergy through a spin-off of the business to entergy shareholders . in april 2010 , entergy announced that it planned to unwind the business infrastructure associated with the proposed spin-off transaction . as a result of the plan to unwind the business infrastructure , entergy recorded expenses in 2010 for the write-off of certain capitalized costs incurred in connection with the planned spin-off transaction . these costs are discussed in more detail below and throughout this section . net revenue utility following is an analysis of the change in net revenue comparing 2010 to 2009 . amount ( in millions ) .\\n[/PRE]\\n[POST]\\nthe volume/weather variance is primarily due to an increase of 8362 gwh , or 8% ( 8 % ) , in billed electricity usage in all retail sectors , including the effect on the residential sector of colder weather in the first quarter 2010 compared to 2009 and warmer weather in the second and third quarters 2010 compared to 2009 . the industrial sector reflected strong sales growth on continuing signs of economic recovery . the improvement in this sector was primarily driven by inventory restocking and strong exports with the chemicals , refining , and miscellaneous manufacturing sectors leading the improvement . the retail electric price variance is primarily due to : increases in the formula rate plan riders at entergy gulf states louisiana effective november 2009 , january 2010 , and september 2010 , at entergy louisiana effective november 2009 , and at entergy mississippi effective july 2009 ; a base rate increase at entergy arkansas effective july 2010 ; rate actions at entergy texas , including base rate increases effective in may and august 2010 ; a formula rate plan provision of $ 16.6 million recorded in the third quarter 2009 for refunds that were made to customers in accordance with settlements approved by the lpsc ; and the recovery in 2009 by entergy arkansas of 2008 extraordinary storm costs , as approved by the apsc , which ceased in january 2010 . the recovery of storm costs is offset in other operation and maintenance expenses . see note 2 to the financial statements for further discussion of the proceedings referred to above. .\\n[/POST]&quot;,\n &#39;table&#39;: &#39;| Row | 2009 net revenue | volume/weather | retail electric price | provision for regulatory proceedings | rough production cost equalization | ano decommissioning trust | fuel recovery | other | 2010 net revenue |\\n|---|---|---|---|---|---|---|---|---|---|\\n| amount ( in millions ) | 4694.0 | 231.0 | 137.0 | 26.0 | 19.0 | -24.0 | -44.0 | 12.0 | 5051.0 |&#39;,\n &#39;question&#39;: &#39;what was the difference in net revenue between 2009 and 2010?&#39;,\n &#39;id&#39;: &#39;Single_ETR/2011/page_22.pdf-3&#39;,\n &#39;doc_pre_text&#39;: &quot;entergy corporation and subsidiaries management&#39;s financial discussion and analysis refer to 201cselected financial data - five-year comparison of entergy corporation and subsidiaries 201d which accompanies entergy corporation 2019s financial statements in this report for further information with respect to operating statistics . in november 2007 the board approved a plan to pursue a separation of entergy 2019s non-utility nuclear business from entergy through a spin-off of the business to entergy shareholders . in april 2010 , entergy announced that it planned to unwind the business infrastructure associated with the proposed spin-off transaction . as a result of the plan to unwind the business infrastructure , entergy recorded expenses in 2010 for the write-off of certain capitalized costs incurred in connection with the planned spin-off transaction . these costs are discussed in more detail below and throughout this section . net revenue utility following is an analysis of the change in net revenue comparing 2010 to 2009 . amount ( in millions ) .&quot;,\n &#39;doc_post_text&#39;: &#39;the volume/weather variance is primarily due to an increase of 8362 gwh , or 8% ( 8 % ) , in billed electricity usage in all retail sectors , including the effect on the residential sector of colder weather in the first quarter 2010 compared to 2009 and warmer weather in the second and third quarters 2010 compared to 2009 . the industrial sector reflected strong sales growth on continuing signs of economic recovery . the improvement in this sector was primarily driven by inventory restocking and strong exports with the chemicals , refining , and miscellaneous manufacturing sectors leading the improvement . the retail electric price variance is primarily due to : increases in the formula rate plan riders at entergy gulf states louisiana effective november 2009 , january 2010 , and september 2010 , at entergy louisiana effective november 2009 , and at entergy mississippi effective july 2009 ; a base rate increase at entergy arkansas effective july 2010 ; rate actions at entergy texas , including base rate increases effective in may and august 2010 ; a formula rate plan provision of $ 16.6 million recorded in the third quarter 2009 for refunds that were made to customers in accordance with settlements approved by the lpsc ; and the recovery in 2009 by entergy arkansas of 2008 extraordinary storm costs , as approved by the apsc , which ceased in january 2010 . the recovery of storm costs is offset in other operation and maintenance expenses . see note 2 to the financial statements for further discussion of the proceedings referred to above. .&#39;,\n &#39;doc_table&#39;: {&#39;amount ( in millions )&#39;: {&#39;2009 net revenue&#39;: 4694.0,\n   &#39;volume/weather&#39;: 231.0,\n   &#39;retail electric price&#39;: 137.0,\n   &#39;provision for regulatory proceedings&#39;: 26.0,\n   &#39;rough production cost equalization&#39;: 19.0,\n   &#39;ano decommissioning trust&#39;: -24.0,\n   &#39;fuel recovery&#39;: -44.0,\n   &#39;other&#39;: 12.0,\n   &#39;2010 net revenue&#39;: 5051.0}},\n &#39;dialogue_conv_questions&#39;: [&#39;what was the difference in net revenue between 2009 and 2010?&#39;,\n  &#39;and the specific value for 2009 again?&#39;,\n  &#39;so what was the percentage change during this time?&#39;],\n &#39;dialogue_conv_answers&#39;: [&#39;357&#39;, &#39;4694&#39;, &#39;7.61%&#39;],\n &#39;dialogue_turn_program&#39;: [&#39;subtract(5051, 4694)&#39;,\n  &#39;4694&#39;,\n  &#39;subtract(5051, 4694), divide(#0, 4694)&#39;],\n &#39;dialogue_executed_answers&#39;: [357.0, 4694.0, 0.07605],\n &#39;dialogue_qa_split&#39;: [False, False, False],\n &#39;features_num_dialogue_turns&#39;: 3,\n &#39;features_has_type2_question&#39;: False,\n &#39;features_has_duplicate_columns&#39;: False,\n &#39;features_has_non_numeric_values&#39;: False,\n &#39;ground_truth_answer&#39;: 357.0,\n &#39;reasoning&#39;: &#39;The table shows 2009 net revenue of 4,694.0 million and 2010 net revenue of 5,051.0 million. The difference is 5,051.0 minus 4,694.0, which equals 357.0 million.&#39;,\n &#39;ops&#39;: &#39;subtract(const_5051.0, const_4694.0)&#39;,\n &#39;answer&#39;: &#39;357.0&#39;}&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-59\" class=\"cell\" data-execution_count=\"462\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb55\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb55-1\"&gt;&lt;a href=\"#cb55-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;from&lt;/span&gt; typing &lt;span class=\"im\"&gt;import&lt;/span&gt; Literal&lt;/span&gt;\n&lt;span id=\"cb55-2\"&gt;&lt;a href=\"#cb55-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;import&lt;/span&gt; dspy&lt;/span&gt;\n&lt;span id=\"cb55-3\"&gt;&lt;a href=\"#cb55-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb55-4\"&gt;&lt;a href=\"#cb55-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb55-5\"&gt;&lt;a href=\"#cb55-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"kw\"&gt;class&lt;/span&gt; AssessmentSignature(dspy.Signature):&lt;/span&gt;\n&lt;span id=\"cb55-6\"&gt;&lt;a href=\"#cb55-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"co\"&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb55-7\"&gt;&lt;a href=\"#cb55-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    Categorize model predictions by comparing them to ground truth, context, and evidence.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb55-8\"&gt;&lt;a href=\"#cb55-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    Assign a specific error type or OK label, with concise justification, based on rubric.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb55-9\"&gt;&lt;a href=\"#cb55-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb55-10\"&gt;&lt;a href=\"#cb55-10\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    When comparing numerical answers, always allow a tolerance of 1e-2. For eg: If the question asks for a percentage, but the ground_truth_answer is given as a decimal, the assessment_answer label will be GROUND_TRUTH_INCORRECT&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb55-11\"&gt;&lt;a href=\"#cb55-11\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    &quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb55-12\"&gt;&lt;a href=\"#cb55-12\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb55-13\"&gt;&lt;a href=\"#cb55-13\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    ground_truth_answer: &lt;span class=\"bu\"&gt;str&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.InputField(&lt;/span&gt;\n&lt;span id=\"cb55-14\"&gt;&lt;a href=\"#cb55-14\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;The correct answer as per the ground truth data.&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb55-15\"&gt;&lt;a href=\"#cb55-15\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    )&lt;/span&gt;\n&lt;span id=\"cb55-16\"&gt;&lt;a href=\"#cb55-16\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    table: &lt;span class=\"bu\"&gt;str&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.InputField(&lt;/span&gt;\n&lt;span id=\"cb55-17\"&gt;&lt;a href=\"#cb55-17\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;Tabular data (as string) relevant to the question and answer.&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb55-18\"&gt;&lt;a href=\"#cb55-18\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    )&lt;/span&gt;\n&lt;span id=\"cb55-19\"&gt;&lt;a href=\"#cb55-19\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    conversation_context: &lt;span class=\"bu\"&gt;str&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.InputField(&lt;/span&gt;\n&lt;span id=\"cb55-20\"&gt;&lt;a href=\"#cb55-20\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;Previous dialogue turns or context for the current question.&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb55-21\"&gt;&lt;a href=\"#cb55-21\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    )&lt;/span&gt;\n&lt;span id=\"cb55-22\"&gt;&lt;a href=\"#cb55-22\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    evidence_snippets: &lt;span class=\"bu\"&gt;str&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.InputField(&lt;/span&gt;\n&lt;span id=\"cb55-23\"&gt;&lt;a href=\"#cb55-23\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;Text snippets from the source document supporting the answer.&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb55-24\"&gt;&lt;a href=\"#cb55-24\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    )&lt;/span&gt;\n&lt;span id=\"cb55-25\"&gt;&lt;a href=\"#cb55-25\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    question: &lt;span class=\"bu\"&gt;str&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.InputField(desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;The question being answered by the model.&quot;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb55-26\"&gt;&lt;a href=\"#cb55-26\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb55-27\"&gt;&lt;a href=\"#cb55-27\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    predicted_reasoning: &lt;span class=\"bu\"&gt;str&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.InputField(&lt;/span&gt;\n&lt;span id=\"cb55-28\"&gt;&lt;a href=\"#cb55-28\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;Model&#39;s step-by-step explanation or justification for its answer.&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb55-29\"&gt;&lt;a href=\"#cb55-29\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    )&lt;/span&gt;\n&lt;span id=\"cb55-30\"&gt;&lt;a href=\"#cb55-30\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    predicted_ops: &lt;span class=\"bu\"&gt;str&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.InputField(&lt;/span&gt;\n&lt;span id=\"cb55-31\"&gt;&lt;a href=\"#cb55-31\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;Operations or programmatic steps the model used to derive its answer.&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb55-32\"&gt;&lt;a href=\"#cb55-32\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    )&lt;/span&gt;\n&lt;span id=\"cb55-33\"&gt;&lt;a href=\"#cb55-33\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    predicted_answer: &lt;span class=\"bu\"&gt;str&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.InputField(&lt;/span&gt;\n&lt;span id=\"cb55-34\"&gt;&lt;a href=\"#cb55-34\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;The answer predicted by the model for the given question.&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb55-35\"&gt;&lt;a href=\"#cb55-35\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    )&lt;/span&gt;\n&lt;span id=\"cb55-36\"&gt;&lt;a href=\"#cb55-36\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb55-37\"&gt;&lt;a href=\"#cb55-37\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    assessment_answer: Literal[&lt;/span&gt;\n&lt;span id=\"cb55-38\"&gt;&lt;a href=\"#cb55-38\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"st\"&gt;&quot;OK&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb55-39\"&gt;&lt;a href=\"#cb55-39\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"st\"&gt;&quot;NUMERICAL_ANSWER_WRONG&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb55-40\"&gt;&lt;a href=\"#cb55-40\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"st\"&gt;&quot;TEXTUAL_SELECTION_ANSWER_WRONG&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb55-41\"&gt;&lt;a href=\"#cb55-41\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"st\"&gt;&quot;FORMAT_ERROR&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb55-42\"&gt;&lt;a href=\"#cb55-42\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"st\"&gt;&quot;EVIDENCE_MISMATCH&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb55-43\"&gt;&lt;a href=\"#cb55-43\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"st\"&gt;&quot;GROUND_TRUTH_INCORRECT&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb55-44\"&gt;&lt;a href=\"#cb55-44\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    ] &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.OutputField(desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;Single categorical label.&quot;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-60\" class=\"cell\" data-execution_count=\"468\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb56\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb56-1\"&gt;&lt;a href=\"#cb56-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;selected_records[&lt;span class=\"dv\"&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;div class=\"cell-output cell-output-display\" data-execution_count=\"468\"&gt;\n&lt;pre&gt;&lt;code&gt;{&#39;model_name&#39;: &#39;openai/o4-mini-2025-04-16&#39;,\n &#39;turn_em_metric_score&#39;: 1.0,\n &#39;conversation_context&#39;: &#39;None&#39;,\n &#39;evidence_snippets&#39;: &quot;[PRE]\\nentergy corporation and subsidiaries management&#39;s financial discussion and analysis refer to 201cselected financial data - five-year comparison of entergy corporation and subsidiaries 201d which accompanies entergy corporation 2019s financial statements in this report for further information with respect to operating statistics . in november 2007 the board approved a plan to pursue a separation of entergy 2019s non-utility nuclear business from entergy through a spin-off of the business to entergy shareholders . in april 2010 , entergy announced that it planned to unwind the business infrastructure associated with the proposed spin-off transaction . as a result of the plan to unwind the business infrastructure , entergy recorded expenses in 2010 for the write-off of certain capitalized costs incurred in connection with the planned spin-off transaction . these costs are discussed in more detail below and throughout this section . net revenue utility following is an analysis of the change in net revenue comparing 2010 to 2009 . amount ( in millions ) .\\n[/PRE]\\n[POST]\\nthe volume/weather variance is primarily due to an increase of 8362 gwh , or 8% ( 8 % ) , in billed electricity usage in all retail sectors , including the effect on the residential sector of colder weather in the first quarter 2010 compared to 2009 and warmer weather in the second and third quarters 2010 compared to 2009 . the industrial sector reflected strong sales growth on continuing signs of economic recovery . the improvement in this sector was primarily driven by inventory restocking and strong exports with the chemicals , refining , and miscellaneous manufacturing sectors leading the improvement . the retail electric price variance is primarily due to : increases in the formula rate plan riders at entergy gulf states louisiana effective november 2009 , january 2010 , and september 2010 , at entergy louisiana effective november 2009 , and at entergy mississippi effective july 2009 ; a base rate increase at entergy arkansas effective july 2010 ; rate actions at entergy texas , including base rate increases effective in may and august 2010 ; a formula rate plan provision of $ 16.6 million recorded in the third quarter 2009 for refunds that were made to customers in accordance with settlements approved by the lpsc ; and the recovery in 2009 by entergy arkansas of 2008 extraordinary storm costs , as approved by the apsc , which ceased in january 2010 . the recovery of storm costs is offset in other operation and maintenance expenses . see note 2 to the financial statements for further discussion of the proceedings referred to above. .\\n[/POST]&quot;,\n &#39;table&#39;: &#39;| Row | 2009 net revenue | volume/weather | retail electric price | provision for regulatory proceedings | rough production cost equalization | ano decommissioning trust | fuel recovery | other | 2010 net revenue |\\n|---|---|---|---|---|---|---|---|---|---|\\n| amount ( in millions ) | 4694.0 | 231.0 | 137.0 | 26.0 | 19.0 | -24.0 | -44.0 | 12.0 | 5051.0 |&#39;,\n &#39;question&#39;: &#39;what was the difference in net revenue between 2009 and 2010?&#39;,\n &#39;id&#39;: &#39;Single_ETR/2011/page_22.pdf-3&#39;,\n &#39;doc_pre_text&#39;: &quot;entergy corporation and subsidiaries management&#39;s financial discussion and analysis refer to 201cselected financial data - five-year comparison of entergy corporation and subsidiaries 201d which accompanies entergy corporation 2019s financial statements in this report for further information with respect to operating statistics . in november 2007 the board approved a plan to pursue a separation of entergy 2019s non-utility nuclear business from entergy through a spin-off of the business to entergy shareholders . in april 2010 , entergy announced that it planned to unwind the business infrastructure associated with the proposed spin-off transaction . as a result of the plan to unwind the business infrastructure , entergy recorded expenses in 2010 for the write-off of certain capitalized costs incurred in connection with the planned spin-off transaction . these costs are discussed in more detail below and throughout this section . net revenue utility following is an analysis of the change in net revenue comparing 2010 to 2009 . amount ( in millions ) .&quot;,\n &#39;doc_post_text&#39;: &#39;the volume/weather variance is primarily due to an increase of 8362 gwh , or 8% ( 8 % ) , in billed electricity usage in all retail sectors , including the effect on the residential sector of colder weather in the first quarter 2010 compared to 2009 and warmer weather in the second and third quarters 2010 compared to 2009 . the industrial sector reflected strong sales growth on continuing signs of economic recovery . the improvement in this sector was primarily driven by inventory restocking and strong exports with the chemicals , refining , and miscellaneous manufacturing sectors leading the improvement . the retail electric price variance is primarily due to : increases in the formula rate plan riders at entergy gulf states louisiana effective november 2009 , january 2010 , and september 2010 , at entergy louisiana effective november 2009 , and at entergy mississippi effective july 2009 ; a base rate increase at entergy arkansas effective july 2010 ; rate actions at entergy texas , including base rate increases effective in may and august 2010 ; a formula rate plan provision of $ 16.6 million recorded in the third quarter 2009 for refunds that were made to customers in accordance with settlements approved by the lpsc ; and the recovery in 2009 by entergy arkansas of 2008 extraordinary storm costs , as approved by the apsc , which ceased in january 2010 . the recovery of storm costs is offset in other operation and maintenance expenses . see note 2 to the financial statements for further discussion of the proceedings referred to above. .&#39;,\n &#39;doc_table&#39;: {&#39;amount ( in millions )&#39;: {&#39;2009 net revenue&#39;: 4694.0,\n   &#39;volume/weather&#39;: 231.0,\n   &#39;retail electric price&#39;: 137.0,\n   &#39;provision for regulatory proceedings&#39;: 26.0,\n   &#39;rough production cost equalization&#39;: 19.0,\n   &#39;ano decommissioning trust&#39;: -24.0,\n   &#39;fuel recovery&#39;: -44.0,\n   &#39;other&#39;: 12.0,\n   &#39;2010 net revenue&#39;: 5051.0}},\n &#39;dialogue_conv_questions&#39;: [&#39;what was the difference in net revenue between 2009 and 2010?&#39;,\n  &#39;and the specific value for 2009 again?&#39;,\n  &#39;so what was the percentage change during this time?&#39;],\n &#39;dialogue_conv_answers&#39;: [&#39;357&#39;, &#39;4694&#39;, &#39;7.61%&#39;],\n &#39;dialogue_turn_program&#39;: [&#39;subtract(5051, 4694)&#39;,\n  &#39;4694&#39;,\n  &#39;subtract(5051, 4694), divide(#0, 4694)&#39;],\n &#39;dialogue_executed_answers&#39;: [357.0, 4694.0, 0.07605],\n &#39;dialogue_qa_split&#39;: [False, False, False],\n &#39;features_num_dialogue_turns&#39;: 3,\n &#39;features_has_type2_question&#39;: False,\n &#39;features_has_duplicate_columns&#39;: False,\n &#39;features_has_non_numeric_values&#39;: False,\n &#39;ground_truth_answer&#39;: 357.0,\n &#39;reasoning&#39;: &#39;The table shows 2009 net revenue of 4,694.0 million and 2010 net revenue of 5,051.0 million. The difference is 5,051.0 minus 4,694.0, which equals 357.0 million.&#39;,\n &#39;ops&#39;: &#39;subtract(const_5051.0, const_4694.0)&#39;,\n &#39;answer&#39;: &#39;357.0&#39;}&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-61\" class=\"cell\" data-execution_count=\"469\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb58\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb58-1\"&gt;&lt;a href=\"#cb58-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;judge_examples &lt;span class=\"op\"&gt;=&lt;/span&gt; []&lt;/span&gt;\n&lt;span id=\"cb58-2\"&gt;&lt;a href=\"#cb58-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb58-3\"&gt;&lt;a href=\"#cb58-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"cf\"&gt;for&lt;/span&gt; record &lt;span class=\"kw\"&gt;in&lt;/span&gt; selected_records:&lt;/span&gt;\n&lt;span id=\"cb58-4\"&gt;&lt;a href=\"#cb58-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;if&lt;/span&gt; record[&lt;span class=\"st\"&gt;&quot;turn_em_metric_score&quot;&lt;/span&gt;] &lt;span class=\"op\"&gt;!=&lt;/span&gt; &lt;span class=\"dv\"&gt;1&lt;/span&gt;:&lt;/span&gt;\n&lt;span id=\"cb58-5\"&gt;&lt;a href=\"#cb58-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        judge_examples.append(&lt;/span&gt;\n&lt;span id=\"cb58-6\"&gt;&lt;a href=\"#cb58-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            dspy.Example(&lt;/span&gt;\n&lt;span id=\"cb58-7\"&gt;&lt;a href=\"#cb58-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                &lt;span class=\"bu\"&gt;id&lt;/span&gt;&lt;span class=\"op\"&gt;=&lt;/span&gt;record[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;],&lt;/span&gt;\n&lt;span id=\"cb58-8\"&gt;&lt;a href=\"#cb58-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                model_name&lt;span class=\"op\"&gt;=&lt;/span&gt;record[&lt;span class=\"st\"&gt;&quot;model_name&quot;&lt;/span&gt;],&lt;/span&gt;\n&lt;span id=\"cb58-9\"&gt;&lt;a href=\"#cb58-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                predicted_reasoning&lt;span class=\"op\"&gt;=&lt;/span&gt;record[&lt;span class=\"st\"&gt;&quot;reasoning&quot;&lt;/span&gt;],&lt;/span&gt;\n&lt;span id=\"cb58-10\"&gt;&lt;a href=\"#cb58-10\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                predicted_ops&lt;span class=\"op\"&gt;=&lt;/span&gt;record[&lt;span class=\"st\"&gt;&quot;ops&quot;&lt;/span&gt;],&lt;/span&gt;\n&lt;span id=\"cb58-11\"&gt;&lt;a href=\"#cb58-11\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                predicted_answer&lt;span class=\"op\"&gt;=&lt;/span&gt;record[&lt;span class=\"st\"&gt;&quot;answer&quot;&lt;/span&gt;],&lt;/span&gt;\n&lt;span id=\"cb58-12\"&gt;&lt;a href=\"#cb58-12\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                ground_truth_answer&lt;span class=\"op\"&gt;=&lt;/span&gt;record[&lt;span class=\"st\"&gt;&quot;ground_truth_answer&quot;&lt;/span&gt;],&lt;/span&gt;\n&lt;span id=\"cb58-13\"&gt;&lt;a href=\"#cb58-13\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                table&lt;span class=\"op\"&gt;=&lt;/span&gt;record[&lt;span class=\"st\"&gt;&quot;table&quot;&lt;/span&gt;],&lt;/span&gt;\n&lt;span id=\"cb58-14\"&gt;&lt;a href=\"#cb58-14\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                conversation_context&lt;span class=\"op\"&gt;=&lt;/span&gt;record[&lt;span class=\"st\"&gt;&quot;conversation_context&quot;&lt;/span&gt;],&lt;/span&gt;\n&lt;span id=\"cb58-15\"&gt;&lt;a href=\"#cb58-15\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                evidence_snippets&lt;span class=\"op\"&gt;=&lt;/span&gt;record[&lt;span class=\"st\"&gt;&quot;evidence_snippets&quot;&lt;/span&gt;],&lt;/span&gt;\n&lt;span id=\"cb58-16\"&gt;&lt;a href=\"#cb58-16\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                question&lt;span class=\"op\"&gt;=&lt;/span&gt;record[&lt;span class=\"st\"&gt;&quot;question&quot;&lt;/span&gt;],&lt;/span&gt;\n&lt;span id=\"cb58-17\"&gt;&lt;a href=\"#cb58-17\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            ).with_inputs(&lt;/span&gt;\n&lt;span id=\"cb58-18\"&gt;&lt;a href=\"#cb58-18\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                &lt;span class=\"st\"&gt;&quot;predicted_reasoning&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb58-19\"&gt;&lt;a href=\"#cb58-19\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                &lt;span class=\"st\"&gt;&quot;predicted_ops&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb58-20\"&gt;&lt;a href=\"#cb58-20\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                &lt;span class=\"st\"&gt;&quot;predicted_answer&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb58-21\"&gt;&lt;a href=\"#cb58-21\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                &lt;span class=\"st\"&gt;&quot;ground_truth_answer&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb58-22\"&gt;&lt;a href=\"#cb58-22\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                &lt;span class=\"st\"&gt;&quot;table&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb58-23\"&gt;&lt;a href=\"#cb58-23\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                &lt;span class=\"st\"&gt;&quot;conversation_context&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb58-24\"&gt;&lt;a href=\"#cb58-24\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                &lt;span class=\"st\"&gt;&quot;evidence_snippets&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb58-25\"&gt;&lt;a href=\"#cb58-25\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                &lt;span class=\"st\"&gt;&quot;question&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb58-26\"&gt;&lt;a href=\"#cb58-26\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            )&lt;/span&gt;\n&lt;span id=\"cb58-27\"&gt;&lt;a href=\"#cb58-27\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        )&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;/div&gt;\n&lt;p&gt;We’ll use Gemini Flash 2.5 as our judge model, for classifying the generated predictions for error analysis&lt;/p&gt;\n&lt;div id=\"cell-63\" class=\"cell\" data-execution_count=\"489\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb59\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb59-1\"&gt;&lt;a href=\"#cb59-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;from&lt;/span&gt; tqdm &lt;span class=\"im\"&gt;import&lt;/span&gt; tqdm&lt;/span&gt;\n&lt;span id=\"cb59-2\"&gt;&lt;a href=\"#cb59-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb59-3\"&gt;&lt;a href=\"#cb59-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;judge_lm &lt;span class=\"op\"&gt;=&lt;/span&gt; deepcopy(lm_gemini_flash_2_5)&lt;/span&gt;\n&lt;span id=\"cb59-4\"&gt;&lt;a href=\"#cb59-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb59-5\"&gt;&lt;a href=\"#cb59-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;judge_results &lt;span class=\"op\"&gt;=&lt;/span&gt; []&lt;/span&gt;\n&lt;span id=\"cb59-6\"&gt;&lt;a href=\"#cb59-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb59-7\"&gt;&lt;a href=\"#cb59-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"cf\"&gt;with&lt;/span&gt; mlflow.start_run(run_name&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;error_analysis_gemini_2.5_flash&quot;&lt;/span&gt;) &lt;span class=\"im\"&gt;as&lt;/span&gt; run:&lt;/span&gt;\n&lt;span id=\"cb59-8\"&gt;&lt;a href=\"#cb59-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;with&lt;/span&gt; dspy.context(lm&lt;span class=\"op\"&gt;=&lt;/span&gt;judge_lm, cache&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;, track_cost&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;):&lt;/span&gt;\n&lt;span id=\"cb59-9\"&gt;&lt;a href=\"#cb59-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;for&lt;/span&gt; example &lt;span class=\"kw\"&gt;in&lt;/span&gt; tqdm(judge_examples, desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;Judging examples&quot;&lt;/span&gt;):&lt;/span&gt;\n&lt;span id=\"cb59-10\"&gt;&lt;a href=\"#cb59-10\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            module &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.ChainOfThought(AssessmentSignature)&lt;/span&gt;\n&lt;span id=\"cb59-11\"&gt;&lt;a href=\"#cb59-11\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            jr &lt;span class=\"op\"&gt;=&lt;/span&gt; module(&lt;span class=\"op\"&gt;**&lt;/span&gt;example)&lt;/span&gt;\n&lt;span id=\"cb59-12\"&gt;&lt;a href=\"#cb59-12\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            jr[&lt;span class=\"st\"&gt;&quot;assessment_reasoning&quot;&lt;/span&gt;] &lt;span class=\"op\"&gt;=&lt;/span&gt; jr[&lt;span class=\"st\"&gt;&quot;reasoning&quot;&lt;/span&gt;]&lt;/span&gt;\n&lt;span id=\"cb59-13\"&gt;&lt;a href=\"#cb59-13\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            &lt;span class=\"kw\"&gt;del&lt;/span&gt; jr[&lt;span class=\"st\"&gt;&quot;reasoning&quot;&lt;/span&gt;]&lt;/span&gt;\n&lt;span id=\"cb59-14\"&gt;&lt;a href=\"#cb59-14\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            judge_results.append(&lt;/span&gt;\n&lt;span id=\"cb59-15\"&gt;&lt;a href=\"#cb59-15\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                {&lt;/span&gt;\n&lt;span id=\"cb59-16\"&gt;&lt;a href=\"#cb59-16\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                    &lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;: example[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;],&lt;/span&gt;\n&lt;span id=\"cb59-17\"&gt;&lt;a href=\"#cb59-17\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                    &lt;span class=\"st\"&gt;&quot;model_name&quot;&lt;/span&gt;: example[&lt;span class=\"st\"&gt;&quot;model_name&quot;&lt;/span&gt;],&lt;/span&gt;\n&lt;span id=\"cb59-18\"&gt;&lt;a href=\"#cb59-18\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                    &lt;span class=\"st\"&gt;&quot;question&quot;&lt;/span&gt;: example[&lt;span class=\"st\"&gt;&quot;question&quot;&lt;/span&gt;],&lt;/span&gt;\n&lt;span id=\"cb59-19\"&gt;&lt;a href=\"#cb59-19\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                    &lt;span class=\"st\"&gt;&quot;ground_truth_answer&quot;&lt;/span&gt;: example[&lt;span class=\"st\"&gt;&quot;ground_truth_answer&quot;&lt;/span&gt;],&lt;/span&gt;\n&lt;span id=\"cb59-20\"&gt;&lt;a href=\"#cb59-20\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                    &lt;span class=\"st\"&gt;&quot;predicted_answer&quot;&lt;/span&gt;: example[&lt;span class=\"st\"&gt;&quot;predicted_answer&quot;&lt;/span&gt;],&lt;/span&gt;\n&lt;span id=\"cb59-21\"&gt;&lt;a href=\"#cb59-21\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                    &lt;span class=\"st\"&gt;&quot;assessment_answer&quot;&lt;/span&gt;: jr[&lt;span class=\"st\"&gt;&quot;assessment_answer&quot;&lt;/span&gt;],&lt;/span&gt;\n&lt;span id=\"cb59-22\"&gt;&lt;a href=\"#cb59-22\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                    &lt;span class=\"st\"&gt;&quot;assessment_reasoning&quot;&lt;/span&gt;: jr[&lt;span class=\"st\"&gt;&quot;assessment_reasoning&quot;&lt;/span&gt;],&lt;/span&gt;\n&lt;span id=\"cb59-23\"&gt;&lt;a href=\"#cb59-23\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                }&lt;/span&gt;\n&lt;span id=\"cb59-24\"&gt;&lt;a href=\"#cb59-24\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            )&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;div class=\"cell-output cell-output-stderr\"&gt;\n&lt;pre&gt;&lt;code&gt;Judging examples:   1%|          | 2/289 [00:00&lt;00:17, 16.77it/s]2025/07/28 20:07:50 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:   1%|▏         | 4/289 [00:00&lt;00:19, 14.79it/s]2025/07/28 20:07:50 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:   2%|▏         | 6/289 [00:00&lt;00:19, 14.85it/s]2025/07/28 20:07:50 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:50 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:   4%|▍         | 11/289 [00:00&lt;00:22, 12.42it/s]2025/07/28 20:07:51 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:   5%|▍         | 14/289 [00:00&lt;00:18, 15.05it/s]2025/07/28 20:07:51 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:51 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:   6%|▌         | 17/289 [00:01&lt;00:15, 18.13it/s]2025/07/28 20:07:51 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:51 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:   7%|▋         | 20/289 [00:01&lt;00:13, 19.77it/s]2025/07/28 20:07:51 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:   8%|▊         | 24/289 [00:01&lt;00:11, 23.48it/s]2025/07/28 20:07:51 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  10%|▉         | 28/289 [00:01&lt;00:09, 26.52it/s]2025/07/28 20:07:51 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  11%|█         | 32/289 [00:01&lt;00:09, 27.24it/s]2025/07/28 20:07:51 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:52 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:52 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  12%|█▏        | 35/289 [00:01&lt;00:10, 23.43it/s]2025/07/28 20:07:52 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  13%|█▎        | 38/289 [00:01&lt;00:10, 23.92it/s]2025/07/28 20:07:52 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:52 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  14%|█▍        | 41/289 [00:01&lt;00:10, 23.64it/s]2025/07/28 20:07:52 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  15%|█▌        | 44/289 [00:02&lt;00:10, 24.06it/s]2025/07/28 20:07:52 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:52 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  16%|█▋        | 47/289 [00:02&lt;00:09, 24.36it/s]2025/07/28 20:07:52 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  17%|█▋        | 50/289 [00:02&lt;00:09, 24.44it/s]2025/07/28 20:07:52 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:52 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:52 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  18%|█▊        | 53/289 [00:02&lt;00:10, 23.14it/s]2025/07/28 20:07:52 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:53 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  20%|██        | 59/289 [00:02&lt;00:11, 20.29it/s]2025/07/28 20:07:53 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  21%|██▏       | 62/289 [00:03&lt;00:13, 16.86it/s]2025/07/28 20:07:53 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:53 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  22%|██▏       | 65/289 [00:03&lt;00:11, 19.32it/s]2025/07/28 20:07:53 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:53 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:53 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  24%|██▎       | 68/289 [00:03&lt;00:10, 20.77it/s]2025/07/28 20:07:53 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:53 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:53 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  25%|██▍       | 71/289 [00:03&lt;00:09, 22.32it/s]2025/07/28 20:07:53 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  26%|██▌       | 74/289 [00:03&lt;00:09, 22.84it/s]2025/07/28 20:07:53 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  27%|██▋       | 77/289 [00:03&lt;00:09, 22.32it/s]2025/07/28 20:07:54 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  28%|██▊       | 80/289 [00:03&lt;00:10, 20.68it/s]2025/07/28 20:07:54 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  30%|██▉       | 86/289 [00:04&lt;00:09, 21.69it/s]2025/07/28 20:07:54 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:54 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:54 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  31%|███       | 89/289 [00:04&lt;00:09, 21.10it/s]2025/07/28 20:07:54 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  32%|███▏      | 92/289 [00:04&lt;00:09, 21.50it/s]2025/07/28 20:07:54 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:54 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  33%|███▎      | 95/289 [00:04&lt;00:08, 22.81it/s]2025/07/28 20:07:54 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  34%|███▍      | 98/289 [00:04&lt;00:07, 23.91it/s]2025/07/28 20:07:55 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  35%|███▍      | 101/289 [00:04&lt;00:07, 24.41it/s]2025/07/28 20:07:55 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:55 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  36%|███▌      | 104/289 [00:04&lt;00:08, 20.70it/s]2025/07/28 20:07:55 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:55 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  37%|███▋      | 107/289 [00:05&lt;00:11, 16.11it/s]2025/07/28 20:07:55 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  38%|███▊      | 110/289 [00:05&lt;00:09, 18.39it/s]2025/07/28 20:07:55 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:55 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  39%|███▉      | 114/289 [00:05&lt;00:08, 21.66it/s]2025/07/28 20:07:55 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:55 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:55 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  41%|████      | 118/289 [00:05&lt;00:07, 24.12it/s]2025/07/28 20:07:56 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:56 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  42%|████▏     | 122/289 [00:05&lt;00:06, 25.92it/s]2025/07/28 20:07:56 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  44%|████▍     | 128/289 [00:05&lt;00:06, 23.89it/s]2025/07/28 20:07:56 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:56 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  45%|████▌     | 131/289 [00:06&lt;00:06, 22.85it/s]2025/07/28 20:07:56 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  46%|████▋     | 134/289 [00:06&lt;00:06, 23.46it/s]2025/07/28 20:07:56 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  47%|████▋     | 137/289 [00:06&lt;00:06, 23.90it/s]2025/07/28 20:07:56 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:56 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  48%|████▊     | 140/289 [00:06&lt;00:06, 23.84it/s]2025/07/28 20:07:56 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  52%|█████▏    | 149/289 [00:06&lt;00:05, 24.60it/s]2025/07/28 20:07:57 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:57 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:57 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  54%|█████▎    | 155/289 [00:07&lt;00:06, 22.09it/s]2025/07/28 20:07:57 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:57 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:57 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  55%|█████▍    | 158/289 [00:07&lt;00:07, 18.30it/s]2025/07/28 20:07:57 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:57 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  56%|█████▌    | 161/289 [00:07&lt;00:06, 19.50it/s]2025/07/28 20:07:57 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:57 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  57%|█████▋    | 164/289 [00:07&lt;00:05, 21.21it/s]2025/07/28 20:07:58 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:58 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  58%|█████▊    | 168/289 [00:07&lt;00:05, 23.87it/s]2025/07/28 20:07:58 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  60%|█████▉    | 172/289 [00:07&lt;00:04, 25.66it/s]2025/07/28 20:07:58 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:58 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  61%|██████    | 175/289 [00:07&lt;00:04, 26.17it/s]2025/07/28 20:07:58 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  62%|██████▏   | 178/289 [00:08&lt;00:05, 20.48it/s]2025/07/28 20:07:58 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  63%|██████▎   | 181/289 [00:08&lt;00:05, 19.97it/s]2025/07/28 20:07:58 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:58 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  64%|██████▎   | 184/289 [00:08&lt;00:04, 21.03it/s]2025/07/28 20:07:58 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:58 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:58 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  65%|██████▍   | 187/289 [00:08&lt;00:04, 21.89it/s]2025/07/28 20:07:59 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:59 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:59 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  66%|██████▌   | 190/289 [00:08&lt;00:04, 20.94it/s]2025/07/28 20:07:59 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  67%|██████▋   | 193/289 [00:08&lt;00:04, 21.33it/s]2025/07/28 20:07:59 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  68%|██████▊   | 196/289 [00:09&lt;00:04, 21.37it/s]2025/07/28 20:07:59 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:59 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  69%|██████▉   | 199/289 [00:09&lt;00:05, 17.97it/s]2025/07/28 20:07:59 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  70%|██████▉   | 201/289 [00:09&lt;00:05, 16.87it/s]2025/07/28 20:07:59 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  70%|███████   | 203/289 [00:09&lt;00:05, 14.73it/s]2025/07/28 20:08:00 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:00 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  71%|███████▏  | 206/289 [00:09&lt;00:04, 17.68it/s]2025/07/28 20:08:00 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  74%|███████▎  | 213/289 [00:09&lt;00:03, 23.63it/s]2025/07/28 20:08:00 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  75%|███████▍  | 216/289 [00:10&lt;00:02, 24.77it/s]2025/07/28 20:08:00 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  76%|███████▌  | 219/289 [00:10&lt;00:02, 25.95it/s]2025/07/28 20:08:00 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:00 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  77%|███████▋  | 222/289 [00:10&lt;00:02, 22.83it/s]2025/07/28 20:08:00 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:00 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  78%|███████▊  | 225/289 [00:10&lt;00:03, 19.59it/s]2025/07/28 20:08:00 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:00 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:01 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  79%|███████▉  | 228/289 [00:10&lt;00:03, 19.79it/s]2025/07/28 20:08:01 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  80%|███████▉  | 231/289 [00:10&lt;00:02, 20.88it/s]2025/07/28 20:08:01 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  81%|████████  | 234/289 [00:10&lt;00:02, 22.36it/s]2025/07/28 20:08:01 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  82%|████████▏ | 237/289 [00:11&lt;00:02, 22.83it/s]2025/07/28 20:08:01 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:01 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:01 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  83%|████████▎ | 240/289 [00:11&lt;00:02, 22.23it/s]2025/07/28 20:08:01 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:01 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  84%|████████▍ | 243/289 [00:11&lt;00:02, 21.50it/s]2025/07/28 20:08:01 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:01 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  85%|████████▌ | 246/289 [00:11&lt;00:02, 14.67it/s]2025/07/28 20:08:02 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  86%|████████▌ | 249/289 [00:11&lt;00:02, 16.99it/s]2025/07/28 20:08:02 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:02 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:02 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  87%|████████▋ | 252/289 [00:11&lt;00:01, 19.29it/s]2025/07/28 20:08:02 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  89%|████████▊ | 256/289 [00:12&lt;00:01, 22.46it/s]2025/07/28 20:08:02 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:02 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  90%|████████▉ | 260/289 [00:12&lt;00:01, 24.88it/s]2025/07/28 20:08:02 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:02 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  91%|█████████ | 263/289 [00:12&lt;00:01, 24.21it/s]2025/07/28 20:08:02 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  92%|█████████▏| 266/289 [00:12&lt;00:00, 25.37it/s]2025/07/28 20:08:02 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:02 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  93%|█████████▎| 269/289 [00:12&lt;00:00, 20.30it/s]2025/07/28 20:08:03 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  94%|█████████▍| 272/289 [00:12&lt;00:00, 19.67it/s]2025/07/28 20:08:03 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:03 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  95%|█████████▌| 275/289 [00:12&lt;00:00, 20.71it/s]2025/07/28 20:08:03 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:03 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  96%|█████████▌| 278/289 [00:13&lt;00:00, 21.31it/s]2025/07/28 20:08:03 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:03 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  97%|█████████▋| 281/289 [00:13&lt;00:00, 22.55it/s]2025/07/28 20:08:03 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:03 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  98%|█████████▊| 284/289 [00:13&lt;00:00, 22.90it/s]2025/07/28 20:08:03 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  99%|█████████▉| 287/289 [00:13&lt;00:00, 23.65it/s]2025/07/28 20:08:03 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:03 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples: 100%|██████████| 289/289 [00:13&lt;00:00, 21.43it/s]&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-stdout\"&gt;\n&lt;pre&gt;&lt;code&gt;🏃 View run error_analysis_gemini_2.5_flash at: http://localhost:5000/#/experiments/1/runs/d415524ddcf94cd086f2f221c2f6f177\n🧪 View experiment at: http://localhost:5000/#/experiments/1&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n\n&lt;div&gt;\n  &lt;style scoped&gt;\n  button {\n    border: none;\n    border-radius: 4px;\n    background-color: rgb(34, 114, 180);\n    font-family: -apple-system, \"system-ui\", \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial;\n    font-size: 13px;\n    color: white;\n    margin-top: 8px;\n    margin-bottom: 8px;\n    padding: 8px 16px;\n    cursor: pointer;\n  }\n  button:hover {\n    background-color: rgb(66, 153, 224);\n  }\n  &lt;/style&gt;\n  &lt;button\n    onclick=\"\n        const display = this.nextElementSibling.style.display;\n        const isCollapsed = display === 'none';\n        this.nextElementSibling.style.display = isCollapsed ? null : 'none';\n\n        const verb = isCollapsed ? 'Collapse' : 'Expand';\n        this.innerText = `${verb} MLflow Trace`;\n    \"\n  &gt;Collapse MLflow Trace&lt;/button&gt;\n  &lt;iframe\n    id=\"trace-renderer\"\n    style=\"width: 100%; height: 500px; border: none; resize: vertical;\"\n    src=\"http://localhost:5000/static-files/lib/notebook-trace-renderer/index.html?trace_id=f51ec31b099c4ccb884824cd84faf244&amp;experiment_id=1&amp;trace_id=2b2a5bac43db4bdf8f1ba27a0c72707f&amp;experiment_id=1&amp;trace_id=33d30ce093eb4bcb8959b7e7b14f4f03&amp;experiment_id=1&amp;trace_id=585d29108d074c8eb2546d615be4e058&amp;experiment_id=1&amp;trace_id=f458046f22604e4cbb206f2ddea55891&amp;experiment_id=1&amp;trace_id=fae282bd8d524323a37fbafd71e5e50f&amp;experiment_id=1&amp;trace_id=e0f8503464d846308c8ac03dd3897e1a&amp;experiment_id=1&amp;trace_id=2f17ef3a251a4472920aac663506297b&amp;experiment_id=1&amp;trace_id=cb93f2fdd18b4a1289219be14632eeb9&amp;experiment_id=1&amp;trace_id=29a36ca6d3bb4720860417319bbe8d68&amp;experiment_id=1&amp;version=3.1.4\"\n  /&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-64\" class=\"cell\" data-execution_count=\"490\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb62\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb62-1\"&gt;&lt;a href=\"#cb62-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;import&lt;/span&gt; seaborn &lt;span class=\"im\"&gt;as&lt;/span&gt; sns&lt;/span&gt;\n&lt;span id=\"cb62-2\"&gt;&lt;a href=\"#cb62-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span class=\"im\"&gt;as&lt;/span&gt; plt&lt;/span&gt;\n&lt;span id=\"cb62-3\"&gt;&lt;a href=\"#cb62-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb62-4\"&gt;&lt;a href=\"#cb62-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;df &lt;span class=\"op\"&gt;=&lt;/span&gt; pd.DataFrame(judge_results)&lt;/span&gt;\n&lt;span id=\"cb62-5\"&gt;&lt;a href=\"#cb62-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;grouped &lt;span class=\"op\"&gt;=&lt;/span&gt; (&lt;/span&gt;\n&lt;span id=\"cb62-6\"&gt;&lt;a href=\"#cb62-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    df.groupby([&lt;span class=\"st\"&gt;&quot;model_name&quot;&lt;/span&gt;, &lt;span class=\"st\"&gt;&quot;assessment_answer&quot;&lt;/span&gt;]).size().reset_index(name&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;count&quot;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb62-7\"&gt;&lt;a href=\"#cb62-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;)&lt;/span&gt;\n&lt;span id=\"cb62-8\"&gt;&lt;a href=\"#cb62-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;plt.figure(figsize&lt;span class=\"op\"&gt;=&lt;/span&gt;(&lt;span class=\"dv\"&gt;10&lt;/span&gt;, &lt;span class=\"dv\"&gt;6&lt;/span&gt;))&lt;/span&gt;\n&lt;span id=\"cb62-9\"&gt;&lt;a href=\"#cb62-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;ax &lt;span class=\"op\"&gt;=&lt;/span&gt; sns.barplot(data&lt;span class=\"op\"&gt;=&lt;/span&gt;grouped, x&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;model_name&quot;&lt;/span&gt;, y&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;count&quot;&lt;/span&gt;, hue&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;assessment_answer&quot;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb62-10\"&gt;&lt;a href=\"#cb62-10\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;plt.title(&lt;span class=\"st\"&gt;&quot;Assessment Answer Counts by Model&quot;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb62-11\"&gt;&lt;a href=\"#cb62-11\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;plt.ylabel(&lt;span class=\"st\"&gt;&quot;Count&quot;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb62-12\"&gt;&lt;a href=\"#cb62-12\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;plt.xlabel(&lt;span class=\"st\"&gt;&quot;Model Name&quot;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb62-13\"&gt;&lt;a href=\"#cb62-13\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;plt.legend(title&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;Assessment Answer&quot;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb62-14\"&gt;&lt;a href=\"#cb62-14\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;plt.tight_layout()&lt;/span&gt;\n&lt;span id=\"cb62-15\"&gt;&lt;a href=\"#cb62-15\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb62-16\"&gt;&lt;a href=\"#cb62-16\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;# Add value annotations&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb62-17\"&gt;&lt;a href=\"#cb62-17\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"cf\"&gt;for&lt;/span&gt; p &lt;span class=\"kw\"&gt;in&lt;/span&gt; ax.patches:&lt;/span&gt;\n&lt;span id=\"cb62-18\"&gt;&lt;a href=\"#cb62-18\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    height &lt;span class=\"op\"&gt;=&lt;/span&gt; p.get_height()&lt;/span&gt;\n&lt;span id=\"cb62-19\"&gt;&lt;a href=\"#cb62-19\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;if&lt;/span&gt; height &lt;span class=\"op\"&gt;&gt;&lt;/span&gt; &lt;span class=\"dv\"&gt;0&lt;/span&gt;:&lt;/span&gt;\n&lt;span id=\"cb62-20\"&gt;&lt;a href=\"#cb62-20\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        ax.annotate(&lt;/span&gt;\n&lt;span id=\"cb62-21\"&gt;&lt;a href=\"#cb62-21\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            &lt;span class=\"ss\"&gt;f&quot;&lt;/span&gt;&lt;span class=\"sc\"&gt;{&lt;/span&gt;&lt;span class=\"bu\"&gt;int&lt;/span&gt;(height)&lt;span class=\"sc\"&gt;}&lt;/span&gt;&lt;span class=\"ss\"&gt;&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb62-22\"&gt;&lt;a href=\"#cb62-22\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            (p.get_x() &lt;span class=\"op\"&gt;+&lt;/span&gt; p.get_width() &lt;span class=\"op\"&gt;/&lt;/span&gt; &lt;span class=\"dv\"&gt;2&lt;/span&gt;, height),&lt;/span&gt;\n&lt;span id=\"cb62-23\"&gt;&lt;a href=\"#cb62-23\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            ha&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;center&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb62-24\"&gt;&lt;a href=\"#cb62-24\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            va&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;bottom&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb62-25\"&gt;&lt;a href=\"#cb62-25\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            fontsize&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"dv\"&gt;10&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb62-26\"&gt;&lt;a href=\"#cb62-26\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            color&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;black&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb62-27\"&gt;&lt;a href=\"#cb62-27\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            xytext&lt;span class=\"op\"&gt;=&lt;/span&gt;(&lt;span class=\"dv\"&gt;0&lt;/span&gt;, &lt;span class=\"dv\"&gt;2&lt;/span&gt;),&lt;/span&gt;\n&lt;span id=\"cb62-28\"&gt;&lt;a href=\"#cb62-28\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            textcoords&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;offset points&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb62-29\"&gt;&lt;a href=\"#cb62-29\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        )&lt;/span&gt;\n&lt;span id=\"cb62-30\"&gt;&lt;a href=\"#cb62-30\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb62-31\"&gt;&lt;a href=\"#cb62-31\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;plt.show()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;div&gt;\n&lt;figure&gt;\n&lt;p&gt;&lt;a href=\"2025-09-01-cl-dspy-modelling_files/figure-html/cell-40-output-1.png\" class=\"lightbox\" data-gallery=\"quarto-lightbox-gallery-1\"&gt;&lt;img src=\"2025-09-01-cl-dspy-modelling_files/figure-html/cell-40-output-1.png\" class=\"img-fluid\" /&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;/figure&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-65\" class=\"cell\" data-execution_count=\"502\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb63\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb63-1\"&gt;&lt;a href=\"#cb63-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;df.to_csv(&lt;span class=\"st\"&gt;&#39;./judge_results/gate_and_probe_judge_results.csv&#39;&lt;/span&gt;, index&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;False&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;/div&gt;\n&lt;p&gt;From the analysis above, we see that: - Majority of the errors for all our selected models are due to &lt;strong&gt;incorrect ground truth&lt;/strong&gt;. - We also see cases where the model was unable to generate the answer in the format as expected by the ground truth. - Finally, somewhat surpringly, we see some results marked as “OK”, even though we only selected records that didn’t match the ground truth using our &lt;em&gt;exact match&lt;/em&gt; metric.&lt;/p&gt;\n&lt;p&gt;Let’s look through this more closely:&lt;/p&gt;\n&lt;div id=\"cell-67\" class=\"cell\" data-execution_count=\"503\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb64\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb64-1\"&gt;&lt;a href=\"#cb64-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;df[df[&lt;span class=\"st\"&gt;&quot;assessment_answer&quot;&lt;/span&gt;] &lt;span class=\"op\"&gt;==&lt;/span&gt; &lt;span class=\"st\"&gt;&quot;GROUND_TRUTH_INCORRECT&quot;&lt;/span&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;div class=\"cell-output cell-output-display\" data-execution_count=\"503\"&gt;\n&lt;div&gt;\n&lt;div&gt;\n&lt;style scoped&gt;\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n&lt;/style&gt;\n\n&lt;table class=\"dataframe\" data-quarto-postprocess=\"true\" data-border=\"1\"&gt;\n&lt;thead&gt;\n&lt;tr class=\"header\" style=\"text-align: right;\"&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;id&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;model_name&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;question&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;ground_truth_answer&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;predicted_answer&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;assessment_answer&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;assessment_reasoning&lt;/th&gt;\n&lt;/tr&gt;\n&lt;/thead&gt;\n&lt;tbody&gt;\n&lt;tr class=\"odd\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;0&lt;/td&gt;\n&lt;td&gt;Single_ETR/2011/page_22.pdf-3&lt;/td&gt;\n&lt;td&gt;openai/o4-mini-2025-04-16&lt;/td&gt;\n&lt;td&gt;so what was the percentage change during this time?&lt;/td&gt;\n&lt;td&gt;7.605000e-02&lt;/td&gt;\n&lt;td&gt;7.6%&lt;/td&gt;\n&lt;td&gt;GROUND_TRUTH_INCORRECT&lt;/td&gt;\n&lt;td&gt;The question asks for a \"percentage change\". The model correctly c...&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"even\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;1&lt;/td&gt;\n&lt;td&gt;Single_ETR/2004/page_258.pdf-4&lt;/td&gt;\n&lt;td&gt;openai/o4-mini-2025-04-16&lt;/td&gt;\n&lt;td&gt;what is the percent change?&lt;/td&gt;\n&lt;td&gt;1.473800e-01&lt;/td&gt;\n&lt;td&gt;14.7%&lt;/td&gt;\n&lt;td&gt;GROUND_TRUTH_INCORRECT&lt;/td&gt;\n&lt;td&gt;The question asks for the \"percent change\". The predicted answer p...&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"odd\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;3&lt;/td&gt;\n&lt;td&gt;Single_ADI/2011/page_83.pdf-2&lt;/td&gt;\n&lt;td&gt;openai/o4-mini-2025-04-16&lt;/td&gt;\n&lt;td&gt;what growth rate does this represent?&lt;/td&gt;\n&lt;td&gt;8.290600e-01&lt;/td&gt;\n&lt;td&gt;82.9%&lt;/td&gt;\n&lt;td&gt;GROUND_TRUTH_INCORRECT&lt;/td&gt;\n&lt;td&gt;The question asks for a 'growth rate', which is typically expresse...&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"even\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;4&lt;/td&gt;\n&lt;td&gt;Single_CB/2008/page_243.pdf-3&lt;/td&gt;\n&lt;td&gt;openai/o4-mini-2025-04-16&lt;/td&gt;\n&lt;td&gt;what was the percent change?&lt;/td&gt;\n&lt;td&gt;7.368000e-02&lt;/td&gt;\n&lt;td&gt;7.37&lt;/td&gt;\n&lt;td&gt;GROUND_TRUTH_INCORRECT&lt;/td&gt;\n&lt;td&gt;The question asks for the \"percent change\". The model correctly ca...&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"odd\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;5&lt;/td&gt;\n&lt;td&gt;Single_AMT/2015/page_50.pdf-1&lt;/td&gt;\n&lt;td&gt;openai/o4-mini-2025-04-16&lt;/td&gt;\n&lt;td&gt;what was the low for share price for the quarter ended 12/31/15?&lt;/td&gt;\n&lt;td&gt;8.732000e+01&lt;/td&gt;\n&lt;td&gt;90.2&lt;/td&gt;\n&lt;td&gt;GROUND_TRUTH_INCORRECT&lt;/td&gt;\n&lt;td&gt;The question asks for the low share price for the quarter ended 12...&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"even\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;...&lt;/td&gt;\n&lt;td&gt;...&lt;/td&gt;\n&lt;td&gt;...&lt;/td&gt;\n&lt;td&gt;...&lt;/td&gt;\n&lt;td&gt;...&lt;/td&gt;\n&lt;td&gt;...&lt;/td&gt;\n&lt;td&gt;...&lt;/td&gt;\n&lt;td&gt;...&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"odd\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;282&lt;/td&gt;\n&lt;td&gt;Single_SLG/2017/page_114.pdf-3&lt;/td&gt;\n&lt;td&gt;openai/o3-2025-04-16&lt;/td&gt;\n&lt;td&gt;so what was the percentage of pension plan contributions out of th...&lt;/td&gt;\n&lt;td&gt;2.302800e-01&lt;/td&gt;\n&lt;td&gt;23.03&lt;/td&gt;\n&lt;td&gt;GROUND_TRUTH_INCORRECT&lt;/td&gt;\n&lt;td&gt;The question asks for a \"percentage\". The model correctly calculat...&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"even\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;283&lt;/td&gt;\n&lt;td&gt;Single_JPM/2008/page_177.pdf-4&lt;/td&gt;\n&lt;td&gt;openai/o3-2025-04-16&lt;/td&gt;\n&lt;td&gt;what was the total amount of resale agreements in 2008, in millions?&lt;/td&gt;\n&lt;td&gt;2.080000e+04&lt;/td&gt;\n&lt;td&gt;200,265&lt;/td&gt;\n&lt;td&gt;GROUND_TRUTH_INCORRECT&lt;/td&gt;\n&lt;td&gt;The question asks for the 'total amount of resale agreements in 20...&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"odd\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;284&lt;/td&gt;\n&lt;td&gt;Double_IPG/2014/page_95.pdf&lt;/td&gt;\n&lt;td&gt;openai/o3-2025-04-16&lt;/td&gt;\n&lt;td&gt;and what is it for the the 2009 one?&lt;/td&gt;\n&lt;td&gt;1.218121e+07&lt;/td&gt;\n&lt;td&gt;435259&lt;/td&gt;\n&lt;td&gt;GROUND_TRUTH_INCORRECT&lt;/td&gt;\n&lt;td&gt;The question asks for the value for \"the 2009 one\". The previous t...&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"even\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;286&lt;/td&gt;\n&lt;td&gt;Single_APTV/2018/page_36.pdf-2&lt;/td&gt;\n&lt;td&gt;openai/o3-2025-04-16&lt;/td&gt;\n&lt;td&gt;how much does the change in the value of the aptiv plc represent i...&lt;/td&gt;\n&lt;td&gt;3.080000e-01&lt;/td&gt;\n&lt;td&gt;30.8%&lt;/td&gt;\n&lt;td&gt;GROUND_TRUTH_INCORRECT&lt;/td&gt;\n&lt;td&gt;The question asks for the answer \"in percentage\". The model correc...&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"odd\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;288&lt;/td&gt;\n&lt;td&gt;Single_RCL/2016/page_7.pdf-3&lt;/td&gt;\n&lt;td&gt;openai/o3-2025-04-16&lt;/td&gt;\n&lt;td&gt;what percentage change does this represent?&lt;/td&gt;\n&lt;td&gt;1.600000e-01&lt;/td&gt;\n&lt;td&gt;16.0&lt;/td&gt;\n&lt;td&gt;GROUND_TRUTH_INCORRECT&lt;/td&gt;\n&lt;td&gt;The question asks for a 'percentage change'. The model correctly c...&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/tbody&gt;\n&lt;/table&gt;\n\n&lt;p&gt;226 rows × 7 columns&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;Aha! We see that while the &lt;em&gt;predicted answer&lt;/em&gt; didnt match the ground truth exactly, it’s &lt;strong&gt;actually&lt;/strong&gt; correct for all these cases. We can further use these examples to improve our &lt;strong&gt;exact match&lt;/strong&gt; metric implementation!&lt;/p&gt;\n&lt;p&gt;The above results are &lt;strong&gt;not conclusive&lt;/strong&gt; by any means, since the LLM-as-a-judge approach also has known flaws. However, it does give us some pointers on how to improve the model performance from here!&lt;/p&gt;\n&lt;div id=\"quarto-navigation-envelope\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar-title\"&gt;Shubham Gupta&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar-title\"&gt;Shubham Gupta&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:About\"&gt;About&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:/about.html\"&gt;/about.html&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:https://github.com/goodhamgupta\"&gt;https://github.com/goodhamgupta&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:/index.xml\"&gt;/index.xml&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;div id=\"quarto-meta-markdown\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden\" data-render-id=\"quarto-metatitle\"&gt;Shubham Gupta - Curriculum Learning 🤝 DSPy: Modelling&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-twittercardtitle\"&gt;Shubham Gupta - Curriculum Learning 🤝 DSPy: Modelling&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-ogcardtitle\"&gt;Shubham Gupta - Curriculum Learning 🤝 DSPy: Modelling&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-metasitename\"&gt;Shubham Gupta&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-twittercarddesc\"&gt;Mapping ConvFinQA and crafting a curriculum for financial QA&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-ogcardddesc\"&gt;Mapping ConvFinQA and crafting a curriculum for financial QA&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;/section&gt;\n&lt;/section&gt;\n\n&lt;/main&gt; &lt;!-- /main --&gt;\n&lt;script id = \"quarto-html-after-body\" type=\"application/javascript\"&gt;\nwindow.document.addEventListener(\"DOMContentLoaded\", function (event) {\n  const toggleBodyColorMode = (bsSheetEl) =&gt; {\n    const mode = bsSheetEl.getAttribute(\"data-mode\");\n    const bodyEl = window.document.querySelector(\"body\");\n    if (mode === \"dark\") {\n      bodyEl.classList.add(\"quarto-dark\");\n      bodyEl.classList.remove(\"quarto-light\");\n    } else {\n      bodyEl.classList.add(\"quarto-light\");\n      bodyEl.classList.remove(\"quarto-dark\");\n    }\n  }\n  const toggleBodyColorPrimary = () =&gt; {\n    const bsSheetEl = window.document.querySelector(\"link#quarto-bootstrap\");\n    if (bsSheetEl) {\n      toggleBodyColorMode(bsSheetEl);\n    }\n  }\n  toggleBodyColorPrimary();  \n  const disableStylesheet = (stylesheets) =&gt; {\n    for (let i=0; i &lt; stylesheets.length; i++) {\n      const stylesheet = stylesheets[i];\n      stylesheet.rel = 'prefetch';\n    }\n  }\n  const enableStylesheet = (stylesheets) =&gt; {\n    for (let i=0; i &lt; stylesheets.length; i++) {\n      const stylesheet = stylesheets[i];\n      stylesheet.rel = 'stylesheet';\n    }\n  }\n  const manageTransitions = (selector, allowTransitions) =&gt; {\n    const els = window.document.querySelectorAll(selector);\n    for (let i=0; i &lt; els.length; i++) {\n      const el = els[i];\n      if (allowTransitions) {\n        el.classList.remove('notransition');\n      } else {\n        el.classList.add('notransition');\n      }\n    }\n  }\n  const toggleGiscusIfUsed = (isAlternate, darkModeDefault) =&gt; {\n    const baseTheme = document.querySelector('#giscus-base-theme')?.value ?? 'light';\n    const alternateTheme = document.querySelector('#giscus-alt-theme')?.value ?? 'dark';\n    let newTheme = '';\n    if(darkModeDefault) {\n      newTheme = isAlternate ? baseTheme : alternateTheme;\n    } else {\n      newTheme = isAlternate ? alternateTheme : baseTheme;\n    }\n    const changeGiscusTheme = () =&gt; {\n      // From: https://github.com/giscus/giscus/issues/336\n      const sendMessage = (message) =&gt; {\n        const iframe = document.querySelector('iframe.giscus-frame');\n        if (!iframe) return;\n        iframe.contentWindow.postMessage({ giscus: message }, 'https://giscus.app');\n      }\n      sendMessage({\n        setConfig: {\n          theme: newTheme\n        }\n      });\n    }\n    const isGiscussLoaded = window.document.querySelector('iframe.giscus-frame') !== null;\n    if (isGiscussLoaded) {\n      changeGiscusTheme();\n    }\n  }\n  const toggleColorMode = (alternate) =&gt; {\n    // Switch the stylesheets\n    const alternateStylesheets = window.document.querySelectorAll('link.quarto-color-scheme.quarto-color-alternate');\n    manageTransitions('#quarto-margin-sidebar .nav-link', false);\n    if (alternate) {\n      enableStylesheet(alternateStylesheets);\n      for (const sheetNode of alternateStylesheets) {\n        if (sheetNode.id === \"quarto-bootstrap\") {\n          toggleBodyColorMode(sheetNode);\n        }\n      }\n    } else {\n      disableStylesheet(alternateStylesheets);\n      toggleBodyColorPrimary();\n    }\n    manageTransitions('#quarto-margin-sidebar .nav-link', true);\n    // Switch the toggles\n    const toggles = window.document.querySelectorAll('.quarto-color-scheme-toggle');\n    for (let i=0; i &lt; toggles.length; i++) {\n      const toggle = toggles[i];\n      if (toggle) {\n        if (alternate) {\n          toggle.classList.add(\"alternate\");     \n        } else {\n          toggle.classList.remove(\"alternate\");\n        }\n      }\n    }\n    // Hack to workaround the fact that safari doesn't\n    // properly recolor the scrollbar when toggling (#1455)\n    if (navigator.userAgent.indexOf('Safari') &gt; 0 && navigator.userAgent.indexOf('Chrome') == -1) {\n      manageTransitions(\"body\", false);\n      window.scrollTo(0, 1);\n      setTimeout(() =&gt; {\n        window.scrollTo(0, 0);\n        manageTransitions(\"body\", true);\n      }, 40);  \n    }\n  }\n  const isFileUrl = () =&gt; { \n    return window.location.protocol === 'file:';\n  }\n  const hasAlternateSentinel = () =&gt; {  \n    let styleSentinel = getColorSchemeSentinel();\n    if (styleSentinel !== null) {\n      return styleSentinel === \"alternate\";\n    } else {\n      return false;\n    }\n  }\n  const setStyleSentinel = (alternate) =&gt; {\n    const value = alternate ? \"alternate\" : \"default\";\n    if (!isFileUrl()) {\n      window.localStorage.setItem(\"quarto-color-scheme\", value);\n    } else {\n      localAlternateSentinel = value;\n    }\n  }\n  const getColorSchemeSentinel = () =&gt; {\n    if (!isFileUrl()) {\n      const storageValue = window.localStorage.getItem(\"quarto-color-scheme\");\n      return storageValue != null ? storageValue : localAlternateSentinel;\n    } else {\n      return localAlternateSentinel;\n    }\n  }\n  const darkModeDefault = false;\n  let localAlternateSentinel = darkModeDefault ? 'alternate' : 'default';\n  // Dark / light mode switch\n  window.quartoToggleColorScheme = () =&gt; {\n    // Read the current dark / light value \n    let toAlternate = !hasAlternateSentinel();\n    toggleColorMode(toAlternate);\n    setStyleSentinel(toAlternate);\n    toggleGiscusIfUsed(toAlternate, darkModeDefault);\n  };\n  // Ensure there is a toggle, if there isn't float one in the top right\n  if (window.document.querySelector('.quarto-color-scheme-toggle') === null) {\n    const a = window.document.createElement('a');\n    a.classList.add('top-right');\n    a.classList.add('quarto-color-scheme-toggle');\n    a.href = \"\";\n    a.onclick = function() { try { window.quartoToggleColorScheme(); } catch {} return false; };\n    const i = window.document.createElement(\"i\");\n    i.classList.add('bi');\n    a.appendChild(i);\n    window.document.body.appendChild(a);\n  }\n  // Switch to dark mode if need be\n  if (hasAlternateSentinel()) {\n    toggleColorMode(true);\n  } else {\n    toggleColorMode(false);\n  }\n  const icon = \"\";\n  const anchorJS = new window.AnchorJS();\n  anchorJS.options = {\n    placement: 'right',\n    icon: icon\n  };\n  anchorJS.add('.anchored');\n  const isCodeAnnotation = (el) =&gt; {\n    for (const clz of el.classList) {\n      if (clz.startsWith('code-annotation-')) {                     \n        return true;\n      }\n    }\n    return false;\n  }\n  const clipboard = new window.ClipboardJS('.code-copy-button', {\n    text: function(trigger) {\n      const codeEl = trigger.previousElementSibling.cloneNode(true);\n      for (const childEl of codeEl.children) {\n        if (isCodeAnnotation(childEl)) {\n          childEl.remove();\n        }\n      }\n      return codeEl.innerText;\n    }\n  });\n  clipboard.on('success', function(e) {\n    // button target\n    const button = e.trigger;\n    // don't keep focus\n    button.blur();\n    // flash \"checked\"\n    button.classList.add('code-copy-button-checked');\n    var currentTitle = button.getAttribute(\"title\");\n    button.setAttribute(\"title\", \"Copied!\");\n    let tooltip;\n    if (window.bootstrap) {\n      button.setAttribute(\"data-bs-toggle\", \"tooltip\");\n      button.setAttribute(\"data-bs-placement\", \"left\");\n      button.setAttribute(\"data-bs-title\", \"Copied!\");\n      tooltip = new bootstrap.Tooltip(button, \n        { trigger: \"manual\", \n          customClass: \"code-copy-button-tooltip\",\n          offset: [0, -8]});\n      tooltip.show();    \n    }\n    setTimeout(function() {\n      if (tooltip) {\n        tooltip.hide();\n        button.removeAttribute(\"data-bs-title\");\n        button.removeAttribute(\"data-bs-toggle\");\n        button.removeAttribute(\"data-bs-placement\");\n      }\n      button.setAttribute(\"title\", currentTitle);\n      button.classList.remove('code-copy-button-checked');\n    }, 1000);\n    // clear code selection\n    e.clearSelection();\n  });\n  const viewSource = window.document.getElementById('quarto-view-source') ||\n                     window.document.getElementById('quarto-code-tools-source');\n  if (viewSource) {\n    const sourceUrl = viewSource.getAttribute(\"data-quarto-source-url\");\n    viewSource.addEventListener(\"click\", function(e) {\n      if (sourceUrl) {\n        // rstudio viewer pane\n        if (/\\bcapabilities=\\b/.test(window.location)) {\n          window.open(sourceUrl);\n        } else {\n          window.location.href = sourceUrl;\n        }\n      } else {\n        const modal = new bootstrap.Modal(document.getElementById('quarto-embedded-source-code-modal'));\n        modal.show();\n      }\n      return false;\n    });\n  }\n  function toggleCodeHandler(show) {\n    return function(e) {\n      const detailsSrc = window.document.querySelectorAll(\".cell &gt; details &gt; .sourceCode\");\n      for (let i=0; i&lt;detailsSrc.length; i++) {\n        const details = detailsSrc[i].parentElement;\n        if (show) {\n          details.open = true;\n        } else {\n          details.removeAttribute(\"open\");\n        }\n      }\n      const cellCodeDivs = window.document.querySelectorAll(\".cell &gt; .sourceCode\");\n      const fromCls = show ? \"hidden\" : \"unhidden\";\n      const toCls = show ? \"unhidden\" : \"hidden\";\n      for (let i=0; i&lt;cellCodeDivs.length; i++) {\n        const codeDiv = cellCodeDivs[i];\n        if (codeDiv.classList.contains(fromCls)) {\n          codeDiv.classList.remove(fromCls);\n          codeDiv.classList.add(toCls);\n        } \n      }\n      return false;\n    }\n  }\n  const hideAllCode = window.document.getElementById(\"quarto-hide-all-code\");\n  if (hideAllCode) {\n    hideAllCode.addEventListener(\"click\", toggleCodeHandler(false));\n  }\n  const showAllCode = window.document.getElementById(\"quarto-show-all-code\");\n  if (showAllCode) {\n    showAllCode.addEventListener(\"click\", toggleCodeHandler(true));\n  }\n  function tippyHover(el, contentFn, onTriggerFn, onUntriggerFn) {\n    const config = {\n      allowHTML: true,\n      maxWidth: 500,\n      delay: 100,\n      arrow: false,\n      appendTo: function(el) {\n          return el.parentElement;\n      },\n      interactive: true,\n      interactiveBorder: 10,\n      theme: 'quarto',\n      placement: 'bottom-start',\n    };\n    if (contentFn) {\n      config.content = contentFn;\n    }\n    if (onTriggerFn) {\n      config.onTrigger = onTriggerFn;\n    }\n    if (onUntriggerFn) {\n      config.onUntrigger = onUntriggerFn;\n    }\n    window.tippy(el, config); \n  }\n  const xrefs = window.document.querySelectorAll('a.quarto-xref');\n  const processXRef = (id, note) =&gt; {\n    // Strip column container classes\n    const stripColumnClz = (el) =&gt; {\n      el.classList.remove(\"page-full\", \"page-columns\");\n      if (el.children) {\n        for (const child of el.children) {\n          stripColumnClz(child);\n        }\n      }\n    }\n    stripColumnClz(note)\n    if (id === null || id.startsWith('sec-')) {\n      // Special case sections, only their first couple elements\n      const container = document.createElement(\"div\");\n      if (note.children && note.children.length &gt; 2) {\n        container.appendChild(note.children[0].cloneNode(true));\n        for (let i = 1; i &lt; note.children.length; i++) {\n          const child = note.children[i];\n          if (child.tagName === \"P\" && child.innerText === \"\") {\n            continue;\n          } else {\n            container.appendChild(child.cloneNode(true));\n            break;\n          }\n        }\n        if (window.Quarto?.typesetMath) {\n          window.Quarto.typesetMath(container);\n        }\n        return container.innerHTML\n      } else {\n        if (window.Quarto?.typesetMath) {\n          window.Quarto.typesetMath(note);\n        }\n        return note.innerHTML;\n      }\n    } else {\n      // Remove any anchor links if they are present\n      const anchorLink = note.querySelector('a.anchorjs-link');\n      if (anchorLink) {\n        anchorLink.remove();\n      }\n      if (window.Quarto?.typesetMath) {\n        window.Quarto.typesetMath(note);\n      }\n      // TODO in 1.5, we should make sure this works without a callout special case\n      if (note.classList.contains(\"callout\")) {\n        return note.outerHTML;\n      } else {\n        return note.innerHTML;\n      }\n    }\n  }\n  for (var i=0; i&lt;xrefs.length; i++) {\n    const xref = xrefs[i];\n    tippyHover(xref, undefined, function(instance) {\n      instance.disable();\n      let url = xref.getAttribute('href');\n      let hash = undefined; \n      if (url.startsWith('#')) {\n        hash = url;\n      } else {\n        try { hash = new URL(url).hash; } catch {}\n      }\n      if (hash) {\n        const id = hash.replace(/^#\\/?/, \"\");\n        const note = window.document.getElementById(id);\n        if (note !== null) {\n          try {\n            const html = processXRef(id, note.cloneNode(true));\n            instance.setContent(html);\n          } finally {\n            instance.enable();\n            instance.show();\n          }\n        } else {\n          // See if we can fetch this\n          fetch(url.split('#')[0])\n          .then(res =&gt; res.text())\n          .then(html =&gt; {\n            const parser = new DOMParser();\n            const htmlDoc = parser.parseFromString(html, \"text/html\");\n            const note = htmlDoc.getElementById(id);\n            if (note !== null) {\n              const html = processXRef(id, note);\n              instance.setContent(html);\n            } \n          }).finally(() =&gt; {\n            instance.enable();\n            instance.show();\n          });\n        }\n      } else {\n        // See if we can fetch a full url (with no hash to target)\n        // This is a special case and we should probably do some content thinning / targeting\n        fetch(url)\n        .then(res =&gt; res.text())\n        .then(html =&gt; {\n          const parser = new DOMParser();\n          const htmlDoc = parser.parseFromString(html, \"text/html\");\n          const note = htmlDoc.querySelector('main.content');\n          if (note !== null) {\n            // This should only happen for chapter cross references\n            // (since there is no id in the URL)\n            // remove the first header\n            if (note.children.length &gt; 0 && note.children[0].tagName === \"HEADER\") {\n              note.children[0].remove();\n            }\n            const html = processXRef(null, note);\n            instance.setContent(html);\n          } \n        }).finally(() =&gt; {\n          instance.enable();\n          instance.show();\n        });\n      }\n    }, function(instance) {\n    });\n  }\n      let selectedAnnoteEl;\n      const selectorForAnnotation = ( cell, annotation) =&gt; {\n        let cellAttr = 'data-code-cell=\"' + cell + '\"';\n        let lineAttr = 'data-code-annotation=\"' +  annotation + '\"';\n        const selector = 'span[' + cellAttr + '][' + lineAttr + ']';\n        return selector;\n      }\n      const selectCodeLines = (annoteEl) =&gt; {\n        const doc = window.document;\n        const targetCell = annoteEl.getAttribute(\"data-target-cell\");\n        const targetAnnotation = annoteEl.getAttribute(\"data-target-annotation\");\n        const annoteSpan = window.document.querySelector(selectorForAnnotation(targetCell, targetAnnotation));\n        const lines = annoteSpan.getAttribute(\"data-code-lines\").split(\",\");\n        const lineIds = lines.map((line) =&gt; {\n          return targetCell + \"-\" + line;\n        })\n        let top = null;\n        let height = null;\n        let parent = null;\n        if (lineIds.length &gt; 0) {\n            //compute the position of the single el (top and bottom and make a div)\n            const el = window.document.getElementById(lineIds[0]);\n            top = el.offsetTop;\n            height = el.offsetHeight;\n            parent = el.parentElement.parentElement;\n          if (lineIds.length &gt; 1) {\n            const lastEl = window.document.getElementById(lineIds[lineIds.length - 1]);\n            const bottom = lastEl.offsetTop + lastEl.offsetHeight;\n            height = bottom - top;\n          }\n          if (top !== null && height !== null && parent !== null) {\n            // cook up a div (if necessary) and position it \n            let div = window.document.getElementById(\"code-annotation-line-highlight\");\n            if (div === null) {\n              div = window.document.createElement(\"div\");\n              div.setAttribute(\"id\", \"code-annotation-line-highlight\");\n              div.style.position = 'absolute';\n              parent.appendChild(div);\n            }\n            div.style.top = top - 2 + \"px\";\n            div.style.height = height + 4 + \"px\";\n            div.style.left = 0;\n            let gutterDiv = window.document.getElementById(\"code-annotation-line-highlight-gutter\");\n            if (gutterDiv === null) {\n              gutterDiv = window.document.createElement(\"div\");\n              gutterDiv.setAttribute(\"id\", \"code-annotation-line-highlight-gutter\");\n              gutterDiv.style.position = 'absolute';\n              const codeCell = window.document.getElementById(targetCell);\n              const gutter = codeCell.querySelector('.code-annotation-gutter');\n              gutter.appendChild(gutterDiv);\n            }\n            gutterDiv.style.top = top - 2 + \"px\";\n            gutterDiv.style.height = height + 4 + \"px\";\n          }\n          selectedAnnoteEl = annoteEl;\n        }\n      };\n      const unselectCodeLines = () =&gt; {\n        const elementsIds = [\"code-annotation-line-highlight\", \"code-annotation-line-highlight-gutter\"];\n        elementsIds.forEach((elId) =&gt; {\n          const div = window.document.getElementById(elId);\n          if (div) {\n            div.remove();\n          }\n        });\n        selectedAnnoteEl = undefined;\n      };\n        // Handle positioning of the toggle\n    window.addEventListener(\n      \"resize\",\n      throttle(() =&gt; {\n        elRect = undefined;\n        if (selectedAnnoteEl) {\n          selectCodeLines(selectedAnnoteEl);\n        }\n      }, 10)\n    );\n    function throttle(fn, ms) {\n    let throttle = false;\n    let timer;\n      return (...args) =&gt; {\n        if(!throttle) { // first call gets through\n            fn.apply(this, args);\n            throttle = true;\n        } else { // all the others get throttled\n            if(timer) clearTimeout(timer); // cancel #2\n            timer = setTimeout(() =&gt; {\n              fn.apply(this, args);\n              timer = throttle = false;\n            }, ms);\n        }\n      };\n    }\n      // Attach click handler to the DT\n      const annoteDls = window.document.querySelectorAll('dt[data-target-cell]');\n      for (const annoteDlNode of annoteDls) {\n        annoteDlNode.addEventListener('click', (event) =&gt; {\n          const clickedEl = event.target;\n          if (clickedEl !== selectedAnnoteEl) {\n            unselectCodeLines();\n            const activeEl = window.document.querySelector('dt[data-target-cell].code-annotation-active');\n            if (activeEl) {\n              activeEl.classList.remove('code-annotation-active');\n            }\n            selectCodeLines(clickedEl);\n            clickedEl.classList.add('code-annotation-active');\n          } else {\n            // Unselect the line\n            unselectCodeLines();\n            clickedEl.classList.remove('code-annotation-active');\n          }\n        });\n      }\n  const findCites = (el) =&gt; {\n    const parentEl = el.parentElement;\n    if (parentEl) {\n      const cites = parentEl.dataset.cites;\n      if (cites) {\n        return {\n          el,\n          cites: cites.split(' ')\n        };\n      } else {\n        return findCites(el.parentElement)\n      }\n    } else {\n      return undefined;\n    }\n  };\n  var bibliorefs = window.document.querySelectorAll('a[role=\"doc-biblioref\"]');\n  for (var i=0; i&lt;bibliorefs.length; i++) {\n    const ref = bibliorefs[i];\n    const citeInfo = findCites(ref);\n    if (citeInfo) {\n      tippyHover(citeInfo.el, function() {\n        var popup = window.document.createElement('div');\n        citeInfo.cites.forEach(function(cite) {\n          var citeDiv = window.document.createElement('div');\n          citeDiv.classList.add('hanging-indent');\n          citeDiv.classList.add('csl-entry');\n          var biblioDiv = window.document.getElementById('ref-' + cite);\n          if (biblioDiv) {\n            citeDiv.innerHTML = biblioDiv.innerHTML;\n          }\n          popup.appendChild(citeDiv);\n        });\n        return popup.innerHTML;\n      });\n    }\n  }\n});\n&lt;/script&gt;\n&lt;script src=\"https://giscus.app/client.js\"\n        data-repo=\"goodhamgupta/personal_blog\"\n        data-repo-id=\"R_kgDOLXv-xA\"\n        data-category=\"General\"\n        data-category-id=\"DIC_kwDOLXv-xM4Cdogy\"\n        data-mapping=\"title\"\n        data-reactions-enabled=\"1\"\n        data-emit-metadata=\"0\"\n        data-input-position=\"top\"\n        data-theme=\"light\"\n        data-lang=\"en\"\n        crossorigin=\"anonymous\"\n        async&gt;\n&lt;/script&gt;\n&lt;input type=\"hidden\" id=\"giscus-base-theme\" value=\"light\"&gt;\n&lt;input type=\"hidden\" id=\"giscus-alt-theme\" value=\"dark\"&gt;\n&lt;/div&gt; &lt;!-- /content --&gt;\n&lt;script&gt;var lightboxQuarto = GLightbox({\"closeEffect\":\"zoom\",\"openEffect\":\"zoom\",\"descPosition\":\"bottom\",\"selector\":\".lightbox\",\"loop\":false});\nwindow.onload = () =&gt; {\n  lightboxQuarto.on('slide_before_load', (data) =&gt; {\n    const { slideIndex, slideNode, slideConfig, player, trigger } = data;\n    const href = trigger.getAttribute('href');\n    if (href !== null) {\n      const imgEl = window.document.querySelector(`a[href=\"${href}\"] img`);\n      if (imgEl !== null) {\n        const srcAttr = imgEl.getAttribute(\"src\");\n        if (srcAttr && srcAttr.startsWith(\"data:\")) {\n          slideConfig.href = srcAttr;\n        }\n      }\n    } \n  });\n\n  lightboxQuarto.on('slide_after_load', (data) =&gt; {\n    const { slideIndex, slideNode, slideConfig, player, trigger } = data;\n    if (window.Quarto?.typesetMath) {\n      window.Quarto.typesetMath(slideNode);\n    }\n  });\n\n};\n          &lt;/script&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;"
  },
  {
    "objectID": "posts/2025-09-01-cl-dspy-modelling/2025-09-01-cl-dspy-modelling.html",
    "href": "posts/2025-09-01-cl-dspy-modelling/2025-09-01-cl-dspy-modelling.html",
    "title": "Curriculum Learning 🤝 DSPy: Modelling",
    "section": "",
    "text": "In our previous exploration, we analyzed 3,458 ConvFinQA records and established a curriculum learning framework with three difficulty stages: Easy (≤2 ops, simple context), Medium (2-3 ops, moderate complexity), and Hard (≥4 ops, complex multi-turn reasoning).\nNow it’s time to put this curriculum to work by implementing and evaluating our models."
  },
  {
    "objectID": "posts/2025-09-01-cl-dspy-modelling/2025-09-01-cl-dspy-modelling.html#from-prompting-to-programming",
    "href": "posts/2025-09-01-cl-dspy-modelling/2025-09-01-cl-dspy-modelling.html#from-prompting-to-programming",
    "title": "Curriculum Learning 🤝 DSPy: Modelling",
    "section": "From Prompting to Programming",
    "text": "From Prompting to Programming\nTraditionally, LLM applications rely on hand-rolled prompts—carefully crafted text instructions that are often brittle and difficult to optimize, especially for complex multi-step reasoning tasks like financial QA.\nOur curriculum learning approach demands systematic experimentation across models, difficulty levels, and optimization strategies. This makes DSPy the ideal framework, as it transforms prompting from an art into systematic, testable code.\nWhy DSPy for curriculum learning?\n\nReproducible experiments: Prompts become Python objects → diffable, unit-testable, version-controlled\nSystematic optimization: Built-in optimizers (LabeledFewShot, BootstrapFewShot) auto-search the prompt space across our curriculum stages\nClean evaluation pipeline: First-class metrics support—plug in exact match, hit .compile(), get train/val loops with curriculum-aware sampling\nModel flexibility: Test curriculum effects across GPT-4, o4-mini, Gemini, and open-source models with one-line swaps\nEfficient iteration: Caching and threading speed up development cycles crucial for curriculum experiments\n\nThis systematic approach lets us rigorously test whether our Easy→Medium→Hard curriculum improves financial reasoning compared to random sampling.\nResources: DSPy Documentation"
  },
  {
    "objectID": "posts/2025-09-01-cl-dspy-modelling/2025-09-01-cl-dspy-modelling.html#evaluation-metrics",
    "href": "posts/2025-09-01-cl-dspy-modelling/2025-09-01-cl-dspy-modelling.html#evaluation-metrics",
    "title": "Curriculum Learning 🤝 DSPy: Modelling",
    "section": "Evaluation Metrics",
    "text": "Evaluation Metrics\nFor this exploratory analysis, we need a clear metric to measure model performance across our curriculum learning experiments. Following the original ConvFinQA paper, we adopt Exact Match (EM) as our primary evaluation metric.\n\nPrimary Metric: Turn-level EM\nTurn-level EM measures whether the generated answer for a specific dialogue turn exactly matches the gold standard answer. This binary metric (1 for exact match, 0 otherwise) provides a strict but interpretable measure of performance that directly aligns with the task requirements.\nWe choose this as our primary metric for several reasons: - Simplicity: Easy to implement and interpret for initial experimentation - Strictness: Financial reasoning requires precision—approximate answers can be misleading - Comparability: Direct comparison with baseline results from the original paper - Curriculum sensitivity: Clear signal for measuring improvement across difficulty levels\n\n\nAdditional Metrics (Future Work)\nThere are several other metrics could be useful:\nConversation-level metrics like Dialogue Mean EM and Joint EM would better capture multi-turn reasoning dependencies, but add complexity to curriculum design. Since our curriculum is based on individual example difficulty rather than conversation-level complexity, turn-level metrics are more appropriate for this phase.\nDiagnostic metrics such as Exec-agree % and numeric error analysis would help distinguish between reasoning failures and execution errors. However, for establishing whether curriculum learning improves over random sampling, the binary success signal from exact match provides sufficient discriminative power.\nEfficiency metrics like program length and evidence tokens could reveal interesting patterns about how curriculum learning affects model behavior, but are secondary to establishing basic performance improvements.\nWe’ve skipped the other metrics for now for the sake of brevity."
  },
  {
    "objectID": "posts/2025-09-01-cl-dspy-modelling/2025-09-01-cl-dspy-modelling.html#model-list",
    "href": "posts/2025-09-01-cl-dspy-modelling/2025-09-01-cl-dspy-modelling.html#model-list",
    "title": "Curriculum Learning 🤝 DSPy: Modelling",
    "section": "Model List",
    "text": "Model List\nThe state of language models has significantly changed since the paper was released. It no longer makes sense to use the exact same model(s) as the paper.\nInstead, we will use the following categories of model:\n\nNon-Reasoning Models\n\nThese models are the usual next-token prediction models, and start generating an answer immediately.\nWe will benchmark the following models here:\n\nGPT-4.1\nGPT-4.1-mini\n\n\nReasoning Models\n\nThese models are the latest language models that are capable of reasoning and generating answers based on the context provided.\nReasoning models are designed to perform multi-step, explicit logical inference to arrive at a conclusion.\nWe will benchmark the following models here:\n\nOAI o4-mini\nAnthropic Sonnet 4.0\nGoogle Gemini Flash 2.5\nGoogle Gemini Flash 2.5 Lite\n\n\nFrontier Models\n\nThese are the true “large” language models, developed by frontier labs. They excel in instruction following, reasoning and solving a variety of tasks.\nHowever, these models are expensive. As such, we will try to avoid using them for a final solution.\nWe will benchmark the following models here:\n\nOAI o3\nAnthropic Opus 4.0\nGoogle Gemini Pro 2.5\n\n\nOpen Source\n\nWe also want to measure the performance of open-source models, as it will help quantify the gap between them and proprietary models.\nOpen-source models are especially required in domains where data sovereignty is a concern.\nWe will only benchmark:\n\nQwen3-32B\n\n\n\n\nModel Selection\nDue to cost and time constraints, we can’t afford to optimise all models. Hence, we’ll aim to narrow down the list of models to a few “promising” models. Specifically, instead of just using the performance of the models on the “easy” validation set, we will use a combination of two datasets:\n\nGate - 50 Easy dialogs, teacher - forced. Drop model if Turn-EM &lt; 0.55.\nProbe - 30-dialog mixed micro-set (15 Medium + 15 Hard, closed loop). Keep model only if Final-Turn EM ≥ 0.35, Dialogue-mean EM ≥ 0.35\n\nThis two-stage filter zaps obviously weak models fast yet retains ones whose strength shows up on multi-step reasoning / long context.\n\n\nMetrics Tracking\nGiven that we plan on iterating over multiple datasets, multiple models, multiple algorithms with different hyperparameters, we will a solution to efficiency track our progress.\nWe aim to use MLFlow, as it has the following features:\n\nMLflow Tracking: logs training, runs, and artifacts for DSPy.\nMLflow Model: packages DSPy programs for reproducible deployment.\nMLflow Evaluate: natively evaluates GenAI outputs for fast iteration.\nMLflow Tracing: auto-logs and debugs DSPy internals with one command.\n\nIn production, the deployment pipeline would look as follows:\n\n   DSPy Production deployment with MLFlow. Source: MLFlow Docs"
  },
  {
    "objectID": "posts/2025-09-01-cl-dspy-modelling/2025-09-01-cl-dspy-modelling.html#setup",
    "href": "posts/2025-09-01-cl-dspy-modelling/2025-09-01-cl-dspy-modelling.html#setup",
    "title": "Curriculum Learning 🤝 DSPy: Modelling",
    "section": "Setup",
    "text": "Setup\n\n\nCode\nimport mlflow\nfrom IPython.display import IFrame, HTML, display\n\nmlflow.set_tracking_uri(\"http://localhost:5000\")\nmlflow.dspy.autolog(log_compiles=True, log_evals=True, log_traces_from_compile=True)\nresult = mlflow.set_experiment(\"DSPy\")\n\n# Display MLFlow UI in an iframe to prevent HTML document conflicts\nprint(f\"Experiment: {result.name} (ID: {result.experiment_id})\")\ndisplay(HTML(f'&lt;p&gt;&lt;a href=\"http://localhost:5000/#/experiments/{result.experiment_id}\" target=\"_blank\"&gt;View MLFlow Experiment UI&lt;/a&gt;&lt;/p&gt;'))\n\n\n&lt;Experiment: artifact_location='mlflow-artifacts:/1', creation_time=1753611058221, experiment_id='1', last_update_time=1753611058221, lifecycle_stage='active', name='DSPy', tags={}&gt;\n\n\n\n\nCode\nimport os\n\nimport dotenv\nimport dspy\n\ndotenv.load_dotenv(\"../.env\")\nMAX_TOKENS = 20_000\n\nlm_oai_gpt_4_1 = dspy.LM(\n    \"openai/gpt-4.1-2025-04-14\",\n    api_key=os.environ[\"OPENAI_API_KEY\"],\n    max_tokens=MAX_TOKENS,\n)\nlm_oai_gpt_4_1_mini = dspy.LM(\n    \"openai/gpt-4.1-mini-2025-04-14\",\n    api_key=os.environ[\"OPENAI_API_KEY\"],\n    max_tokens=MAX_TOKENS,\n)\n\nlm_oai_o4_mini = dspy.LM(\n    \"openai/o4-mini-2025-04-16\",\n    api_key=os.environ[\"OPENAI_API_KEY\"],\n    temperature=1.0,\n    max_tokens=MAX_TOKENS,\n)\nlm_anthropic_sonnet_4_0 = dspy.LM(\n    \"anthropic/claude-sonnet-4-20250514\",\n    api_key=os.environ[\"ANTHROPIC_API_KEY\"],\n    max_tokens=MAX_TOKENS,\n)\nlm_gemini_flash_2_5 = dspy.LM(\n    \"gemini/gemini-2.5-flash\",\n    api_key=os.environ[\"GEMINI_API_KEY\"],\n    max_tokens=MAX_TOKENS,\n)\nlm_gemini_flash_2_5_lite = dspy.LM(\n    \"gemini/gemini-2.5-flash-lite\",\n    api_key=os.environ[\"GEMINI_API_KEY\"],\n    max_tokens=MAX_TOKENS,\n)\n\nlm_oai_o3 = dspy.LM(\n    \"openai/o3-2025-04-16\",\n    api_key=os.environ[\"OPENAI_API_KEY\"],\n    temperature=1.0,\n    max_tokens=MAX_TOKENS,\n)\nlm_anthropic_opus_4_0 = dspy.LM(\n    \"anthropic/claude-opus-4-20250514\",\n    api_key=os.environ[\"ANTHROPIC_API_KEY\"],\n    max_tokens=MAX_TOKENS,\n)\nlm_gemini_pro_2_5 = dspy.LM(\n    \"gemini/gemini-2.5-pro\",\n    api_key=os.environ[\"GEMINI_API_KEY\"],\n    max_tokens=MAX_TOKENS,\n)\n\nlm_qwen3_32b = dspy.LM(\n    \"ollama/qwen3:32b\",\n    api_base=\"http://localhost:11434\",\n    api_key=\"\",\n    max_tokens=MAX_TOKENS,\n)\n\n\n\n\nCode\nimport dspy\n\nllms = [\n    lm_oai_gpt_4_1,\n    lm_oai_gpt_4_1_mini,\n    lm_oai_o4_mini,\n    lm_anthropic_sonnet_4_0,\n    lm_gemini_flash_2_5,\n    lm_gemini_flash_2_5_lite,\n    lm_oai_o3,\n    lm_anthropic_opus_4_0,\n    lm_gemini_pro_2_5,\n    lm_qwen3_32b,\n]\n\n\nclass Echo(dspy.Signature):\n    \"\"\"Echoes the input prompt.\"\"\"\n\n    prompt = dspy.InputField()\n    output = dspy.OutputField()\n\n\nwith mlflow.start_run(run_name=\"Setup\") as run:\n    for lm in llms:\n        try:\n            with dspy.context(lm=lm, track_usage=True, cache=True):\n                if lm in [lm_oai_gpt_4_1, lm_oai_gpt_4_1_mini]:\n                    program = dspy.Predict(\"instruction -&gt; answer\")\n                else:\n                    program = dspy.ChainOfThought(\"instruction -&gt; answer\")\n                response = program(instruction=\"What is the date?\")\n                if getattr(response, \"reasoning\", None):\n                    print(f\"{lm.model} Reasoning: {response.reasoning}\")\n                print(f\"{lm.model}: {response.answer}\")\n        except Exception as e:\n            print(f\"{getattr(lm, 'model', lm)}: ERROR - {e}\")\n\n\nopenai/gpt-4.1-2025-04-14: Today's date is June 13, 2024.\nopenai/gpt-4.1-mini-2025-04-14: The current date is June 15, 2024.\nopenai/o4-mini-2025-04-16 Reasoning: The user asked for the current date. I will provide today's date in a clear, human-readable format.\nopenai/o4-mini-2025-04-16: The current date is May 30, 2024.\nanthropic/claude-sonnet-4-20250514 Reasoning: The user is asking for the current date. However, I don't have access to real-time information or the ability to know what the current date is. I should explain that I cannot provide the current date and suggest how they can find this information.\nanthropic/claude-sonnet-4-20250514: I don't have access to real-time information, so I cannot tell you the current date. To find today's date, you can:\n- Check your computer, phone, or other device\n- Search \"what is today's date\" in a search engine\n- Ask a voice assistant like Siri, Alexa, or Google Assistant\ngemini/gemini-2.5-flash Reasoning: The user is asking for the current date. I will provide today's date.\ngemini/gemini-2.5-flash: June 10, 2024\ngemini/gemini-2.5-flash-lite Reasoning: The user is asking for the current date. I need to access the current date and format it as requested.\ngemini/gemini-2.5-flash-lite: The current date is October 26, 2023.\nopenai/o3-2025-04-16 Reasoning: I don’t have real-time access to the system clock, so I’m unable to determine the exact current date at the moment of this response.\nopenai/o3-2025-04-16: I’m sorry, I don’t have access to real-time information to tell today’s date.\nanthropic/claude-opus-4-20250514 Reasoning: The user is asking for the current date. However, as an AI assistant, I don't have access to real-time information and cannot provide the current date. I should explain this limitation clearly to the user.\nanthropic/claude-opus-4-20250514: I don't have access to real-time information, so I cannot tell you today's date. To get the current date, you can check your device's calendar, search \"what's today's date\" in a search engine, or ask a voice assistant with real-time capabilities.\ngemini/gemini-2.5-pro Reasoning: The user has asked for the current date. I will access my internal system's real-time clock to provide the current calendar date.\ngemini/gemini-2.5-pro: Today's date is September 10, 2024.\nollama/qwen3:32b Reasoning: I cannot access real-time data or the current date. My knowledge is static and up to July 2024. To find the current date, please check your device's clock or calendar.\nollama/qwen3:32b: I cannot provide the current date as I do not have access to real-time information. Please check your device's clock or calendar for the current date.\n🏃 View run Setup at: http://localhost:5000/#/experiments/1/runs/20df48ca1ad2461d9dcc0b1575caec6d\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n\n\n\n\n  \n  Collapse MLflow Trace\n  \n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-10\" class=\"cell\" data-execution_count=\"11\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb6\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb6-1\"&gt;&lt;a href=\"#cb6-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;import&lt;/span&gt; json&lt;/span&gt;\n&lt;span id=\"cb6-2\"&gt;&lt;a href=\"#cb6-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb6-3\"&gt;&lt;a href=\"#cb6-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;data &lt;span class=\"op\"&gt;=&lt;/span&gt; json.load(&lt;span class=\"bu\"&gt;open&lt;/span&gt;(&lt;span class=\"st\"&gt;&quot;../data/convfinqa_dataset.json&quot;&lt;/span&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;/div&gt;\n&lt;/section&gt;\n&lt;section id=\"model-selection-1\" class=\"level2\"&gt;\n&lt;h2&gt;Model Selection&lt;/h2&gt;\n&lt;p&gt;In the &lt;strong&gt;easy&lt;/strong&gt; problems stage, we will select a relatively straightforward implementation. Specifically, we will provide the model with all context, and ask it to answer the question in a zero-shot manner.&lt;/p&gt;\n&lt;p&gt;This will help us identify strong baseline performance, and identify any issues with the model’s ability to understand the problem.&lt;/p&gt;\n&lt;p&gt;First, we will create the DSPy signatures for our dataset. Signatures are used to define the input and output of a model.&lt;/p&gt;\n&lt;p&gt;Specifically, we will have two types of signatures: one that doesn’t support reasoning model(for direct prediction models like GPT-4.1), and one that does support reasoning mode(for the reasoning models like o3, gemini pro, etc.)&lt;/p&gt;\n&lt;div id=\"cell-13\" class=\"cell\" data-execution_count=\"260\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb7\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb7-1\"&gt;&lt;a href=\"#cb7-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"kw\"&gt;class&lt;/span&gt; SolveTurnWithoutReasoning(dspy.Signature):&lt;/span&gt;\n&lt;span id=\"cb7-2\"&gt;&lt;a href=\"#cb7-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    conversation_context: &lt;span class=\"bu\"&gt;str&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.InputField(desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;Conversation so far&quot;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb7-3\"&gt;&lt;a href=\"#cb7-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    evidence_snippets: &lt;span class=\"bu\"&gt;str&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.InputField(&lt;/span&gt;\n&lt;span id=\"cb7-4\"&gt;&lt;a href=\"#cb7-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;Snippets of evidence surrounding the table&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb7-5\"&gt;&lt;a href=\"#cb7-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    )&lt;/span&gt;\n&lt;span id=\"cb7-6\"&gt;&lt;a href=\"#cb7-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    table: &lt;span class=\"bu\"&gt;str&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.InputField(desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;Input financial table with metrics&quot;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb7-7\"&gt;&lt;a href=\"#cb7-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    question: &lt;span class=\"bu\"&gt;str&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.InputField(desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;Question to answer&quot;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb7-8\"&gt;&lt;a href=\"#cb7-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb7-9\"&gt;&lt;a href=\"#cb7-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    ops: &lt;span class=\"bu\"&gt;str&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.OutputField(&lt;/span&gt;\n&lt;span id=\"cb7-10\"&gt;&lt;a href=\"#cb7-10\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;Comma-separated ConvFinQA DSL program. Allowed ops: add(x, y), subtract(x, y), multiply(x, y), divide(x, y), exp(x, y), greater(x, y). Args may be constants (e.g., const_100), numbers (int or float), or prior step refs (#0, #1…). Order always follows the pattern x &lt;op&gt; y—pick x and y deliberately. Example: subtract(const_100, 42), divide(#0, 3.14). Convert to percentages only if explicitly asked in the question.&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb7-11\"&gt;&lt;a href=\"#cb7-11\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    )&lt;/span&gt;\n&lt;span id=\"cb7-12\"&gt;&lt;a href=\"#cb7-12\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    answer: &lt;span class=\"bu\"&gt;str&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.OutputField(&lt;/span&gt;\n&lt;span id=\"cb7-13\"&gt;&lt;a href=\"#cb7-13\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;Final answer. This will be a single number, or a boolean string(yes/no)&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb7-14\"&gt;&lt;a href=\"#cb7-14\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    )&lt;/span&gt;\n&lt;span id=\"cb7-15\"&gt;&lt;a href=\"#cb7-15\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb7-16\"&gt;&lt;a href=\"#cb7-16\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb7-17\"&gt;&lt;a href=\"#cb7-17\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"kw\"&gt;class&lt;/span&gt; SolveTurnWithReasoning(dspy.Signature):&lt;/span&gt;\n&lt;span id=\"cb7-18\"&gt;&lt;a href=\"#cb7-18\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    conversation_context: &lt;span class=\"bu\"&gt;str&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.InputField(desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;Conversation so far&quot;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb7-19\"&gt;&lt;a href=\"#cb7-19\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    evidence_snippets: &lt;span class=\"bu\"&gt;str&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.InputField(&lt;/span&gt;\n&lt;span id=\"cb7-20\"&gt;&lt;a href=\"#cb7-20\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;Snippets of evidence surrounding the table&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb7-21\"&gt;&lt;a href=\"#cb7-21\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    )&lt;/span&gt;\n&lt;span id=\"cb7-22\"&gt;&lt;a href=\"#cb7-22\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    table: &lt;span class=\"bu\"&gt;str&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.InputField(desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;Input financial table with metrics&quot;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb7-23\"&gt;&lt;a href=\"#cb7-23\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    question: &lt;span class=\"bu\"&gt;str&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.InputField(desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;Question to answer&quot;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb7-24\"&gt;&lt;a href=\"#cb7-24\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb7-25\"&gt;&lt;a href=\"#cb7-25\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    reasoning: &lt;span class=\"bu\"&gt;str&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.OutputField(&lt;/span&gt;\n&lt;span id=\"cb7-26\"&gt;&lt;a href=\"#cb7-26\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;Reasoning behind the answer. Carefully analyze the conversation_context, and especially the evidence_snippets and table for the given question, and generate your reasoning before generating the ops and answer.&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb7-27\"&gt;&lt;a href=\"#cb7-27\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    )&lt;/span&gt;\n&lt;span id=\"cb7-28\"&gt;&lt;a href=\"#cb7-28\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    ops: &lt;span class=\"bu\"&gt;str&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.OutputField(&lt;/span&gt;\n&lt;span id=\"cb7-29\"&gt;&lt;a href=\"#cb7-29\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;Comma-separated ConvFinQA DSL program. Allowed ops: add(x, y), subtract(x, y), multiply(x, y), divide(x, y), exp(x, y), greater(x, y). Args may be constants (e.g., const_100), numbers (int or float), or prior step refs (#0, #1…). Order always follows the pattern x &lt;op&gt; y—pick x and y deliberately. Example: subtract(const_100, 42), divide(#0, 3.14). Convert to percentages only if explicitly asked in the question.&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb7-30\"&gt;&lt;a href=\"#cb7-30\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    )&lt;/span&gt;\n&lt;span id=\"cb7-31\"&gt;&lt;a href=\"#cb7-31\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    answer: &lt;span class=\"bu\"&gt;str&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.OutputField(&lt;/span&gt;\n&lt;span id=\"cb7-32\"&gt;&lt;a href=\"#cb7-32\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;Final answer. This will be a single number, or a boolean string(yes/no)&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb7-33\"&gt;&lt;a href=\"#cb7-33\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    )&lt;/span&gt;\n&lt;span id=\"cb7-34\"&gt;&lt;a href=\"#cb7-34\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb7-35\"&gt;&lt;a href=\"#cb7-35\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb7-36\"&gt;&lt;a href=\"#cb7-36\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"kw\"&gt;class&lt;/span&gt; TurnSolver(dspy.Module):&lt;/span&gt;\n&lt;span id=\"cb7-37\"&gt;&lt;a href=\"#cb7-37\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"co\"&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb7-38\"&gt;&lt;a href=\"#cb7-38\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    In the context of this series of interconnected finance-related queries and the additional information provided by the pretext, table data, and posttext from a company&#39;s financial filings, please provide a response to the final question. This may require extracting information from the context and performing mathematical calculations. Please take into account the information provided in the preceding questions and their answers when formulating your response: &lt;/span&gt;&lt;span class=\"ch\"&gt;\\n\\n&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb7-39\"&gt;&lt;a href=\"#cb7-39\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    &quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb7-40\"&gt;&lt;a href=\"#cb7-40\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb7-41\"&gt;&lt;a href=\"#cb7-41\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"kw\"&gt;def&lt;/span&gt; &lt;span class=\"fu\"&gt;__init__&lt;/span&gt;(&lt;span class=\"va\"&gt;self&lt;/span&gt;, reasoning_lm&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;False&lt;/span&gt;):&lt;/span&gt;\n&lt;span id=\"cb7-42\"&gt;&lt;a href=\"#cb7-42\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"bu\"&gt;super&lt;/span&gt;().&lt;span class=\"fu\"&gt;__init__&lt;/span&gt;()&lt;/span&gt;\n&lt;span id=\"cb7-43\"&gt;&lt;a href=\"#cb7-43\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;if&lt;/span&gt; reasoning_lm:&lt;/span&gt;\n&lt;span id=\"cb7-44\"&gt;&lt;a href=\"#cb7-44\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            &lt;span class=\"va\"&gt;self&lt;/span&gt;.pred &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.ChainOfThought(SolveTurnWithReasoning)&lt;/span&gt;\n&lt;span id=\"cb7-45\"&gt;&lt;a href=\"#cb7-45\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;else&lt;/span&gt;:&lt;/span&gt;\n&lt;span id=\"cb7-46\"&gt;&lt;a href=\"#cb7-46\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            &lt;span class=\"va\"&gt;self&lt;/span&gt;.pred &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.Predict(SolveTurnWithoutReasoning)&lt;/span&gt;\n&lt;span id=\"cb7-47\"&gt;&lt;a href=\"#cb7-47\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb7-48\"&gt;&lt;a href=\"#cb7-48\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"kw\"&gt;def&lt;/span&gt; forward(&lt;span class=\"va\"&gt;self&lt;/span&gt;, conversation_context, evidence_snippets, table, question):&lt;/span&gt;\n&lt;span id=\"cb7-49\"&gt;&lt;a href=\"#cb7-49\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"co\"&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb7-50\"&gt;&lt;a href=\"#cb7-50\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;        Run the model to solve a single turn.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb7-51\"&gt;&lt;a href=\"#cb7-51\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb7-52\"&gt;&lt;a href=\"#cb7-52\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;        Args:&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb7-53\"&gt;&lt;a href=\"#cb7-53\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;            conversation_context (str): Conversation so far.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb7-54\"&gt;&lt;a href=\"#cb7-54\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;            evidence_snippets (str): Evidence text around the table.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb7-55\"&gt;&lt;a href=\"#cb7-55\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;            table (str): Financial table in markdown.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb7-56\"&gt;&lt;a href=\"#cb7-56\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;            question (str): Question to answer.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb7-57\"&gt;&lt;a href=\"#cb7-57\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb7-58\"&gt;&lt;a href=\"#cb7-58\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;        Returns:&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb7-59\"&gt;&lt;a href=\"#cb7-59\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;            dspy.Prediction: Model output with reasoning, ops, and answer.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb7-60\"&gt;&lt;a href=\"#cb7-60\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;        &quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb7-61\"&gt;&lt;a href=\"#cb7-61\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;return&lt;/span&gt; &lt;span class=\"va\"&gt;self&lt;/span&gt;.pred(&lt;/span&gt;\n&lt;span id=\"cb7-62\"&gt;&lt;a href=\"#cb7-62\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            conversation_context&lt;span class=\"op\"&gt;=&lt;/span&gt;conversation_context,&lt;/span&gt;\n&lt;span id=\"cb7-63\"&gt;&lt;a href=\"#cb7-63\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            evidence_snippets&lt;span class=\"op\"&gt;=&lt;/span&gt;evidence_snippets,&lt;/span&gt;\n&lt;span id=\"cb7-64\"&gt;&lt;a href=\"#cb7-64\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            table&lt;span class=\"op\"&gt;=&lt;/span&gt;table,&lt;/span&gt;\n&lt;span id=\"cb7-65\"&gt;&lt;a href=\"#cb7-65\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            question&lt;span class=\"op\"&gt;=&lt;/span&gt;question,&lt;/span&gt;\n&lt;span id=\"cb7-66\"&gt;&lt;a href=\"#cb7-66\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        )&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;/div&gt;\n&lt;p&gt;Next, we define a few helper functions to format our dataset for the DSPy model. We intentionally don’t spend too much time here for now, and will come back to this later, during the &lt;em&gt;optimization&lt;/em&gt; phase.&lt;/p&gt;\n&lt;div id=\"cell-15\" class=\"cell\" data-execution_count=\"405\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb8\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb8-1\"&gt;&lt;a href=\"#cb8-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"kw\"&gt;def&lt;/span&gt; norm_ans(x):&lt;/span&gt;\n&lt;span id=\"cb8-2\"&gt;&lt;a href=\"#cb8-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"co\"&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-3\"&gt;&lt;a href=\"#cb8-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    Normalize an answer for comparison.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-4\"&gt;&lt;a href=\"#cb8-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb8-5\"&gt;&lt;a href=\"#cb8-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    Converts input to string, strips whitespace, removes percent signs,&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-6\"&gt;&lt;a href=\"#cb8-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    and attempts to cast to float. If conversion fails, returns the cleaned string.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-7\"&gt;&lt;a href=\"#cb8-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb8-8\"&gt;&lt;a href=\"#cb8-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    Args:&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-9\"&gt;&lt;a href=\"#cb8-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;        x: The answer to normalize (str, float, or int).&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-10\"&gt;&lt;a href=\"#cb8-10\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb8-11\"&gt;&lt;a href=\"#cb8-11\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    Returns:&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-12\"&gt;&lt;a href=\"#cb8-12\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;        float or str: Normalized float if possible, else cleaned string.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-13\"&gt;&lt;a href=\"#cb8-13\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    &quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-14\"&gt;&lt;a href=\"#cb8-14\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    s &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"bu\"&gt;str&lt;/span&gt;(x).strip().replace(&lt;span class=\"st\"&gt;&quot;%&quot;&lt;/span&gt;, &lt;span class=\"st\"&gt;&quot;&quot;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb8-15\"&gt;&lt;a href=\"#cb8-15\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;try&lt;/span&gt;:&lt;/span&gt;\n&lt;span id=\"cb8-16\"&gt;&lt;a href=\"#cb8-16\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;return&lt;/span&gt; &lt;span class=\"bu\"&gt;float&lt;/span&gt;(s)&lt;/span&gt;\n&lt;span id=\"cb8-17\"&gt;&lt;a href=\"#cb8-17\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;except&lt;/span&gt; &lt;span class=\"pp\"&gt;Exception&lt;/span&gt;:&lt;/span&gt;\n&lt;span id=\"cb8-18\"&gt;&lt;a href=\"#cb8-18\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;return&lt;/span&gt; s&lt;/span&gt;\n&lt;span id=\"cb8-19\"&gt;&lt;a href=\"#cb8-19\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb8-20\"&gt;&lt;a href=\"#cb8-20\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb8-21\"&gt;&lt;a href=\"#cb8-21\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"kw\"&gt;def&lt;/span&gt; _table_md(table_dict: &lt;span class=\"bu\"&gt;dict&lt;/span&gt;, max_cols: &lt;span class=\"bu\"&gt;int&lt;/span&gt; &lt;span class=\"op\"&gt;|&lt;/span&gt; &lt;span class=\"va\"&gt;None&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"va\"&gt;None&lt;/span&gt;) &lt;span class=\"op\"&gt;-&gt;&lt;/span&gt; &lt;span class=\"bu\"&gt;str&lt;/span&gt;:&lt;/span&gt;\n&lt;span id=\"cb8-22\"&gt;&lt;a href=\"#cb8-22\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"co\"&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-23\"&gt;&lt;a href=\"#cb8-23\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    Convert a dictionarised table to compact GitHub-markdown.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-24\"&gt;&lt;a href=\"#cb8-24\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb8-25\"&gt;&lt;a href=\"#cb8-25\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    Accepted shapes&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-26\"&gt;&lt;a href=\"#cb8-26\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    1) {row_name: {col_name: value, …}, …}   # regular 2-level mapping&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-27\"&gt;&lt;a href=\"#cb8-27\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    2) {col_name: value, …}                  # flat → coerced to single row&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-28\"&gt;&lt;a href=\"#cb8-28\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb8-29\"&gt;&lt;a href=\"#cb8-29\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    Guarantees&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-30\"&gt;&lt;a href=\"#cb8-30\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    • Original row order is kept.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-31\"&gt;&lt;a href=\"#cb8-31\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    • Column headers are kept in *first-seen* order; NO deduplication.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-32\"&gt;&lt;a href=\"#cb8-32\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    • max_cols (if given) truncates *after* enumeration, duplicates included.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-33\"&gt;&lt;a href=\"#cb8-33\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    • None → &quot;&quot; and everything else is str()-ed.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-34\"&gt;&lt;a href=\"#cb8-34\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    &quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-35\"&gt;&lt;a href=\"#cb8-35\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;if&lt;/span&gt; &lt;span class=\"kw\"&gt;not&lt;/span&gt; table_dict:&lt;/span&gt;\n&lt;span id=\"cb8-36\"&gt;&lt;a href=\"#cb8-36\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;return&lt;/span&gt; &lt;span class=\"st\"&gt;&quot;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-37\"&gt;&lt;a href=\"#cb8-37\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb8-38\"&gt;&lt;a href=\"#cb8-38\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;if&lt;/span&gt; &lt;span class=\"bu\"&gt;all&lt;/span&gt;(&lt;span class=\"kw\"&gt;not&lt;/span&gt; &lt;span class=\"bu\"&gt;isinstance&lt;/span&gt;(v, &lt;span class=\"bu\"&gt;dict&lt;/span&gt;) &lt;span class=\"cf\"&gt;for&lt;/span&gt; v &lt;span class=\"kw\"&gt;in&lt;/span&gt; table_dict.values()):&lt;/span&gt;\n&lt;span id=\"cb8-39\"&gt;&lt;a href=\"#cb8-39\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"co\"&gt;# flat mapping → one anonymous row&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-40\"&gt;&lt;a href=\"#cb8-40\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        table_dict &lt;span class=\"op\"&gt;=&lt;/span&gt; {&lt;span class=\"st\"&gt;&quot;&quot;&lt;/span&gt;: &lt;span class=\"bu\"&gt;dict&lt;/span&gt;(table_dict)}&lt;/span&gt;\n&lt;span id=\"cb8-41\"&gt;&lt;a href=\"#cb8-41\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;else&lt;/span&gt;:&lt;/span&gt;\n&lt;span id=\"cb8-42\"&gt;&lt;a href=\"#cb8-42\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"co\"&gt;# ensure every value is a dict&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-43\"&gt;&lt;a href=\"#cb8-43\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        table_dict &lt;span class=\"op\"&gt;=&lt;/span&gt; {&lt;/span&gt;\n&lt;span id=\"cb8-44\"&gt;&lt;a href=\"#cb8-44\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            r: (v &lt;span class=\"cf\"&gt;if&lt;/span&gt; &lt;span class=\"bu\"&gt;isinstance&lt;/span&gt;(v, &lt;span class=\"bu\"&gt;dict&lt;/span&gt;) &lt;span class=\"cf\"&gt;else&lt;/span&gt; {&lt;span class=\"st\"&gt;&quot;&quot;&lt;/span&gt;: v}) &lt;span class=\"cf\"&gt;for&lt;/span&gt; r, v &lt;span class=\"kw\"&gt;in&lt;/span&gt; table_dict.items()&lt;/span&gt;\n&lt;span id=\"cb8-45\"&gt;&lt;a href=\"#cb8-45\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        }&lt;/span&gt;\n&lt;span id=\"cb8-46\"&gt;&lt;a href=\"#cb8-46\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb8-47\"&gt;&lt;a href=\"#cb8-47\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    row_ids &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"bu\"&gt;list&lt;/span&gt;(table_dict.keys())  &lt;span class=\"co\"&gt;# preserve caller order&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-48\"&gt;&lt;a href=\"#cb8-48\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb8-49\"&gt;&lt;a href=\"#cb8-49\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    cols: &lt;span class=\"bu\"&gt;list&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; []&lt;/span&gt;\n&lt;span id=\"cb8-50\"&gt;&lt;a href=\"#cb8-50\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;for&lt;/span&gt; r &lt;span class=\"kw\"&gt;in&lt;/span&gt; row_ids:&lt;/span&gt;\n&lt;span id=\"cb8-51\"&gt;&lt;a href=\"#cb8-51\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        cols.extend(table_dict[r].keys())&lt;/span&gt;\n&lt;span id=\"cb8-52\"&gt;&lt;a href=\"#cb8-52\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;if&lt;/span&gt; max_cols &lt;span class=\"kw\"&gt;is&lt;/span&gt; &lt;span class=\"kw\"&gt;not&lt;/span&gt; &lt;span class=\"va\"&gt;None&lt;/span&gt;:&lt;/span&gt;\n&lt;span id=\"cb8-53\"&gt;&lt;a href=\"#cb8-53\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        cols &lt;span class=\"op\"&gt;=&lt;/span&gt; cols[:max_cols]&lt;/span&gt;\n&lt;span id=\"cb8-54\"&gt;&lt;a href=\"#cb8-54\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb8-55\"&gt;&lt;a href=\"#cb8-55\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    header &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"st\"&gt;&quot;| Row | &quot;&lt;/span&gt; &lt;span class=\"op\"&gt;+&lt;/span&gt; &lt;span class=\"st\"&gt;&quot; | &quot;&lt;/span&gt;.join(&lt;span class=\"bu\"&gt;map&lt;/span&gt;(&lt;span class=\"bu\"&gt;str&lt;/span&gt;, cols)) &lt;span class=\"op\"&gt;+&lt;/span&gt; &lt;span class=\"st\"&gt;&quot; |&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-56\"&gt;&lt;a href=\"#cb8-56\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    sep &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"st\"&gt;&quot;|&quot;&lt;/span&gt; &lt;span class=\"op\"&gt;+&lt;/span&gt; &lt;span class=\"st\"&gt;&quot;---|&quot;&lt;/span&gt; &lt;span class=\"op\"&gt;*&lt;/span&gt; (&lt;span class=\"bu\"&gt;len&lt;/span&gt;(cols) &lt;span class=\"op\"&gt;+&lt;/span&gt; &lt;span class=\"dv\"&gt;1&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb8-57\"&gt;&lt;a href=\"#cb8-57\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    lines &lt;span class=\"op\"&gt;=&lt;/span&gt; [header, sep]&lt;/span&gt;\n&lt;span id=\"cb8-58\"&gt;&lt;a href=\"#cb8-58\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb8-59\"&gt;&lt;a href=\"#cb8-59\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;for&lt;/span&gt; r &lt;span class=\"kw\"&gt;in&lt;/span&gt; row_ids:&lt;/span&gt;\n&lt;span id=\"cb8-60\"&gt;&lt;a href=\"#cb8-60\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        vals &lt;span class=\"op\"&gt;=&lt;/span&gt; [&lt;span class=\"bu\"&gt;str&lt;/span&gt;(table_dict[r].get(c, &lt;span class=\"st\"&gt;&quot;&quot;&lt;/span&gt;)) &lt;span class=\"cf\"&gt;for&lt;/span&gt; c &lt;span class=\"kw\"&gt;in&lt;/span&gt; cols]&lt;/span&gt;\n&lt;span id=\"cb8-61\"&gt;&lt;a href=\"#cb8-61\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        lines.append(&lt;span class=\"st\"&gt;&quot;| &quot;&lt;/span&gt; &lt;span class=\"op\"&gt;+&lt;/span&gt; &lt;span class=\"bu\"&gt;str&lt;/span&gt;(r) &lt;span class=\"op\"&gt;+&lt;/span&gt; &lt;span class=\"st\"&gt;&quot; | &quot;&lt;/span&gt; &lt;span class=\"op\"&gt;+&lt;/span&gt; &lt;span class=\"st\"&gt;&quot; | &quot;&lt;/span&gt;.join(vals) &lt;span class=\"op\"&gt;+&lt;/span&gt; &lt;span class=\"st\"&gt;&quot; |&quot;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb8-62\"&gt;&lt;a href=\"#cb8-62\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb8-63\"&gt;&lt;a href=\"#cb8-63\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;return&lt;/span&gt; &lt;span class=\"st\"&gt;&quot;&lt;/span&gt;&lt;span class=\"ch\"&gt;\\n&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;&lt;/span&gt;.join(lines)&lt;/span&gt;\n&lt;span id=\"cb8-64\"&gt;&lt;a href=\"#cb8-64\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb8-65\"&gt;&lt;a href=\"#cb8-65\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb8-66\"&gt;&lt;a href=\"#cb8-66\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"kw\"&gt;def&lt;/span&gt; build_inputs_from_row(&lt;/span&gt;\n&lt;span id=\"cb8-67\"&gt;&lt;a href=\"#cb8-67\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    row,&lt;/span&gt;\n&lt;span id=\"cb8-68\"&gt;&lt;a href=\"#cb8-68\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    turn_idx,&lt;/span&gt;\n&lt;span id=\"cb8-69\"&gt;&lt;a href=\"#cb8-69\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"op\"&gt;*&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb8-70\"&gt;&lt;a href=\"#cb8-70\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    history_mode: &lt;span class=\"bu\"&gt;str&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"st\"&gt;&quot;teacher&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb8-71\"&gt;&lt;a href=\"#cb8-71\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    state: &lt;span class=\"bu\"&gt;dict&lt;/span&gt; &lt;span class=\"op\"&gt;|&lt;/span&gt; &lt;span class=\"va\"&gt;None&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"va\"&gt;None&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb8-72\"&gt;&lt;a href=\"#cb8-72\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    max_table_cols: &lt;span class=\"bu\"&gt;int&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"dv\"&gt;100&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb8-73\"&gt;&lt;a href=\"#cb8-73\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;):&lt;/span&gt;\n&lt;span id=\"cb8-74\"&gt;&lt;a href=\"#cb8-74\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"co\"&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-75\"&gt;&lt;a href=\"#cb8-75\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    history_mode: &#39;teacher&#39; | &#39;model&#39; | &#39;none&#39;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-76\"&gt;&lt;a href=\"#cb8-76\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    state: carries model predictions across turns when history_mode=&#39;model&#39;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-77\"&gt;&lt;a href=\"#cb8-77\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;           expected keys: {&#39;pred_answers&#39;: list[str|float]}&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-78\"&gt;&lt;a href=\"#cb8-78\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    evidence_builder: optional callable(row, turn_idx)-&gt;str; if None, use simple truncation.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-79\"&gt;&lt;a href=\"#cb8-79\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    &quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-80\"&gt;&lt;a href=\"#cb8-80\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    qs &lt;span class=\"op\"&gt;=&lt;/span&gt; row[&lt;span class=\"st\"&gt;&quot;dialogue_conv_questions&quot;&lt;/span&gt;]&lt;/span&gt;\n&lt;span id=\"cb8-81\"&gt;&lt;a href=\"#cb8-81\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    gold &lt;span class=\"op\"&gt;=&lt;/span&gt; row[&lt;span class=\"st\"&gt;&quot;dialogue_executed_answers&quot;&lt;/span&gt;]&lt;/span&gt;\n&lt;span id=\"cb8-82\"&gt;&lt;a href=\"#cb8-82\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb8-83\"&gt;&lt;a href=\"#cb8-83\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"co\"&gt;# ---- history ----&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-84\"&gt;&lt;a href=\"#cb8-84\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    history_lines &lt;span class=\"op\"&gt;=&lt;/span&gt; []&lt;/span&gt;\n&lt;span id=\"cb8-85\"&gt;&lt;a href=\"#cb8-85\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;for&lt;/span&gt; t &lt;span class=\"kw\"&gt;in&lt;/span&gt; &lt;span class=\"bu\"&gt;range&lt;/span&gt;(turn_idx):&lt;/span&gt;\n&lt;span id=\"cb8-86\"&gt;&lt;a href=\"#cb8-86\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        history_lines.append(&lt;span class=\"ss\"&gt;f&quot;Q&lt;/span&gt;&lt;span class=\"sc\"&gt;{&lt;/span&gt;t &lt;span class=\"op\"&gt;+&lt;/span&gt; &lt;span class=\"dv\"&gt;1&lt;/span&gt;&lt;span class=\"sc\"&gt;}&lt;/span&gt;&lt;span class=\"ss\"&gt;: &lt;/span&gt;&lt;span class=\"sc\"&gt;{&lt;/span&gt;qs[t]&lt;span class=\"sc\"&gt;}&lt;/span&gt;&lt;span class=\"ss\"&gt;&quot;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb8-87\"&gt;&lt;a href=\"#cb8-87\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;if&lt;/span&gt; history_mode &lt;span class=\"op\"&gt;==&lt;/span&gt; &lt;span class=\"st\"&gt;&quot;teacher&quot;&lt;/span&gt;:&lt;/span&gt;\n&lt;span id=\"cb8-88\"&gt;&lt;a href=\"#cb8-88\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            history_lines.append(&lt;span class=\"ss\"&gt;f&quot;A&lt;/span&gt;&lt;span class=\"sc\"&gt;{&lt;/span&gt;t &lt;span class=\"op\"&gt;+&lt;/span&gt; &lt;span class=\"dv\"&gt;1&lt;/span&gt;&lt;span class=\"sc\"&gt;}&lt;/span&gt;&lt;span class=\"ss\"&gt;: &lt;/span&gt;&lt;span class=\"sc\"&gt;{&lt;/span&gt;gold[t]&lt;span class=\"sc\"&gt;}&lt;/span&gt;&lt;span class=\"ss\"&gt;&quot;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb8-89\"&gt;&lt;a href=\"#cb8-89\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;elif&lt;/span&gt; (&lt;/span&gt;\n&lt;span id=\"cb8-90\"&gt;&lt;a href=\"#cb8-90\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            history_mode &lt;span class=\"op\"&gt;==&lt;/span&gt; &lt;span class=\"st\"&gt;&quot;model&quot;&lt;/span&gt; &lt;span class=\"kw\"&gt;and&lt;/span&gt; state &lt;span class=\"kw\"&gt;and&lt;/span&gt; &lt;span class=\"bu\"&gt;len&lt;/span&gt;(state.get(&lt;span class=\"st\"&gt;&quot;pred_answers&quot;&lt;/span&gt;, [])) &lt;span class=\"op\"&gt;&gt;&lt;/span&gt; t&lt;/span&gt;\n&lt;span id=\"cb8-91\"&gt;&lt;a href=\"#cb8-91\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        ):&lt;/span&gt;\n&lt;span id=\"cb8-92\"&gt;&lt;a href=\"#cb8-92\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            history_lines.append(&lt;span class=\"ss\"&gt;f&quot;A&lt;/span&gt;&lt;span class=\"sc\"&gt;{&lt;/span&gt;t &lt;span class=\"op\"&gt;+&lt;/span&gt; &lt;span class=\"dv\"&gt;1&lt;/span&gt;&lt;span class=\"sc\"&gt;}&lt;/span&gt;&lt;span class=\"ss\"&gt;: &lt;/span&gt;&lt;span class=\"sc\"&gt;{&lt;/span&gt;state[&lt;span class=\"st\"&gt;&#39;pred_answers&#39;&lt;/span&gt;][t]&lt;span class=\"sc\"&gt;}&lt;/span&gt;&lt;span class=\"ss\"&gt;&quot;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb8-93\"&gt;&lt;a href=\"#cb8-93\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;elif&lt;/span&gt; history_mode &lt;span class=\"op\"&gt;==&lt;/span&gt; &lt;span class=\"st\"&gt;&quot;none&quot;&lt;/span&gt;:&lt;/span&gt;\n&lt;span id=\"cb8-94\"&gt;&lt;a href=\"#cb8-94\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            &lt;span class=\"cf\"&gt;pass&lt;/span&gt;  &lt;span class=\"co\"&gt;# only questions&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-95\"&gt;&lt;a href=\"#cb8-95\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    conversation_context &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"st\"&gt;&quot;&lt;/span&gt;&lt;span class=\"ch\"&gt;\\n&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;&lt;/span&gt;.join(history_lines) &lt;span class=\"cf\"&gt;if&lt;/span&gt; history_lines &lt;span class=\"cf\"&gt;else&lt;/span&gt; &lt;span class=\"st\"&gt;&quot;None&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-96\"&gt;&lt;a href=\"#cb8-96\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb8-97\"&gt;&lt;a href=\"#cb8-97\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"co\"&gt;# compact pre/post: first N sentences&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-98\"&gt;&lt;a href=\"#cb8-98\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"co\"&gt;# def first_sents(txt, n):&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-99\"&gt;&lt;a href=\"#cb8-99\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"co\"&gt;#     if not txt: return &quot;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-100\"&gt;&lt;a href=\"#cb8-100\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"co\"&gt;#     # very light sentence split&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-101\"&gt;&lt;a href=\"#cb8-101\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"co\"&gt;#     parts = [p.strip() for p in txt.split(&quot;. &quot;) if p.strip()]&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-102\"&gt;&lt;a href=\"#cb8-102\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"co\"&gt;#     return &quot;. &quot;.join(parts[:n])&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-103\"&gt;&lt;a href=\"#cb8-103\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"co\"&gt;# pre = first_sents(row.get(&quot;doc_pre_text&quot;, &quot;&quot;) or &quot;&quot;, max_pre_sents)&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-104\"&gt;&lt;a href=\"#cb8-104\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"co\"&gt;# post= first_sents(row.get(&quot;doc_post_text&quot;, &quot;&quot;) or &quot;&quot;, max_post_sents)&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-105\"&gt;&lt;a href=\"#cb8-105\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"co\"&gt;# evidence_snippets = f&quot;[PRE]\\n{pre}\\n[/PRE]\\n[POST]\\n{post}\\n[/POST]&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-106\"&gt;&lt;a href=\"#cb8-106\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    evidence_snippets &lt;span class=\"op\"&gt;=&lt;/span&gt; (&lt;/span&gt;\n&lt;span id=\"cb8-107\"&gt;&lt;a href=\"#cb8-107\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"ss\"&gt;f&quot;[PRE]&lt;/span&gt;&lt;span class=\"ch\"&gt;\\n&lt;/span&gt;&lt;span class=\"sc\"&gt;{&lt;/span&gt;row[&lt;span class=\"st\"&gt;&#39;doc_pre_text&#39;&lt;/span&gt;]&lt;span class=\"sc\"&gt;}&lt;/span&gt;&lt;span class=\"ch\"&gt;\\n&lt;/span&gt;&lt;span class=\"ss\"&gt;[/PRE]&lt;/span&gt;&lt;span class=\"ch\"&gt;\\n&lt;/span&gt;&lt;span class=\"ss\"&gt;[POST]&lt;/span&gt;&lt;span class=\"ch\"&gt;\\n&lt;/span&gt;&lt;span class=\"sc\"&gt;{&lt;/span&gt;row[&lt;span class=\"st\"&gt;&#39;doc_post_text&#39;&lt;/span&gt;]&lt;span class=\"sc\"&gt;}&lt;/span&gt;&lt;span class=\"ch\"&gt;\\n&lt;/span&gt;&lt;span class=\"ss\"&gt;[/POST]&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb8-108\"&gt;&lt;a href=\"#cb8-108\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    )&lt;/span&gt;\n&lt;span id=\"cb8-109\"&gt;&lt;a href=\"#cb8-109\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    table_md &lt;span class=\"op\"&gt;=&lt;/span&gt; _table_md(row.get(&lt;span class=\"st\"&gt;&quot;doc_table&quot;&lt;/span&gt;, {}) &lt;span class=\"kw\"&gt;or&lt;/span&gt; {}, max_cols&lt;span class=\"op\"&gt;=&lt;/span&gt;max_table_cols)&lt;/span&gt;\n&lt;span id=\"cb8-110\"&gt;&lt;a href=\"#cb8-110\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb8-111\"&gt;&lt;a href=\"#cb8-111\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;return&lt;/span&gt; &lt;span class=\"bu\"&gt;dict&lt;/span&gt;(&lt;/span&gt;\n&lt;span id=\"cb8-112\"&gt;&lt;a href=\"#cb8-112\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        conversation_context&lt;span class=\"op\"&gt;=&lt;/span&gt;conversation_context,&lt;/span&gt;\n&lt;span id=\"cb8-113\"&gt;&lt;a href=\"#cb8-113\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        evidence_snippets&lt;span class=\"op\"&gt;=&lt;/span&gt;evidence_snippets,&lt;/span&gt;\n&lt;span id=\"cb8-114\"&gt;&lt;a href=\"#cb8-114\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        table&lt;span class=\"op\"&gt;=&lt;/span&gt;table_md,&lt;/span&gt;\n&lt;span id=\"cb8-115\"&gt;&lt;a href=\"#cb8-115\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        question&lt;span class=\"op\"&gt;=&lt;/span&gt;qs[turn_idx],&lt;/span&gt;\n&lt;span id=\"cb8-116\"&gt;&lt;a href=\"#cb8-116\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"op\"&gt;**&lt;/span&gt;row,&lt;/span&gt;\n&lt;span id=\"cb8-117\"&gt;&lt;a href=\"#cb8-117\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    )&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-16\" class=\"cell\" data-execution_count=\"406\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb9\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb9-1\"&gt;&lt;a href=\"#cb9-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"kw\"&gt;def&lt;/span&gt; evaluate_dialogues(model, df):&lt;/span&gt;\n&lt;span id=\"cb9-2\"&gt;&lt;a href=\"#cb9-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"co\"&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-3\"&gt;&lt;a href=\"#cb9-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    Evaluate a dialogue model on a DataFrame of conversations.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-4\"&gt;&lt;a href=\"#cb9-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb9-5\"&gt;&lt;a href=\"#cb9-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    Args:&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-6\"&gt;&lt;a href=\"#cb9-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;        model: Callable that takes unpacked input dict and returns an object with at least `.answer` (and optionally `.ops`).&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-7\"&gt;&lt;a href=\"#cb9-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;        df: pd.DataFrame with columns:&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-8\"&gt;&lt;a href=\"#cb9-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;            - &quot;dialogue_conv_questions&quot;: list of str, all questions in the conversation&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-9\"&gt;&lt;a href=\"#cb9-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;            - &quot;dialogue_executed_answers&quot;: list of str/float, all executed answers so far&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-10\"&gt;&lt;a href=\"#cb9-10\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;            - (other columns as needed by evidence_builder)&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-11\"&gt;&lt;a href=\"#cb9-11\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb9-12\"&gt;&lt;a href=\"#cb9-12\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    Returns:&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-13\"&gt;&lt;a href=\"#cb9-13\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;        dict with:&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-14\"&gt;&lt;a href=\"#cb9-14\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;            - &quot;turn_em_micro&quot;: float, micro-averaged exact match over all turns&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-15\"&gt;&lt;a href=\"#cb9-15\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;            - &quot;dlg_mean_em_macro&quot;: float, macro-averaged mean EM per dialogue&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-16\"&gt;&lt;a href=\"#cb9-16\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;            - &quot;joint_em&quot;: float, fraction of dialogues with all turns correct&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-17\"&gt;&lt;a href=\"#cb9-17\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;            - &quot;final_turn_em&quot;: float, EM on the final turn of each dialogue&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-18\"&gt;&lt;a href=\"#cb9-18\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;            - &quot;n_dialogues&quot;: int, number of dialogues&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-19\"&gt;&lt;a href=\"#cb9-19\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;            - &quot;n_turns&quot;: int, total number of turns&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-20\"&gt;&lt;a href=\"#cb9-20\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    &quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-21\"&gt;&lt;a href=\"#cb9-21\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    turn_hits &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"dv\"&gt;0&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-22\"&gt;&lt;a href=\"#cb9-22\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    turn_tot &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"dv\"&gt;0&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-23\"&gt;&lt;a href=\"#cb9-23\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"co\"&gt;# exec_hits = 0&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-24\"&gt;&lt;a href=\"#cb9-24\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    dlg_mean_ems &lt;span class=\"op\"&gt;=&lt;/span&gt; []&lt;/span&gt;\n&lt;span id=\"cb9-25\"&gt;&lt;a href=\"#cb9-25\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    dlg_joint_hits &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"dv\"&gt;0&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-26\"&gt;&lt;a href=\"#cb9-26\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    final_hits &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"dv\"&gt;0&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-27\"&gt;&lt;a href=\"#cb9-27\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb9-28\"&gt;&lt;a href=\"#cb9-28\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;for&lt;/span&gt; _, row &lt;span class=\"kw\"&gt;in&lt;/span&gt; df.iterrows():&lt;/span&gt;\n&lt;span id=\"cb9-29\"&gt;&lt;a href=\"#cb9-29\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        qs &lt;span class=\"op\"&gt;=&lt;/span&gt; row[&lt;span class=\"st\"&gt;&quot;dialogue_conv_questions&quot;&lt;/span&gt;]&lt;/span&gt;\n&lt;span id=\"cb9-30\"&gt;&lt;a href=\"#cb9-30\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        gold &lt;span class=\"op\"&gt;=&lt;/span&gt; row[&lt;span class=\"st\"&gt;&quot;dialogue_executed_answers&quot;&lt;/span&gt;]&lt;/span&gt;\n&lt;span id=\"cb9-31\"&gt;&lt;a href=\"#cb9-31\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        ems &lt;span class=\"op\"&gt;=&lt;/span&gt; []&lt;/span&gt;\n&lt;span id=\"cb9-32\"&gt;&lt;a href=\"#cb9-32\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        exec_flags &lt;span class=\"op\"&gt;=&lt;/span&gt; []&lt;/span&gt;\n&lt;span id=\"cb9-33\"&gt;&lt;a href=\"#cb9-33\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;for&lt;/span&gt; t &lt;span class=\"kw\"&gt;in&lt;/span&gt; &lt;span class=\"bu\"&gt;range&lt;/span&gt;(&lt;span class=\"bu\"&gt;len&lt;/span&gt;(qs)):&lt;/span&gt;\n&lt;span id=\"cb9-34\"&gt;&lt;a href=\"#cb9-34\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            inp &lt;span class=\"op\"&gt;=&lt;/span&gt; build_inputs_from_row(row, t)&lt;/span&gt;\n&lt;span id=\"cb9-35\"&gt;&lt;a href=\"#cb9-35\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            out &lt;span class=\"op\"&gt;=&lt;/span&gt; model(&lt;span class=\"op\"&gt;**&lt;/span&gt;inp)  &lt;span class=\"co\"&gt;# out.ops, out.answer&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-36\"&gt;&lt;a href=\"#cb9-36\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            pa &lt;span class=\"op\"&gt;=&lt;/span&gt; norm_ans(out.answer)&lt;/span&gt;\n&lt;span id=\"cb9-37\"&gt;&lt;a href=\"#cb9-37\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            ga &lt;span class=\"op\"&gt;=&lt;/span&gt; norm_ans(gold[t])&lt;/span&gt;\n&lt;span id=\"cb9-38\"&gt;&lt;a href=\"#cb9-38\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            em &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"bu\"&gt;float&lt;/span&gt;(pa &lt;span class=\"op\"&gt;==&lt;/span&gt; ga)&lt;/span&gt;\n&lt;span id=\"cb9-39\"&gt;&lt;a href=\"#cb9-39\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            ems.append(em)&lt;/span&gt;\n&lt;span id=\"cb9-40\"&gt;&lt;a href=\"#cb9-40\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            turn_hits &lt;span class=\"op\"&gt;+=&lt;/span&gt; em&lt;/span&gt;\n&lt;span id=\"cb9-41\"&gt;&lt;a href=\"#cb9-41\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            turn_tot &lt;span class=\"op\"&gt;+=&lt;/span&gt; &lt;span class=\"dv\"&gt;1&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-42\"&gt;&lt;a href=\"#cb9-42\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb9-43\"&gt;&lt;a href=\"#cb9-43\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            &lt;span class=\"co\"&gt;# (optional) exec check if you have your python DSL evaluator:&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-44\"&gt;&lt;a href=\"#cb9-44\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            &lt;span class=\"co\"&gt;# exec_ok = False&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-45\"&gt;&lt;a href=\"#cb9-45\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            &lt;span class=\"co\"&gt;# try:&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-46\"&gt;&lt;a href=\"#cb9-46\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            &lt;span class=\"co\"&gt;#     # exec_ok = (run_dsl(out.ops, inp) == ga)   # plug your interpreter&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-47\"&gt;&lt;a href=\"#cb9-47\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            &lt;span class=\"co\"&gt;#     exec_ok = False&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-48\"&gt;&lt;a href=\"#cb9-48\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            &lt;span class=\"co\"&gt;# except Exception:&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-49\"&gt;&lt;a href=\"#cb9-49\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            &lt;span class=\"co\"&gt;#     exec_ok = False&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-50\"&gt;&lt;a href=\"#cb9-50\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            &lt;span class=\"co\"&gt;# exec_flags.append(exec_ok)&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-51\"&gt;&lt;a href=\"#cb9-51\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            &lt;span class=\"co\"&gt;# exec_hits += float(exec_ok)&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-52\"&gt;&lt;a href=\"#cb9-52\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb9-53\"&gt;&lt;a href=\"#cb9-53\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        dlg_mean_ems.append(&lt;span class=\"bu\"&gt;sum&lt;/span&gt;(ems) &lt;span class=\"op\"&gt;/&lt;/span&gt; &lt;span class=\"bu\"&gt;len&lt;/span&gt;(ems))&lt;/span&gt;\n&lt;span id=\"cb9-54\"&gt;&lt;a href=\"#cb9-54\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;if&lt;/span&gt; &lt;span class=\"bu\"&gt;all&lt;/span&gt;(v &lt;span class=\"op\"&gt;==&lt;/span&gt; &lt;span class=\"fl\"&gt;1.0&lt;/span&gt; &lt;span class=\"cf\"&gt;for&lt;/span&gt; v &lt;span class=\"kw\"&gt;in&lt;/span&gt; ems):&lt;/span&gt;\n&lt;span id=\"cb9-55\"&gt;&lt;a href=\"#cb9-55\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            dlg_joint_hits &lt;span class=\"op\"&gt;+=&lt;/span&gt; &lt;span class=\"dv\"&gt;1&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-56\"&gt;&lt;a href=\"#cb9-56\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        final_hits &lt;span class=\"op\"&gt;+=&lt;/span&gt; ems[&lt;span class=\"op\"&gt;-&lt;/span&gt;&lt;span class=\"dv\"&gt;1&lt;/span&gt;]&lt;/span&gt;\n&lt;span id=\"cb9-57\"&gt;&lt;a href=\"#cb9-57\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb9-58\"&gt;&lt;a href=\"#cb9-58\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;return&lt;/span&gt; {&lt;/span&gt;\n&lt;span id=\"cb9-59\"&gt;&lt;a href=\"#cb9-59\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"st\"&gt;&quot;turn_em_micro&quot;&lt;/span&gt;: turn_hits &lt;span class=\"op\"&gt;/&lt;/span&gt; &lt;span class=\"bu\"&gt;max&lt;/span&gt;(&lt;span class=\"dv\"&gt;1&lt;/span&gt;, turn_tot),&lt;/span&gt;\n&lt;span id=\"cb9-60\"&gt;&lt;a href=\"#cb9-60\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"st\"&gt;&quot;dlg_mean_em_macro&quot;&lt;/span&gt;: &lt;span class=\"bu\"&gt;sum&lt;/span&gt;(dlg_mean_ems) &lt;span class=\"op\"&gt;/&lt;/span&gt; &lt;span class=\"bu\"&gt;max&lt;/span&gt;(&lt;span class=\"dv\"&gt;1&lt;/span&gt;, &lt;span class=\"bu\"&gt;len&lt;/span&gt;(dlg_mean_ems)),&lt;/span&gt;\n&lt;span id=\"cb9-61\"&gt;&lt;a href=\"#cb9-61\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"st\"&gt;&quot;joint_em&quot;&lt;/span&gt;: dlg_joint_hits &lt;span class=\"op\"&gt;/&lt;/span&gt; &lt;span class=\"bu\"&gt;max&lt;/span&gt;(&lt;span class=\"dv\"&gt;1&lt;/span&gt;, &lt;span class=\"bu\"&gt;len&lt;/span&gt;(dlg_mean_ems)),&lt;/span&gt;\n&lt;span id=\"cb9-62\"&gt;&lt;a href=\"#cb9-62\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"st\"&gt;&quot;final_turn_em&quot;&lt;/span&gt;: final_hits &lt;span class=\"op\"&gt;/&lt;/span&gt; &lt;span class=\"bu\"&gt;max&lt;/span&gt;(&lt;span class=\"dv\"&gt;1&lt;/span&gt;, &lt;span class=\"bu\"&gt;len&lt;/span&gt;(dlg_mean_ems)),&lt;/span&gt;\n&lt;span id=\"cb9-63\"&gt;&lt;a href=\"#cb9-63\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"co\"&gt;# &quot;exec_agree_rate&quot;: exec_hits / max(1, turn_tot),&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb9-64\"&gt;&lt;a href=\"#cb9-64\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"st\"&gt;&quot;n_dialogues&quot;&lt;/span&gt;: &lt;span class=\"bu\"&gt;len&lt;/span&gt;(dlg_mean_ems),&lt;/span&gt;\n&lt;span id=\"cb9-65\"&gt;&lt;a href=\"#cb9-65\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"st\"&gt;&quot;n_turns&quot;&lt;/span&gt;: turn_tot,&lt;/span&gt;\n&lt;span id=\"cb9-66\"&gt;&lt;a href=\"#cb9-66\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;/div&gt;\n&lt;p&gt;Next, we will create the DSPy metric, used to &lt;em&gt;evaluate&lt;/em&gt; the performance of our model.&lt;/p&gt;\n&lt;p&gt;We will focus on 2 parts to our metric: - If the answer is a floating point number, we will aim to compare it with the ground truth with some tolerance. - If the answer is a string, we will aim to perform &lt;strong&gt;exact match&lt;/strong&gt; via DSPy’s &lt;code&gt;exact_match&lt;/code&gt; metric.&lt;/p&gt;\n&lt;div id=\"cell-18\" class=\"cell\" data-execution_count=\"407\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb10\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb10-1\"&gt;&lt;a href=\"#cb10-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"kw\"&gt;def&lt;/span&gt; turn_em_metric(example, pred, trace&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;None&lt;/span&gt;):&lt;/span&gt;\n&lt;span id=\"cb10-2\"&gt;&lt;a href=\"#cb10-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"co\"&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb10-3\"&gt;&lt;a href=\"#cb10-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    Compute turn-level exact match (EM) metric for a single example/prediction pair.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb10-4\"&gt;&lt;a href=\"#cb10-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb10-5\"&gt;&lt;a href=\"#cb10-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    Args:&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb10-6\"&gt;&lt;a href=\"#cb10-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;        example: dict-like, must contain &quot;gold_answer&quot; key.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb10-7\"&gt;&lt;a href=\"#cb10-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;        pred: object with an &quot;answer&quot; attribute.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb10-8\"&gt;&lt;a href=\"#cb10-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb10-9\"&gt;&lt;a href=\"#cb10-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    Returns:&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb10-10\"&gt;&lt;a href=\"#cb10-10\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;        float: 1.0 if normalized prediction matches normalized gold answer (with tolerance for floats), else 0.0.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb10-11\"&gt;&lt;a href=\"#cb10-11\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    &quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb10-12\"&gt;&lt;a href=\"#cb10-12\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"im\"&gt;from&lt;/span&gt; dspy.evaluate.metrics &lt;span class=\"im\"&gt;import&lt;/span&gt; answer_exact_match&lt;/span&gt;\n&lt;span id=\"cb10-13\"&gt;&lt;a href=\"#cb10-13\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb10-14\"&gt;&lt;a href=\"#cb10-14\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    pa &lt;span class=\"op\"&gt;=&lt;/span&gt; norm_ans(pred.answer)&lt;/span&gt;\n&lt;span id=\"cb10-15\"&gt;&lt;a href=\"#cb10-15\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    ga &lt;span class=\"op\"&gt;=&lt;/span&gt; norm_ans(example[&lt;span class=\"st\"&gt;&quot;answer&quot;&lt;/span&gt;])&lt;/span&gt;\n&lt;span id=\"cb10-16\"&gt;&lt;a href=\"#cb10-16\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;if&lt;/span&gt; &lt;span class=\"bu\"&gt;isinstance&lt;/span&gt;(pa, &lt;span class=\"bu\"&gt;float&lt;/span&gt;) &lt;span class=\"kw\"&gt;and&lt;/span&gt; &lt;span class=\"bu\"&gt;isinstance&lt;/span&gt;(ga, &lt;span class=\"bu\"&gt;float&lt;/span&gt;):&lt;/span&gt;\n&lt;span id=\"cb10-17\"&gt;&lt;a href=\"#cb10-17\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;return&lt;/span&gt; &lt;span class=\"bu\"&gt;float&lt;/span&gt;(&lt;span class=\"bu\"&gt;abs&lt;/span&gt;(pa &lt;span class=\"op\"&gt;-&lt;/span&gt; ga) &lt;span class=\"op\"&gt;&lt;=&lt;/span&gt; &lt;span class=\"fl\"&gt;1e-2&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb10-18\"&gt;&lt;a href=\"#cb10-18\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;else&lt;/span&gt;:&lt;/span&gt;\n&lt;span id=\"cb10-19\"&gt;&lt;a href=\"#cb10-19\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"co\"&gt;# exact_match in DSPy needs the inputs to be in string format&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb10-20\"&gt;&lt;a href=\"#cb10-20\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"co\"&gt;# due to the normalisations DSPy performs internally.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb10-21\"&gt;&lt;a href=\"#cb10-21\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        ground_truth &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.Prediction(answer&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"bu\"&gt;str&lt;/span&gt;(example.answer))&lt;/span&gt;\n&lt;span id=\"cb10-22\"&gt;&lt;a href=\"#cb10-22\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        pred_answer &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.Prediction(answer&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"bu\"&gt;str&lt;/span&gt;(pred.answer))&lt;/span&gt;\n&lt;span id=\"cb10-23\"&gt;&lt;a href=\"#cb10-23\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;return&lt;/span&gt; &lt;span class=\"bu\"&gt;float&lt;/span&gt;(answer_exact_match(ground_truth, pred_answer))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-19\" class=\"cell\" data-execution_count=\"408\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb11\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb11-1\"&gt;&lt;a href=\"#cb11-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"kw\"&gt;def&lt;/span&gt; to_turn_examples(df, history_mode&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;teacher&quot;&lt;/span&gt;):&lt;/span&gt;\n&lt;span id=\"cb11-2\"&gt;&lt;a href=\"#cb11-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    examples &lt;span class=\"op\"&gt;=&lt;/span&gt; []&lt;/span&gt;\n&lt;span id=\"cb11-3\"&gt;&lt;a href=\"#cb11-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;for&lt;/span&gt; _, row &lt;span class=\"kw\"&gt;in&lt;/span&gt; df.iterrows():&lt;/span&gt;\n&lt;span id=\"cb11-4\"&gt;&lt;a href=\"#cb11-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        qs &lt;span class=\"op\"&gt;=&lt;/span&gt; row[&lt;span class=\"st\"&gt;&quot;dialogue_conv_questions&quot;&lt;/span&gt;]&lt;/span&gt;\n&lt;span id=\"cb11-5\"&gt;&lt;a href=\"#cb11-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        gold &lt;span class=\"op\"&gt;=&lt;/span&gt; row[&lt;span class=\"st\"&gt;&quot;dialogue_executed_answers&quot;&lt;/span&gt;]&lt;/span&gt;\n&lt;span id=\"cb11-6\"&gt;&lt;a href=\"#cb11-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;for&lt;/span&gt; t &lt;span class=\"kw\"&gt;in&lt;/span&gt; &lt;span class=\"bu\"&gt;range&lt;/span&gt;(&lt;span class=\"bu\"&gt;len&lt;/span&gt;(qs)):&lt;/span&gt;\n&lt;span id=\"cb11-7\"&gt;&lt;a href=\"#cb11-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            inp &lt;span class=\"op\"&gt;=&lt;/span&gt; build_inputs_from_row(row, t, history_mode&lt;span class=\"op\"&gt;=&lt;/span&gt;history_mode)&lt;/span&gt;\n&lt;span id=\"cb11-8\"&gt;&lt;a href=\"#cb11-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            ex &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"bu\"&gt;dict&lt;/span&gt;(&lt;span class=\"op\"&gt;**&lt;/span&gt;inp, answer&lt;span class=\"op\"&gt;=&lt;/span&gt;gold[t])&lt;/span&gt;\n&lt;span id=\"cb11-9\"&gt;&lt;a href=\"#cb11-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            examples.append(&lt;/span&gt;\n&lt;span id=\"cb11-10\"&gt;&lt;a href=\"#cb11-10\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                dspy.Example(&lt;span class=\"op\"&gt;**&lt;/span&gt;ex).with_inputs(&lt;/span&gt;\n&lt;span id=\"cb11-11\"&gt;&lt;a href=\"#cb11-11\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                    &lt;span class=\"st\"&gt;&quot;conversation_context&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb11-12\"&gt;&lt;a href=\"#cb11-12\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                    &lt;span class=\"st\"&gt;&quot;evidence_snippets&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb11-13\"&gt;&lt;a href=\"#cb11-13\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                    &lt;span class=\"st\"&gt;&quot;table&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb11-14\"&gt;&lt;a href=\"#cb11-14\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                    &lt;span class=\"st\"&gt;&quot;question&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb11-15\"&gt;&lt;a href=\"#cb11-15\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                )&lt;/span&gt;\n&lt;span id=\"cb11-16\"&gt;&lt;a href=\"#cb11-16\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            )&lt;/span&gt;\n&lt;span id=\"cb11-17\"&gt;&lt;a href=\"#cb11-17\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;return&lt;/span&gt; examples&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;/div&gt;\n&lt;p&gt;Next, we will prepare our datasets.&lt;/p&gt;\n&lt;p&gt;We will aim to use the splits as follows: - &lt;code&gt;train&lt;/code&gt;: Used primarily for the &lt;em&gt;optimisation&lt;/em&gt; phase. This will be discussed shortly. - &lt;code&gt;valid&lt;/code&gt;: Used to evaluate the performance of an LM on an optimised model &lt;em&gt;trained&lt;/em&gt; using the train dataset. - &lt;code&gt;test&lt;/code&gt;: Used to evaluate the performance of an LM on a held-out dataset. This will determine the overall stage performance.&lt;/p&gt;\n&lt;div id=\"cell-21\" class=\"cell\" data-execution_count=\"409\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb12\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb12-1\"&gt;&lt;a href=\"#cb12-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;import&lt;/span&gt; pandas &lt;span class=\"im\"&gt;as&lt;/span&gt; pd&lt;/span&gt;\n&lt;span id=\"cb12-2\"&gt;&lt;a href=\"#cb12-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb12-3\"&gt;&lt;a href=\"#cb12-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;train_df &lt;span class=\"op\"&gt;=&lt;/span&gt; pd.DataFrame(data[&lt;span class=\"st\"&gt;&quot;train&quot;&lt;/span&gt;])&lt;/span&gt;\n&lt;span id=\"cb12-4\"&gt;&lt;a href=\"#cb12-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;test_df &lt;span class=\"op\"&gt;=&lt;/span&gt; pd.DataFrame(data[&lt;span class=\"st\"&gt;&quot;dev&quot;&lt;/span&gt;])&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-22\" class=\"cell\" data-execution_count=\"410\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb13\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb13-1\"&gt;&lt;a href=\"#cb13-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;# Flatten features to remove the indexing gymnastics&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb13-2\"&gt;&lt;a href=\"#cb13-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;train_flat_df &lt;span class=\"op\"&gt;=&lt;/span&gt; pd.concat(&lt;/span&gt;\n&lt;span id=\"cb13-3\"&gt;&lt;a href=\"#cb13-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    [&lt;/span&gt;\n&lt;span id=\"cb13-4\"&gt;&lt;a href=\"#cb13-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        train_df.drop([&lt;span class=\"st\"&gt;&quot;doc&quot;&lt;/span&gt;, &lt;span class=\"st\"&gt;&quot;dialogue&quot;&lt;/span&gt;, &lt;span class=\"st\"&gt;&quot;features&quot;&lt;/span&gt;], axis&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"dv\"&gt;1&lt;/span&gt;),&lt;/span&gt;\n&lt;span id=\"cb13-5\"&gt;&lt;a href=\"#cb13-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        train_df[&lt;span class=\"st\"&gt;&quot;doc&quot;&lt;/span&gt;].&lt;span class=\"bu\"&gt;apply&lt;/span&gt;(pd.Series).add_prefix(&lt;span class=\"st\"&gt;&quot;doc_&quot;&lt;/span&gt;),&lt;/span&gt;\n&lt;span id=\"cb13-6\"&gt;&lt;a href=\"#cb13-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        train_df[&lt;span class=\"st\"&gt;&quot;dialogue&quot;&lt;/span&gt;].&lt;span class=\"bu\"&gt;apply&lt;/span&gt;(pd.Series).add_prefix(&lt;span class=\"st\"&gt;&quot;dialogue_&quot;&lt;/span&gt;),&lt;/span&gt;\n&lt;span id=\"cb13-7\"&gt;&lt;a href=\"#cb13-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        train_df[&lt;span class=\"st\"&gt;&quot;features&quot;&lt;/span&gt;].&lt;span class=\"bu\"&gt;apply&lt;/span&gt;(pd.Series).add_prefix(&lt;span class=\"st\"&gt;&quot;features_&quot;&lt;/span&gt;),&lt;/span&gt;\n&lt;span id=\"cb13-8\"&gt;&lt;a href=\"#cb13-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    ],&lt;/span&gt;\n&lt;span id=\"cb13-9\"&gt;&lt;a href=\"#cb13-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    axis&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"dv\"&gt;1&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb13-10\"&gt;&lt;a href=\"#cb13-10\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;)&lt;/span&gt;\n&lt;span id=\"cb13-11\"&gt;&lt;a href=\"#cb13-11\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb13-12\"&gt;&lt;a href=\"#cb13-12\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;test_flat_df &lt;span class=\"op\"&gt;=&lt;/span&gt; pd.concat(&lt;/span&gt;\n&lt;span id=\"cb13-13\"&gt;&lt;a href=\"#cb13-13\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    [&lt;/span&gt;\n&lt;span id=\"cb13-14\"&gt;&lt;a href=\"#cb13-14\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        test_df.drop([&lt;span class=\"st\"&gt;&quot;doc&quot;&lt;/span&gt;, &lt;span class=\"st\"&gt;&quot;dialogue&quot;&lt;/span&gt;, &lt;span class=\"st\"&gt;&quot;features&quot;&lt;/span&gt;], axis&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"dv\"&gt;1&lt;/span&gt;),&lt;/span&gt;\n&lt;span id=\"cb13-15\"&gt;&lt;a href=\"#cb13-15\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        test_df[&lt;span class=\"st\"&gt;&quot;doc&quot;&lt;/span&gt;].&lt;span class=\"bu\"&gt;apply&lt;/span&gt;(pd.Series).add_prefix(&lt;span class=\"st\"&gt;&quot;doc_&quot;&lt;/span&gt;),&lt;/span&gt;\n&lt;span id=\"cb13-16\"&gt;&lt;a href=\"#cb13-16\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        test_df[&lt;span class=\"st\"&gt;&quot;dialogue&quot;&lt;/span&gt;].&lt;span class=\"bu\"&gt;apply&lt;/span&gt;(pd.Series).add_prefix(&lt;span class=\"st\"&gt;&quot;dialogue_&quot;&lt;/span&gt;),&lt;/span&gt;\n&lt;span id=\"cb13-17\"&gt;&lt;a href=\"#cb13-17\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        test_df[&lt;span class=\"st\"&gt;&quot;features&quot;&lt;/span&gt;].&lt;span class=\"bu\"&gt;apply&lt;/span&gt;(pd.Series).add_prefix(&lt;span class=\"st\"&gt;&quot;features_&quot;&lt;/span&gt;),&lt;/span&gt;\n&lt;span id=\"cb13-18\"&gt;&lt;a href=\"#cb13-18\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    ],&lt;/span&gt;\n&lt;span id=\"cb13-19\"&gt;&lt;a href=\"#cb13-19\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    axis&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"dv\"&gt;1&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb13-20\"&gt;&lt;a href=\"#cb13-20\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-23\" class=\"cell\" data-execution_count=\"411\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb14\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb14-1\"&gt;&lt;a href=\"#cb14-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;train_flat_df.head()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;div class=\"cell-output cell-output-display\" data-execution_count=\"411\"&gt;\n&lt;div&gt;\n&lt;div&gt;\n&lt;style scoped&gt;\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n&lt;/style&gt;\n\n&lt;table class=\"dataframe\" data-quarto-postprocess=\"true\" data-border=\"1\"&gt;\n&lt;thead&gt;\n&lt;tr class=\"header\" style=\"text-align: right;\"&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;id&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;doc_pre_text&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;doc_post_text&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;doc_table&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;dialogue_conv_questions&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;dialogue_conv_answers&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;dialogue_turn_program&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;dialogue_executed_answers&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;dialogue_qa_split&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;features_num_dialogue_turns&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;features_has_type2_question&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;features_has_duplicate_columns&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;features_has_non_numeric_values&lt;/th&gt;\n&lt;/tr&gt;\n&lt;/thead&gt;\n&lt;tbody&gt;\n&lt;tr class=\"odd\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;0&lt;/td&gt;\n&lt;td&gt;Single_JKHY/2009/page_28.pdf-3&lt;/td&gt;\n&lt;td&gt;26 | 2009 annual report in fiscal 2008 , revenues in the credit un...&lt;/td&gt;\n&lt;td&gt;year ended june 30 , cash provided by operations increased $ 25587...&lt;/td&gt;\n&lt;td&gt;{'Year ended June 30, 2009': {'net income': 103102.0, 'non-cash ex...&lt;/td&gt;\n&lt;td&gt;[what is the net cash from operating activities in 2009?, what abo...&lt;/td&gt;\n&lt;td&gt;[206588, 181001, 25587, 14.1%]&lt;/td&gt;\n&lt;td&gt;[206588, 181001, subtract(206588, 181001), subtract(206588, 181001...&lt;/td&gt;\n&lt;td&gt;[206588.0, 181001.0, 25587.0, 0.14136]&lt;/td&gt;\n&lt;td&gt;[False, False, False, False]&lt;/td&gt;\n&lt;td&gt;4&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"even\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;1&lt;/td&gt;\n&lt;td&gt;Single_RSG/2008/page_114.pdf-2&lt;/td&gt;\n&lt;td&gt;substantially all of the goodwill and other intangible assets reco...&lt;/td&gt;\n&lt;td&gt;the above unaudited pro forma financial information includes adjus...&lt;/td&gt;\n&lt;td&gt;{'year ended december 31 2008 ( unaudited )': {'revenue': 9362.2, ...&lt;/td&gt;\n&lt;td&gt;[what were revenues in 2008?, what were they in 2007?, what was th...&lt;/td&gt;\n&lt;td&gt;[9362.2, 9244.9, 117.3, 1.3%]&lt;/td&gt;\n&lt;td&gt;[9362.2, 9244.9, subtract(9362.2, 9244.9), subtract(9362.2, 9244.9...&lt;/td&gt;\n&lt;td&gt;[9362.2, 9244.9, 117.3, 0.01269]&lt;/td&gt;\n&lt;td&gt;[False, False, False, False]&lt;/td&gt;\n&lt;td&gt;4&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"odd\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;2&lt;/td&gt;\n&lt;td&gt;Single_AAPL/2002/page_23.pdf-1&lt;/td&gt;\n&lt;td&gt;in a new business model such as the retail segment is inherently r...&lt;/td&gt;\n&lt;td&gt;.&lt;/td&gt;\n&lt;td&gt;{'2002': {'net sales': 5742.0, 'cost of sales': 4139.0, 'gross mar...&lt;/td&gt;\n&lt;td&gt;[what was the total of net sales in 2001?, and what was that in 20...&lt;/td&gt;\n&lt;td&gt;[5363, 7983, -2620, -32%]&lt;/td&gt;\n&lt;td&gt;[5363, 7983, subtract(5363, 7983), subtract(5363, 7983), divide(#0...&lt;/td&gt;\n&lt;td&gt;[5363.0, 7983.0, -2620.0, -0.3282]&lt;/td&gt;\n&lt;td&gt;[False, False, False, False]&lt;/td&gt;\n&lt;td&gt;4&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"even\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;3&lt;/td&gt;\n&lt;td&gt;Single_UPS/2009/page_33.pdf-2&lt;/td&gt;\n&lt;td&gt;( 1 ) includes shares repurchased through our publicly announced s...&lt;/td&gt;\n&lt;td&gt;.&lt;/td&gt;\n&lt;td&gt;{'12/31/04': {'united parcel service inc .': 100.0, 's&amp;p 500 index...&lt;/td&gt;\n&lt;td&gt;[what was the change in the performance of the united parcel servi...&lt;/td&gt;\n&lt;td&gt;[-24.05, -24.05%, 102.11, 2.11, 2.11%, -26.16%]&lt;/td&gt;\n&lt;td&gt;[subtract(75.95, const_100), subtract(75.95, const_100), divide(#0...&lt;/td&gt;\n&lt;td&gt;[-24.05, -0.2405, 102.11, 2.11, 0.0211, -0.2616]&lt;/td&gt;\n&lt;td&gt;[False, False, False, False, False, False]&lt;/td&gt;\n&lt;td&gt;6&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"odd\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;4&lt;/td&gt;\n&lt;td&gt;Double_UPS/2009/page_33.pdf&lt;/td&gt;\n&lt;td&gt;( 1 ) includes shares repurchased through our publicly announced s...&lt;/td&gt;\n&lt;td&gt;.&lt;/td&gt;\n&lt;td&gt;{'12/31/04': {'united parcel service inc .': 100.0, 's&amp;p 500 index...&lt;/td&gt;\n&lt;td&gt;[what was the fluctuation of the performance price of the ups from...&lt;/td&gt;\n&lt;td&gt;[-8.94, -8.9%, -24.05, -24.05%, 2.11, 2.11%, -26.16%]&lt;/td&gt;\n&lt;td&gt;[subtract(91.06, const_100), subtract(91.06, const_100), divide(#0...&lt;/td&gt;\n&lt;td&gt;[-8.94, -0.0894, -24.05, -0.2405, 2.11, 0.0211, -0.2616]&lt;/td&gt;\n&lt;td&gt;[False, False, True, True, True, True, True]&lt;/td&gt;\n&lt;td&gt;7&lt;/td&gt;\n&lt;td&gt;True&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/tbody&gt;\n&lt;/table&gt;\n\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-24\" class=\"cell\" data-execution_count=\"412\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb15\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb15-1\"&gt;&lt;a href=\"#cb15-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;easy_train_ids &lt;span class=\"op\"&gt;=&lt;/span&gt; pd.read_json(&lt;span class=\"st\"&gt;&quot;./splits/easy_train.jsonl&quot;&lt;/span&gt;, lines&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb15-2\"&gt;&lt;a href=\"#cb15-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;easy_valid_ids &lt;span class=\"op\"&gt;=&lt;/span&gt; pd.read_json(&lt;span class=\"st\"&gt;&quot;./splits/easy_valid.jsonl&quot;&lt;/span&gt;, lines&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb15-3\"&gt;&lt;a href=\"#cb15-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;easy_test_ids &lt;span class=\"op\"&gt;=&lt;/span&gt; pd.read_json(&lt;span class=\"st\"&gt;&quot;./splits/easy_test.jsonl&quot;&lt;/span&gt;, lines&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb15-4\"&gt;&lt;a href=\"#cb15-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb15-5\"&gt;&lt;a href=\"#cb15-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;medium_train_ids &lt;span class=\"op\"&gt;=&lt;/span&gt; pd.read_json(&lt;span class=\"st\"&gt;&quot;./splits/medium_train.jsonl&quot;&lt;/span&gt;, lines&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb15-6\"&gt;&lt;a href=\"#cb15-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;medium_valid_ids &lt;span class=\"op\"&gt;=&lt;/span&gt; pd.read_json(&lt;span class=\"st\"&gt;&quot;./splits/medium_valid.jsonl&quot;&lt;/span&gt;, lines&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb15-7\"&gt;&lt;a href=\"#cb15-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;medium_test_ids &lt;span class=\"op\"&gt;=&lt;/span&gt; pd.read_json(&lt;span class=\"st\"&gt;&quot;./splits/medium_test.jsonl&quot;&lt;/span&gt;, lines&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb15-8\"&gt;&lt;a href=\"#cb15-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb15-9\"&gt;&lt;a href=\"#cb15-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;hard_train_ids &lt;span class=\"op\"&gt;=&lt;/span&gt; pd.read_json(&lt;span class=\"st\"&gt;&quot;./splits/hard_train.jsonl&quot;&lt;/span&gt;, lines&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb15-10\"&gt;&lt;a href=\"#cb15-10\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;hard_valid_ids &lt;span class=\"op\"&gt;=&lt;/span&gt; pd.read_json(&lt;span class=\"st\"&gt;&quot;./splits/hard_valid.jsonl&quot;&lt;/span&gt;, lines&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb15-11\"&gt;&lt;a href=\"#cb15-11\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;hard_test_ids &lt;span class=\"op\"&gt;=&lt;/span&gt; pd.read_json(&lt;span class=\"st\"&gt;&quot;./splits/hard_test.jsonl&quot;&lt;/span&gt;, lines&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb15-12\"&gt;&lt;a href=\"#cb15-12\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb15-13\"&gt;&lt;a href=\"#cb15-13\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;easy_train_df &lt;span class=\"op\"&gt;=&lt;/span&gt; train_flat_df[train_flat_df[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;].isin(easy_train_ids[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;])].copy()&lt;/span&gt;\n&lt;span id=\"cb15-14\"&gt;&lt;a href=\"#cb15-14\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;easy_valid_df &lt;span class=\"op\"&gt;=&lt;/span&gt; train_flat_df[train_flat_df[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;].isin(easy_valid_ids[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;])].copy()&lt;/span&gt;\n&lt;span id=\"cb15-15\"&gt;&lt;a href=\"#cb15-15\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;easy_test_df &lt;span class=\"op\"&gt;=&lt;/span&gt; test_flat_df[test_flat_df[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;].isin(easy_test_ids[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;])].copy()&lt;/span&gt;\n&lt;span id=\"cb15-16\"&gt;&lt;a href=\"#cb15-16\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb15-17\"&gt;&lt;a href=\"#cb15-17\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;medium_train_df &lt;span class=\"op\"&gt;=&lt;/span&gt; train_flat_df[train_flat_df[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;].isin(medium_train_ids[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;])].copy()&lt;/span&gt;\n&lt;span id=\"cb15-18\"&gt;&lt;a href=\"#cb15-18\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;medium_valid_df &lt;span class=\"op\"&gt;=&lt;/span&gt; train_flat_df[train_flat_df[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;].isin(medium_valid_ids[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;])].copy()&lt;/span&gt;\n&lt;span id=\"cb15-19\"&gt;&lt;a href=\"#cb15-19\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;medium_test_df &lt;span class=\"op\"&gt;=&lt;/span&gt; test_flat_df[test_flat_df[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;].isin(medium_test_ids[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;])].copy()&lt;/span&gt;\n&lt;span id=\"cb15-20\"&gt;&lt;a href=\"#cb15-20\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb15-21\"&gt;&lt;a href=\"#cb15-21\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;hard_train_df &lt;span class=\"op\"&gt;=&lt;/span&gt; train_flat_df[train_flat_df[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;].isin(hard_train_ids[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;])].copy()&lt;/span&gt;\n&lt;span id=\"cb15-22\"&gt;&lt;a href=\"#cb15-22\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;hard_valid_df &lt;span class=\"op\"&gt;=&lt;/span&gt; train_flat_df[train_flat_df[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;].isin(hard_valid_ids[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;])].copy()&lt;/span&gt;\n&lt;span id=\"cb15-23\"&gt;&lt;a href=\"#cb15-23\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;hard_test_df &lt;span class=\"op\"&gt;=&lt;/span&gt; test_flat_df[test_flat_df[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;].isin(hard_test_ids[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;])].copy()&lt;/span&gt;\n&lt;span id=\"cb15-24\"&gt;&lt;a href=\"#cb15-24\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb15-25\"&gt;&lt;a href=\"#cb15-25\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"cf\"&gt;assert&lt;/span&gt; easy_train_ids.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;] &lt;span class=\"op\"&gt;==&lt;/span&gt; easy_train_df.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;]&lt;/span&gt;\n&lt;span id=\"cb15-26\"&gt;&lt;a href=\"#cb15-26\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"cf\"&gt;assert&lt;/span&gt; easy_valid_ids.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;] &lt;span class=\"op\"&gt;==&lt;/span&gt; easy_valid_df.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;]&lt;/span&gt;\n&lt;span id=\"cb15-27\"&gt;&lt;a href=\"#cb15-27\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"cf\"&gt;assert&lt;/span&gt; easy_test_ids.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;] &lt;span class=\"op\"&gt;==&lt;/span&gt; easy_test_df.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;]&lt;/span&gt;\n&lt;span id=\"cb15-28\"&gt;&lt;a href=\"#cb15-28\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"cf\"&gt;assert&lt;/span&gt; medium_train_ids.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;] &lt;span class=\"op\"&gt;==&lt;/span&gt; medium_train_df.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;]&lt;/span&gt;\n&lt;span id=\"cb15-29\"&gt;&lt;a href=\"#cb15-29\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"cf\"&gt;assert&lt;/span&gt; medium_valid_ids.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;] &lt;span class=\"op\"&gt;==&lt;/span&gt; medium_valid_df.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;]&lt;/span&gt;\n&lt;span id=\"cb15-30\"&gt;&lt;a href=\"#cb15-30\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"cf\"&gt;assert&lt;/span&gt; medium_test_ids.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;] &lt;span class=\"op\"&gt;==&lt;/span&gt; medium_test_df.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;]&lt;/span&gt;\n&lt;span id=\"cb15-31\"&gt;&lt;a href=\"#cb15-31\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"cf\"&gt;assert&lt;/span&gt; hard_train_ids.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;] &lt;span class=\"op\"&gt;==&lt;/span&gt; hard_train_df.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;]&lt;/span&gt;\n&lt;span id=\"cb15-32\"&gt;&lt;a href=\"#cb15-32\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"cf\"&gt;assert&lt;/span&gt; hard_valid_ids.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;] &lt;span class=\"op\"&gt;==&lt;/span&gt; hard_valid_df.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;]&lt;/span&gt;\n&lt;span id=\"cb15-33\"&gt;&lt;a href=\"#cb15-33\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"cf\"&gt;assert&lt;/span&gt; hard_test_ids.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;] &lt;span class=\"op\"&gt;==&lt;/span&gt; hard_test_df.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-25\" class=\"cell\" data-execution_count=\"413\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb16\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb16-1\"&gt;&lt;a href=\"#cb16-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;easy_train_examples &lt;span class=\"op\"&gt;=&lt;/span&gt; to_turn_examples(easy_train_df)&lt;/span&gt;\n&lt;span id=\"cb16-2\"&gt;&lt;a href=\"#cb16-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;easy_valid_examples &lt;span class=\"op\"&gt;=&lt;/span&gt; to_turn_examples(easy_valid_df)&lt;/span&gt;\n&lt;span id=\"cb16-3\"&gt;&lt;a href=\"#cb16-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;easy_test_examples &lt;span class=\"op\"&gt;=&lt;/span&gt; to_turn_examples(easy_test_df)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-26\" class=\"cell\" data-execution_count=\"414\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb17\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb17-1\"&gt;&lt;a href=\"#cb17-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"bu\"&gt;len&lt;/span&gt;(easy_train_examples &lt;span class=\"op\"&gt;+&lt;/span&gt; easy_valid_examples)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;div class=\"cell-output cell-output-display\" data-execution_count=\"414\"&gt;\n&lt;pre&gt;&lt;code&gt;852&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;We will used DSPy’s &lt;code&gt;Evaluate&lt;/code&gt; class to run our evals in parallel(internally, this is just implemented via threads)&lt;/p&gt;\n&lt;p&gt;To ensure our setup works as expected, we will run a simple test first.&lt;/p&gt;\n&lt;div id=\"cell-29\" class=\"cell\" data-execution_count=\"419\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb19\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb19-1\"&gt;&lt;a href=\"#cb19-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;from&lt;/span&gt; dspy.evaluate &lt;span class=\"im\"&gt;import&lt;/span&gt; Evaluate&lt;/span&gt;\n&lt;span id=\"cb19-2\"&gt;&lt;a href=\"#cb19-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb19-3\"&gt;&lt;a href=\"#cb19-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;evaluator &lt;span class=\"op\"&gt;=&lt;/span&gt; Evaluate(&lt;/span&gt;\n&lt;span id=\"cb19-4\"&gt;&lt;a href=\"#cb19-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    devset&lt;span class=\"op\"&gt;=&lt;/span&gt;easy_valid_examples[:&lt;span class=\"dv\"&gt;10&lt;/span&gt;],&lt;/span&gt;\n&lt;span id=\"cb19-5\"&gt;&lt;a href=\"#cb19-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    num_threads&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"dv\"&gt;32&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb19-6\"&gt;&lt;a href=\"#cb19-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    display_progress&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb19-7\"&gt;&lt;a href=\"#cb19-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    display_table&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb19-8\"&gt;&lt;a href=\"#cb19-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    provide_traceback&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb19-9\"&gt;&lt;a href=\"#cb19-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    return_all_scores&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb19-10\"&gt;&lt;a href=\"#cb19-10\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    return_outputs&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb19-11\"&gt;&lt;a href=\"#cb19-11\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;)&lt;/span&gt;\n&lt;span id=\"cb19-12\"&gt;&lt;a href=\"#cb19-12\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb19-13\"&gt;&lt;a href=\"#cb19-13\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb19-14\"&gt;&lt;a href=\"#cb19-14\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;from&lt;/span&gt; copy &lt;span class=\"im\"&gt;import&lt;/span&gt; deepcopy&lt;/span&gt;\n&lt;span id=\"cb19-15\"&gt;&lt;a href=\"#cb19-15\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb19-16\"&gt;&lt;a href=\"#cb19-16\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;tlm &lt;span class=\"op\"&gt;=&lt;/span&gt; deepcopy(lm_oai_gpt_4_1)&lt;/span&gt;\n&lt;span id=\"cb19-17\"&gt;&lt;a href=\"#cb19-17\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;tlm.cache &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"va\"&gt;False&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb19-18\"&gt;&lt;a href=\"#cb19-18\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb19-19\"&gt;&lt;a href=\"#cb19-19\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;# &lt;/span&gt;&lt;span class=\"al\"&gt;HACK&lt;/span&gt;&lt;span class=\"co\"&gt;: Weird bug in dspy where the context doesn&#39;t set the cache to False, causing answers to be returned from memory. I&#39;ve found that creating a deepcopy and setting the attribute manually fixes this.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb19-20\"&gt;&lt;a href=\"#cb19-20\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"cf\"&gt;with&lt;/span&gt; dspy.context(lm&lt;span class=\"op\"&gt;=&lt;/span&gt;tlm) &lt;span class=\"im\"&gt;as&lt;/span&gt; ctx:&lt;/span&gt;\n&lt;span id=\"cb19-21\"&gt;&lt;a href=\"#cb19-21\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    evaluator(TurnSolver(reasoning_lm&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;False&lt;/span&gt;), metric&lt;span class=\"op\"&gt;=&lt;/span&gt;turn_em_metric)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;div class=\"cell-output cell-output-stdout\"&gt;\n&lt;pre&gt;&lt;code&gt;Average Metric: 8.00 / 10 (80.0%): 100%|██████████| 10/10 [00:02&lt;00:00,  3.48it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/a5433773d6ef4e359825412ad138c520\n🧪 View experiment at: http://localhost:5000/#/experiments/1&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-stderr\"&gt;\n&lt;pre&gt;&lt;code&gt;2025/07/28 18:18:42 INFO dspy.evaluate.evaluate: Average Metric: 8.0 / 10 (80.0%)&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;div&gt;\n&lt;div&gt;\n&lt;style scoped&gt;\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n&lt;/style&gt;\n\n&lt;table class=\"dataframe\" data-quarto-postprocess=\"true\" data-border=\"1\"&gt;\n&lt;thead&gt;\n&lt;tr class=\"header\" style=\"text-align: right;\"&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;conversation_context&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;evidence_snippets&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;table&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;question&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;id&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;doc_pre_text&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;doc_post_text&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;doc_table&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;dialogue_conv_questions&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;dialogue_conv_answers&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;...&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;dialogue_executed_answers&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;dialogue_qa_split&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;features_num_dialogue_turns&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;features_has_type2_question&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;features_has_duplicate_columns&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;features_has_non_numeric_values&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;example_answer&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;ops&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;pred_answer&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;turn_em_metric&lt;/th&gt;\n&lt;/tr&gt;\n&lt;/thead&gt;\n&lt;tbody&gt;\n&lt;tr class=\"odd\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;0&lt;/td&gt;\n&lt;td&gt;None&lt;/td&gt;\n&lt;td&gt;[PRE] entergy corporation and subsidiaries management's financial ...&lt;/td&gt;\n&lt;td&gt;| Row | 2009 net revenue | volume/weather | retail electric price ...&lt;/td&gt;\n&lt;td&gt;what was the difference in net revenue between 2009 and 2010?&lt;/td&gt;\n&lt;td&gt;Single_ETR/2011/page_22.pdf-3&lt;/td&gt;\n&lt;td&gt;entergy corporation and subsidiaries management's financial discus...&lt;/td&gt;\n&lt;td&gt;the volume/weather variance is primarily due to an increase of 836...&lt;/td&gt;\n&lt;td&gt;{'amount ( in millions )': {'2009 net revenue': 4694.0, 'volume/we...&lt;/td&gt;\n&lt;td&gt;['what was the difference in net revenue between 2009 and 2010?', ...&lt;/td&gt;\n&lt;td&gt;[357, 4694, 7.61%]&lt;/td&gt;\n&lt;td&gt;...&lt;/td&gt;\n&lt;td&gt;[357.0, 4694.0, 0.07605]&lt;/td&gt;\n&lt;td&gt;[False, False, False]&lt;/td&gt;\n&lt;td&gt;3&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;357.00000&lt;/td&gt;\n&lt;td&gt;subtract(2010 net revenue, 2009 net revenue)&lt;/td&gt;\n&lt;td&gt;357.0&lt;/td&gt;\n&lt;td&gt;✔️ [1.000]&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"even\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;1&lt;/td&gt;\n&lt;td&gt;Q1: what was the difference in net revenue between 2009 and 2010?\\...&lt;/td&gt;\n&lt;td&gt;[PRE] entergy corporation and subsidiaries management's financial ...&lt;/td&gt;\n&lt;td&gt;| Row | 2009 net revenue | volume/weather | retail electric price ...&lt;/td&gt;\n&lt;td&gt;and the specific value for 2009 again?&lt;/td&gt;\n&lt;td&gt;Single_ETR/2011/page_22.pdf-3&lt;/td&gt;\n&lt;td&gt;entergy corporation and subsidiaries management's financial discus...&lt;/td&gt;\n&lt;td&gt;the volume/weather variance is primarily due to an increase of 836...&lt;/td&gt;\n&lt;td&gt;{'amount ( in millions )': {'2009 net revenue': 4694.0, 'volume/we...&lt;/td&gt;\n&lt;td&gt;['what was the difference in net revenue between 2009 and 2010?', ...&lt;/td&gt;\n&lt;td&gt;[357, 4694, 7.61%]&lt;/td&gt;\n&lt;td&gt;...&lt;/td&gt;\n&lt;td&gt;[357.0, 4694.0, 0.07605]&lt;/td&gt;\n&lt;td&gt;[False, False, False]&lt;/td&gt;\n&lt;td&gt;3&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;4694.00000&lt;/td&gt;\n&lt;td&gt;4694.0&lt;/td&gt;\n&lt;td&gt;4694.0&lt;/td&gt;\n&lt;td&gt;✔️ [1.000]&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"odd\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;2&lt;/td&gt;\n&lt;td&gt;Q1: what was the difference in net revenue between 2009 and 2010?\\...&lt;/td&gt;\n&lt;td&gt;[PRE] entergy corporation and subsidiaries management's financial ...&lt;/td&gt;\n&lt;td&gt;| Row | 2009 net revenue | volume/weather | retail electric price ...&lt;/td&gt;\n&lt;td&gt;so what was the percentage change during this time?&lt;/td&gt;\n&lt;td&gt;Single_ETR/2011/page_22.pdf-3&lt;/td&gt;\n&lt;td&gt;entergy corporation and subsidiaries management's financial discus...&lt;/td&gt;\n&lt;td&gt;the volume/weather variance is primarily due to an increase of 836...&lt;/td&gt;\n&lt;td&gt;{'amount ( in millions )': {'2009 net revenue': 4694.0, 'volume/we...&lt;/td&gt;\n&lt;td&gt;['what was the difference in net revenue between 2009 and 2010?', ...&lt;/td&gt;\n&lt;td&gt;[357, 4694, 7.61%]&lt;/td&gt;\n&lt;td&gt;...&lt;/td&gt;\n&lt;td&gt;[357.0, 4694.0, 0.07605]&lt;/td&gt;\n&lt;td&gt;[False, False, False]&lt;/td&gt;\n&lt;td&gt;3&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;0.07605&lt;/td&gt;\n&lt;td&gt;subtract(5051.0, 4694.0), divide(#0, 4694.0), multiply(#1, const_100)&lt;/td&gt;\n&lt;td&gt;7.61&lt;/td&gt;\n&lt;td&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"even\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;3&lt;/td&gt;\n&lt;td&gt;None&lt;/td&gt;\n&lt;td&gt;[PRE] entergy new orleans , inc . management's financial discussio...&lt;/td&gt;\n&lt;td&gt;| Row | 2003 net revenue | base rates | volume/weather | 2004 defe...&lt;/td&gt;\n&lt;td&gt;what was the net revenue in 2004?&lt;/td&gt;\n&lt;td&gt;Single_ETR/2004/page_258.pdf-4&lt;/td&gt;\n&lt;td&gt;entergy new orleans , inc . management's financial discussion and ...&lt;/td&gt;\n&lt;td&gt;the increase in base rates was effective june 2003 . the rate incr...&lt;/td&gt;\n&lt;td&gt;{'( in millions )': {'2003 net revenue': 208.3, 'base rates': 10.6...&lt;/td&gt;\n&lt;td&gt;[what was the net revenue in 2004?, what was the net revenue in 20...&lt;/td&gt;\n&lt;td&gt;[239.0, 208.3, 30.7, 14.7%]&lt;/td&gt;\n&lt;td&gt;...&lt;/td&gt;\n&lt;td&gt;[239.0, 208.3, 30.7, 0.14738]&lt;/td&gt;\n&lt;td&gt;[False, False, False, False]&lt;/td&gt;\n&lt;td&gt;4&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;239.00000&lt;/td&gt;\n&lt;td&gt;None&lt;/td&gt;\n&lt;td&gt;239.0&lt;/td&gt;\n&lt;td&gt;✔️ [1.000]&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"odd\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;4&lt;/td&gt;\n&lt;td&gt;Q1: what was the net revenue in 2004?\\nA1: 239.0&lt;/td&gt;\n&lt;td&gt;[PRE] entergy new orleans , inc . management's financial discussio...&lt;/td&gt;\n&lt;td&gt;| Row | 2003 net revenue | base rates | volume/weather | 2004 defe...&lt;/td&gt;\n&lt;td&gt;what was the net revenue in 2003?&lt;/td&gt;\n&lt;td&gt;Single_ETR/2004/page_258.pdf-4&lt;/td&gt;\n&lt;td&gt;entergy new orleans , inc . management's financial discussion and ...&lt;/td&gt;\n&lt;td&gt;the increase in base rates was effective june 2003 . the rate incr...&lt;/td&gt;\n&lt;td&gt;{'( in millions )': {'2003 net revenue': 208.3, 'base rates': 10.6...&lt;/td&gt;\n&lt;td&gt;[what was the net revenue in 2004?, what was the net revenue in 20...&lt;/td&gt;\n&lt;td&gt;[239.0, 208.3, 30.7, 14.7%]&lt;/td&gt;\n&lt;td&gt;...&lt;/td&gt;\n&lt;td&gt;[239.0, 208.3, 30.7, 0.14738]&lt;/td&gt;\n&lt;td&gt;[False, False, False, False]&lt;/td&gt;\n&lt;td&gt;4&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;208.30000&lt;/td&gt;\n&lt;td&gt;None&lt;/td&gt;\n&lt;td&gt;208.3&lt;/td&gt;\n&lt;td&gt;✔️ [1.000]&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"even\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;5&lt;/td&gt;\n&lt;td&gt;Q1: what was the net revenue in 2004?\\nA1: 239.0\\nQ2: what was the...&lt;/td&gt;\n&lt;td&gt;[PRE] entergy new orleans , inc . management's financial discussio...&lt;/td&gt;\n&lt;td&gt;| Row | 2003 net revenue | base rates | volume/weather | 2004 defe...&lt;/td&gt;\n&lt;td&gt;what was the change in value?&lt;/td&gt;\n&lt;td&gt;Single_ETR/2004/page_258.pdf-4&lt;/td&gt;\n&lt;td&gt;entergy new orleans , inc . management's financial discussion and ...&lt;/td&gt;\n&lt;td&gt;the increase in base rates was effective june 2003 . the rate incr...&lt;/td&gt;\n&lt;td&gt;{'( in millions )': {'2003 net revenue': 208.3, 'base rates': 10.6...&lt;/td&gt;\n&lt;td&gt;[what was the net revenue in 2004?, what was the net revenue in 20...&lt;/td&gt;\n&lt;td&gt;[239.0, 208.3, 30.7, 14.7%]&lt;/td&gt;\n&lt;td&gt;...&lt;/td&gt;\n&lt;td&gt;[239.0, 208.3, 30.7, 0.14738]&lt;/td&gt;\n&lt;td&gt;[False, False, False, False]&lt;/td&gt;\n&lt;td&gt;4&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;30.70000&lt;/td&gt;\n&lt;td&gt;subtract(239.0, 208.3)&lt;/td&gt;\n&lt;td&gt;30.7&lt;/td&gt;\n&lt;td&gt;✔️ [1.000]&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"odd\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;6&lt;/td&gt;\n&lt;td&gt;Q1: what was the net revenue in 2004? A1: 239.0 Q2: what was the n...&lt;/td&gt;\n&lt;td&gt;[PRE] entergy new orleans , inc . management's financial discussio...&lt;/td&gt;\n&lt;td&gt;| Row | 2003 net revenue | base rates | volume/weather | 2004 defe...&lt;/td&gt;\n&lt;td&gt;what is the percent change?&lt;/td&gt;\n&lt;td&gt;Single_ETR/2004/page_258.pdf-4&lt;/td&gt;\n&lt;td&gt;entergy new orleans , inc . management's financial discussion and ...&lt;/td&gt;\n&lt;td&gt;the increase in base rates was effective june 2003 . the rate incr...&lt;/td&gt;\n&lt;td&gt;{'( in millions )': {'2003 net revenue': 208.3, 'base rates': 10.6...&lt;/td&gt;\n&lt;td&gt;[what was the net revenue in 2004?, what was the net revenue in 20...&lt;/td&gt;\n&lt;td&gt;[239.0, 208.3, 30.7, 14.7%]&lt;/td&gt;\n&lt;td&gt;...&lt;/td&gt;\n&lt;td&gt;[239.0, 208.3, 30.7, 0.14738]&lt;/td&gt;\n&lt;td&gt;[False, False, False, False]&lt;/td&gt;\n&lt;td&gt;4&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;0.14738&lt;/td&gt;\n&lt;td&gt;subtract(239.0, 208.3), divide(#0, 208.3), multiply(#1, 100)&lt;/td&gt;\n&lt;td&gt;14.72&lt;/td&gt;\n&lt;td&gt;&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"even\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;7&lt;/td&gt;\n&lt;td&gt;None&lt;/td&gt;\n&lt;td&gt;[PRE] nike , inc . notes to consolidated financial statements 2014...&lt;/td&gt;\n&lt;td&gt;| Row | severance and related costs | cash payments | non-cash sto...&lt;/td&gt;\n&lt;td&gt;what was the value of the sale of the starter brand?&lt;/td&gt;\n&lt;td&gt;Single_NKE/2009/page_81.pdf-1&lt;/td&gt;\n&lt;td&gt;nike , inc . notes to consolidated financial statements 2014 ( con...&lt;/td&gt;\n&lt;td&gt;the accrual balance as of may 31 , 2009 will be relieved throughou...&lt;/td&gt;\n&lt;td&gt;{'$ 2014': {'severance and related costs': 195.0, 'cash payments':...&lt;/td&gt;\n&lt;td&gt;['what was the value of the sale of the starter brand?', 'what was...&lt;/td&gt;\n&lt;td&gt;[60.0, 28.6, 31.4, 91%]&lt;/td&gt;\n&lt;td&gt;...&lt;/td&gt;\n&lt;td&gt;[60.0, 28.6, 31.4, 0.91083]&lt;/td&gt;\n&lt;td&gt;[False, False, False, False]&lt;/td&gt;\n&lt;td&gt;4&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;60.00000&lt;/td&gt;\n&lt;td&gt;None&lt;/td&gt;\n&lt;td&gt;60.0&lt;/td&gt;\n&lt;td&gt;✔️ [1.000]&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"odd\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;8&lt;/td&gt;\n&lt;td&gt;Q1: what was the value of the sale of the starter brand?\\nA1: 60.0&lt;/td&gt;\n&lt;td&gt;[PRE] nike , inc . notes to consolidated financial statements 2014...&lt;/td&gt;\n&lt;td&gt;| Row | severance and related costs | cash payments | non-cash sto...&lt;/td&gt;\n&lt;td&gt;what was the gain resulting from the sale?&lt;/td&gt;\n&lt;td&gt;Single_NKE/2009/page_81.pdf-1&lt;/td&gt;\n&lt;td&gt;nike , inc . notes to consolidated financial statements 2014 ( con...&lt;/td&gt;\n&lt;td&gt;the accrual balance as of may 31 , 2009 will be relieved throughou...&lt;/td&gt;\n&lt;td&gt;{'$ 2014': {'severance and related costs': 195.0, 'cash payments':...&lt;/td&gt;\n&lt;td&gt;['what was the value of the sale of the starter brand?', 'what was...&lt;/td&gt;\n&lt;td&gt;[60.0, 28.6, 31.4, 91%]&lt;/td&gt;\n&lt;td&gt;...&lt;/td&gt;\n&lt;td&gt;[60.0, 28.6, 31.4, 0.91083]&lt;/td&gt;\n&lt;td&gt;[False, False, False, False]&lt;/td&gt;\n&lt;td&gt;4&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;28.60000&lt;/td&gt;\n&lt;td&gt;None&lt;/td&gt;\n&lt;td&gt;28.6&lt;/td&gt;\n&lt;td&gt;✔️ [1.000]&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"even\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;9&lt;/td&gt;\n&lt;td&gt;Q1: what was the value of the sale of the starter brand?\\nA1: 60.0...&lt;/td&gt;\n&lt;td&gt;[PRE] nike , inc . notes to consolidated financial statements 2014...&lt;/td&gt;\n&lt;td&gt;| Row | severance and related costs | cash payments | non-cash sto...&lt;/td&gt;\n&lt;td&gt;what was the change in value?&lt;/td&gt;\n&lt;td&gt;Single_NKE/2009/page_81.pdf-1&lt;/td&gt;\n&lt;td&gt;nike , inc . notes to consolidated financial statements 2014 ( con...&lt;/td&gt;\n&lt;td&gt;the accrual balance as of may 31 , 2009 will be relieved throughou...&lt;/td&gt;\n&lt;td&gt;{'$ 2014': {'severance and related costs': 195.0, 'cash payments':...&lt;/td&gt;\n&lt;td&gt;['what was the value of the sale of the starter brand?', 'what was...&lt;/td&gt;\n&lt;td&gt;[60.0, 28.6, 31.4, 91%]&lt;/td&gt;\n&lt;td&gt;...&lt;/td&gt;\n&lt;td&gt;[60.0, 28.6, 31.4, 0.91083]&lt;/td&gt;\n&lt;td&gt;[False, False, False, False]&lt;/td&gt;\n&lt;td&gt;4&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;False&lt;/td&gt;\n&lt;td&gt;31.40000&lt;/td&gt;\n&lt;td&gt;subtract(60.0, 28.6)&lt;/td&gt;\n&lt;td&gt;31.4&lt;/td&gt;\n&lt;td&gt;✔️ [1.000]&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/tbody&gt;\n&lt;/table&gt;\n\n&lt;p&gt;10 rows × 21 columns&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n\n&lt;div&gt;\n  &lt;style scoped&gt;\n  button {\n    border: none;\n    border-radius: 4px;\n    background-color: rgb(34, 114, 180);\n    font-family: -apple-system, \"system-ui\", \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial;\n    font-size: 13px;\n    color: white;\n    margin-top: 8px;\n    margin-bottom: 8px;\n    padding: 8px 16px;\n    cursor: pointer;\n  }\n  button:hover {\n    background-color: rgb(66, 153, 224);\n  }\n  &lt;/style&gt;\n  &lt;button\n    onclick=\"\n        const display = this.nextElementSibling.style.display;\n        const isCollapsed = display === 'none';\n        this.nextElementSibling.style.display = isCollapsed ? null : 'none';\n\n        const verb = isCollapsed ? 'Collapse' : 'Expand';\n        this.innerText = `${verb} MLflow Trace`;\n    \"\n  &gt;Collapse MLflow Trace&lt;/button&gt;\n  &lt;iframe\n    id=\"trace-renderer\"\n    style=\"width: 100%; height: 500px; border: none; resize: vertical;\"\n    src=\"http://localhost:5000/static-files/lib/notebook-trace-renderer/index.html?trace_id=caea82d0bc0c4f0d800313b99bd69581&amp;experiment_id=1&amp;trace_id=ed4476c7920b49f3b2e909e88548e086&amp;experiment_id=1&amp;trace_id=6ba8b539ea0f49798599b294060d1213&amp;experiment_id=1&amp;trace_id=711aae8d07b14f619312af02495f941a&amp;experiment_id=1&amp;trace_id=fd97772c93064b3daf30f61009d81fe2&amp;experiment_id=1&amp;trace_id=5b665669eca649c9bd46b04a6f9737ad&amp;experiment_id=1&amp;trace_id=23be442a4d64413abe335a55bebe6a5a&amp;experiment_id=1&amp;trace_id=d057b5aed88a46fb8562a39db0ebd15d&amp;experiment_id=1&amp;trace_id=02f1ddeee02448f58babae2fb6afa3b9&amp;experiment_id=1&amp;trace_id=8e058d1aa41a4932a83c8f0505a867fd&amp;experiment_id=1&amp;version=3.1.4\"\n  /&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-30\" class=\"cell\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb22\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb22-1\"&gt;&lt;a href=\"#cb22-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;import&lt;/span&gt; random&lt;/span&gt;\n&lt;span id=\"cb22-2\"&gt;&lt;a href=\"#cb22-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb22-3\"&gt;&lt;a href=\"#cb22-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;random.seed(&lt;span class=\"dv\"&gt;42&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb22-4\"&gt;&lt;a href=\"#cb22-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb22-5\"&gt;&lt;a href=\"#cb22-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;bootstrap_rs_random_easy_subset &lt;span class=\"op\"&gt;=&lt;/span&gt; random.sample(easy_train_examples, &lt;span class=\"dv\"&gt;70&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-31\" class=\"cell\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb23\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb23-1\"&gt;&lt;a href=\"#cb23-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;import&lt;/span&gt; re&lt;/span&gt;\n&lt;span id=\"cb23-2\"&gt;&lt;a href=\"#cb23-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb23-3\"&gt;&lt;a href=\"#cb23-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;import&lt;/span&gt; litellm&lt;/span&gt;\n&lt;span id=\"cb23-4\"&gt;&lt;a href=\"#cb23-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;from&lt;/span&gt; dspy.teleprompt &lt;span class=\"im\"&gt;import&lt;/span&gt; BootstrapFewShotWithRandomSearch&lt;/span&gt;\n&lt;span id=\"cb23-5\"&gt;&lt;a href=\"#cb23-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb23-6\"&gt;&lt;a href=\"#cb23-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;# Config needed to prevent the optimizer from using _unsupported_ temperature&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb23-7\"&gt;&lt;a href=\"#cb23-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;# for reasoning models.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb23-8\"&gt;&lt;a href=\"#cb23-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;litellm.drop_params &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"va\"&gt;True&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb23-9\"&gt;&lt;a href=\"#cb23-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb23-10\"&gt;&lt;a href=\"#cb23-10\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb23-11\"&gt;&lt;a href=\"#cb23-11\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;config &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"bu\"&gt;dict&lt;/span&gt;(&lt;/span&gt;\n&lt;span id=\"cb23-12\"&gt;&lt;a href=\"#cb23-12\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    max_bootstrapped_demos&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"dv\"&gt;3&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb23-13\"&gt;&lt;a href=\"#cb23-13\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    max_labeled_demos&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"dv\"&gt;2&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb23-14\"&gt;&lt;a href=\"#cb23-14\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    num_candidate_programs&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"dv\"&gt;5&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb23-15\"&gt;&lt;a href=\"#cb23-15\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    num_threads&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"dv\"&gt;32&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb23-16\"&gt;&lt;a href=\"#cb23-16\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    max_rounds&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"dv\"&gt;1&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb23-17\"&gt;&lt;a href=\"#cb23-17\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;)&lt;/span&gt;\n&lt;span id=\"cb23-18\"&gt;&lt;a href=\"#cb23-18\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb23-19\"&gt;&lt;a href=\"#cb23-19\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;bootstrap_rs_easy_compiled_programs &lt;span class=\"op\"&gt;=&lt;/span&gt; []&lt;/span&gt;\n&lt;span id=\"cb23-20\"&gt;&lt;a href=\"#cb23-20\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb23-21\"&gt;&lt;a href=\"#cb23-21\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"cf\"&gt;with&lt;/span&gt; mlflow.start_run(run_name&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;bootstrap_few_shot_rs_easy&quot;&lt;/span&gt;):&lt;/span&gt;\n&lt;span id=\"cb23-22\"&gt;&lt;a href=\"#cb23-22\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;for&lt;/span&gt; candidate_lm &lt;span class=\"kw\"&gt;in&lt;/span&gt; selected_llms:&lt;/span&gt;\n&lt;span id=\"cb23-23\"&gt;&lt;a href=\"#cb23-23\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        run_name &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"ss\"&gt;f&quot;bootstrap_few_shot_rs_&lt;/span&gt;&lt;span class=\"sc\"&gt;{&lt;/span&gt;candidate_lm&lt;span class=\"sc\"&gt;.&lt;/span&gt;model&lt;span class=\"sc\"&gt;.&lt;/span&gt;replace(&lt;span class=\"st\"&gt;&#39;/&#39;&lt;/span&gt;, &lt;span class=\"st\"&gt;&#39;_&#39;&lt;/span&gt;)&lt;span class=\"sc\"&gt;}&lt;/span&gt;&lt;span class=\"ss\"&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb23-24\"&gt;&lt;a href=\"#cb23-24\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        sanitized_run_name &lt;span class=\"op\"&gt;=&lt;/span&gt; re.sub(&lt;span class=\"vs\"&gt;r&quot;[^a-zA-Z0-9_\\-]&quot;&lt;/span&gt;, &lt;span class=\"st\"&gt;&quot;_&quot;&lt;/span&gt;, run_name)&lt;/span&gt;\n&lt;span id=\"cb23-25\"&gt;&lt;a href=\"#cb23-25\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;with&lt;/span&gt; mlflow.start_run(run_name&lt;span class=\"op\"&gt;=&lt;/span&gt;sanitized_run_name, nested&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;):&lt;/span&gt;\n&lt;span id=\"cb23-26\"&gt;&lt;a href=\"#cb23-26\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            &lt;span class=\"cf\"&gt;with&lt;/span&gt; dspy.context(lm&lt;span class=\"op\"&gt;=&lt;/span&gt;candidate_lm) &lt;span class=\"im\"&gt;as&lt;/span&gt; ctx:&lt;/span&gt;\n&lt;span id=\"cb23-27\"&gt;&lt;a href=\"#cb23-27\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                teleprompter &lt;span class=\"op\"&gt;=&lt;/span&gt; BootstrapFewShotWithRandomSearch(&lt;/span&gt;\n&lt;span id=\"cb23-28\"&gt;&lt;a href=\"#cb23-28\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                    metric&lt;span class=\"op\"&gt;=&lt;/span&gt;turn_em_metric, &lt;span class=\"op\"&gt;**&lt;/span&gt;config&lt;/span&gt;\n&lt;span id=\"cb23-29\"&gt;&lt;a href=\"#cb23-29\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                )&lt;/span&gt;\n&lt;span id=\"cb23-30\"&gt;&lt;a href=\"#cb23-30\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                optimized_program &lt;span class=\"op\"&gt;=&lt;/span&gt; teleprompter.&lt;span class=\"bu\"&gt;compile&lt;/span&gt;(&lt;/span&gt;\n&lt;span id=\"cb23-31\"&gt;&lt;a href=\"#cb23-31\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                    dspy.ChainOfThought(SolveTurnWithReasoning),&lt;/span&gt;\n&lt;span id=\"cb23-32\"&gt;&lt;a href=\"#cb23-32\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                    trainset&lt;span class=\"op\"&gt;=&lt;/span&gt;bootstrap_rs_random_easy_subset,&lt;/span&gt;\n&lt;span id=\"cb23-33\"&gt;&lt;a href=\"#cb23-33\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                )&lt;/span&gt;\n&lt;span id=\"cb23-34\"&gt;&lt;a href=\"#cb23-34\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                bootstrap_rs_easy_compiled_programs.append(optimized_program)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;div class=\"cell-output cell-output-stdout\"&gt;\n&lt;pre&gt;&lt;code&gt;Going to sample between 1 and 3 traces per predictor.\nWill attempt to bootstrap 5 candidate sets.\nAverage Metric: 45.00 / 70 (64.3%): 100%|██████████| 70/70 [00:00&lt;00:00, 87.74it/s] \n🏃 View run eval_0 at: http://localhost:5000/#/experiments/3/runs/fcce9b07d50e41609bc04c3d9c2235c7\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nNew best score: 64.29 for seed -3\nScores so far: [64.29]\nBest score so far: 64.29\n  0%|          | 0/70 [00:00&lt;?, ?it/s]Average Metric: 26.00 / 38 (68.4%):  53%|█████▎    | 37/70 [00:00&lt;00:00, 82.89it/s]Average Metric: 46.00 / 70 (65.7%): 100%|██████████| 70/70 [00:00&lt;00:00, 76.35it/s]\n🏃 View run eval_1 at: http://localhost:5000/#/experiments/3/runs/7575401319f442499f871ca8d849bfd1\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nNew best score: 65.71 for seed -2\nScores so far: [64.29, 65.71]\nBest score so far: 65.71\nBootstrapped 3 full traces after 6 examples for up to 1 rounds, amounting to 6 attempts.\nAverage Metric: 47.00 / 70 (67.1%): 100%|██████████| 70/70 [00:01&lt;00:00, 62.67it/s]\n🏃 View run eval_2 at: http://localhost:5000/#/experiments/3/runs/3406309f3f0a4041a580021eaf5eff13\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nNew best score: 67.14 for seed -1\nScores so far: [64.29, 65.71, 67.14]\nBest score so far: 67.14\nBootstrapped 2 full traces after 2 examples for up to 1 rounds, amounting to 2 attempts.\nAverage Metric: 48.00 / 70 (68.6%): 100%|██████████| 70/70 [00:01&lt;00:00, 52.08it/s]\n🏃 View run eval_3 at: http://localhost:5000/#/experiments/3/runs/8cad7a93fb494289a4d6691d5796f84e\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nNew best score: 68.57 for seed 0\nScores so far: [64.29, 65.71, 67.14, 68.57]\nBest score so far: 68.57\nBootstrapped 1 full traces after 1 examples for up to 1 rounds, amounting to 1 attempts.\nAverage Metric: 46.00 / 70 (65.7%): 100%|██████████| 70/70 [00:01&lt;00:00, 54.10it/s]\n🏃 View run eval_4 at: http://localhost:5000/#/experiments/3/runs/ab8c076e18394080bbf9634eeff7af35\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nScores so far: [64.29, 65.71, 67.14, 68.57, 65.71]\nBest score so far: 68.57\nBootstrapped 1 full traces after 1 examples for up to 1 rounds, amounting to 1 attempts.\nAverage Metric: 45.00 / 70 (64.3%): 100%|██████████| 70/70 [00:01&lt;00:00, 44.09it/s]\n🏃 View run eval_5 at: http://localhost:5000/#/experiments/3/runs/679c914720674946a877f4a6a91665ee\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nScores so far: [64.29, 65.71, 67.14, 68.57, 65.71, 64.29]\nBest score so far: 68.57\nBootstrapped 1 full traces after 1 examples for up to 1 rounds, amounting to 1 attempts.\nAverage Metric: 47.00 / 70 (67.1%): 100%|██████████| 70/70 [00:01&lt;00:00, 61.09it/s]\n🏃 View run eval_6 at: http://localhost:5000/#/experiments/3/runs/ab818ec11652430b9bd68e17dc197665\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nScores so far: [64.29, 65.71, 67.14, 68.57, 65.71, 64.29, 67.14]\nBest score so far: 68.57\nBootstrapped 1 full traces after 1 examples for up to 1 rounds, amounting to 1 attempts.\nAverage Metric: 51.00 / 70 (72.9%): 100%|██████████| 70/70 [00:01&lt;00:00, 51.33it/s]\n🏃 View run eval_7 at: http://localhost:5000/#/experiments/3/runs/f9f17e61c1334a9ea6903ae3a1105fd8\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nNew best score: 72.86 for seed 4\nScores so far: [64.29, 65.71, 67.14, 68.57, 65.71, 64.29, 67.14, 72.86]\nBest score so far: 72.86\n8 candidate programs found.\n🏃 View run bootstrap_few_shot_rs_openai_o4-mini-2025-04-16 at: http://localhost:5000/#/experiments/3/runs/b08500752c9041d5acccbc261bd33931\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nGoing to sample between 1 and 3 traces per predictor.\nWill attempt to bootstrap 5 candidate sets.\n  0%|          | 0/70 [00:00&lt;?, ?it/s]Average Metric: 43.00 / 70 (61.4%): 100%|██████████| 70/70 [00:01&lt;00:00, 48.03it/s]\n🏃 View run eval_0 at: http://localhost:5000/#/experiments/3/runs/578a2f04172f4ecbb41d04350201b2d5\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nNew best score: 61.43 for seed -3\nScores so far: [61.43]\nBest score so far: 61.43\n  0%|          | 0/70 [00:00&lt;?, ?it/s]Average Metric: 29.00 / 42 (69.0%):  59%|█████▊    | 41/70 [00:01&lt;00:00, 32.19it/s]Average Metric: 35.00 / 51 (68.6%):  71%|███████▏  | 50/70 [00:01&lt;00:00, 42.39it/s]Average Metric: 47.00 / 70 (67.1%): 100%|██████████| 70/70 [00:01&lt;00:00, 43.35it/s]\n🏃 View run eval_1 at: http://localhost:5000/#/experiments/3/runs/cf868ddb4c5945149422186e878e4ee8\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nNew best score: 67.14 for seed -2\nScores so far: [61.43, 67.14]\nBest score so far: 67.14\nBootstrapped 3 full traces after 6 examples for up to 1 rounds, amounting to 6 attempts.\nAverage Metric: 46.00 / 70 (65.7%): 100%|██████████| 70/70 [00:01&lt;00:00, 65.12it/s]\n🏃 View run eval_2 at: http://localhost:5000/#/experiments/3/runs/a83ba7facae34ee2b495fd0bcb478044\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nScores so far: [61.43, 67.14, 65.71]\nBest score so far: 67.14\nBootstrapped 2 full traces after 2 examples for up to 1 rounds, amounting to 2 attempts.\nAverage Metric: 46.00 / 70 (65.7%): 100%|██████████| 70/70 [00:01&lt;00:00, 36.63it/s]\n🏃 View run eval_3 at: http://localhost:5000/#/experiments/3/runs/343b2f8e893044da9a9bee74f6be8853\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nScores so far: [61.43, 67.14, 65.71, 65.71]\nBest score so far: 67.14\nBootstrapped 1 full traces after 1 examples for up to 1 rounds, amounting to 1 attempts.\nAverage Metric: 45.00 / 70 (64.3%): 100%|██████████| 70/70 [00:01&lt;00:00, 37.96it/s]\n🏃 View run eval_4 at: http://localhost:5000/#/experiments/3/runs/3ad1f0eea05b4d7b88e7c47e2c0c29ab\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nScores so far: [61.43, 67.14, 65.71, 65.71, 64.29]\nBest score so far: 67.14\nBootstrapped 1 full traces after 1 examples for up to 1 rounds, amounting to 1 attempts.\nAverage Metric: 47.00 / 70 (67.1%): 100%|██████████| 70/70 [00:01&lt;00:00, 35.34it/s]\n🏃 View run eval_5 at: http://localhost:5000/#/experiments/3/runs/29b7cf7738bc47d89e81309a65595be0\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nScores so far: [61.43, 67.14, 65.71, 65.71, 64.29, 67.14]\nBest score so far: 67.14\nBootstrapped 1 full traces after 1 examples for up to 1 rounds, amounting to 1 attempts.\nAverage Metric: 48.00 / 70 (68.6%): 100%|██████████| 70/70 [00:02&lt;00:00, 31.53it/s]\n🏃 View run eval_6 at: http://localhost:5000/#/experiments/3/runs/d3a6322d0555421784dbb34087099455\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nNew best score: 68.57 for seed 3\nScores so far: [61.43, 67.14, 65.71, 65.71, 64.29, 67.14, 68.57]\nBest score so far: 68.57\nBootstrapped 1 full traces after 1 examples for up to 1 rounds, amounting to 1 attempts.\nAverage Metric: 60.00 / 70 (85.7%): 100%|██████████| 70/70 [00:02&lt;00:00, 28.22it/s] \n🏃 View run eval_7 at: http://localhost:5000/#/experiments/3/runs/93c1cafdbb6b440699788970eb6ffa88\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nNew best score: 85.71 for seed 4\nScores so far: [61.43, 67.14, 65.71, 65.71, 64.29, 67.14, 68.57, 85.71]\nBest score so far: 85.71\n8 candidate programs found.\n🏃 View run bootstrap_few_shot_rs_gemini_gemini-2_5-flash at: http://localhost:5000/#/experiments/3/runs/621ba195ed244875a4370e2050418a06\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nGoing to sample between 1 and 3 traces per predictor.\nWill attempt to bootstrap 5 candidate sets.\n  0%|          | 0/70 [00:00&lt;?, ?it/s]Average Metric: 22.00 / 29 (75.9%):  40%|████      | 28/70 [00:00&lt;00:00, 71.01it/s]Average Metric: 36.00 / 49 (73.5%):  69%|██████▊   | 48/70 [00:01&lt;00:00, 69.84it/s]Average Metric: 52.00 / 70 (74.3%): 100%|██████████| 70/70 [00:01&lt;00:00, 37.98it/s]\n🏃 View run eval_0 at: http://localhost:5000/#/experiments/3/runs/377a453f2e0745e38fc89508f7ab1d26\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nNew best score: 74.29 for seed -3\nScores so far: [74.29]\nBest score so far: 74.29\n  0%|          | 0/70 [00:00&lt;?, ?it/s]Average Metric: 1.00 / 4 (25.0%):   4%|▍         | 3/70 [00:00&lt;00:17,  3.91it/s] Average Metric: 5.00 / 8 (62.5%):  10%|█         | 7/70 [00:00&lt;00:16,  3.91it/s]Average Metric: 13.00 / 16 (81.2%):  23%|██▎       | 16/70 [00:00&lt;00:01, 39.80it/s]Average Metric: 30.00 / 41 (73.2%):  57%|█████▋    | 40/70 [00:01&lt;00:01, 17.35it/s]Average Metric: 33.00 / 44 (75.0%):  61%|██████▏   | 43/70 [00:01&lt;00:01, 17.35it/s]Average Metric: 52.00 / 70 (74.3%): 100%|██████████| 70/70 [00:01&lt;00:00, 36.77it/s]\n🏃 View run eval_1 at: http://localhost:5000/#/experiments/3/runs/d9e37616e88748d8890de6056370f801\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nScores so far: [74.29, 74.29]\nBest score so far: 74.29\nBootstrapped 3 full traces after 4 examples for up to 1 rounds, amounting to 4 attempts.\nAverage Metric: 52.00 / 70 (74.3%): 100%|██████████| 70/70 [00:01&lt;00:00, 35.80it/s]\n🏃 View run eval_2 at: http://localhost:5000/#/experiments/3/runs/7bfc22c9728f4862931e5bb8bf4d379e\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nScores so far: [74.29, 74.29, 74.29]\nBest score so far: 74.29\nBootstrapped 2 full traces after 2 examples for up to 1 rounds, amounting to 2 attempts.\nAverage Metric: 43.00 / 53 (81.1%):  76%|███████▌  | 53/70 [00:22&lt;00:09,  1.74it/s] Average Metric: 50.00 / 68 (73.5%):  97%|█████████▋| 68/70 [00:55&lt;00:04,  2.16s/it]Average Metric: 51.00 / 70 (72.9%): 100%|██████████| 70/70 [01:56&lt;00:00,  1.66s/it]\n🏃 View run eval_3 at: http://localhost:5000/#/experiments/3/runs/7cc38c776c8c40ad983a78690454b768\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nScores so far: [74.29, 74.29, 74.29, 72.86]\nBest score so far: 74.29\nBootstrapped 1 full traces after 1 examples for up to 1 rounds, amounting to 1 attempts.\nAverage Metric: 34.00 / 37 (91.9%):  53%|█████▎    | 37/70 [00:16&lt;00:15,  2.18it/s] Average Metric: 49.00 / 62 (79.0%):  89%|████████▊ | 62/70 [00:33&lt;00:07,  1.03it/s]Average Metric: 52.00 / 70 (74.3%): 100%|██████████| 70/70 [00:52&lt;00:00,  1.34it/s]\n🏃 View run eval_4 at: http://localhost:5000/#/experiments/3/runs/3d4799840b5145f38c55cd04a510b4eb\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nScores so far: [74.29, 74.29, 74.29, 72.86, 74.29]\nBest score so far: 74.29\nBootstrapped 1 full traces after 1 examples for up to 1 rounds, amounting to 1 attempts.\nAverage Metric: 53.00 / 70 (75.7%): 100%|██████████| 70/70 [00:49&lt;00:00,  1.41it/s] \n🏃 View run eval_5 at: http://localhost:5000/#/experiments/3/runs/826af9f09c4e4410b2b21424430e67f1\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nNew best score: 75.71 for seed 2\nScores so far: [74.29, 74.29, 74.29, 72.86, 74.29, 75.71]\nBest score so far: 75.71\nBootstrapped 1 full traces after 1 examples for up to 1 rounds, amounting to 1 attempts.\nAverage Metric: 44.00 / 48 (91.7%):  69%|██████▊   | 48/70 [00:18&lt;00:08,  2.53it/s] Average Metric: 53.00 / 70 (75.7%): 100%|██████████| 70/70 [01:02&lt;00:00,  1.13it/s]\n🏃 View run eval_6 at: http://localhost:5000/#/experiments/3/runs/a029e23cfbe14b92a2ba6ce26146642b\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nScores so far: [74.29, 74.29, 74.29, 72.86, 74.29, 75.71, 75.71]\nBest score so far: 75.71\nBootstrapped 1 full traces after 1 examples for up to 1 rounds, amounting to 1 attempts.\nAverage Metric: 56.00 / 70 (80.0%): 100%|██████████| 70/70 [00:44&lt;00:00,  1.58it/s] \n🏃 View run eval_7 at: http://localhost:5000/#/experiments/3/runs/861f0c753b754e6a8eb3372287edd9bc\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nNew best score: 80.0 for seed 4\nScores so far: [74.29, 74.29, 74.29, 72.86, 74.29, 75.71, 75.71, 80.0]\nBest score so far: 80.0\n8 candidate programs found.\n🏃 View run bootstrap_few_shot_rs_openai_o3-2025-04-16 at: http://localhost:5000/#/experiments/3/runs/8576b067ea60468ebc37cda1a17be1dc\n🧪 View experiment at: http://localhost:5000/#/experiments/3\n🏃 View run bootstrap_few_shot_rs_easy at: http://localhost:5000/#/experiments/3/runs/b5f08a070a634f74888fb8c42f24bfa3\n🧪 View experiment at: http://localhost:5000/#/experiments/3&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-stderr\"&gt;\n&lt;pre&gt;&lt;code&gt;2025/07/29 01:03:08 INFO dspy.evaluate.evaluate: Average Metric: 45.0 / 70 (64.3%)\n2025/07/29 01:03:08 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:03:08 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:03:09 INFO dspy.evaluate.evaluate: Average Metric: 46.0 / 70 (65.7%)\n  4%|▍         | 3/70 [00:00&lt;00:04, 13.83it/s]2025/07/29 01:03:09 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n  9%|▊         | 6/70 [00:00&lt;00:03, 16.05it/s]\n2025/07/29 01:03:11 INFO dspy.evaluate.evaluate: Average Metric: 47.0 / 70 (67.1%)\n  3%|▎         | 2/70 [00:00&lt;00:02, 32.62it/s]\n2025/07/29 01:03:12 INFO dspy.evaluate.evaluate: Average Metric: 48.0 / 70 (68.6%)\n  1%|▏         | 1/70 [00:00&lt;00:03, 18.44it/s]\n2025/07/29 01:03:15 INFO dspy.evaluate.evaluate: Average Metric: 46.0 / 70 (65.7%)\n  1%|▏         | 1/70 [00:00&lt;00:02, 24.59it/s]\n2025/07/29 01:03:17 INFO dspy.evaluate.evaluate: Average Metric: 45.0 / 70 (64.3%)\n  1%|▏         | 1/70 [00:00&lt;00:12,  5.70it/s]\n2025/07/29 01:03:19 INFO dspy.evaluate.evaluate: Average Metric: 47.0 / 70 (67.1%)\n  1%|▏         | 1/70 [00:00&lt;00:02, 28.38it/s]\n2025/07/29 01:03:21 INFO dspy.evaluate.evaluate: Average Metric: 51.0 / 70 (72.9%)\n2025/07/29 01:03:21 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:03:22 INFO dspy.evaluate.evaluate: Average Metric: 43.0 / 70 (61.4%)\n2025/07/29 01:03:23 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:03:24 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:03:24 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:03:24 INFO dspy.evaluate.evaluate: Average Metric: 47.0 / 70 (67.1%)\n  9%|▊         | 6/70 [00:00&lt;00:03, 16.98it/s]\n2025/07/29 01:03:27 INFO dspy.evaluate.evaluate: Average Metric: 46.0 / 70 (65.7%)\n  3%|▎         | 2/70 [00:00&lt;00:03, 21.93it/s]\n2025/07/29 01:03:30 INFO dspy.evaluate.evaluate: Average Metric: 46.0 / 70 (65.7%)\n  1%|▏         | 1/70 [00:00&lt;00:02, 28.87it/s]\n2025/07/29 01:03:32 INFO dspy.evaluate.evaluate: Average Metric: 45.0 / 70 (64.3%)\n  1%|▏         | 1/70 [00:00&lt;00:02, 25.21it/s]\n2025/07/29 01:03:34 INFO dspy.evaluate.evaluate: Average Metric: 47.0 / 70 (67.1%)\n  1%|▏         | 1/70 [00:00&lt;00:10,  6.34it/s]\n2025/07/29 01:03:38 INFO dspy.evaluate.evaluate: Average Metric: 48.0 / 70 (68.6%)\n  1%|▏         | 1/70 [00:00&lt;00:05, 13.59it/s]\n2025/07/29 01:03:41 INFO dspy.evaluate.evaluate: Average Metric: 60.0 / 70 (85.7%)\n2025/07/29 01:03:42 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:03:42 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:03:42 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:03:43 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:03:43 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:03:44 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:03:44 INFO dspy.evaluate.evaluate: Average Metric: 52.0 / 70 (74.3%)\n2025/07/29 01:03:44 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:03:45 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:03:45 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:03:45 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:03:46 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:03:46 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:03:46 INFO dspy.evaluate.evaluate: Average Metric: 52.0 / 70 (74.3%)\n  6%|▌         | 4/70 [00:00&lt;00:04, 15.37it/s]\n2025/07/29 01:03:49 INFO dspy.evaluate.evaluate: Average Metric: 52.0 / 70 (74.3%)\n  3%|▎         | 2/70 [00:12&lt;06:55,  6.11s/it]\n2025/07/29 01:04:25 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:05:26 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:05:59 INFO dspy.evaluate.evaluate: Average Metric: 51.0 / 70 (72.9%)\n  1%|▏         | 1/70 [00:05&lt;06:47,  5.90s/it]\n2025/07/29 01:06:22 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:06:40 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:06:57 INFO dspy.evaluate.evaluate: Average Metric: 52.0 / 70 (74.3%)\n  1%|▏         | 1/70 [00:03&lt;04:04,  3.55s/it]\n2025/07/29 01:07:51 INFO dspy.evaluate.evaluate: Average Metric: 53.0 / 70 (75.7%)\n  1%|▏         | 1/70 [00:05&lt;06:22,  5.54s/it]\n2025/07/29 01:08:16 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:08:59 INFO dspy.evaluate.evaluate: Average Metric: 53.0 / 70 (75.7%)\n  1%|▏         | 1/70 [00:04&lt;04:43,  4.11s/it]\n2025/07/29 01:09:48 INFO dspy.evaluate.evaluate: Average Metric: 56.0 / 70 (80.0%)&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"9aa596c147174804958bfd90f9e69998\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"2fac575b2f714ab3a5f079b5b8c068e7\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"9352e516d8b848579ba0d22b01c35fb2\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"dd46b6737ed8418484d64e9cef39a594\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"19d7fe20fa6b4fb7bb39768109a6e96f\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"d9ac51afacd244629a94d3d29cc78260\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"71a5a9849439471b90be1451f4ed6d8c\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"795ab895387b4c0e9eac571ee453ac88\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"650c0bd2cb2a4041bdf156931c25130c\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"f16c05df32404d64b8a8431d48d39234\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"0479a155634a4c4ba4d92bebca0b0727\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"ea69ff24378d45a3998851b5aa0962d4\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"8b8c7a6497d04213a381c037724d4895\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"bc397a6b03924336bbc43a1bd839784c\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"d43544d6f72f40dbaae08ad6b18cb0bd\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"4e7c85dbd6f64f61a359ea5a37c40ed0\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"6913487151e04ab7a89037c30da2cfd7\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"cf6a3e6ba2a646a093455efcf2d34a65\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"102094c059e84577861cd1271f22e414\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"d5351ffa3e234f7f92c3f1932b3dd438\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"d3e11c2f024d4ec090827c250d4258ca\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"3cff124f59634e5b9279882b0501180a\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"043eb11fea0a462684dac9bbb48f4f03\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"e694033bfb9e4689bd6c07fc39d0801c\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"db37866855a049b88bb7e4c9dd3597c6\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"93fd5af0c6644afc978088bc68e1ee83\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"5aa8485009e94f079807723d8dbc5ab2\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"e5cce25e5c7941d6bf6a39bcd3c76bf8\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"f90ceb161810483ab7c0fb2a38dd46e4\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"4d26bd076e4845b193dfa48d40f9e51b\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"2bceaac3cdcd48a0b05bc0f5e0c884a5\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"ab959aa00cf145d0984217e3c543fcd0\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"7a19b204ef7443e3964026a61386dbf3\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"0944c174ba5d4b7f888c2c78316eeb67\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"f58455aed23543369dda147cdcc46ee6\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"6f9faa0b381e48b4a3239439f9b5c8a0\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"14d1357491a342a6b3cbb1a778076b69\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"3146876614a146569534ee1e0cef7f86\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;script type=\"application/vnd.jupyter.widget-view+json\"&gt;\n{\"model_id\":\"36e21760751a482c874fbc57b485e178\",\"version_major\":2,\"version_minor\":0,\"quarto_mimetype\":\"application/vnd.jupyter.widget-view+json\"}\n&lt;/script&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n\n&lt;div&gt;\n  &lt;style scoped&gt;\n  button {\n    border: none;\n    border-radius: 4px;\n    background-color: rgb(34, 114, 180);\n    font-family: -apple-system, \"system-ui\", \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial;\n    font-size: 13px;\n    color: white;\n    margin-top: 8px;\n    margin-bottom: 8px;\n    padding: 8px 16px;\n    cursor: pointer;\n  }\n  button:hover {\n    background-color: rgb(66, 153, 224);\n  }\n  &lt;/style&gt;\n  &lt;button\n    onclick=\"\n        const display = this.nextElementSibling.style.display;\n        const isCollapsed = display === 'none';\n        this.nextElementSibling.style.display = isCollapsed ? null : 'none';\n\n        const verb = isCollapsed ? 'Collapse' : 'Expand';\n        this.innerText = `${verb} MLflow Trace`;\n    \"\n  &gt;Collapse MLflow Trace&lt;/button&gt;\n  &lt;iframe\n    id=\"trace-renderer\"\n    style=\"width: 100%; height: 500px; border: none; resize: vertical;\"\n    src=\"http://localhost:5000/static-files/lib/notebook-trace-renderer/index.html?trace_id=bc6ccffd18824246934194a85933d3fd&amp;experiment_id=3&amp;trace_id=e37a0ba10d0543bb908e397933697d6d&amp;experiment_id=3&amp;trace_id=b37797a381b44f7eb13e1f42eca0567c&amp;experiment_id=3&amp;trace_id=9a18ced106784364ae12831ce45a8748&amp;experiment_id=3&amp;trace_id=3d7bb8edeb78492bac5473d6e52c4846&amp;experiment_id=3&amp;trace_id=d42d241ebb9e40b1affe006598cae983&amp;experiment_id=3&amp;trace_id=344ea0c049b946e8b780a9e02d720688&amp;experiment_id=3&amp;trace_id=4cac19ef64574b50b38d4baf81b360d5&amp;experiment_id=3&amp;trace_id=c4ca77588233486e9d234e95aa976329&amp;experiment_id=3&amp;trace_id=c9921423c3aa4f16933885eb15242313&amp;experiment_id=3&amp;version=3.1.4\"\n  /&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;From the above, it looks like GPT-4.1 gives an score of 80% on the validation set, WITHOUT ANY PROMPT ENGINEERING/FEW-SHOT PROMPTING. This is great!&lt;/p&gt;\n&lt;p&gt;As mentioned earlier, due to cost and time constraints, we want to first narrow down the list of models we want to test on the harder stages.&lt;/p&gt;\n&lt;p&gt;As a recap, our implementation strategy here will be as follows: instead of just using the performance of the models on the “easy” validation set, we will use a combination of two datasets:&lt;/p&gt;\n&lt;ol type=\"1\"&gt;\n&lt;li&gt;Gate - 50 Easy dialogs, teacher - forced. Drop model if Turn-EM &lt; 0.55.&lt;/li&gt;\n&lt;li&gt;Probe - 30-dialog mixed micro-set (15 Medium + 15 Hard, closed loop). Keep model only if Final-Turn EM ≥ 0.35, Dialogue-mean EM ≥ 0.35&lt;/li&gt;\n&lt;/ol&gt;\n&lt;p&gt;We will now create our “gate” and “probe” datasets.&lt;/p&gt;\n&lt;div id=\"cell-33\" class=\"cell\" data-execution_count=\"420\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb26\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb26-1\"&gt;&lt;a href=\"#cb26-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;gate_ids &lt;span class=\"op\"&gt;=&lt;/span&gt; easy_valid_ids.sample(&lt;span class=\"dv\"&gt;50&lt;/span&gt;, random_state&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"dv\"&gt;42&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb26-2\"&gt;&lt;a href=\"#cb26-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;probe_medium_ids &lt;span class=\"op\"&gt;=&lt;/span&gt; medium_valid_ids.sample(&lt;span class=\"dv\"&gt;15&lt;/span&gt;, random_state&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"dv\"&gt;42&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb26-3\"&gt;&lt;a href=\"#cb26-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;probe_hard_ids &lt;span class=\"op\"&gt;=&lt;/span&gt; hard_valid_ids.sample(&lt;span class=\"dv\"&gt;30&lt;/span&gt;, random_state&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"dv\"&gt;42&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb26-4\"&gt;&lt;a href=\"#cb26-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb26-5\"&gt;&lt;a href=\"#cb26-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;gate_df &lt;span class=\"op\"&gt;=&lt;/span&gt; easy_valid_df[easy_valid_df[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;].isin(gate_ids[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;])].copy()&lt;/span&gt;\n&lt;span id=\"cb26-6\"&gt;&lt;a href=\"#cb26-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;probe_df &lt;span class=\"op\"&gt;=&lt;/span&gt; pd.concat(&lt;/span&gt;\n&lt;span id=\"cb26-7\"&gt;&lt;a href=\"#cb26-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    [&lt;/span&gt;\n&lt;span id=\"cb26-8\"&gt;&lt;a href=\"#cb26-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        medium_valid_df[medium_valid_df[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;].isin(probe_medium_ids[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;])],&lt;/span&gt;\n&lt;span id=\"cb26-9\"&gt;&lt;a href=\"#cb26-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        hard_valid_df[hard_valid_df[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;].isin(probe_hard_ids[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;])],&lt;/span&gt;\n&lt;span id=\"cb26-10\"&gt;&lt;a href=\"#cb26-10\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    ]&lt;/span&gt;\n&lt;span id=\"cb26-11\"&gt;&lt;a href=\"#cb26-11\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;).copy()&lt;/span&gt;\n&lt;span id=\"cb26-12\"&gt;&lt;a href=\"#cb26-12\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb26-13\"&gt;&lt;a href=\"#cb26-13\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"cf\"&gt;assert&lt;/span&gt; gate_df.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;] &lt;span class=\"op\"&gt;==&lt;/span&gt; gate_ids.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;]&lt;/span&gt;\n&lt;span id=\"cb26-14\"&gt;&lt;a href=\"#cb26-14\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"cf\"&gt;assert&lt;/span&gt; probe_df.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;] &lt;span class=\"op\"&gt;==&lt;/span&gt; probe_medium_ids.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;] &lt;span class=\"op\"&gt;+&lt;/span&gt; probe_hard_ids.shape[&lt;span class=\"dv\"&gt;0&lt;/span&gt;]&lt;/span&gt;\n&lt;span id=\"cb26-15\"&gt;&lt;a href=\"#cb26-15\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb26-16\"&gt;&lt;a href=\"#cb26-16\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;gate_examples &lt;span class=\"op\"&gt;=&lt;/span&gt; to_turn_examples(gate_df, history_mode&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;teacher&quot;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb26-17\"&gt;&lt;a href=\"#cb26-17\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;probe_examples &lt;span class=\"op\"&gt;=&lt;/span&gt; to_turn_examples(probe_df, history_mode&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;teacher&quot;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;/div&gt;\n&lt;p&gt;We will also save the &lt;code&gt;gate&lt;/code&gt; and &lt;code&gt;probe&lt;/code&gt; dataset ids, to compare performance of different models on them.&lt;/p&gt;\n&lt;div id=\"cell-35\" class=\"cell\" data-execution_count=\"500\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb27\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb27-1\"&gt;&lt;a href=\"#cb27-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;import&lt;/span&gt; os&lt;/span&gt;\n&lt;span id=\"cb27-2\"&gt;&lt;a href=\"#cb27-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb27-3\"&gt;&lt;a href=\"#cb27-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;os.makedirs(&lt;span class=\"st\"&gt;&quot;validation_datasets&quot;&lt;/span&gt;, exist_ok&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb27-4\"&gt;&lt;a href=\"#cb27-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb27-5\"&gt;&lt;a href=\"#cb27-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;gate_ids.to_json(&lt;span class=\"st\"&gt;&quot;validation_datasets/gate_ids.jsonl&quot;&lt;/span&gt;, orient&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;records&quot;&lt;/span&gt;, lines&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb27-6\"&gt;&lt;a href=\"#cb27-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;probe_medium_ids.to_json(&lt;/span&gt;\n&lt;span id=\"cb27-7\"&gt;&lt;a href=\"#cb27-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"st\"&gt;&quot;validation_datasets/probe_medium_ids.jsonl&quot;&lt;/span&gt;, orient&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;records&quot;&lt;/span&gt;, lines&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb27-8\"&gt;&lt;a href=\"#cb27-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;)&lt;/span&gt;\n&lt;span id=\"cb27-9\"&gt;&lt;a href=\"#cb27-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;probe_hard_ids.to_json(&lt;/span&gt;\n&lt;span id=\"cb27-10\"&gt;&lt;a href=\"#cb27-10\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"st\"&gt;&quot;validation_datasets/probe_hard_ids.jsonl&quot;&lt;/span&gt;, orient&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;records&quot;&lt;/span&gt;, lines&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb27-11\"&gt;&lt;a href=\"#cb27-11\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-36\" class=\"cell\" data-execution_count=\"421\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb28\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb28-1\"&gt;&lt;a href=\"#cb28-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;gate_examples[&lt;span class=\"dv\"&gt;0&lt;/span&gt;].toDict()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;div class=\"cell-output cell-output-display\" data-execution_count=\"421\"&gt;\n&lt;pre&gt;&lt;code&gt;{&#39;conversation_context&#39;: &#39;None&#39;,\n &#39;evidence_snippets&#39;: &quot;[PRE]\\nentergy corporation and subsidiaries management&#39;s financial discussion and analysis refer to 201cselected financial data - five-year comparison of entergy corporation and subsidiaries 201d which accompanies entergy corporation 2019s financial statements in this report for further information with respect to operating statistics . in november 2007 the board approved a plan to pursue a separation of entergy 2019s non-utility nuclear business from entergy through a spin-off of the business to entergy shareholders . in april 2010 , entergy announced that it planned to unwind the business infrastructure associated with the proposed spin-off transaction . as a result of the plan to unwind the business infrastructure , entergy recorded expenses in 2010 for the write-off of certain capitalized costs incurred in connection with the planned spin-off transaction . these costs are discussed in more detail below and throughout this section . net revenue utility following is an analysis of the change in net revenue comparing 2010 to 2009 . amount ( in millions ) .\\n[/PRE]\\n[POST]\\nthe volume/weather variance is primarily due to an increase of 8362 gwh , or 8% ( 8 % ) , in billed electricity usage in all retail sectors , including the effect on the residential sector of colder weather in the first quarter 2010 compared to 2009 and warmer weather in the second and third quarters 2010 compared to 2009 . the industrial sector reflected strong sales growth on continuing signs of economic recovery . the improvement in this sector was primarily driven by inventory restocking and strong exports with the chemicals , refining , and miscellaneous manufacturing sectors leading the improvement . the retail electric price variance is primarily due to : increases in the formula rate plan riders at entergy gulf states louisiana effective november 2009 , january 2010 , and september 2010 , at entergy louisiana effective november 2009 , and at entergy mississippi effective july 2009 ; a base rate increase at entergy arkansas effective july 2010 ; rate actions at entergy texas , including base rate increases effective in may and august 2010 ; a formula rate plan provision of $ 16.6 million recorded in the third quarter 2009 for refunds that were made to customers in accordance with settlements approved by the lpsc ; and the recovery in 2009 by entergy arkansas of 2008 extraordinary storm costs , as approved by the apsc , which ceased in january 2010 . the recovery of storm costs is offset in other operation and maintenance expenses . see note 2 to the financial statements for further discussion of the proceedings referred to above. .\\n[/POST]&quot;,\n &#39;table&#39;: &#39;| Row | 2009 net revenue | volume/weather | retail electric price | provision for regulatory proceedings | rough production cost equalization | ano decommissioning trust | fuel recovery | other | 2010 net revenue |\\n|---|---|---|---|---|---|---|---|---|---|\\n| amount ( in millions ) | 4694.0 | 231.0 | 137.0 | 26.0 | 19.0 | -24.0 | -44.0 | 12.0 | 5051.0 |&#39;,\n &#39;question&#39;: &#39;what was the difference in net revenue between 2009 and 2010?&#39;,\n &#39;id&#39;: &#39;Single_ETR/2011/page_22.pdf-3&#39;,\n &#39;doc_pre_text&#39;: &quot;entergy corporation and subsidiaries management&#39;s financial discussion and analysis refer to 201cselected financial data - five-year comparison of entergy corporation and subsidiaries 201d which accompanies entergy corporation 2019s financial statements in this report for further information with respect to operating statistics . in november 2007 the board approved a plan to pursue a separation of entergy 2019s non-utility nuclear business from entergy through a spin-off of the business to entergy shareholders . in april 2010 , entergy announced that it planned to unwind the business infrastructure associated with the proposed spin-off transaction . as a result of the plan to unwind the business infrastructure , entergy recorded expenses in 2010 for the write-off of certain capitalized costs incurred in connection with the planned spin-off transaction . these costs are discussed in more detail below and throughout this section . net revenue utility following is an analysis of the change in net revenue comparing 2010 to 2009 . amount ( in millions ) .&quot;,\n &#39;doc_post_text&#39;: &#39;the volume/weather variance is primarily due to an increase of 8362 gwh , or 8% ( 8 % ) , in billed electricity usage in all retail sectors , including the effect on the residential sector of colder weather in the first quarter 2010 compared to 2009 and warmer weather in the second and third quarters 2010 compared to 2009 . the industrial sector reflected strong sales growth on continuing signs of economic recovery . the improvement in this sector was primarily driven by inventory restocking and strong exports with the chemicals , refining , and miscellaneous manufacturing sectors leading the improvement . the retail electric price variance is primarily due to : increases in the formula rate plan riders at entergy gulf states louisiana effective november 2009 , january 2010 , and september 2010 , at entergy louisiana effective november 2009 , and at entergy mississippi effective july 2009 ; a base rate increase at entergy arkansas effective july 2010 ; rate actions at entergy texas , including base rate increases effective in may and august 2010 ; a formula rate plan provision of $ 16.6 million recorded in the third quarter 2009 for refunds that were made to customers in accordance with settlements approved by the lpsc ; and the recovery in 2009 by entergy arkansas of 2008 extraordinary storm costs , as approved by the apsc , which ceased in january 2010 . the recovery of storm costs is offset in other operation and maintenance expenses . see note 2 to the financial statements for further discussion of the proceedings referred to above. .&#39;,\n &#39;doc_table&#39;: {&#39;amount ( in millions )&#39;: {&#39;2009 net revenue&#39;: 4694.0,\n   &#39;volume/weather&#39;: 231.0,\n   &#39;retail electric price&#39;: 137.0,\n   &#39;provision for regulatory proceedings&#39;: 26.0,\n   &#39;rough production cost equalization&#39;: 19.0,\n   &#39;ano decommissioning trust&#39;: -24.0,\n   &#39;fuel recovery&#39;: -44.0,\n   &#39;other&#39;: 12.0,\n   &#39;2010 net revenue&#39;: 5051.0}},\n &#39;dialogue_conv_questions&#39;: [&#39;what was the difference in net revenue between 2009 and 2010?&#39;,\n  &#39;and the specific value for 2009 again?&#39;,\n  &#39;so what was the percentage change during this time?&#39;],\n &#39;dialogue_conv_answers&#39;: [&#39;357&#39;, &#39;4694&#39;, &#39;7.61%&#39;],\n &#39;dialogue_turn_program&#39;: [&#39;subtract(5051, 4694)&#39;,\n  &#39;4694&#39;,\n  &#39;subtract(5051, 4694), divide(#0, 4694)&#39;],\n &#39;dialogue_executed_answers&#39;: [357.0, 4694.0, 0.07605],\n &#39;dialogue_qa_split&#39;: [False, False, False],\n &#39;features_num_dialogue_turns&#39;: 3,\n &#39;features_has_type2_question&#39;: False,\n &#39;features_has_duplicate_columns&#39;: False,\n &#39;features_has_non_numeric_values&#39;: False,\n &#39;answer&#39;: 357.0}&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-37\" class=\"cell\" data-execution_count=\"422\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb30\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb30-1\"&gt;&lt;a href=\"#cb30-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;gate_examples[&lt;span class=\"dv\"&gt;0&lt;/span&gt;].inputs().toDict()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;div class=\"cell-output cell-output-display\" data-execution_count=\"422\"&gt;\n&lt;pre&gt;&lt;code&gt;{&#39;conversation_context&#39;: &#39;None&#39;,\n &#39;evidence_snippets&#39;: &quot;[PRE]\\nentergy corporation and subsidiaries management&#39;s financial discussion and analysis refer to 201cselected financial data - five-year comparison of entergy corporation and subsidiaries 201d which accompanies entergy corporation 2019s financial statements in this report for further information with respect to operating statistics . in november 2007 the board approved a plan to pursue a separation of entergy 2019s non-utility nuclear business from entergy through a spin-off of the business to entergy shareholders . in april 2010 , entergy announced that it planned to unwind the business infrastructure associated with the proposed spin-off transaction . as a result of the plan to unwind the business infrastructure , entergy recorded expenses in 2010 for the write-off of certain capitalized costs incurred in connection with the planned spin-off transaction . these costs are discussed in more detail below and throughout this section . net revenue utility following is an analysis of the change in net revenue comparing 2010 to 2009 . amount ( in millions ) .\\n[/PRE]\\n[POST]\\nthe volume/weather variance is primarily due to an increase of 8362 gwh , or 8% ( 8 % ) , in billed electricity usage in all retail sectors , including the effect on the residential sector of colder weather in the first quarter 2010 compared to 2009 and warmer weather in the second and third quarters 2010 compared to 2009 . the industrial sector reflected strong sales growth on continuing signs of economic recovery . the improvement in this sector was primarily driven by inventory restocking and strong exports with the chemicals , refining , and miscellaneous manufacturing sectors leading the improvement . the retail electric price variance is primarily due to : increases in the formula rate plan riders at entergy gulf states louisiana effective november 2009 , january 2010 , and september 2010 , at entergy louisiana effective november 2009 , and at entergy mississippi effective july 2009 ; a base rate increase at entergy arkansas effective july 2010 ; rate actions at entergy texas , including base rate increases effective in may and august 2010 ; a formula rate plan provision of $ 16.6 million recorded in the third quarter 2009 for refunds that were made to customers in accordance with settlements approved by the lpsc ; and the recovery in 2009 by entergy arkansas of 2008 extraordinary storm costs , as approved by the apsc , which ceased in january 2010 . the recovery of storm costs is offset in other operation and maintenance expenses . see note 2 to the financial statements for further discussion of the proceedings referred to above. .\\n[/POST]&quot;,\n &#39;table&#39;: &#39;| Row | 2009 net revenue | volume/weather | retail electric price | provision for regulatory proceedings | rough production cost equalization | ano decommissioning trust | fuel recovery | other | 2010 net revenue |\\n|---|---|---|---|---|---|---|---|---|---|\\n| amount ( in millions ) | 4694.0 | 231.0 | 137.0 | 26.0 | 19.0 | -24.0 | -44.0 | 12.0 | 5051.0 |&#39;,\n &#39;question&#39;: &#39;what was the difference in net revenue between 2009 and 2010?&#39;}&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;section id=\"gate-dataset-results\" class=\"level3\"&gt;\n&lt;h3&gt;Gate Dataset Results&lt;/h3&gt;\n&lt;div id=\"cell-39\" class=\"cell\" data-execution_count=\"423\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb32\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb32-1\"&gt;&lt;a href=\"#cb32-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;import&lt;/span&gt; re&lt;/span&gt;\n&lt;span id=\"cb32-2\"&gt;&lt;a href=\"#cb32-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb32-3\"&gt;&lt;a href=\"#cb32-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;from&lt;/span&gt; dspy.evaluate &lt;span class=\"im\"&gt;import&lt;/span&gt; Evaluate&lt;/span&gt;\n&lt;span id=\"cb32-4\"&gt;&lt;a href=\"#cb32-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb32-5\"&gt;&lt;a href=\"#cb32-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;results &lt;span class=\"op\"&gt;=&lt;/span&gt; []&lt;/span&gt;\n&lt;span id=\"cb32-6\"&gt;&lt;a href=\"#cb32-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb32-7\"&gt;&lt;a href=\"#cb32-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"cf\"&gt;with&lt;/span&gt; mlflow.start_run(run_name&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;gate_dataset_results&quot;&lt;/span&gt;) &lt;span class=\"im\"&gt;as&lt;/span&gt; parent_ctx:&lt;/span&gt;\n&lt;span id=\"cb32-8\"&gt;&lt;a href=\"#cb32-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;for&lt;/span&gt; candidate_lm &lt;span class=\"kw\"&gt;in&lt;/span&gt; llms:&lt;/span&gt;\n&lt;span id=\"cb32-9\"&gt;&lt;a href=\"#cb32-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        run_name &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"ss\"&gt;f&quot;gate_&lt;/span&gt;&lt;span class=\"sc\"&gt;{&lt;/span&gt;candidate_lm&lt;span class=\"sc\"&gt;.&lt;/span&gt;model&lt;span class=\"sc\"&gt;.&lt;/span&gt;replace(&lt;span class=\"st\"&gt;&#39;/&#39;&lt;/span&gt;, &lt;span class=\"st\"&gt;&#39;_&#39;&lt;/span&gt;)&lt;span class=\"sc\"&gt;}&lt;/span&gt;&lt;span class=\"ss\"&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb32-10\"&gt;&lt;a href=\"#cb32-10\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        sanitized_run_name &lt;span class=\"op\"&gt;=&lt;/span&gt; re.sub(&lt;span class=\"vs\"&gt;r&quot;[^a-zA-Z0-9_\\-]&quot;&lt;/span&gt;, &lt;span class=\"st\"&gt;&quot;_&quot;&lt;/span&gt;, run_name)&lt;/span&gt;\n&lt;span id=\"cb32-11\"&gt;&lt;a href=\"#cb32-11\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;with&lt;/span&gt; mlflow.start_run(run_name&lt;span class=\"op\"&gt;=&lt;/span&gt;sanitized_run_name, nested&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;):&lt;/span&gt;\n&lt;span id=\"cb32-12\"&gt;&lt;a href=\"#cb32-12\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            current_evaluator &lt;span class=\"op\"&gt;=&lt;/span&gt; Evaluate(&lt;/span&gt;\n&lt;span id=\"cb32-13\"&gt;&lt;a href=\"#cb32-13\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                devset&lt;span class=\"op\"&gt;=&lt;/span&gt;gate_examples[:&lt;span class=\"dv\"&gt;10&lt;/span&gt;],&lt;/span&gt;\n&lt;span id=\"cb32-14\"&gt;&lt;a href=\"#cb32-14\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                num_threads&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"dv\"&gt;32&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb32-15\"&gt;&lt;a href=\"#cb32-15\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                display_progress&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb32-16\"&gt;&lt;a href=\"#cb32-16\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                &lt;span class=\"co\"&gt;# display_table=True,&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb32-17\"&gt;&lt;a href=\"#cb32-17\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                &lt;span class=\"co\"&gt;# provide_traceback=True,&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb32-18\"&gt;&lt;a href=\"#cb32-18\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                return_all_scores&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb32-19\"&gt;&lt;a href=\"#cb32-19\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                return_outputs&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb32-20\"&gt;&lt;a href=\"#cb32-20\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            )&lt;/span&gt;\n&lt;span id=\"cb32-21\"&gt;&lt;a href=\"#cb32-21\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            &lt;span class=\"cf\"&gt;with&lt;/span&gt; dspy.context(lm&lt;span class=\"op\"&gt;=&lt;/span&gt;candidate_lm) &lt;span class=\"im\"&gt;as&lt;/span&gt; ctx:&lt;/span&gt;\n&lt;span id=\"cb32-22\"&gt;&lt;a href=\"#cb32-22\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                current_result &lt;span class=\"op\"&gt;=&lt;/span&gt; current_evaluator(&lt;/span&gt;\n&lt;span id=\"cb32-23\"&gt;&lt;a href=\"#cb32-23\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                    TurnSolver(reasoning_lm&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;), metric&lt;span class=\"op\"&gt;=&lt;/span&gt;turn_em_metric&lt;/span&gt;\n&lt;span id=\"cb32-24\"&gt;&lt;a href=\"#cb32-24\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                )&lt;/span&gt;\n&lt;span id=\"cb32-25\"&gt;&lt;a href=\"#cb32-25\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                results.append(current_result)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;div class=\"cell-output cell-output-stdout\"&gt;\n&lt;pre&gt;&lt;code&gt;Average Metric: 8.00 / 10 (80.0%): 100%|██████████| 10/10 [00:00&lt;00:00, 65.65it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/502b5457f9db44339a5afce34d13d847\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_openai_gpt-4_1-2025-04-14 at: http://localhost:5000/#/experiments/1/runs/7e61e1f47f4e408c8cec59ee1bf9c0dd\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 5.00 / 10 (50.0%): 100%|██████████| 10/10 [00:00&lt;00:00, 58.97it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/1b4ea94ac47e4660b30234d6ad78c8d8\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_openai_gpt-4_1-mini-2025-04-14 at: http://localhost:5000/#/experiments/1/runs/fa03278692c848e996a3e43e6422099f\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 6.00 / 10 (60.0%): 100%|██████████| 10/10 [00:00&lt;00:00, 79.01it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/ce1366eaa8c146eabba86650fae12f74\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_openai_o4-mini-2025-04-16 at: http://localhost:5000/#/experiments/1/runs/3d1fb9c72b914d5a942312db0a6a5088\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 6.00 / 10 (60.0%): 100%|██████████| 10/10 [00:00&lt;00:00, 81.33it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/9e00a96bfd114bbaa9e47dcb478b4423\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_anthropic_claude-sonnet-4-20250514 at: http://localhost:5000/#/experiments/1/runs/76c2180b1f3c4510ab13158d3b0d36eb\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 7.00 / 10 (70.0%): 100%|██████████| 10/10 [00:00&lt;00:00, 65.50it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/4a3c7957aaab4a4e972b06a7754fe6d4\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_gemini_gemini-2_5-flash at: http://localhost:5000/#/experiments/1/runs/aa191551b2844b57bb9d2db37e50c4f0\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n  0%|          | 0/10 [00:00&lt;?, ?it/s]Average Metric: 7.00 / 10 (70.0%): 100%|██████████| 10/10 [00:00&lt;00:00, 61.55it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/809ee64fbd164475b3592ff2340b2595\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_gemini_gemini-2_5-flash-lite at: http://localhost:5000/#/experiments/1/runs/90ea53b2a2484cc0a5302b7c8245184e\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 8.00 / 10 (80.0%): 100%|██████████| 10/10 [00:00&lt;00:00, 74.80it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/6f1bec87d6ce4137b10e055e94bf54d4\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_openai_o3-2025-04-16 at: http://localhost:5000/#/experiments/1/runs/7e4f8e42c8244b94af37787cacd12ee5\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 7.00 / 10 (70.0%): 100%|██████████| 10/10 [00:00&lt;00:00, 86.48it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/ab105090285e4b55a93205dc6f1bde64\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_anthropic_claude-opus-4-20250514 at: http://localhost:5000/#/experiments/1/runs/58c90aae89644af8a1d2c7dc845b0c07\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 8.00 / 10 (80.0%): 100%|██████████| 10/10 [00:00&lt;00:00, 39.63it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/e786a0b633844e7ebdb6a165561b81ec\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_gemini_gemini-2_5-pro at: http://localhost:5000/#/experiments/1/runs/9e1f42bcc8064a9383ed590c1add4d01\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 7.00 / 10 (70.0%): 100%|██████████| 10/10 [00:00&lt;00:00, 71.29it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/f4ae2cb32a2b401aa5ab8f7b02dc7b86\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_ollama_qwen3_32b at: http://localhost:5000/#/experiments/1/runs/ca6c0d988ca94f2998eb08f339fdf22a\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_dataset_results at: http://localhost:5000/#/experiments/1/runs/0b0e82f0b3724ec1afedde0d7a036dfe\n🧪 View experiment at: http://localhost:5000/#/experiments/1&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-stderr\"&gt;\n&lt;pre&gt;&lt;code&gt;2025/07/28 18:19:36 INFO dspy.evaluate.evaluate: Average Metric: 8.0 / 10 (80.0%)\n2025/07/28 18:19:37 INFO dspy.evaluate.evaluate: Average Metric: 5.0 / 10 (50.0%)\n2025/07/28 18:19:37 INFO dspy.evaluate.evaluate: Average Metric: 6.0 / 10 (60.0%)\n2025/07/28 18:19:37 INFO dspy.evaluate.evaluate: Average Metric: 6.0 / 10 (60.0%)\n2025/07/28 18:19:37 INFO dspy.evaluate.evaluate: Average Metric: 7.0 / 10 (70.0%)\n2025/07/28 18:19:37 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:19:37 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:19:38 INFO dspy.evaluate.evaluate: Average Metric: 7.0 / 10 (70.0%)\n2025/07/28 18:19:38 INFO dspy.evaluate.evaluate: Average Metric: 8.0 / 10 (80.0%)\n2025/07/28 18:19:38 INFO dspy.evaluate.evaluate: Average Metric: 7.0 / 10 (70.0%)\n2025/07/28 18:19:38 INFO dspy.evaluate.evaluate: Average Metric: 8.0 / 10 (80.0%)\n2025/07/28 18:19:39 INFO dspy.evaluate.evaluate: Average Metric: 7.0 / 10 (70.0%)&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n\n&lt;div&gt;\n  &lt;style scoped&gt;\n  button {\n    border: none;\n    border-radius: 4px;\n    background-color: rgb(34, 114, 180);\n    font-family: -apple-system, \"system-ui\", \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial;\n    font-size: 13px;\n    color: white;\n    margin-top: 8px;\n    margin-bottom: 8px;\n    padding: 8px 16px;\n    cursor: pointer;\n  }\n  button:hover {\n    background-color: rgb(66, 153, 224);\n  }\n  &lt;/style&gt;\n  &lt;button\n    onclick=\"\n        const display = this.nextElementSibling.style.display;\n        const isCollapsed = display === 'none';\n        this.nextElementSibling.style.display = isCollapsed ? null : 'none';\n\n        const verb = isCollapsed ? 'Collapse' : 'Expand';\n        this.innerText = `${verb} MLflow Trace`;\n    \"\n  &gt;Collapse MLflow Trace&lt;/button&gt;\n  &lt;iframe\n    id=\"trace-renderer\"\n    style=\"width: 100%; height: 500px; border: none; resize: vertical;\"\n    src=\"http://localhost:5000/static-files/lib/notebook-trace-renderer/index.html?trace_id=9f5fdac684c74647a0a88cbdcd16d89b&amp;experiment_id=1&amp;trace_id=3de6592234f74ca4ba6a450f2a01b37a&amp;experiment_id=1&amp;trace_id=31e022f38c354840b5abbe64b417306d&amp;experiment_id=1&amp;trace_id=0756d03769c4417e861f7171ecb7bcb8&amp;experiment_id=1&amp;trace_id=f1dcee538d454f96a41dc1d59c3a27f9&amp;experiment_id=1&amp;trace_id=283f1f0436c24afabdb9d865b3c0e802&amp;experiment_id=1&amp;trace_id=ddb2286507bd47fd8580b5e8dd923d7e&amp;experiment_id=1&amp;trace_id=427f384f2d604830844675df25de1226&amp;experiment_id=1&amp;trace_id=789bab02c70346c1a50c91de5f67376b&amp;experiment_id=1&amp;trace_id=2c112f9efbb44a9796a0ca64a43b8b5d&amp;experiment_id=1&amp;version=3.1.4\"\n  /&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-40\" class=\"cell\" data-execution_count=\"424\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb35\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb35-1\"&gt;&lt;a href=\"#cb35-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;import&lt;/span&gt; pandas &lt;span class=\"im\"&gt;as&lt;/span&gt; pd&lt;/span&gt;\n&lt;span id=\"cb35-2\"&gt;&lt;a href=\"#cb35-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb35-3\"&gt;&lt;a href=\"#cb35-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;df &lt;span class=\"op\"&gt;=&lt;/span&gt; pd.DataFrame(&lt;/span&gt;\n&lt;span id=\"cb35-4\"&gt;&lt;a href=\"#cb35-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    [&lt;/span&gt;\n&lt;span id=\"cb35-5\"&gt;&lt;a href=\"#cb35-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        {&lt;span class=\"st\"&gt;&quot;LLM&quot;&lt;/span&gt;: llms[idx].model, &lt;span class=\"st\"&gt;&quot;Evaluation Score&quot;&lt;/span&gt;: candidate[&lt;span class=\"dv\"&gt;0&lt;/span&gt;]}&lt;/span&gt;\n&lt;span id=\"cb35-6\"&gt;&lt;a href=\"#cb35-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;for&lt;/span&gt; idx, candidate &lt;span class=\"kw\"&gt;in&lt;/span&gt; &lt;span class=\"bu\"&gt;enumerate&lt;/span&gt;(results)&lt;/span&gt;\n&lt;span id=\"cb35-7\"&gt;&lt;a href=\"#cb35-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    ]&lt;/span&gt;\n&lt;span id=\"cb35-8\"&gt;&lt;a href=\"#cb35-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;)&lt;/span&gt;\n&lt;span id=\"cb35-9\"&gt;&lt;a href=\"#cb35-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"bu\"&gt;print&lt;/span&gt;(df)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;div class=\"cell-output cell-output-stdout\"&gt;\n&lt;pre&gt;&lt;code&gt;                                  LLM  Evaluation Score\n0           openai/gpt-4.1-2025-04-14              80.0\n1      openai/gpt-4.1-mini-2025-04-14              50.0\n2           openai/o4-mini-2025-04-16              60.0\n3  anthropic/claude-sonnet-4-20250514              60.0\n4             gemini/gemini-2.5-flash              70.0\n5        gemini/gemini-2.5-flash-lite              70.0\n6                openai/o3-2025-04-16              80.0\n7    anthropic/claude-opus-4-20250514              70.0\n8               gemini/gemini-2.5-pro              80.0\n9                    ollama/qwen3:32b              70.0&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;From the small test above, we see that most of the models score in a similar range. I think it’s expected that GPT-4.1-mini performs poorly, given that it’s a much smaller model compared to all the competetiors.&lt;/p&gt;\n&lt;p&gt;From the MLFlow logs, we also see that while Qwen3:32b has a relatively high score, inference is quite slow. For now, we will skip this model during the model selection phase, and revisit it later.&lt;/p&gt;\n&lt;div id=\"cell-42\" class=\"cell\" data-execution_count=\"425\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb37\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb37-1\"&gt;&lt;a href=\"#cb37-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;model_selection_llms &lt;span class=\"op\"&gt;=&lt;/span&gt; [&lt;/span&gt;\n&lt;span id=\"cb37-2\"&gt;&lt;a href=\"#cb37-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    lm_oai_gpt_4_1,&lt;/span&gt;\n&lt;span id=\"cb37-3\"&gt;&lt;a href=\"#cb37-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    lm_oai_gpt_4_1_mini,&lt;/span&gt;\n&lt;span id=\"cb37-4\"&gt;&lt;a href=\"#cb37-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    lm_oai_o4_mini,&lt;/span&gt;\n&lt;span id=\"cb37-5\"&gt;&lt;a href=\"#cb37-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    lm_anthropic_sonnet_4_0,&lt;/span&gt;\n&lt;span id=\"cb37-6\"&gt;&lt;a href=\"#cb37-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    lm_gemini_flash_2_5,&lt;/span&gt;\n&lt;span id=\"cb37-7\"&gt;&lt;a href=\"#cb37-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    lm_gemini_flash_2_5_lite,&lt;/span&gt;\n&lt;span id=\"cb37-8\"&gt;&lt;a href=\"#cb37-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    lm_oai_o3,&lt;/span&gt;\n&lt;span id=\"cb37-9\"&gt;&lt;a href=\"#cb37-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    lm_anthropic_opus_4_0,&lt;/span&gt;\n&lt;span id=\"cb37-10\"&gt;&lt;a href=\"#cb37-10\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    lm_gemini_pro_2_5,&lt;/span&gt;\n&lt;span id=\"cb37-11\"&gt;&lt;a href=\"#cb37-11\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-43\" class=\"cell\" data-execution_count=\"426\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb38\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb38-1\"&gt;&lt;a href=\"#cb38-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;import&lt;/span&gt; re&lt;/span&gt;\n&lt;span id=\"cb38-2\"&gt;&lt;a href=\"#cb38-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb38-3\"&gt;&lt;a href=\"#cb38-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;from&lt;/span&gt; dspy.evaluate &lt;span class=\"im\"&gt;import&lt;/span&gt; Evaluate&lt;/span&gt;\n&lt;span id=\"cb38-4\"&gt;&lt;a href=\"#cb38-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb38-5\"&gt;&lt;a href=\"#cb38-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;results &lt;span class=\"op\"&gt;=&lt;/span&gt; []&lt;/span&gt;\n&lt;span id=\"cb38-6\"&gt;&lt;a href=\"#cb38-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb38-7\"&gt;&lt;a href=\"#cb38-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"cf\"&gt;with&lt;/span&gt; mlflow.start_run(run_name&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;gate_dataset_results_full&quot;&lt;/span&gt;) &lt;span class=\"im\"&gt;as&lt;/span&gt; parent_ctx:&lt;/span&gt;\n&lt;span id=\"cb38-8\"&gt;&lt;a href=\"#cb38-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;for&lt;/span&gt; candidate_lm &lt;span class=\"kw\"&gt;in&lt;/span&gt; model_selection_llms:&lt;/span&gt;\n&lt;span id=\"cb38-9\"&gt;&lt;a href=\"#cb38-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        run_name &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"ss\"&gt;f&quot;gate_&lt;/span&gt;&lt;span class=\"sc\"&gt;{&lt;/span&gt;candidate_lm&lt;span class=\"sc\"&gt;.&lt;/span&gt;model&lt;span class=\"sc\"&gt;.&lt;/span&gt;replace(&lt;span class=\"st\"&gt;&#39;/&#39;&lt;/span&gt;, &lt;span class=\"st\"&gt;&#39;_&#39;&lt;/span&gt;)&lt;span class=\"sc\"&gt;}&lt;/span&gt;&lt;span class=\"ss\"&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb38-10\"&gt;&lt;a href=\"#cb38-10\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        sanitized_run_name &lt;span class=\"op\"&gt;=&lt;/span&gt; re.sub(&lt;span class=\"vs\"&gt;r&quot;[^a-zA-Z0-9_\\-]&quot;&lt;/span&gt;, &lt;span class=\"st\"&gt;&quot;_&quot;&lt;/span&gt;, run_name)&lt;/span&gt;\n&lt;span id=\"cb38-11\"&gt;&lt;a href=\"#cb38-11\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;with&lt;/span&gt; mlflow.start_run(run_name&lt;span class=\"op\"&gt;=&lt;/span&gt;sanitized_run_name, nested&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;):&lt;/span&gt;\n&lt;span id=\"cb38-12\"&gt;&lt;a href=\"#cb38-12\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            current_evaluator &lt;span class=\"op\"&gt;=&lt;/span&gt; Evaluate(&lt;/span&gt;\n&lt;span id=\"cb38-13\"&gt;&lt;a href=\"#cb38-13\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                devset&lt;span class=\"op\"&gt;=&lt;/span&gt;gate_examples,&lt;/span&gt;\n&lt;span id=\"cb38-14\"&gt;&lt;a href=\"#cb38-14\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                num_threads&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"dv\"&gt;32&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb38-15\"&gt;&lt;a href=\"#cb38-15\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                display_progress&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb38-16\"&gt;&lt;a href=\"#cb38-16\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                &lt;span class=\"co\"&gt;# display_table=True,&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb38-17\"&gt;&lt;a href=\"#cb38-17\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                &lt;span class=\"co\"&gt;# provide_traceback=True,&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb38-18\"&gt;&lt;a href=\"#cb38-18\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                return_all_scores&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb38-19\"&gt;&lt;a href=\"#cb38-19\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                return_outputs&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb38-20\"&gt;&lt;a href=\"#cb38-20\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            )&lt;/span&gt;\n&lt;span id=\"cb38-21\"&gt;&lt;a href=\"#cb38-21\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            &lt;span class=\"cf\"&gt;with&lt;/span&gt; dspy.context(lm&lt;span class=\"op\"&gt;=&lt;/span&gt;candidate_lm) &lt;span class=\"im\"&gt;as&lt;/span&gt; ctx:&lt;/span&gt;\n&lt;span id=\"cb38-22\"&gt;&lt;a href=\"#cb38-22\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                current_result &lt;span class=\"op\"&gt;=&lt;/span&gt; current_evaluator(&lt;/span&gt;\n&lt;span id=\"cb38-23\"&gt;&lt;a href=\"#cb38-23\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                    TurnSolver(reasoning_lm&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;), metric&lt;span class=\"op\"&gt;=&lt;/span&gt;turn_em_metric&lt;/span&gt;\n&lt;span id=\"cb38-24\"&gt;&lt;a href=\"#cb38-24\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                )&lt;/span&gt;\n&lt;span id=\"cb38-25\"&gt;&lt;a href=\"#cb38-25\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                results.append(current_result)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;div class=\"cell-output cell-output-stdout\"&gt;\n&lt;pre&gt;&lt;code&gt;Average Metric: 95.00 / 151 (62.9%): 100%|██████████| 151/151 [00:02&lt;00:00, 74.97it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/e18f45df89fb4a0e9e98e6f01d74bf71\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_openai_gpt-4_1-2025-04-14 at: http://localhost:5000/#/experiments/1/runs/f15c1d3760fc489b95ec5950f3e992b9\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 81.00 / 151 (53.6%): 100%|██████████| 151/151 [00:02&lt;00:00, 74.18it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/9f40a5f2dc2a4e09977f8b8c53822605\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_openai_gpt-4_1-mini-2025-04-14 at: http://localhost:5000/#/experiments/1/runs/c882d7c82d5f4a3abb510bf57d506c53\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 31.00 / 55 (56.4%):  36%|███▌      | 54/151 [00:00&lt;00:01, 53.34it/s]Average Metric: 44.00 / 72 (61.1%):  47%|████▋     | 71/151 [00:01&lt;00:01, 73.76it/s]Average Metric: 62.00 / 106 (58.5%):  70%|██████▉   | 105/151 [00:01&lt;00:00, 82.16it/s]Average Metric: 95.00 / 151 (62.9%): 100%|██████████| 151/151 [00:02&lt;00:00, 71.71it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/8154049643d040d39c7642b56ac6d7c5\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_openai_o4-mini-2025-04-16 at: http://localhost:5000/#/experiments/1/runs/938b45e4b5204804b4e4660feebf563a\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 95.00 / 151 (62.9%): 100%|██████████| 151/151 [00:02&lt;00:00, 70.44it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/599e8c7040b04b8c8f0ca24c6dc94d37\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_anthropic_claude-sonnet-4-20250514 at: http://localhost:5000/#/experiments/1/runs/4442e20dc743456b966821c18219c23e\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n  0%|          | 0/151 [00:00&lt;?, ?it/s]Average Metric: 31.00 / 47 (66.0%):  30%|███       | 46/151 [00:01&lt;00:02, 47.10it/s]Average Metric: 57.00 / 93 (61.3%):  62%|██████▏   | 93/151 [00:01&lt;00:00, 79.96it/s]Average Metric: 73.00 / 122 (59.8%):  80%|████████  | 121/151 [00:01&lt;00:00, 89.94it/s]Average Metric: 96.00 / 151 (63.6%): 100%|██████████| 151/151 [00:02&lt;00:00, 67.06it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/bcea3ffb8c6f4cbb98725e43e88cbdd0\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_gemini_gemini-2_5-flash at: http://localhost:5000/#/experiments/1/runs/7db59c48c06c4948adf754477705c360\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n  0%|          | 0/151 [00:00&lt;?, ?it/s]Average Metric: 8.00 / 12 (66.7%):   7%|▋         | 11/151 [00:00&lt;00:03, 38.23it/s]Average Metric: 9.00 / 13 (69.2%):   8%|▊         | 12/151 [00:00&lt;00:03, 38.23it/s]Average Metric: 18.00 / 29 (62.1%):  19%|█▉        | 29/151 [00:00&lt;00:01, 62.69it/s]Average Metric: 20.00 / 32 (62.5%):  21%|██        | 31/151 [00:00&lt;00:01, 62.69it/s]Average Metric: 20.00 / 33 (60.6%):  21%|██        | 32/151 [00:00&lt;00:01, 62.69it/s]Average Metric: 21.00 / 34 (61.8%):  22%|██▏       | 33/151 [00:00&lt;00:01, 62.69it/s]Average Metric: 22.00 / 38 (57.9%):  25%|██▍       | 37/151 [00:00&lt;00:01, 61.42it/s]Average Metric: 44.00 / 75 (58.7%):  49%|████▉     | 74/151 [00:01&lt;00:01, 57.41it/s]Average Metric: 44.00 / 76 (57.9%):  50%|████▉     | 75/151 [00:01&lt;00:01, 57.41it/s]Average Metric: 44.00 / 78 (56.4%):  51%|█████     | 77/151 [00:01&lt;00:01, 58.30it/s]Average Metric: 47.00 / 84 (56.0%):  56%|█████▌    | 84/151 [00:01&lt;00:01, 60.44it/s]Average Metric: 51.00 / 89 (57.3%):  58%|█████▊    | 88/151 [00:01&lt;00:01, 60.44it/s]Average Metric: 52.00 / 90 (57.8%):  59%|█████▉    | 89/151 [00:01&lt;00:01, 60.44it/s]Average Metric: 55.00 / 96 (57.3%):  63%|██████▎   | 95/151 [00:01&lt;00:00, 60.62it/s]Average Metric: 56.00 / 97 (57.7%):  64%|██████▎   | 96/151 [00:01&lt;00:00, 60.62it/s]Average Metric: 59.00 / 107 (55.1%):  70%|███████   | 106/151 [00:01&lt;00:00, 67.41it/s]Average Metric: 59.00 / 108 (54.6%):  72%|███████▏  | 108/151 [00:01&lt;00:00, 69.63it/s]Average Metric: 62.00 / 112 (55.4%):  74%|███████▎  | 111/151 [00:01&lt;00:00, 69.63it/s]Average Metric: 69.00 / 123 (56.1%):  81%|████████  | 122/151 [00:01&lt;00:00, 69.40it/s]Average Metric: 87.00 / 151 (57.6%): 100%|██████████| 151/151 [00:02&lt;00:00, 60.17it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/c348c68458124441865ac735d0b7d641\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_gemini_gemini-2_5-flash-lite at: http://localhost:5000/#/experiments/1/runs/598582fb690540e7baca55a097fee220\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 22.00 / 32 (68.8%):  21%|██        | 31/151 [00:00&lt;00:01, 64.25it/s]Average Metric: 69.00 / 100 (69.0%):  66%|██████▌   | 99/151 [00:01&lt;00:00, 62.91it/s]Average Metric: 106.00 / 151 (70.2%): 100%|██████████| 151/151 [00:02&lt;00:00, 51.93it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/853504669f224faf8773cf2d9436fb41\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_openai_o3-2025-04-16 at: http://localhost:5000/#/experiments/1/runs/f122d81f9c1d46d582ce64553f6ee3ea\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 103.00 / 151 (68.2%): 100%|██████████| 151/151 [00:02&lt;00:00, 67.19it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/96826db5718c45d6a2dc0b2c5526441e\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_anthropic_claude-opus-4-20250514 at: http://localhost:5000/#/experiments/1/runs/d329de90de1e40e0b467681f0442656a\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 103.00 / 151 (68.2%): 100%|██████████| 151/151 [00:02&lt;00:00, 71.07it/s] \n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/1fbbc1c758204d438fd050d77d524632\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_gemini_gemini-2_5-pro at: http://localhost:5000/#/experiments/1/runs/6e2dd13cb21f455c905159caa8335678\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_dataset_results_full at: http://localhost:5000/#/experiments/1/runs/51176a64c2af4fbc803a1e1f0775e924\n🧪 View experiment at: http://localhost:5000/#/experiments/1&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-stderr\"&gt;\n&lt;pre&gt;&lt;code&gt;2025/07/28 18:21:32 INFO dspy.evaluate.evaluate: Average Metric: 95.0 / 151 (62.9%)\n2025/07/28 18:21:34 INFO dspy.evaluate.evaluate: Average Metric: 81.0 / 151 (53.6%)\n2025/07/28 18:21:35 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:35 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:36 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:36 INFO dspy.evaluate.evaluate: Average Metric: 95.0 / 151 (62.9%)\n2025/07/28 18:21:38 INFO dspy.evaluate.evaluate: Average Metric: 95.0 / 151 (62.9%)\n2025/07/28 18:21:39 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:39 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:40 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:40 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:40 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:41 INFO dspy.evaluate.evaluate: Average Metric: 96.0 / 151 (63.6%)\n2025/07/28 18:21:41 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:41 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:41 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:41 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:41 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:41 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:41 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:41 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:41 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:41 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:41 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:41 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:41 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:41 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:42 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:42 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:42 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:42 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:42 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:42 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:42 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:42 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:42 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:42 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:42 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:42 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:42 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:43 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:43 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:43 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:43 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:43 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:43 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:43 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:43 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:43 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:43 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:43 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:43 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:43 INFO dspy.evaluate.evaluate: Average Metric: 87.0 / 151 (57.6%)\n2025/07/28 18:21:44 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:45 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:47 INFO dspy.evaluate.evaluate: Average Metric: 106.0 / 151 (70.2%)\n2025/07/28 18:21:49 INFO dspy.evaluate.evaluate: Average Metric: 103.0 / 151 (68.2%)\n2025/07/28 18:21:51 INFO dspy.evaluate.evaluate: Average Metric: 103.0 / 151 (68.2%)&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n\n&lt;div&gt;\n  &lt;style scoped&gt;\n  button {\n    border: none;\n    border-radius: 4px;\n    background-color: rgb(34, 114, 180);\n    font-family: -apple-system, \"system-ui\", \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial;\n    font-size: 13px;\n    color: white;\n    margin-top: 8px;\n    margin-bottom: 8px;\n    padding: 8px 16px;\n    cursor: pointer;\n  }\n  button:hover {\n    background-color: rgb(66, 153, 224);\n  }\n  &lt;/style&gt;\n  &lt;button\n    onclick=\"\n        const display = this.nextElementSibling.style.display;\n        const isCollapsed = display === 'none';\n        this.nextElementSibling.style.display = isCollapsed ? null : 'none';\n\n        const verb = isCollapsed ? 'Collapse' : 'Expand';\n        this.innerText = `${verb} MLflow Trace`;\n    \"\n  &gt;Collapse MLflow Trace&lt;/button&gt;\n  &lt;iframe\n    id=\"trace-renderer\"\n    style=\"width: 100%; height: 500px; border: none; resize: vertical;\"\n    src=\"http://localhost:5000/static-files/lib/notebook-trace-renderer/index.html?trace_id=5276eb031180473cb92d03ceca489d38&amp;experiment_id=1&amp;trace_id=0f2dffe6dfd74fe3b5697a0bffb47658&amp;experiment_id=1&amp;trace_id=35c112a62c334012a612cdca116e9b09&amp;experiment_id=1&amp;trace_id=e30a2c51605b4102b190affb869475f4&amp;experiment_id=1&amp;trace_id=1b74fe5cb6c8453b82c227eb63e11221&amp;experiment_id=1&amp;trace_id=5310ed582ac0431382787b65f63de317&amp;experiment_id=1&amp;trace_id=f713426ecd20413ba2acbb7af0228b2d&amp;experiment_id=1&amp;trace_id=0f44b811a42c41dd9d867b5e12f80044&amp;experiment_id=1&amp;trace_id=543c31429f2d4d7cb4d2284daf66b3f9&amp;experiment_id=1&amp;trace_id=d624a05b74cc43a0a69bc8b400465a69&amp;experiment_id=1&amp;version=3.1.4\"\n  /&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;We will now run the evaluation suite over the entire &lt;code&gt;gate dataset&lt;/code&gt; for all the models in the above list.&lt;/p&gt;\n&lt;div id=\"cell-45\" class=\"cell\" data-execution_count=\"427\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb41\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb41-1\"&gt;&lt;a href=\"#cb41-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;import&lt;/span&gt; pandas &lt;span class=\"im\"&gt;as&lt;/span&gt; pd&lt;/span&gt;\n&lt;span id=\"cb41-2\"&gt;&lt;a href=\"#cb41-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb41-3\"&gt;&lt;a href=\"#cb41-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;tdf &lt;span class=\"op\"&gt;=&lt;/span&gt; pd.DataFrame(&lt;/span&gt;\n&lt;span id=\"cb41-4\"&gt;&lt;a href=\"#cb41-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    [&lt;/span&gt;\n&lt;span id=\"cb41-5\"&gt;&lt;a href=\"#cb41-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        {&lt;span class=\"st\"&gt;&quot;LLM&quot;&lt;/span&gt;: llms[idx].model, &lt;span class=\"st\"&gt;&quot;Evaluation Score&quot;&lt;/span&gt;: candidate[&lt;span class=\"dv\"&gt;0&lt;/span&gt;]}&lt;/span&gt;\n&lt;span id=\"cb41-6\"&gt;&lt;a href=\"#cb41-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;for&lt;/span&gt; idx, candidate &lt;span class=\"kw\"&gt;in&lt;/span&gt; &lt;span class=\"bu\"&gt;enumerate&lt;/span&gt;(results)&lt;/span&gt;\n&lt;span id=\"cb41-7\"&gt;&lt;a href=\"#cb41-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    ]&lt;/span&gt;\n&lt;span id=\"cb41-8\"&gt;&lt;a href=\"#cb41-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;)&lt;/span&gt;\n&lt;span id=\"cb41-9\"&gt;&lt;a href=\"#cb41-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"bu\"&gt;print&lt;/span&gt;(tdf)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;div class=\"cell-output cell-output-stdout\"&gt;\n&lt;pre&gt;&lt;code&gt;                                  LLM  Evaluation Score\n0           openai/gpt-4.1-2025-04-14             62.91\n1      openai/gpt-4.1-mini-2025-04-14             53.64\n2           openai/o4-mini-2025-04-16             62.91\n3  anthropic/claude-sonnet-4-20250514             62.91\n4             gemini/gemini-2.5-flash             63.58\n5        gemini/gemini-2.5-flash-lite             57.62\n6                openai/o3-2025-04-16             70.20\n7    anthropic/claude-opus-4-20250514             68.21\n8               gemini/gemini-2.5-pro             68.21&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;From the above table, we see a few interesting things:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;By default, most of the &lt;strong&gt;reasoning&lt;/strong&gt; models perform better on the “gate” dataset, with OAI O3 performing the best with a score of 70.20%&lt;/li&gt;\n&lt;li&gt;Reasoning models from the remaining two frontier labs score the same i.e 68.21%&lt;/li&gt;\n&lt;li&gt;We also see that the smaller reasoning models perform similar across the labs, with an average score of 63.58%, but at a &lt;strong&gt;significantly lower cost&lt;/strong&gt;.&lt;/li&gt;\n&lt;li&gt;The outputs from sonnet-4 failed the structured output test, but this could be fixed using the DSPy TypingPredictor in the future. More on this later!&lt;/li&gt;\n&lt;li&gt;Finally, while a &lt;em&gt;non-reasoning&lt;/em&gt; model like GPT-4.1 performs as well as the small reasoning models, the price of input/outputs tokens for GPT-4.1 is significantly higher compared to it’s counterparts.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;We will also run the test over the “probe” dataset, before deciding our final list of LLMs based on the performance-to-cost ratio.&lt;/p&gt;\n&lt;/section&gt;\n&lt;section id=\"probe-dataset-results\" class=\"level3\"&gt;\n&lt;h3&gt;Probe Dataset Results&lt;/h3&gt;\n&lt;div id=\"cell-48\" class=\"cell\" data-execution_count=\"428\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb43\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb43-1\"&gt;&lt;a href=\"#cb43-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;import&lt;/span&gt; re&lt;/span&gt;\n&lt;span id=\"cb43-2\"&gt;&lt;a href=\"#cb43-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb43-3\"&gt;&lt;a href=\"#cb43-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;from&lt;/span&gt; dspy.evaluate &lt;span class=\"im\"&gt;import&lt;/span&gt; Evaluate&lt;/span&gt;\n&lt;span id=\"cb43-4\"&gt;&lt;a href=\"#cb43-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb43-5\"&gt;&lt;a href=\"#cb43-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;probe_results &lt;span class=\"op\"&gt;=&lt;/span&gt; []&lt;/span&gt;\n&lt;span id=\"cb43-6\"&gt;&lt;a href=\"#cb43-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb43-7\"&gt;&lt;a href=\"#cb43-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"cf\"&gt;with&lt;/span&gt; mlflow.start_run(run_name&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;probe_dataset_results_full&quot;&lt;/span&gt;) &lt;span class=\"im\"&gt;as&lt;/span&gt; parent_ctx:&lt;/span&gt;\n&lt;span id=\"cb43-8\"&gt;&lt;a href=\"#cb43-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;for&lt;/span&gt; candidate_lm &lt;span class=\"kw\"&gt;in&lt;/span&gt; model_selection_llms:&lt;/span&gt;\n&lt;span id=\"cb43-9\"&gt;&lt;a href=\"#cb43-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        run_name &lt;span class=\"op\"&gt;=&lt;/span&gt; &lt;span class=\"ss\"&gt;f&quot;probe_&lt;/span&gt;&lt;span class=\"sc\"&gt;{&lt;/span&gt;candidate_lm&lt;span class=\"sc\"&gt;.&lt;/span&gt;model&lt;span class=\"sc\"&gt;.&lt;/span&gt;replace(&lt;span class=\"st\"&gt;&#39;/&#39;&lt;/span&gt;, &lt;span class=\"st\"&gt;&#39;_&#39;&lt;/span&gt;)&lt;span class=\"sc\"&gt;}&lt;/span&gt;&lt;span class=\"ss\"&gt;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb43-10\"&gt;&lt;a href=\"#cb43-10\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        sanitized_run_name &lt;span class=\"op\"&gt;=&lt;/span&gt; re.sub(&lt;span class=\"vs\"&gt;r&quot;[^a-zA-Z0-9_\\-]&quot;&lt;/span&gt;, &lt;span class=\"st\"&gt;&quot;_&quot;&lt;/span&gt;, run_name)&lt;/span&gt;\n&lt;span id=\"cb43-11\"&gt;&lt;a href=\"#cb43-11\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;with&lt;/span&gt; mlflow.start_run(run_name&lt;span class=\"op\"&gt;=&lt;/span&gt;sanitized_run_name, nested&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;):&lt;/span&gt;\n&lt;span id=\"cb43-12\"&gt;&lt;a href=\"#cb43-12\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            current_evaluator &lt;span class=\"op\"&gt;=&lt;/span&gt; Evaluate(&lt;/span&gt;\n&lt;span id=\"cb43-13\"&gt;&lt;a href=\"#cb43-13\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                devset&lt;span class=\"op\"&gt;=&lt;/span&gt;probe_examples,&lt;/span&gt;\n&lt;span id=\"cb43-14\"&gt;&lt;a href=\"#cb43-14\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                num_threads&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"dv\"&gt;32&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb43-15\"&gt;&lt;a href=\"#cb43-15\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                display_progress&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb43-16\"&gt;&lt;a href=\"#cb43-16\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                &lt;span class=\"co\"&gt;# display_table=True,&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb43-17\"&gt;&lt;a href=\"#cb43-17\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                &lt;span class=\"co\"&gt;# provide_traceback=True,&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb43-18\"&gt;&lt;a href=\"#cb43-18\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                return_all_scores&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb43-19\"&gt;&lt;a href=\"#cb43-19\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                return_outputs&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb43-20\"&gt;&lt;a href=\"#cb43-20\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            )&lt;/span&gt;\n&lt;span id=\"cb43-21\"&gt;&lt;a href=\"#cb43-21\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            &lt;span class=\"cf\"&gt;with&lt;/span&gt; dspy.context(lm&lt;span class=\"op\"&gt;=&lt;/span&gt;candidate_lm) &lt;span class=\"im\"&gt;as&lt;/span&gt; ctx:&lt;/span&gt;\n&lt;span id=\"cb43-22\"&gt;&lt;a href=\"#cb43-22\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                current_result &lt;span class=\"op\"&gt;=&lt;/span&gt; current_evaluator(&lt;/span&gt;\n&lt;span id=\"cb43-23\"&gt;&lt;a href=\"#cb43-23\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                    TurnSolver(reasoning_lm&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;), metric&lt;span class=\"op\"&gt;=&lt;/span&gt;turn_em_metric&lt;/span&gt;\n&lt;span id=\"cb43-24\"&gt;&lt;a href=\"#cb43-24\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                )&lt;/span&gt;\n&lt;span id=\"cb43-25\"&gt;&lt;a href=\"#cb43-25\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                probe_results.append(current_result)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;div class=\"cell-output cell-output-stdout\"&gt;\n&lt;pre&gt;&lt;code&gt;Average Metric: 150.00 / 200 (75.0%): 100%|██████████| 200/200 [00:02&lt;00:00, 69.58it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/6cccc46d61ae4365b9921586ed0ef193\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run probe_openai_gpt-4_1-2025-04-14 at: http://localhost:5000/#/experiments/1/runs/3b839cca27264ffaaace2643e23975c7\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 130.00 / 200 (65.0%): 100%|██████████| 200/200 [00:03&lt;00:00, 60.95it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/8c371daf948343eb8a18370f1756a850\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run probe_openai_gpt-4_1-mini-2025-04-14 at: http://localhost:5000/#/experiments/1/runs/dcfce79bf36446929e2924273e0a2db5\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 79.00 / 102 (77.5%):  50%|█████     | 101/200 [00:02&lt;00:02, 36.80it/s]Average Metric: 122.00 / 157 (77.7%):  78%|███████▊  | 156/200 [00:03&lt;00:00, 48.01it/s]Average Metric: 157.00 / 200 (78.5%): 100%|██████████| 200/200 [00:03&lt;00:00, 53.12it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/758a3867a75541c2a3eab91ac6faf42b\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run probe_openai_o4-mini-2025-04-16 at: http://localhost:5000/#/experiments/1/runs/aafc2286d5ab4819aa467440328eed77\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 150.00 / 200 (75.0%): 100%|██████████| 200/200 [00:04&lt;00:00, 49.31it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/3b6644b108a241f99e8dd0e2e1d051fa\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run probe_anthropic_claude-sonnet-4-20250514 at: http://localhost:5000/#/experiments/1/runs/3b4f42a464cd4e3496f4b1755decd7ce\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 24.00 / 31 (77.4%):  15%|█▌        | 30/200 [00:00&lt;00:03, 50.11it/s]Average Metric: 148.00 / 200 (74.0%): 100%|██████████| 200/200 [00:03&lt;00:00, 51.35it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/99af33e15c234269aa69333eebecb916\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run probe_gemini_gemini-2_5-flash at: http://localhost:5000/#/experiments/1/runs/7d11aa5ec28841adafa6b0e66733e13d\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n  0%|          | 0/200 [00:00&lt;?, ?it/s]Average Metric: 11.00 / 16 (68.8%):   8%|▊         | 15/200 [00:00&lt;00:04, 41.77it/s]Average Metric: 18.00 / 24 (75.0%):  12%|█▏        | 23/200 [00:00&lt;00:03, 50.59it/s]Average Metric: 19.00 / 26 (73.1%):  12%|█▎        | 25/200 [00:00&lt;00:03, 50.59it/s]Average Metric: 21.00 / 31 (67.7%):  15%|█▌        | 30/200 [00:00&lt;00:02, 58.14it/s]Average Metric: 22.00 / 33 (66.7%):  16%|█▌        | 32/200 [00:00&lt;00:02, 58.14it/s]Average Metric: 27.00 / 42 (64.3%):  20%|██        | 41/200 [00:01&lt;00:04, 33.61it/s]Average Metric: 32.00 / 53 (60.4%):  26%|██▌       | 52/200 [00:01&lt;00:03, 43.63it/s]Average Metric: 36.00 / 61 (59.0%):  30%|███       | 60/200 [00:01&lt;00:02, 49.53it/s]Average Metric: 39.00 / 65 (60.0%):  32%|███▏      | 64/200 [00:01&lt;00:02, 60.32it/s]Average Metric: 39.00 / 66 (59.1%):  32%|███▎      | 65/200 [00:01&lt;00:02, 60.32it/s]Average Metric: 41.00 / 68 (60.3%):  34%|███▎      | 67/200 [00:01&lt;00:02, 60.32it/s]Average Metric: 54.00 / 84 (64.3%):  42%|████▏     | 83/200 [00:01&lt;00:01, 69.98it/s]Average Metric: 60.00 / 93 (64.5%):  46%|████▌     | 92/200 [00:01&lt;00:01, 70.30it/s]Average Metric: 62.00 / 96 (64.6%):  48%|████▊     | 95/200 [00:01&lt;00:01, 70.30it/s]Average Metric: 62.00 / 97 (63.9%):  48%|████▊     | 96/200 [00:01&lt;00:01, 70.30it/s]Average Metric: 62.00 / 98 (63.3%):  49%|████▉     | 98/200 [00:01&lt;00:01, 74.90it/s]Average Metric: 63.00 / 99 (63.6%):  49%|████▉     | 98/200 [00:01&lt;00:01, 74.90it/s]Average Metric: 64.00 / 102 (62.7%):  50%|█████     | 101/200 [00:01&lt;00:01, 74.90it/s]Average Metric: 65.00 / 103 (63.1%):  51%|█████     | 102/200 [00:01&lt;00:01, 74.90it/s]Average Metric: 73.00 / 115 (63.5%):  57%|█████▋    | 114/200 [00:02&lt;00:01, 56.16it/s]Average Metric: 76.00 / 119 (63.9%):  59%|█████▉    | 118/200 [00:02&lt;00:01, 56.16it/s]Average Metric: 78.00 / 123 (63.4%):  61%|██████    | 122/200 [00:02&lt;00:01, 53.09it/s]Average Metric: 82.00 / 129 (63.6%):  64%|██████▍   | 128/200 [00:02&lt;00:01, 45.61it/s]Average Metric: 82.00 / 130 (63.1%):  64%|██████▍   | 129/200 [00:02&lt;00:01, 45.61it/s]Average Metric: 82.00 / 134 (61.2%):  66%|██████▋   | 133/200 [00:02&lt;00:01, 46.87it/s]Average Metric: 83.00 / 135 (61.5%):  67%|██████▋   | 134/200 [00:02&lt;00:01, 46.87it/s]Average Metric: 99.00 / 159 (62.3%):  80%|███████▉  | 159/200 [00:03&lt;00:00, 46.30it/s]Average Metric: 104.00 / 165 (63.0%):  82%|████████▏ | 164/200 [00:03&lt;00:01, 35.61it/s]Average Metric: 105.00 / 166 (63.3%):  82%|████████▎ | 165/200 [00:03&lt;00:00, 35.61it/s]Average Metric: 105.00 / 167 (62.9%):  83%|████████▎ | 166/200 [00:03&lt;00:00, 35.61it/s]Average Metric: 128.00 / 200 (64.0%): 100%|██████████| 200/200 [00:03&lt;00:00, 52.47it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/20a1fa6983f349a0888cca2696bcae76\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run probe_gemini_gemini-2_5-flash-lite at: http://localhost:5000/#/experiments/1/runs/0c5ca9e2a1e84041b2937cd264727d94\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 48.00 / 61 (78.7%):  30%|███       | 60/200 [00:01&lt;00:03, 45.14it/s]Average Metric: 66.00 / 83 (79.5%):  41%|████      | 82/200 [00:01&lt;00:01, 76.08it/s]Average Metric: 162.00 / 200 (81.0%): 100%|██████████| 200/200 [00:03&lt;00:00, 52.77it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/513ceb4b58c44816894f0196c05f1d27\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run probe_openai_o3-2025-04-16 at: http://localhost:5000/#/experiments/1/runs/07039e1be0154904a14bf5b215b36bfb\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 160.00 / 200 (80.0%): 100%|██████████| 200/200 [00:04&lt;00:00, 46.05it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/fa3840a6fc86489195ff4b93ba3525d3\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run probe_anthropic_claude-opus-4-20250514 at: http://localhost:5000/#/experiments/1/runs/242a848220a34df18fefcd752c6b1edf\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 157.00 / 200 (78.5%): 100%|██████████| 200/200 [00:20&lt;00:00,  9.94it/s]\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/28468bf07dea42438e3b2835cf8bd5d1\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run probe_gemini_gemini-2_5-pro at: http://localhost:5000/#/experiments/1/runs/b9decff973db41ce9863d93d41eff7c3\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run probe_dataset_results_full at: http://localhost:5000/#/experiments/1/runs/7f0b1ff0f4e94143b9fb5509ed6319be\n🧪 View experiment at: http://localhost:5000/#/experiments/1&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-stderr\"&gt;\n&lt;pre&gt;&lt;code&gt;2025/07/28 18:22:15 INFO dspy.evaluate.evaluate: Average Metric: 150.0 / 200 (75.0%)\n2025/07/28 18:22:18 INFO dspy.evaluate.evaluate: Average Metric: 130.0 / 200 (65.0%)\n2025/07/28 18:22:20 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:21 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:22 INFO dspy.evaluate.evaluate: Average Metric: 157.0 / 200 (78.5%)\n2025/07/28 18:22:26 INFO dspy.evaluate.evaluate: Average Metric: 150.0 / 200 (75.0%)\n2025/07/28 18:22:27 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:30 INFO dspy.evaluate.evaluate: Average Metric: 148.0 / 200 (74.0%)\n2025/07/28 18:22:30 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:30 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:30 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:30 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:31 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:31 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:31 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:31 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:31 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:31 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:31 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:31 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:31 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:31 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:31 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:31 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:31 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:32 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:32 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:32 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:32 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:32 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:32 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:32 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:32 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:32 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:32 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:32 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:32 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:32 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:32 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:32 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:32 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:32 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:32 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:32 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:32 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:33 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:33 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:33 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:33 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:33 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:33 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:33 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:33 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:33 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:33 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:33 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:33 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:34 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:34 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:34 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:34 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:34 INFO dspy.evaluate.evaluate: Average Metric: 128.0 / 200 (64.0%)\n2025/07/28 18:22:35 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:36 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:38 INFO dspy.evaluate.evaluate: Average Metric: 162.0 / 200 (81.0%)\n2025/07/28 18:22:43 INFO dspy.evaluate.evaluate: Average Metric: 160.0 / 200 (80.0%)\n2025/07/28 18:23:03 INFO dspy.evaluate.evaluate: Average Metric: 157.0 / 200 (78.5%)&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n\n&lt;div&gt;\n  &lt;style scoped&gt;\n  button {\n    border: none;\n    border-radius: 4px;\n    background-color: rgb(34, 114, 180);\n    font-family: -apple-system, \"system-ui\", \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial;\n    font-size: 13px;\n    color: white;\n    margin-top: 8px;\n    margin-bottom: 8px;\n    padding: 8px 16px;\n    cursor: pointer;\n  }\n  button:hover {\n    background-color: rgb(66, 153, 224);\n  }\n  &lt;/style&gt;\n  &lt;button\n    onclick=\"\n        const display = this.nextElementSibling.style.display;\n        const isCollapsed = display === 'none';\n        this.nextElementSibling.style.display = isCollapsed ? null : 'none';\n\n        const verb = isCollapsed ? 'Collapse' : 'Expand';\n        this.innerText = `${verb} MLflow Trace`;\n    \"\n  &gt;Collapse MLflow Trace&lt;/button&gt;\n  &lt;iframe\n    id=\"trace-renderer\"\n    style=\"width: 100%; height: 500px; border: none; resize: vertical;\"\n    src=\"http://localhost:5000/static-files/lib/notebook-trace-renderer/index.html?trace_id=c5d368d7011e416bb8a6a45fb5757cc5&amp;experiment_id=1&amp;trace_id=c838fe37a1554a709c48aa7d91df4051&amp;experiment_id=1&amp;trace_id=e3e3b12245c145609fbd9f2ea7a38b35&amp;experiment_id=1&amp;trace_id=f05d4d95db7d4aceb8b4158a8cf0cfb0&amp;experiment_id=1&amp;trace_id=e996a1553f3b4c7b97af98bc3665f7aa&amp;experiment_id=1&amp;trace_id=02d784d19b414f16bc36df2f6cace3af&amp;experiment_id=1&amp;trace_id=a4955baaaf944dbbadcd4f05cb1c10aa&amp;experiment_id=1&amp;trace_id=fcaf8824996d4c7eab4d03bd198f2c33&amp;experiment_id=1&amp;trace_id=73db052bdbe1418eb46bc6ec442df95e&amp;experiment_id=1&amp;trace_id=66a0910a43384a9f993773961116b241&amp;experiment_id=1&amp;version=3.1.4\"\n  /&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-49\" class=\"cell\" data-execution_count=\"430\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb46\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb46-1\"&gt;&lt;a href=\"#cb46-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;import&lt;/span&gt; pandas &lt;span class=\"im\"&gt;as&lt;/span&gt; pd&lt;/span&gt;\n&lt;span id=\"cb46-2\"&gt;&lt;a href=\"#cb46-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb46-3\"&gt;&lt;a href=\"#cb46-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;tdf &lt;span class=\"op\"&gt;=&lt;/span&gt; pd.DataFrame(&lt;/span&gt;\n&lt;span id=\"cb46-4\"&gt;&lt;a href=\"#cb46-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    [&lt;/span&gt;\n&lt;span id=\"cb46-5\"&gt;&lt;a href=\"#cb46-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        {&lt;span class=\"st\"&gt;&quot;LLM&quot;&lt;/span&gt;: llms[idx].model, &lt;span class=\"st\"&gt;&quot;Evaluation Score&quot;&lt;/span&gt;: candidate[&lt;span class=\"dv\"&gt;0&lt;/span&gt;]}&lt;/span&gt;\n&lt;span id=\"cb46-6\"&gt;&lt;a href=\"#cb46-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;for&lt;/span&gt; idx, candidate &lt;span class=\"kw\"&gt;in&lt;/span&gt; &lt;span class=\"bu\"&gt;enumerate&lt;/span&gt;(probe_results)&lt;/span&gt;\n&lt;span id=\"cb46-7\"&gt;&lt;a href=\"#cb46-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    ]&lt;/span&gt;\n&lt;span id=\"cb46-8\"&gt;&lt;a href=\"#cb46-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;)&lt;/span&gt;\n&lt;span id=\"cb46-9\"&gt;&lt;a href=\"#cb46-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"bu\"&gt;print&lt;/span&gt;(tdf)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;div class=\"cell-output cell-output-stdout\"&gt;\n&lt;pre&gt;&lt;code&gt;                                  LLM  Evaluation Score\n0           openai/gpt-4.1-2025-04-14              75.0\n1      openai/gpt-4.1-mini-2025-04-14              65.0\n2           openai/o4-mini-2025-04-16              78.5\n3  anthropic/claude-sonnet-4-20250514              75.0\n4             gemini/gemini-2.5-flash              74.0\n5        gemini/gemini-2.5-flash-lite              64.0\n6                openai/o3-2025-04-16              81.0\n7    anthropic/claude-opus-4-20250514              80.0\n8               gemini/gemini-2.5-pro              78.5&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;From the above, we see that:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;Similar to the gate-only results, the &lt;em&gt;probe&lt;/em&gt; dataset results should that OAI o3 performs the best, with 81% accuracy.&lt;/li&gt;\n&lt;li&gt;Anthropic Opus is a close second, with 80% accuracy. However, it is &lt;strong&gt;significantly&lt;/strong&gt; more expensive, at $15/Million tokens 😱&lt;/li&gt;\n&lt;li&gt;Google’s Frontier model Gemini-pro is third, with 78% accuracy.&lt;/li&gt;\n&lt;li&gt;We see that the smaller reasoning models do quite well, with o4-mini getting around 78.5% accuracy, Anthropic sonnet-4 around 75% accuracy, and Google Gemini 2.5-flash at 74%. Note that, even here, Anthropic’s costs are significantly higher than the other models.&lt;/li&gt;\n&lt;li&gt;We also see that the “mini/lite” version of models provided by Google and OAI have similar performance, around ~65%.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Given the above insights, we can now select our models:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;&lt;strong&gt;Anthropic Cost&lt;/strong&gt;\n&lt;ul&gt;\n&lt;li&gt;All Anthropic models are significantly more expensive than the competitors, and have a performance on par or below the competetiors.&lt;/li&gt;\n&lt;li&gt;Hence, from our final list, we will exclude Anthropic models.&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Frontier Model Cost&lt;/strong&gt;\n&lt;ul&gt;\n&lt;li&gt;Frontier models are generally quite expensive.&lt;/li&gt;\n&lt;li&gt;From our tests, we see that OAI o3 has the best performace, with Google Gemini 2.5-pro having a performance on or below o3.&lt;/li&gt;\n&lt;li&gt;To save costs, we will keep only one frontier model in the final list i.e o3&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Smaller Reasoning Models&lt;/strong&gt;\n&lt;ul&gt;\n&lt;li&gt;We also see the following models showing promising results across the board:\n&lt;ul&gt;\n&lt;li&gt;o4-mini&lt;/li&gt;\n&lt;li&gt;gemini-2.5-flash&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Non reaosning models&lt;/strong&gt;\n&lt;ul&gt;\n&lt;li&gt;GPT-4.1 seems to perform as well as the smaller reasoning models, but it is about 50% more expensive($2/Million input tokens).&lt;/li&gt;\n&lt;li&gt;Given that we already plan to include models with similar reasoning capabilities, we will exclude GPT-4.1 from our final list.&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Small models&lt;/strong&gt;\n&lt;ul&gt;\n&lt;li&gt;Currently, the small models variants of all models are significantly behind the larger models.&lt;/li&gt;\n&lt;li&gt;While they are cost effective, and likely their performance can be increased with improvements to the prompts, fine-tuning, etc., we will skip this models for now due to time constraits.&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;p&gt;Hence, our final list of models will be:&lt;/p&gt;\n&lt;ul&gt;\n&lt;li&gt;o3&lt;/li&gt;\n&lt;li&gt;o4-mini&lt;/li&gt;\n&lt;li&gt;gemini-2.5-flash&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/section&gt;\n&lt;section id=\"error-analysis\" class=\"level3\"&gt;\n&lt;h3&gt;Error Analysis&lt;/h3&gt;\n&lt;p&gt;Given that we have the results for the gate and probe datasets, we can perform some quick preliminary error analysis to understand the performance of the models on these datasets.&lt;/p&gt;\n&lt;p&gt;We will restrict our analysis to the final list of models(o3, o4-mini and gemini-2.5-flash).&lt;/p&gt;\n&lt;div id=\"cell-54\" class=\"cell\" data-execution_count=\"431\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb48\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb48-1\"&gt;&lt;a href=\"#cb48-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;final_selected_models &lt;span class=\"op\"&gt;=&lt;/span&gt; [&lt;/span&gt;\n&lt;span id=\"cb48-2\"&gt;&lt;a href=\"#cb48-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    lm_oai_o4_mini,&lt;/span&gt;\n&lt;span id=\"cb48-3\"&gt;&lt;a href=\"#cb48-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    lm_gemini_flash_2_5,&lt;/span&gt;\n&lt;span id=\"cb48-4\"&gt;&lt;a href=\"#cb48-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    lm_oai_o3,&lt;/span&gt;\n&lt;span id=\"cb48-5\"&gt;&lt;a href=\"#cb48-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-55\" class=\"cell\" data-execution_count=\"432\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb49\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb49-1\"&gt;&lt;a href=\"#cb49-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;gate_and_probe_results &lt;span class=\"op\"&gt;=&lt;/span&gt; results &lt;span class=\"op\"&gt;+&lt;/span&gt; probe_results&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-56\" class=\"cell\" data-execution_count=\"433\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb50\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb50-1\"&gt;&lt;a href=\"#cb50-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"bu\"&gt;len&lt;/span&gt;(gate_and_probe_results)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;div class=\"cell-output cell-output-display\" data-execution_count=\"433\"&gt;\n&lt;pre&gt;&lt;code&gt;18&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-57\" class=\"cell\" data-execution_count=\"437\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb52\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb52-1\"&gt;&lt;a href=\"#cb52-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;selected_records &lt;span class=\"op\"&gt;=&lt;/span&gt; []&lt;/span&gt;\n&lt;span id=\"cb52-2\"&gt;&lt;a href=\"#cb52-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"cf\"&gt;for&lt;/span&gt; idx, record &lt;span class=\"kw\"&gt;in&lt;/span&gt; &lt;span class=\"bu\"&gt;enumerate&lt;/span&gt;(gate_and_probe_results):&lt;/span&gt;\n&lt;span id=\"cb52-3\"&gt;&lt;a href=\"#cb52-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"co\"&gt;# Hack: Dirty hack to get results our selected LLMs. Sorry!&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb52-4\"&gt;&lt;a href=\"#cb52-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;if&lt;/span&gt; idx &lt;span class=\"kw\"&gt;in&lt;/span&gt; [&lt;span class=\"dv\"&gt;2&lt;/span&gt;, &lt;span class=\"dv\"&gt;4&lt;/span&gt;, &lt;span class=\"dv\"&gt;6&lt;/span&gt;, &lt;span class=\"dv\"&gt;11&lt;/span&gt;, &lt;span class=\"dv\"&gt;13&lt;/span&gt;, &lt;span class=\"dv\"&gt;15&lt;/span&gt;]:&lt;/span&gt;\n&lt;span id=\"cb52-5\"&gt;&lt;a href=\"#cb52-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;for&lt;/span&gt; example, prediction, score &lt;span class=\"kw\"&gt;in&lt;/span&gt; record[&lt;span class=\"dv\"&gt;1&lt;/span&gt;]:&lt;/span&gt;\n&lt;span id=\"cb52-6\"&gt;&lt;a href=\"#cb52-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            model_idx &lt;span class=\"op\"&gt;=&lt;/span&gt; idx &lt;span class=\"cf\"&gt;if&lt;/span&gt; idx &lt;span class=\"op\"&gt;&lt;&lt;/span&gt; &lt;span class=\"dv\"&gt;9&lt;/span&gt; &lt;span class=\"cf\"&gt;else&lt;/span&gt; idx &lt;span class=\"op\"&gt;-&lt;/span&gt; &lt;span class=\"dv\"&gt;9&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb52-7\"&gt;&lt;a href=\"#cb52-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            example_copy &lt;span class=\"op\"&gt;=&lt;/span&gt; deepcopy(example)&lt;/span&gt;\n&lt;span id=\"cb52-8\"&gt;&lt;a href=\"#cb52-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            example_copy[&lt;span class=\"st\"&gt;&quot;ground_truth_answer&quot;&lt;/span&gt;] &lt;span class=\"op\"&gt;=&lt;/span&gt; example_copy[&lt;span class=\"st\"&gt;&quot;answer&quot;&lt;/span&gt;]&lt;/span&gt;\n&lt;span id=\"cb52-9\"&gt;&lt;a href=\"#cb52-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            &lt;span class=\"kw\"&gt;del&lt;/span&gt; example_copy[&lt;span class=\"st\"&gt;&quot;answer&quot;&lt;/span&gt;]&lt;/span&gt;\n&lt;span id=\"cb52-10\"&gt;&lt;a href=\"#cb52-10\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb52-11\"&gt;&lt;a href=\"#cb52-11\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            selected_records.append(&lt;/span&gt;\n&lt;span id=\"cb52-12\"&gt;&lt;a href=\"#cb52-12\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                {&lt;/span&gt;\n&lt;span id=\"cb52-13\"&gt;&lt;a href=\"#cb52-13\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                    &lt;span class=\"st\"&gt;&quot;model_name&quot;&lt;/span&gt;: model_selection_llms[model_idx].model,&lt;/span&gt;\n&lt;span id=\"cb52-14\"&gt;&lt;a href=\"#cb52-14\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                    &lt;span class=\"st\"&gt;&quot;turn_em_metric_score&quot;&lt;/span&gt;: score,&lt;/span&gt;\n&lt;span id=\"cb52-15\"&gt;&lt;a href=\"#cb52-15\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                    &lt;span class=\"op\"&gt;**&lt;/span&gt;example_copy.toDict(),&lt;/span&gt;\n&lt;span id=\"cb52-16\"&gt;&lt;a href=\"#cb52-16\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                    &lt;span class=\"op\"&gt;**&lt;/span&gt;prediction.toDict(),&lt;/span&gt;\n&lt;span id=\"cb52-17\"&gt;&lt;a href=\"#cb52-17\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                }&lt;/span&gt;\n&lt;span id=\"cb52-18\"&gt;&lt;a href=\"#cb52-18\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            )&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-58\" class=\"cell\" data-execution_count=\"441\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb53\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb53-1\"&gt;&lt;a href=\"#cb53-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;selected_records[&lt;span class=\"dv\"&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;div class=\"cell-output cell-output-display\" data-execution_count=\"441\"&gt;\n&lt;pre&gt;&lt;code&gt;{&#39;model_name&#39;: &#39;openai/o4-mini-2025-04-16&#39;,\n &#39;turn_em_metric_score&#39;: 1.0,\n &#39;conversation_context&#39;: &#39;None&#39;,\n &#39;evidence_snippets&#39;: &quot;[PRE]\\nentergy corporation and subsidiaries management&#39;s financial discussion and analysis refer to 201cselected financial data - five-year comparison of entergy corporation and subsidiaries 201d which accompanies entergy corporation 2019s financial statements in this report for further information with respect to operating statistics . in november 2007 the board approved a plan to pursue a separation of entergy 2019s non-utility nuclear business from entergy through a spin-off of the business to entergy shareholders . in april 2010 , entergy announced that it planned to unwind the business infrastructure associated with the proposed spin-off transaction . as a result of the plan to unwind the business infrastructure , entergy recorded expenses in 2010 for the write-off of certain capitalized costs incurred in connection with the planned spin-off transaction . these costs are discussed in more detail below and throughout this section . net revenue utility following is an analysis of the change in net revenue comparing 2010 to 2009 . amount ( in millions ) .\\n[/PRE]\\n[POST]\\nthe volume/weather variance is primarily due to an increase of 8362 gwh , or 8% ( 8 % ) , in billed electricity usage in all retail sectors , including the effect on the residential sector of colder weather in the first quarter 2010 compared to 2009 and warmer weather in the second and third quarters 2010 compared to 2009 . the industrial sector reflected strong sales growth on continuing signs of economic recovery . the improvement in this sector was primarily driven by inventory restocking and strong exports with the chemicals , refining , and miscellaneous manufacturing sectors leading the improvement . the retail electric price variance is primarily due to : increases in the formula rate plan riders at entergy gulf states louisiana effective november 2009 , january 2010 , and september 2010 , at entergy louisiana effective november 2009 , and at entergy mississippi effective july 2009 ; a base rate increase at entergy arkansas effective july 2010 ; rate actions at entergy texas , including base rate increases effective in may and august 2010 ; a formula rate plan provision of $ 16.6 million recorded in the third quarter 2009 for refunds that were made to customers in accordance with settlements approved by the lpsc ; and the recovery in 2009 by entergy arkansas of 2008 extraordinary storm costs , as approved by the apsc , which ceased in january 2010 . the recovery of storm costs is offset in other operation and maintenance expenses . see note 2 to the financial statements for further discussion of the proceedings referred to above. .\\n[/POST]&quot;,\n &#39;table&#39;: &#39;| Row | 2009 net revenue | volume/weather | retail electric price | provision for regulatory proceedings | rough production cost equalization | ano decommissioning trust | fuel recovery | other | 2010 net revenue |\\n|---|---|---|---|---|---|---|---|---|---|\\n| amount ( in millions ) | 4694.0 | 231.0 | 137.0 | 26.0 | 19.0 | -24.0 | -44.0 | 12.0 | 5051.0 |&#39;,\n &#39;question&#39;: &#39;what was the difference in net revenue between 2009 and 2010?&#39;,\n &#39;id&#39;: &#39;Single_ETR/2011/page_22.pdf-3&#39;,\n &#39;doc_pre_text&#39;: &quot;entergy corporation and subsidiaries management&#39;s financial discussion and analysis refer to 201cselected financial data - five-year comparison of entergy corporation and subsidiaries 201d which accompanies entergy corporation 2019s financial statements in this report for further information with respect to operating statistics . in november 2007 the board approved a plan to pursue a separation of entergy 2019s non-utility nuclear business from entergy through a spin-off of the business to entergy shareholders . in april 2010 , entergy announced that it planned to unwind the business infrastructure associated with the proposed spin-off transaction . as a result of the plan to unwind the business infrastructure , entergy recorded expenses in 2010 for the write-off of certain capitalized costs incurred in connection with the planned spin-off transaction . these costs are discussed in more detail below and throughout this section . net revenue utility following is an analysis of the change in net revenue comparing 2010 to 2009 . amount ( in millions ) .&quot;,\n &#39;doc_post_text&#39;: &#39;the volume/weather variance is primarily due to an increase of 8362 gwh , or 8% ( 8 % ) , in billed electricity usage in all retail sectors , including the effect on the residential sector of colder weather in the first quarter 2010 compared to 2009 and warmer weather in the second and third quarters 2010 compared to 2009 . the industrial sector reflected strong sales growth on continuing signs of economic recovery . the improvement in this sector was primarily driven by inventory restocking and strong exports with the chemicals , refining , and miscellaneous manufacturing sectors leading the improvement . the retail electric price variance is primarily due to : increases in the formula rate plan riders at entergy gulf states louisiana effective november 2009 , january 2010 , and september 2010 , at entergy louisiana effective november 2009 , and at entergy mississippi effective july 2009 ; a base rate increase at entergy arkansas effective july 2010 ; rate actions at entergy texas , including base rate increases effective in may and august 2010 ; a formula rate plan provision of $ 16.6 million recorded in the third quarter 2009 for refunds that were made to customers in accordance with settlements approved by the lpsc ; and the recovery in 2009 by entergy arkansas of 2008 extraordinary storm costs , as approved by the apsc , which ceased in january 2010 . the recovery of storm costs is offset in other operation and maintenance expenses . see note 2 to the financial statements for further discussion of the proceedings referred to above. .&#39;,\n &#39;doc_table&#39;: {&#39;amount ( in millions )&#39;: {&#39;2009 net revenue&#39;: 4694.0,\n   &#39;volume/weather&#39;: 231.0,\n   &#39;retail electric price&#39;: 137.0,\n   &#39;provision for regulatory proceedings&#39;: 26.0,\n   &#39;rough production cost equalization&#39;: 19.0,\n   &#39;ano decommissioning trust&#39;: -24.0,\n   &#39;fuel recovery&#39;: -44.0,\n   &#39;other&#39;: 12.0,\n   &#39;2010 net revenue&#39;: 5051.0}},\n &#39;dialogue_conv_questions&#39;: [&#39;what was the difference in net revenue between 2009 and 2010?&#39;,\n  &#39;and the specific value for 2009 again?&#39;,\n  &#39;so what was the percentage change during this time?&#39;],\n &#39;dialogue_conv_answers&#39;: [&#39;357&#39;, &#39;4694&#39;, &#39;7.61%&#39;],\n &#39;dialogue_turn_program&#39;: [&#39;subtract(5051, 4694)&#39;,\n  &#39;4694&#39;,\n  &#39;subtract(5051, 4694), divide(#0, 4694)&#39;],\n &#39;dialogue_executed_answers&#39;: [357.0, 4694.0, 0.07605],\n &#39;dialogue_qa_split&#39;: [False, False, False],\n &#39;features_num_dialogue_turns&#39;: 3,\n &#39;features_has_type2_question&#39;: False,\n &#39;features_has_duplicate_columns&#39;: False,\n &#39;features_has_non_numeric_values&#39;: False,\n &#39;ground_truth_answer&#39;: 357.0,\n &#39;reasoning&#39;: &#39;The table shows 2009 net revenue of 4,694.0 million and 2010 net revenue of 5,051.0 million. The difference is 5,051.0 minus 4,694.0, which equals 357.0 million.&#39;,\n &#39;ops&#39;: &#39;subtract(const_5051.0, const_4694.0)&#39;,\n &#39;answer&#39;: &#39;357.0&#39;}&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-59\" class=\"cell\" data-execution_count=\"462\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb55\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb55-1\"&gt;&lt;a href=\"#cb55-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;from&lt;/span&gt; typing &lt;span class=\"im\"&gt;import&lt;/span&gt; Literal&lt;/span&gt;\n&lt;span id=\"cb55-2\"&gt;&lt;a href=\"#cb55-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;import&lt;/span&gt; dspy&lt;/span&gt;\n&lt;span id=\"cb55-3\"&gt;&lt;a href=\"#cb55-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb55-4\"&gt;&lt;a href=\"#cb55-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb55-5\"&gt;&lt;a href=\"#cb55-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"kw\"&gt;class&lt;/span&gt; AssessmentSignature(dspy.Signature):&lt;/span&gt;\n&lt;span id=\"cb55-6\"&gt;&lt;a href=\"#cb55-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"co\"&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb55-7\"&gt;&lt;a href=\"#cb55-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    Categorize model predictions by comparing them to ground truth, context, and evidence.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb55-8\"&gt;&lt;a href=\"#cb55-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    Assign a specific error type or OK label, with concise justification, based on rubric.&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb55-9\"&gt;&lt;a href=\"#cb55-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb55-10\"&gt;&lt;a href=\"#cb55-10\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    When comparing numerical answers, always allow a tolerance of 1e-2. For eg: If the question asks for a percentage, but the ground_truth_answer is given as a decimal, the assessment_answer label will be GROUND_TRUTH_INCORRECT&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb55-11\"&gt;&lt;a href=\"#cb55-11\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;    &quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb55-12\"&gt;&lt;a href=\"#cb55-12\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb55-13\"&gt;&lt;a href=\"#cb55-13\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    ground_truth_answer: &lt;span class=\"bu\"&gt;str&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.InputField(&lt;/span&gt;\n&lt;span id=\"cb55-14\"&gt;&lt;a href=\"#cb55-14\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;The correct answer as per the ground truth data.&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb55-15\"&gt;&lt;a href=\"#cb55-15\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    )&lt;/span&gt;\n&lt;span id=\"cb55-16\"&gt;&lt;a href=\"#cb55-16\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    table: &lt;span class=\"bu\"&gt;str&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.InputField(&lt;/span&gt;\n&lt;span id=\"cb55-17\"&gt;&lt;a href=\"#cb55-17\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;Tabular data (as string) relevant to the question and answer.&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb55-18\"&gt;&lt;a href=\"#cb55-18\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    )&lt;/span&gt;\n&lt;span id=\"cb55-19\"&gt;&lt;a href=\"#cb55-19\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    conversation_context: &lt;span class=\"bu\"&gt;str&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.InputField(&lt;/span&gt;\n&lt;span id=\"cb55-20\"&gt;&lt;a href=\"#cb55-20\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;Previous dialogue turns or context for the current question.&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb55-21\"&gt;&lt;a href=\"#cb55-21\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    )&lt;/span&gt;\n&lt;span id=\"cb55-22\"&gt;&lt;a href=\"#cb55-22\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    evidence_snippets: &lt;span class=\"bu\"&gt;str&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.InputField(&lt;/span&gt;\n&lt;span id=\"cb55-23\"&gt;&lt;a href=\"#cb55-23\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;Text snippets from the source document supporting the answer.&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb55-24\"&gt;&lt;a href=\"#cb55-24\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    )&lt;/span&gt;\n&lt;span id=\"cb55-25\"&gt;&lt;a href=\"#cb55-25\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    question: &lt;span class=\"bu\"&gt;str&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.InputField(desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;The question being answered by the model.&quot;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb55-26\"&gt;&lt;a href=\"#cb55-26\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb55-27\"&gt;&lt;a href=\"#cb55-27\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    predicted_reasoning: &lt;span class=\"bu\"&gt;str&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.InputField(&lt;/span&gt;\n&lt;span id=\"cb55-28\"&gt;&lt;a href=\"#cb55-28\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;Model&#39;s step-by-step explanation or justification for its answer.&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb55-29\"&gt;&lt;a href=\"#cb55-29\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    )&lt;/span&gt;\n&lt;span id=\"cb55-30\"&gt;&lt;a href=\"#cb55-30\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    predicted_ops: &lt;span class=\"bu\"&gt;str&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.InputField(&lt;/span&gt;\n&lt;span id=\"cb55-31\"&gt;&lt;a href=\"#cb55-31\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;Operations or programmatic steps the model used to derive its answer.&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb55-32\"&gt;&lt;a href=\"#cb55-32\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    )&lt;/span&gt;\n&lt;span id=\"cb55-33\"&gt;&lt;a href=\"#cb55-33\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    predicted_answer: &lt;span class=\"bu\"&gt;str&lt;/span&gt; &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.InputField(&lt;/span&gt;\n&lt;span id=\"cb55-34\"&gt;&lt;a href=\"#cb55-34\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;The answer predicted by the model for the given question.&quot;&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb55-35\"&gt;&lt;a href=\"#cb55-35\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    )&lt;/span&gt;\n&lt;span id=\"cb55-36\"&gt;&lt;a href=\"#cb55-36\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb55-37\"&gt;&lt;a href=\"#cb55-37\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    assessment_answer: Literal[&lt;/span&gt;\n&lt;span id=\"cb55-38\"&gt;&lt;a href=\"#cb55-38\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"st\"&gt;&quot;OK&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb55-39\"&gt;&lt;a href=\"#cb55-39\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"st\"&gt;&quot;NUMERICAL_ANSWER_WRONG&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb55-40\"&gt;&lt;a href=\"#cb55-40\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"st\"&gt;&quot;TEXTUAL_SELECTION_ANSWER_WRONG&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb55-41\"&gt;&lt;a href=\"#cb55-41\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"st\"&gt;&quot;FORMAT_ERROR&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb55-42\"&gt;&lt;a href=\"#cb55-42\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"st\"&gt;&quot;EVIDENCE_MISMATCH&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb55-43\"&gt;&lt;a href=\"#cb55-43\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"st\"&gt;&quot;GROUND_TRUTH_INCORRECT&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb55-44\"&gt;&lt;a href=\"#cb55-44\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    ] &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.OutputField(desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;Single categorical label.&quot;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-60\" class=\"cell\" data-execution_count=\"468\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb56\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb56-1\"&gt;&lt;a href=\"#cb56-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;selected_records[&lt;span class=\"dv\"&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;div class=\"cell-output cell-output-display\" data-execution_count=\"468\"&gt;\n&lt;pre&gt;&lt;code&gt;{&#39;model_name&#39;: &#39;openai/o4-mini-2025-04-16&#39;,\n &#39;turn_em_metric_score&#39;: 1.0,\n &#39;conversation_context&#39;: &#39;None&#39;,\n &#39;evidence_snippets&#39;: &quot;[PRE]\\nentergy corporation and subsidiaries management&#39;s financial discussion and analysis refer to 201cselected financial data - five-year comparison of entergy corporation and subsidiaries 201d which accompanies entergy corporation 2019s financial statements in this report for further information with respect to operating statistics . in november 2007 the board approved a plan to pursue a separation of entergy 2019s non-utility nuclear business from entergy through a spin-off of the business to entergy shareholders . in april 2010 , entergy announced that it planned to unwind the business infrastructure associated with the proposed spin-off transaction . as a result of the plan to unwind the business infrastructure , entergy recorded expenses in 2010 for the write-off of certain capitalized costs incurred in connection with the planned spin-off transaction . these costs are discussed in more detail below and throughout this section . net revenue utility following is an analysis of the change in net revenue comparing 2010 to 2009 . amount ( in millions ) .\\n[/PRE]\\n[POST]\\nthe volume/weather variance is primarily due to an increase of 8362 gwh , or 8% ( 8 % ) , in billed electricity usage in all retail sectors , including the effect on the residential sector of colder weather in the first quarter 2010 compared to 2009 and warmer weather in the second and third quarters 2010 compared to 2009 . the industrial sector reflected strong sales growth on continuing signs of economic recovery . the improvement in this sector was primarily driven by inventory restocking and strong exports with the chemicals , refining , and miscellaneous manufacturing sectors leading the improvement . the retail electric price variance is primarily due to : increases in the formula rate plan riders at entergy gulf states louisiana effective november 2009 , january 2010 , and september 2010 , at entergy louisiana effective november 2009 , and at entergy mississippi effective july 2009 ; a base rate increase at entergy arkansas effective july 2010 ; rate actions at entergy texas , including base rate increases effective in may and august 2010 ; a formula rate plan provision of $ 16.6 million recorded in the third quarter 2009 for refunds that were made to customers in accordance with settlements approved by the lpsc ; and the recovery in 2009 by entergy arkansas of 2008 extraordinary storm costs , as approved by the apsc , which ceased in january 2010 . the recovery of storm costs is offset in other operation and maintenance expenses . see note 2 to the financial statements for further discussion of the proceedings referred to above. .\\n[/POST]&quot;,\n &#39;table&#39;: &#39;| Row | 2009 net revenue | volume/weather | retail electric price | provision for regulatory proceedings | rough production cost equalization | ano decommissioning trust | fuel recovery | other | 2010 net revenue |\\n|---|---|---|---|---|---|---|---|---|---|\\n| amount ( in millions ) | 4694.0 | 231.0 | 137.0 | 26.0 | 19.0 | -24.0 | -44.0 | 12.0 | 5051.0 |&#39;,\n &#39;question&#39;: &#39;what was the difference in net revenue between 2009 and 2010?&#39;,\n &#39;id&#39;: &#39;Single_ETR/2011/page_22.pdf-3&#39;,\n &#39;doc_pre_text&#39;: &quot;entergy corporation and subsidiaries management&#39;s financial discussion and analysis refer to 201cselected financial data - five-year comparison of entergy corporation and subsidiaries 201d which accompanies entergy corporation 2019s financial statements in this report for further information with respect to operating statistics . in november 2007 the board approved a plan to pursue a separation of entergy 2019s non-utility nuclear business from entergy through a spin-off of the business to entergy shareholders . in april 2010 , entergy announced that it planned to unwind the business infrastructure associated with the proposed spin-off transaction . as a result of the plan to unwind the business infrastructure , entergy recorded expenses in 2010 for the write-off of certain capitalized costs incurred in connection with the planned spin-off transaction . these costs are discussed in more detail below and throughout this section . net revenue utility following is an analysis of the change in net revenue comparing 2010 to 2009 . amount ( in millions ) .&quot;,\n &#39;doc_post_text&#39;: &#39;the volume/weather variance is primarily due to an increase of 8362 gwh , or 8% ( 8 % ) , in billed electricity usage in all retail sectors , including the effect on the residential sector of colder weather in the first quarter 2010 compared to 2009 and warmer weather in the second and third quarters 2010 compared to 2009 . the industrial sector reflected strong sales growth on continuing signs of economic recovery . the improvement in this sector was primarily driven by inventory restocking and strong exports with the chemicals , refining , and miscellaneous manufacturing sectors leading the improvement . the retail electric price variance is primarily due to : increases in the formula rate plan riders at entergy gulf states louisiana effective november 2009 , january 2010 , and september 2010 , at entergy louisiana effective november 2009 , and at entergy mississippi effective july 2009 ; a base rate increase at entergy arkansas effective july 2010 ; rate actions at entergy texas , including base rate increases effective in may and august 2010 ; a formula rate plan provision of $ 16.6 million recorded in the third quarter 2009 for refunds that were made to customers in accordance with settlements approved by the lpsc ; and the recovery in 2009 by entergy arkansas of 2008 extraordinary storm costs , as approved by the apsc , which ceased in january 2010 . the recovery of storm costs is offset in other operation and maintenance expenses . see note 2 to the financial statements for further discussion of the proceedings referred to above. .&#39;,\n &#39;doc_table&#39;: {&#39;amount ( in millions )&#39;: {&#39;2009 net revenue&#39;: 4694.0,\n   &#39;volume/weather&#39;: 231.0,\n   &#39;retail electric price&#39;: 137.0,\n   &#39;provision for regulatory proceedings&#39;: 26.0,\n   &#39;rough production cost equalization&#39;: 19.0,\n   &#39;ano decommissioning trust&#39;: -24.0,\n   &#39;fuel recovery&#39;: -44.0,\n   &#39;other&#39;: 12.0,\n   &#39;2010 net revenue&#39;: 5051.0}},\n &#39;dialogue_conv_questions&#39;: [&#39;what was the difference in net revenue between 2009 and 2010?&#39;,\n  &#39;and the specific value for 2009 again?&#39;,\n  &#39;so what was the percentage change during this time?&#39;],\n &#39;dialogue_conv_answers&#39;: [&#39;357&#39;, &#39;4694&#39;, &#39;7.61%&#39;],\n &#39;dialogue_turn_program&#39;: [&#39;subtract(5051, 4694)&#39;,\n  &#39;4694&#39;,\n  &#39;subtract(5051, 4694), divide(#0, 4694)&#39;],\n &#39;dialogue_executed_answers&#39;: [357.0, 4694.0, 0.07605],\n &#39;dialogue_qa_split&#39;: [False, False, False],\n &#39;features_num_dialogue_turns&#39;: 3,\n &#39;features_has_type2_question&#39;: False,\n &#39;features_has_duplicate_columns&#39;: False,\n &#39;features_has_non_numeric_values&#39;: False,\n &#39;ground_truth_answer&#39;: 357.0,\n &#39;reasoning&#39;: &#39;The table shows 2009 net revenue of 4,694.0 million and 2010 net revenue of 5,051.0 million. The difference is 5,051.0 minus 4,694.0, which equals 357.0 million.&#39;,\n &#39;ops&#39;: &#39;subtract(const_5051.0, const_4694.0)&#39;,\n &#39;answer&#39;: &#39;357.0&#39;}&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-61\" class=\"cell\" data-execution_count=\"469\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb58\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb58-1\"&gt;&lt;a href=\"#cb58-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;judge_examples &lt;span class=\"op\"&gt;=&lt;/span&gt; []&lt;/span&gt;\n&lt;span id=\"cb58-2\"&gt;&lt;a href=\"#cb58-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb58-3\"&gt;&lt;a href=\"#cb58-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"cf\"&gt;for&lt;/span&gt; record &lt;span class=\"kw\"&gt;in&lt;/span&gt; selected_records:&lt;/span&gt;\n&lt;span id=\"cb58-4\"&gt;&lt;a href=\"#cb58-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;if&lt;/span&gt; record[&lt;span class=\"st\"&gt;&quot;turn_em_metric_score&quot;&lt;/span&gt;] &lt;span class=\"op\"&gt;!=&lt;/span&gt; &lt;span class=\"dv\"&gt;1&lt;/span&gt;:&lt;/span&gt;\n&lt;span id=\"cb58-5\"&gt;&lt;a href=\"#cb58-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        judge_examples.append(&lt;/span&gt;\n&lt;span id=\"cb58-6\"&gt;&lt;a href=\"#cb58-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            dspy.Example(&lt;/span&gt;\n&lt;span id=\"cb58-7\"&gt;&lt;a href=\"#cb58-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                &lt;span class=\"bu\"&gt;id&lt;/span&gt;&lt;span class=\"op\"&gt;=&lt;/span&gt;record[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;],&lt;/span&gt;\n&lt;span id=\"cb58-8\"&gt;&lt;a href=\"#cb58-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                model_name&lt;span class=\"op\"&gt;=&lt;/span&gt;record[&lt;span class=\"st\"&gt;&quot;model_name&quot;&lt;/span&gt;],&lt;/span&gt;\n&lt;span id=\"cb58-9\"&gt;&lt;a href=\"#cb58-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                predicted_reasoning&lt;span class=\"op\"&gt;=&lt;/span&gt;record[&lt;span class=\"st\"&gt;&quot;reasoning&quot;&lt;/span&gt;],&lt;/span&gt;\n&lt;span id=\"cb58-10\"&gt;&lt;a href=\"#cb58-10\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                predicted_ops&lt;span class=\"op\"&gt;=&lt;/span&gt;record[&lt;span class=\"st\"&gt;&quot;ops&quot;&lt;/span&gt;],&lt;/span&gt;\n&lt;span id=\"cb58-11\"&gt;&lt;a href=\"#cb58-11\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                predicted_answer&lt;span class=\"op\"&gt;=&lt;/span&gt;record[&lt;span class=\"st\"&gt;&quot;answer&quot;&lt;/span&gt;],&lt;/span&gt;\n&lt;span id=\"cb58-12\"&gt;&lt;a href=\"#cb58-12\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                ground_truth_answer&lt;span class=\"op\"&gt;=&lt;/span&gt;record[&lt;span class=\"st\"&gt;&quot;ground_truth_answer&quot;&lt;/span&gt;],&lt;/span&gt;\n&lt;span id=\"cb58-13\"&gt;&lt;a href=\"#cb58-13\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                table&lt;span class=\"op\"&gt;=&lt;/span&gt;record[&lt;span class=\"st\"&gt;&quot;table&quot;&lt;/span&gt;],&lt;/span&gt;\n&lt;span id=\"cb58-14\"&gt;&lt;a href=\"#cb58-14\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                conversation_context&lt;span class=\"op\"&gt;=&lt;/span&gt;record[&lt;span class=\"st\"&gt;&quot;conversation_context&quot;&lt;/span&gt;],&lt;/span&gt;\n&lt;span id=\"cb58-15\"&gt;&lt;a href=\"#cb58-15\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                evidence_snippets&lt;span class=\"op\"&gt;=&lt;/span&gt;record[&lt;span class=\"st\"&gt;&quot;evidence_snippets&quot;&lt;/span&gt;],&lt;/span&gt;\n&lt;span id=\"cb58-16\"&gt;&lt;a href=\"#cb58-16\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                question&lt;span class=\"op\"&gt;=&lt;/span&gt;record[&lt;span class=\"st\"&gt;&quot;question&quot;&lt;/span&gt;],&lt;/span&gt;\n&lt;span id=\"cb58-17\"&gt;&lt;a href=\"#cb58-17\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            ).with_inputs(&lt;/span&gt;\n&lt;span id=\"cb58-18\"&gt;&lt;a href=\"#cb58-18\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                &lt;span class=\"st\"&gt;&quot;predicted_reasoning&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb58-19\"&gt;&lt;a href=\"#cb58-19\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                &lt;span class=\"st\"&gt;&quot;predicted_ops&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb58-20\"&gt;&lt;a href=\"#cb58-20\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                &lt;span class=\"st\"&gt;&quot;predicted_answer&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb58-21\"&gt;&lt;a href=\"#cb58-21\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                &lt;span class=\"st\"&gt;&quot;ground_truth_answer&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb58-22\"&gt;&lt;a href=\"#cb58-22\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                &lt;span class=\"st\"&gt;&quot;table&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb58-23\"&gt;&lt;a href=\"#cb58-23\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                &lt;span class=\"st\"&gt;&quot;conversation_context&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb58-24\"&gt;&lt;a href=\"#cb58-24\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                &lt;span class=\"st\"&gt;&quot;evidence_snippets&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb58-25\"&gt;&lt;a href=\"#cb58-25\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                &lt;span class=\"st\"&gt;&quot;question&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb58-26\"&gt;&lt;a href=\"#cb58-26\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            )&lt;/span&gt;\n&lt;span id=\"cb58-27\"&gt;&lt;a href=\"#cb58-27\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        )&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;/div&gt;\n&lt;p&gt;We’ll use Gemini Flash 2.5 as our judge model, for classifying the generated predictions for error analysis&lt;/p&gt;\n&lt;div id=\"cell-63\" class=\"cell\" data-execution_count=\"489\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb59\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb59-1\"&gt;&lt;a href=\"#cb59-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;from&lt;/span&gt; tqdm &lt;span class=\"im\"&gt;import&lt;/span&gt; tqdm&lt;/span&gt;\n&lt;span id=\"cb59-2\"&gt;&lt;a href=\"#cb59-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb59-3\"&gt;&lt;a href=\"#cb59-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;judge_lm &lt;span class=\"op\"&gt;=&lt;/span&gt; deepcopy(lm_gemini_flash_2_5)&lt;/span&gt;\n&lt;span id=\"cb59-4\"&gt;&lt;a href=\"#cb59-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb59-5\"&gt;&lt;a href=\"#cb59-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;judge_results &lt;span class=\"op\"&gt;=&lt;/span&gt; []&lt;/span&gt;\n&lt;span id=\"cb59-6\"&gt;&lt;a href=\"#cb59-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb59-7\"&gt;&lt;a href=\"#cb59-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"cf\"&gt;with&lt;/span&gt; mlflow.start_run(run_name&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;error_analysis_gemini_2.5_flash&quot;&lt;/span&gt;) &lt;span class=\"im\"&gt;as&lt;/span&gt; run:&lt;/span&gt;\n&lt;span id=\"cb59-8\"&gt;&lt;a href=\"#cb59-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;with&lt;/span&gt; dspy.context(lm&lt;span class=\"op\"&gt;=&lt;/span&gt;judge_lm, cache&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;, track_cost&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;True&lt;/span&gt;):&lt;/span&gt;\n&lt;span id=\"cb59-9\"&gt;&lt;a href=\"#cb59-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        &lt;span class=\"cf\"&gt;for&lt;/span&gt; example &lt;span class=\"kw\"&gt;in&lt;/span&gt; tqdm(judge_examples, desc&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;Judging examples&quot;&lt;/span&gt;):&lt;/span&gt;\n&lt;span id=\"cb59-10\"&gt;&lt;a href=\"#cb59-10\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            module &lt;span class=\"op\"&gt;=&lt;/span&gt; dspy.ChainOfThought(AssessmentSignature)&lt;/span&gt;\n&lt;span id=\"cb59-11\"&gt;&lt;a href=\"#cb59-11\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            jr &lt;span class=\"op\"&gt;=&lt;/span&gt; module(&lt;span class=\"op\"&gt;**&lt;/span&gt;example)&lt;/span&gt;\n&lt;span id=\"cb59-12\"&gt;&lt;a href=\"#cb59-12\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            jr[&lt;span class=\"st\"&gt;&quot;assessment_reasoning&quot;&lt;/span&gt;] &lt;span class=\"op\"&gt;=&lt;/span&gt; jr[&lt;span class=\"st\"&gt;&quot;reasoning&quot;&lt;/span&gt;]&lt;/span&gt;\n&lt;span id=\"cb59-13\"&gt;&lt;a href=\"#cb59-13\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            &lt;span class=\"kw\"&gt;del&lt;/span&gt; jr[&lt;span class=\"st\"&gt;&quot;reasoning&quot;&lt;/span&gt;]&lt;/span&gt;\n&lt;span id=\"cb59-14\"&gt;&lt;a href=\"#cb59-14\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            judge_results.append(&lt;/span&gt;\n&lt;span id=\"cb59-15\"&gt;&lt;a href=\"#cb59-15\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                {&lt;/span&gt;\n&lt;span id=\"cb59-16\"&gt;&lt;a href=\"#cb59-16\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                    &lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;: example[&lt;span class=\"st\"&gt;&quot;id&quot;&lt;/span&gt;],&lt;/span&gt;\n&lt;span id=\"cb59-17\"&gt;&lt;a href=\"#cb59-17\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                    &lt;span class=\"st\"&gt;&quot;model_name&quot;&lt;/span&gt;: example[&lt;span class=\"st\"&gt;&quot;model_name&quot;&lt;/span&gt;],&lt;/span&gt;\n&lt;span id=\"cb59-18\"&gt;&lt;a href=\"#cb59-18\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                    &lt;span class=\"st\"&gt;&quot;question&quot;&lt;/span&gt;: example[&lt;span class=\"st\"&gt;&quot;question&quot;&lt;/span&gt;],&lt;/span&gt;\n&lt;span id=\"cb59-19\"&gt;&lt;a href=\"#cb59-19\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                    &lt;span class=\"st\"&gt;&quot;ground_truth_answer&quot;&lt;/span&gt;: example[&lt;span class=\"st\"&gt;&quot;ground_truth_answer&quot;&lt;/span&gt;],&lt;/span&gt;\n&lt;span id=\"cb59-20\"&gt;&lt;a href=\"#cb59-20\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                    &lt;span class=\"st\"&gt;&quot;predicted_answer&quot;&lt;/span&gt;: example[&lt;span class=\"st\"&gt;&quot;predicted_answer&quot;&lt;/span&gt;],&lt;/span&gt;\n&lt;span id=\"cb59-21\"&gt;&lt;a href=\"#cb59-21\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                    &lt;span class=\"st\"&gt;&quot;assessment_answer&quot;&lt;/span&gt;: jr[&lt;span class=\"st\"&gt;&quot;assessment_answer&quot;&lt;/span&gt;],&lt;/span&gt;\n&lt;span id=\"cb59-22\"&gt;&lt;a href=\"#cb59-22\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                    &lt;span class=\"st\"&gt;&quot;assessment_reasoning&quot;&lt;/span&gt;: jr[&lt;span class=\"st\"&gt;&quot;assessment_reasoning&quot;&lt;/span&gt;],&lt;/span&gt;\n&lt;span id=\"cb59-23\"&gt;&lt;a href=\"#cb59-23\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;                }&lt;/span&gt;\n&lt;span id=\"cb59-24\"&gt;&lt;a href=\"#cb59-24\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            )&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;div class=\"cell-output cell-output-stderr\"&gt;\n&lt;pre&gt;&lt;code&gt;Judging examples:   1%|          | 2/289 [00:00&lt;00:17, 16.77it/s]2025/07/28 20:07:50 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:   1%|▏         | 4/289 [00:00&lt;00:19, 14.79it/s]2025/07/28 20:07:50 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:   2%|▏         | 6/289 [00:00&lt;00:19, 14.85it/s]2025/07/28 20:07:50 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:50 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:   4%|▍         | 11/289 [00:00&lt;00:22, 12.42it/s]2025/07/28 20:07:51 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:   5%|▍         | 14/289 [00:00&lt;00:18, 15.05it/s]2025/07/28 20:07:51 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:51 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:   6%|▌         | 17/289 [00:01&lt;00:15, 18.13it/s]2025/07/28 20:07:51 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:51 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:   7%|▋         | 20/289 [00:01&lt;00:13, 19.77it/s]2025/07/28 20:07:51 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:   8%|▊         | 24/289 [00:01&lt;00:11, 23.48it/s]2025/07/28 20:07:51 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  10%|▉         | 28/289 [00:01&lt;00:09, 26.52it/s]2025/07/28 20:07:51 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  11%|█         | 32/289 [00:01&lt;00:09, 27.24it/s]2025/07/28 20:07:51 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:52 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:52 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  12%|█▏        | 35/289 [00:01&lt;00:10, 23.43it/s]2025/07/28 20:07:52 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  13%|█▎        | 38/289 [00:01&lt;00:10, 23.92it/s]2025/07/28 20:07:52 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:52 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  14%|█▍        | 41/289 [00:01&lt;00:10, 23.64it/s]2025/07/28 20:07:52 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  15%|█▌        | 44/289 [00:02&lt;00:10, 24.06it/s]2025/07/28 20:07:52 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:52 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  16%|█▋        | 47/289 [00:02&lt;00:09, 24.36it/s]2025/07/28 20:07:52 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  17%|█▋        | 50/289 [00:02&lt;00:09, 24.44it/s]2025/07/28 20:07:52 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:52 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:52 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  18%|█▊        | 53/289 [00:02&lt;00:10, 23.14it/s]2025/07/28 20:07:52 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:53 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  20%|██        | 59/289 [00:02&lt;00:11, 20.29it/s]2025/07/28 20:07:53 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  21%|██▏       | 62/289 [00:03&lt;00:13, 16.86it/s]2025/07/28 20:07:53 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:53 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  22%|██▏       | 65/289 [00:03&lt;00:11, 19.32it/s]2025/07/28 20:07:53 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:53 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:53 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  24%|██▎       | 68/289 [00:03&lt;00:10, 20.77it/s]2025/07/28 20:07:53 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:53 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:53 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  25%|██▍       | 71/289 [00:03&lt;00:09, 22.32it/s]2025/07/28 20:07:53 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  26%|██▌       | 74/289 [00:03&lt;00:09, 22.84it/s]2025/07/28 20:07:53 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  27%|██▋       | 77/289 [00:03&lt;00:09, 22.32it/s]2025/07/28 20:07:54 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  28%|██▊       | 80/289 [00:03&lt;00:10, 20.68it/s]2025/07/28 20:07:54 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  30%|██▉       | 86/289 [00:04&lt;00:09, 21.69it/s]2025/07/28 20:07:54 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:54 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:54 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  31%|███       | 89/289 [00:04&lt;00:09, 21.10it/s]2025/07/28 20:07:54 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  32%|███▏      | 92/289 [00:04&lt;00:09, 21.50it/s]2025/07/28 20:07:54 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:54 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  33%|███▎      | 95/289 [00:04&lt;00:08, 22.81it/s]2025/07/28 20:07:54 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  34%|███▍      | 98/289 [00:04&lt;00:07, 23.91it/s]2025/07/28 20:07:55 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  35%|███▍      | 101/289 [00:04&lt;00:07, 24.41it/s]2025/07/28 20:07:55 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:55 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  36%|███▌      | 104/289 [00:04&lt;00:08, 20.70it/s]2025/07/28 20:07:55 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:55 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  37%|███▋      | 107/289 [00:05&lt;00:11, 16.11it/s]2025/07/28 20:07:55 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  38%|███▊      | 110/289 [00:05&lt;00:09, 18.39it/s]2025/07/28 20:07:55 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:55 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  39%|███▉      | 114/289 [00:05&lt;00:08, 21.66it/s]2025/07/28 20:07:55 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:55 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:55 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  41%|████      | 118/289 [00:05&lt;00:07, 24.12it/s]2025/07/28 20:07:56 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:56 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  42%|████▏     | 122/289 [00:05&lt;00:06, 25.92it/s]2025/07/28 20:07:56 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  44%|████▍     | 128/289 [00:05&lt;00:06, 23.89it/s]2025/07/28 20:07:56 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:56 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  45%|████▌     | 131/289 [00:06&lt;00:06, 22.85it/s]2025/07/28 20:07:56 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  46%|████▋     | 134/289 [00:06&lt;00:06, 23.46it/s]2025/07/28 20:07:56 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  47%|████▋     | 137/289 [00:06&lt;00:06, 23.90it/s]2025/07/28 20:07:56 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:56 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  48%|████▊     | 140/289 [00:06&lt;00:06, 23.84it/s]2025/07/28 20:07:56 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  52%|█████▏    | 149/289 [00:06&lt;00:05, 24.60it/s]2025/07/28 20:07:57 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:57 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:57 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  54%|█████▎    | 155/289 [00:07&lt;00:06, 22.09it/s]2025/07/28 20:07:57 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:57 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:57 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  55%|█████▍    | 158/289 [00:07&lt;00:07, 18.30it/s]2025/07/28 20:07:57 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:57 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  56%|█████▌    | 161/289 [00:07&lt;00:06, 19.50it/s]2025/07/28 20:07:57 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:57 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  57%|█████▋    | 164/289 [00:07&lt;00:05, 21.21it/s]2025/07/28 20:07:58 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:58 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  58%|█████▊    | 168/289 [00:07&lt;00:05, 23.87it/s]2025/07/28 20:07:58 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  60%|█████▉    | 172/289 [00:07&lt;00:04, 25.66it/s]2025/07/28 20:07:58 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:58 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  61%|██████    | 175/289 [00:07&lt;00:04, 26.17it/s]2025/07/28 20:07:58 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  62%|██████▏   | 178/289 [00:08&lt;00:05, 20.48it/s]2025/07/28 20:07:58 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  63%|██████▎   | 181/289 [00:08&lt;00:05, 19.97it/s]2025/07/28 20:07:58 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:58 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  64%|██████▎   | 184/289 [00:08&lt;00:04, 21.03it/s]2025/07/28 20:07:58 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:58 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:58 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  65%|██████▍   | 187/289 [00:08&lt;00:04, 21.89it/s]2025/07/28 20:07:59 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:59 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:59 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  66%|██████▌   | 190/289 [00:08&lt;00:04, 20.94it/s]2025/07/28 20:07:59 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  67%|██████▋   | 193/289 [00:08&lt;00:04, 21.33it/s]2025/07/28 20:07:59 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  68%|██████▊   | 196/289 [00:09&lt;00:04, 21.37it/s]2025/07/28 20:07:59 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:59 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  69%|██████▉   | 199/289 [00:09&lt;00:05, 17.97it/s]2025/07/28 20:07:59 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  70%|██████▉   | 201/289 [00:09&lt;00:05, 16.87it/s]2025/07/28 20:07:59 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  70%|███████   | 203/289 [00:09&lt;00:05, 14.73it/s]2025/07/28 20:08:00 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:00 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  71%|███████▏  | 206/289 [00:09&lt;00:04, 17.68it/s]2025/07/28 20:08:00 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  74%|███████▎  | 213/289 [00:09&lt;00:03, 23.63it/s]2025/07/28 20:08:00 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  75%|███████▍  | 216/289 [00:10&lt;00:02, 24.77it/s]2025/07/28 20:08:00 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  76%|███████▌  | 219/289 [00:10&lt;00:02, 25.95it/s]2025/07/28 20:08:00 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:00 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  77%|███████▋  | 222/289 [00:10&lt;00:02, 22.83it/s]2025/07/28 20:08:00 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:00 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  78%|███████▊  | 225/289 [00:10&lt;00:03, 19.59it/s]2025/07/28 20:08:00 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:00 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:01 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  79%|███████▉  | 228/289 [00:10&lt;00:03, 19.79it/s]2025/07/28 20:08:01 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  80%|███████▉  | 231/289 [00:10&lt;00:02, 20.88it/s]2025/07/28 20:08:01 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  81%|████████  | 234/289 [00:10&lt;00:02, 22.36it/s]2025/07/28 20:08:01 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  82%|████████▏ | 237/289 [00:11&lt;00:02, 22.83it/s]2025/07/28 20:08:01 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:01 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:01 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  83%|████████▎ | 240/289 [00:11&lt;00:02, 22.23it/s]2025/07/28 20:08:01 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:01 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  84%|████████▍ | 243/289 [00:11&lt;00:02, 21.50it/s]2025/07/28 20:08:01 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:01 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  85%|████████▌ | 246/289 [00:11&lt;00:02, 14.67it/s]2025/07/28 20:08:02 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  86%|████████▌ | 249/289 [00:11&lt;00:02, 16.99it/s]2025/07/28 20:08:02 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:02 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:02 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  87%|████████▋ | 252/289 [00:11&lt;00:01, 19.29it/s]2025/07/28 20:08:02 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  89%|████████▊ | 256/289 [00:12&lt;00:01, 22.46it/s]2025/07/28 20:08:02 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:02 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  90%|████████▉ | 260/289 [00:12&lt;00:01, 24.88it/s]2025/07/28 20:08:02 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:02 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  91%|█████████ | 263/289 [00:12&lt;00:01, 24.21it/s]2025/07/28 20:08:02 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  92%|█████████▏| 266/289 [00:12&lt;00:00, 25.37it/s]2025/07/28 20:08:02 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:02 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  93%|█████████▎| 269/289 [00:12&lt;00:00, 20.30it/s]2025/07/28 20:08:03 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  94%|█████████▍| 272/289 [00:12&lt;00:00, 19.67it/s]2025/07/28 20:08:03 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:03 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  95%|█████████▌| 275/289 [00:12&lt;00:00, 20.71it/s]2025/07/28 20:08:03 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:03 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  96%|█████████▌| 278/289 [00:13&lt;00:00, 21.31it/s]2025/07/28 20:08:03 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:03 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  97%|█████████▋| 281/289 [00:13&lt;00:00, 22.55it/s]2025/07/28 20:08:03 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:03 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  98%|█████████▊| 284/289 [00:13&lt;00:00, 22.90it/s]2025/07/28 20:08:03 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  99%|█████████▉| 287/289 [00:13&lt;00:00, 23.65it/s]2025/07/28 20:08:03 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:03 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples: 100%|██████████| 289/289 [00:13&lt;00:00, 21.43it/s]&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-stdout\"&gt;\n&lt;pre&gt;&lt;code&gt;🏃 View run error_analysis_gemini_2.5_flash at: http://localhost:5000/#/experiments/1/runs/d415524ddcf94cd086f2f221c2f6f177\n🧪 View experiment at: http://localhost:5000/#/experiments/1&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n\n&lt;div&gt;\n  &lt;style scoped&gt;\n  button {\n    border: none;\n    border-radius: 4px;\n    background-color: rgb(34, 114, 180);\n    font-family: -apple-system, \"system-ui\", \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial;\n    font-size: 13px;\n    color: white;\n    margin-top: 8px;\n    margin-bottom: 8px;\n    padding: 8px 16px;\n    cursor: pointer;\n  }\n  button:hover {\n    background-color: rgb(66, 153, 224);\n  }\n  &lt;/style&gt;\n  &lt;button\n    onclick=\"\n        const display = this.nextElementSibling.style.display;\n        const isCollapsed = display === 'none';\n        this.nextElementSibling.style.display = isCollapsed ? null : 'none';\n\n        const verb = isCollapsed ? 'Collapse' : 'Expand';\n        this.innerText = `${verb} MLflow Trace`;\n    \"\n  &gt;Collapse MLflow Trace&lt;/button&gt;\n  &lt;iframe\n    id=\"trace-renderer\"\n    style=\"width: 100%; height: 500px; border: none; resize: vertical;\"\n    src=\"http://localhost:5000/static-files/lib/notebook-trace-renderer/index.html?trace_id=f51ec31b099c4ccb884824cd84faf244&amp;experiment_id=1&amp;trace_id=2b2a5bac43db4bdf8f1ba27a0c72707f&amp;experiment_id=1&amp;trace_id=33d30ce093eb4bcb8959b7e7b14f4f03&amp;experiment_id=1&amp;trace_id=585d29108d074c8eb2546d615be4e058&amp;experiment_id=1&amp;trace_id=f458046f22604e4cbb206f2ddea55891&amp;experiment_id=1&amp;trace_id=fae282bd8d524323a37fbafd71e5e50f&amp;experiment_id=1&amp;trace_id=e0f8503464d846308c8ac03dd3897e1a&amp;experiment_id=1&amp;trace_id=2f17ef3a251a4472920aac663506297b&amp;experiment_id=1&amp;trace_id=cb93f2fdd18b4a1289219be14632eeb9&amp;experiment_id=1&amp;trace_id=29a36ca6d3bb4720860417319bbe8d68&amp;experiment_id=1&amp;version=3.1.4\"\n  /&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-64\" class=\"cell\" data-execution_count=\"490\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb62\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb62-1\"&gt;&lt;a href=\"#cb62-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;import&lt;/span&gt; seaborn &lt;span class=\"im\"&gt;as&lt;/span&gt; sns&lt;/span&gt;\n&lt;span id=\"cb62-2\"&gt;&lt;a href=\"#cb62-2\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"im\"&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span class=\"im\"&gt;as&lt;/span&gt; plt&lt;/span&gt;\n&lt;span id=\"cb62-3\"&gt;&lt;a href=\"#cb62-3\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb62-4\"&gt;&lt;a href=\"#cb62-4\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;df &lt;span class=\"op\"&gt;=&lt;/span&gt; pd.DataFrame(judge_results)&lt;/span&gt;\n&lt;span id=\"cb62-5\"&gt;&lt;a href=\"#cb62-5\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;grouped &lt;span class=\"op\"&gt;=&lt;/span&gt; (&lt;/span&gt;\n&lt;span id=\"cb62-6\"&gt;&lt;a href=\"#cb62-6\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    df.groupby([&lt;span class=\"st\"&gt;&quot;model_name&quot;&lt;/span&gt;, &lt;span class=\"st\"&gt;&quot;assessment_answer&quot;&lt;/span&gt;]).size().reset_index(name&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;count&quot;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb62-7\"&gt;&lt;a href=\"#cb62-7\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;)&lt;/span&gt;\n&lt;span id=\"cb62-8\"&gt;&lt;a href=\"#cb62-8\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;plt.figure(figsize&lt;span class=\"op\"&gt;=&lt;/span&gt;(&lt;span class=\"dv\"&gt;10&lt;/span&gt;, &lt;span class=\"dv\"&gt;6&lt;/span&gt;))&lt;/span&gt;\n&lt;span id=\"cb62-9\"&gt;&lt;a href=\"#cb62-9\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;ax &lt;span class=\"op\"&gt;=&lt;/span&gt; sns.barplot(data&lt;span class=\"op\"&gt;=&lt;/span&gt;grouped, x&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;model_name&quot;&lt;/span&gt;, y&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;count&quot;&lt;/span&gt;, hue&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;assessment_answer&quot;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb62-10\"&gt;&lt;a href=\"#cb62-10\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;plt.title(&lt;span class=\"st\"&gt;&quot;Assessment Answer Counts by Model&quot;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb62-11\"&gt;&lt;a href=\"#cb62-11\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;plt.ylabel(&lt;span class=\"st\"&gt;&quot;Count&quot;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb62-12\"&gt;&lt;a href=\"#cb62-12\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;plt.xlabel(&lt;span class=\"st\"&gt;&quot;Model Name&quot;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb62-13\"&gt;&lt;a href=\"#cb62-13\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;plt.legend(title&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;Assessment Answer&quot;&lt;/span&gt;)&lt;/span&gt;\n&lt;span id=\"cb62-14\"&gt;&lt;a href=\"#cb62-14\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;plt.tight_layout()&lt;/span&gt;\n&lt;span id=\"cb62-15\"&gt;&lt;a href=\"#cb62-15\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb62-16\"&gt;&lt;a href=\"#cb62-16\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"co\"&gt;# Add value annotations&lt;/span&gt;&lt;/span&gt;\n&lt;span id=\"cb62-17\"&gt;&lt;a href=\"#cb62-17\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;span class=\"cf\"&gt;for&lt;/span&gt; p &lt;span class=\"kw\"&gt;in&lt;/span&gt; ax.patches:&lt;/span&gt;\n&lt;span id=\"cb62-18\"&gt;&lt;a href=\"#cb62-18\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    height &lt;span class=\"op\"&gt;=&lt;/span&gt; p.get_height()&lt;/span&gt;\n&lt;span id=\"cb62-19\"&gt;&lt;a href=\"#cb62-19\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;    &lt;span class=\"cf\"&gt;if&lt;/span&gt; height &lt;span class=\"op\"&gt;&gt;&lt;/span&gt; &lt;span class=\"dv\"&gt;0&lt;/span&gt;:&lt;/span&gt;\n&lt;span id=\"cb62-20\"&gt;&lt;a href=\"#cb62-20\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        ax.annotate(&lt;/span&gt;\n&lt;span id=\"cb62-21\"&gt;&lt;a href=\"#cb62-21\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            &lt;span class=\"ss\"&gt;f&quot;&lt;/span&gt;&lt;span class=\"sc\"&gt;{&lt;/span&gt;&lt;span class=\"bu\"&gt;int&lt;/span&gt;(height)&lt;span class=\"sc\"&gt;}&lt;/span&gt;&lt;span class=\"ss\"&gt;&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb62-22\"&gt;&lt;a href=\"#cb62-22\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            (p.get_x() &lt;span class=\"op\"&gt;+&lt;/span&gt; p.get_width() &lt;span class=\"op\"&gt;/&lt;/span&gt; &lt;span class=\"dv\"&gt;2&lt;/span&gt;, height),&lt;/span&gt;\n&lt;span id=\"cb62-23\"&gt;&lt;a href=\"#cb62-23\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            ha&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;center&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb62-24\"&gt;&lt;a href=\"#cb62-24\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            va&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;bottom&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb62-25\"&gt;&lt;a href=\"#cb62-25\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            fontsize&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"dv\"&gt;10&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb62-26\"&gt;&lt;a href=\"#cb62-26\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            color&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;black&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb62-27\"&gt;&lt;a href=\"#cb62-27\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            xytext&lt;span class=\"op\"&gt;=&lt;/span&gt;(&lt;span class=\"dv\"&gt;0&lt;/span&gt;, &lt;span class=\"dv\"&gt;2&lt;/span&gt;),&lt;/span&gt;\n&lt;span id=\"cb62-28\"&gt;&lt;a href=\"#cb62-28\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;            textcoords&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"st\"&gt;&quot;offset points&quot;&lt;/span&gt;,&lt;/span&gt;\n&lt;span id=\"cb62-29\"&gt;&lt;a href=\"#cb62-29\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;        )&lt;/span&gt;\n&lt;span id=\"cb62-30\"&gt;&lt;a href=\"#cb62-30\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;&lt;/span&gt;\n&lt;span id=\"cb62-31\"&gt;&lt;a href=\"#cb62-31\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;plt.show()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;div class=\"cell-output cell-output-display\"&gt;\n&lt;div&gt;\n&lt;figure&gt;\n&lt;p&gt;&lt;a href=\"2025-09-01-cl-dspy-modelling_files/figure-html/cell-40-output-1.png\" class=\"lightbox\" data-gallery=\"quarto-lightbox-gallery-1\"&gt;&lt;img src=\"2025-09-01-cl-dspy-modelling_files/figure-html/cell-40-output-1.png\" class=\"img-fluid\" /&gt;&lt;/a&gt;&lt;/p&gt;\n&lt;/figure&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;div id=\"cell-65\" class=\"cell\" data-execution_count=\"502\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb63\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb63-1\"&gt;&lt;a href=\"#cb63-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;df.to_csv(&lt;span class=\"st\"&gt;&#39;./judge_results/gate_and_probe_judge_results.csv&#39;&lt;/span&gt;, index&lt;span class=\"op\"&gt;=&lt;/span&gt;&lt;span class=\"va\"&gt;False&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;/div&gt;\n&lt;p&gt;From the analysis above, we see that: - Majority of the errors for all our selected models are due to &lt;strong&gt;incorrect ground truth&lt;/strong&gt;. - We also see cases where the model was unable to generate the answer in the format as expected by the ground truth. - Finally, somewhat surpringly, we see some results marked as “OK”, even though we only selected records that didn’t match the ground truth using our &lt;em&gt;exact match&lt;/em&gt; metric.&lt;/p&gt;\n&lt;p&gt;Let’s look through this more closely:&lt;/p&gt;\n&lt;div id=\"cell-67\" class=\"cell\" data-execution_count=\"503\"&gt;\n&lt;details class=\"code-fold\"&gt;\n&lt;summary&gt;Code&lt;/summary&gt;\n&lt;div class=\"sourceCode\" id=\"cb64\"&gt;&lt;pre class=\"sourceCode python cell-code\"&gt;&lt;code class=\"sourceCode python\"&gt;&lt;span id=\"cb64-1\"&gt;&lt;a href=\"#cb64-1\" aria-hidden=\"true\" tabindex=\"-1\"&gt;&lt;/a&gt;df[df[&lt;span class=\"st\"&gt;&quot;assessment_answer&quot;&lt;/span&gt;] &lt;span class=\"op\"&gt;==&lt;/span&gt; &lt;span class=\"st\"&gt;&quot;GROUND_TRUTH_INCORRECT&quot;&lt;/span&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;\n&lt;/details&gt;\n&lt;div class=\"cell-output cell-output-display\" data-execution_count=\"503\"&gt;\n&lt;div&gt;\n&lt;div&gt;\n&lt;style scoped&gt;\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n&lt;/style&gt;\n\n&lt;table class=\"dataframe\" data-quarto-postprocess=\"true\" data-border=\"1\"&gt;\n&lt;thead&gt;\n&lt;tr class=\"header\" style=\"text-align: right;\"&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;id&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;model_name&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;question&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;ground_truth_answer&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;predicted_answer&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;assessment_answer&lt;/th&gt;\n&lt;th data-quarto-table-cell-role=\"th\"&gt;assessment_reasoning&lt;/th&gt;\n&lt;/tr&gt;\n&lt;/thead&gt;\n&lt;tbody&gt;\n&lt;tr class=\"odd\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;0&lt;/td&gt;\n&lt;td&gt;Single_ETR/2011/page_22.pdf-3&lt;/td&gt;\n&lt;td&gt;openai/o4-mini-2025-04-16&lt;/td&gt;\n&lt;td&gt;so what was the percentage change during this time?&lt;/td&gt;\n&lt;td&gt;7.605000e-02&lt;/td&gt;\n&lt;td&gt;7.6%&lt;/td&gt;\n&lt;td&gt;GROUND_TRUTH_INCORRECT&lt;/td&gt;\n&lt;td&gt;The question asks for a \"percentage change\". The model correctly c...&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"even\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;1&lt;/td&gt;\n&lt;td&gt;Single_ETR/2004/page_258.pdf-4&lt;/td&gt;\n&lt;td&gt;openai/o4-mini-2025-04-16&lt;/td&gt;\n&lt;td&gt;what is the percent change?&lt;/td&gt;\n&lt;td&gt;1.473800e-01&lt;/td&gt;\n&lt;td&gt;14.7%&lt;/td&gt;\n&lt;td&gt;GROUND_TRUTH_INCORRECT&lt;/td&gt;\n&lt;td&gt;The question asks for the \"percent change\". The predicted answer p...&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"odd\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;3&lt;/td&gt;\n&lt;td&gt;Single_ADI/2011/page_83.pdf-2&lt;/td&gt;\n&lt;td&gt;openai/o4-mini-2025-04-16&lt;/td&gt;\n&lt;td&gt;what growth rate does this represent?&lt;/td&gt;\n&lt;td&gt;8.290600e-01&lt;/td&gt;\n&lt;td&gt;82.9%&lt;/td&gt;\n&lt;td&gt;GROUND_TRUTH_INCORRECT&lt;/td&gt;\n&lt;td&gt;The question asks for a 'growth rate', which is typically expresse...&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"even\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;4&lt;/td&gt;\n&lt;td&gt;Single_CB/2008/page_243.pdf-3&lt;/td&gt;\n&lt;td&gt;openai/o4-mini-2025-04-16&lt;/td&gt;\n&lt;td&gt;what was the percent change?&lt;/td&gt;\n&lt;td&gt;7.368000e-02&lt;/td&gt;\n&lt;td&gt;7.37&lt;/td&gt;\n&lt;td&gt;GROUND_TRUTH_INCORRECT&lt;/td&gt;\n&lt;td&gt;The question asks for the \"percent change\". The model correctly ca...&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"odd\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;5&lt;/td&gt;\n&lt;td&gt;Single_AMT/2015/page_50.pdf-1&lt;/td&gt;\n&lt;td&gt;openai/o4-mini-2025-04-16&lt;/td&gt;\n&lt;td&gt;what was the low for share price for the quarter ended 12/31/15?&lt;/td&gt;\n&lt;td&gt;8.732000e+01&lt;/td&gt;\n&lt;td&gt;90.2&lt;/td&gt;\n&lt;td&gt;GROUND_TRUTH_INCORRECT&lt;/td&gt;\n&lt;td&gt;The question asks for the low share price for the quarter ended 12...&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"even\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;...&lt;/td&gt;\n&lt;td&gt;...&lt;/td&gt;\n&lt;td&gt;...&lt;/td&gt;\n&lt;td&gt;...&lt;/td&gt;\n&lt;td&gt;...&lt;/td&gt;\n&lt;td&gt;...&lt;/td&gt;\n&lt;td&gt;...&lt;/td&gt;\n&lt;td&gt;...&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"odd\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;282&lt;/td&gt;\n&lt;td&gt;Single_SLG/2017/page_114.pdf-3&lt;/td&gt;\n&lt;td&gt;openai/o3-2025-04-16&lt;/td&gt;\n&lt;td&gt;so what was the percentage of pension plan contributions out of th...&lt;/td&gt;\n&lt;td&gt;2.302800e-01&lt;/td&gt;\n&lt;td&gt;23.03&lt;/td&gt;\n&lt;td&gt;GROUND_TRUTH_INCORRECT&lt;/td&gt;\n&lt;td&gt;The question asks for a \"percentage\". The model correctly calculat...&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"even\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;283&lt;/td&gt;\n&lt;td&gt;Single_JPM/2008/page_177.pdf-4&lt;/td&gt;\n&lt;td&gt;openai/o3-2025-04-16&lt;/td&gt;\n&lt;td&gt;what was the total amount of resale agreements in 2008, in millions?&lt;/td&gt;\n&lt;td&gt;2.080000e+04&lt;/td&gt;\n&lt;td&gt;200,265&lt;/td&gt;\n&lt;td&gt;GROUND_TRUTH_INCORRECT&lt;/td&gt;\n&lt;td&gt;The question asks for the 'total amount of resale agreements in 20...&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"odd\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;284&lt;/td&gt;\n&lt;td&gt;Double_IPG/2014/page_95.pdf&lt;/td&gt;\n&lt;td&gt;openai/o3-2025-04-16&lt;/td&gt;\n&lt;td&gt;and what is it for the the 2009 one?&lt;/td&gt;\n&lt;td&gt;1.218121e+07&lt;/td&gt;\n&lt;td&gt;435259&lt;/td&gt;\n&lt;td&gt;GROUND_TRUTH_INCORRECT&lt;/td&gt;\n&lt;td&gt;The question asks for the value for \"the 2009 one\". The previous t...&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"even\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;286&lt;/td&gt;\n&lt;td&gt;Single_APTV/2018/page_36.pdf-2&lt;/td&gt;\n&lt;td&gt;openai/o3-2025-04-16&lt;/td&gt;\n&lt;td&gt;how much does the change in the value of the aptiv plc represent i...&lt;/td&gt;\n&lt;td&gt;3.080000e-01&lt;/td&gt;\n&lt;td&gt;30.8%&lt;/td&gt;\n&lt;td&gt;GROUND_TRUTH_INCORRECT&lt;/td&gt;\n&lt;td&gt;The question asks for the answer \"in percentage\". The model correc...&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr class=\"odd\"&gt;\n&lt;td data-quarto-table-cell-role=\"th\"&gt;288&lt;/td&gt;\n&lt;td&gt;Single_RCL/2016/page_7.pdf-3&lt;/td&gt;\n&lt;td&gt;openai/o3-2025-04-16&lt;/td&gt;\n&lt;td&gt;what percentage change does this represent?&lt;/td&gt;\n&lt;td&gt;1.600000e-01&lt;/td&gt;\n&lt;td&gt;16.0&lt;/td&gt;\n&lt;td&gt;GROUND_TRUTH_INCORRECT&lt;/td&gt;\n&lt;td&gt;The question asks for a 'percentage change'. The model correctly c...&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/tbody&gt;\n&lt;/table&gt;\n\n&lt;p&gt;226 rows × 7 columns&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;p&gt;Aha! We see that while the &lt;em&gt;predicted answer&lt;/em&gt; didnt match the ground truth exactly, it’s &lt;strong&gt;actually&lt;/strong&gt; correct for all these cases. We can further use these examples to improve our &lt;strong&gt;exact match&lt;/strong&gt; metric implementation!&lt;/p&gt;\n&lt;p&gt;The above results are &lt;strong&gt;not conclusive&lt;/strong&gt; by any means, since the LLM-as-a-judge approach also has known flaws. However, it does give us some pointers on how to improve the model performance from here!&lt;/p&gt;\n&lt;div id=\"quarto-navigation-envelope\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden\" data-render-id=\"quarto-int-sidebar-title\"&gt;Shubham Gupta&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar-title\"&gt;Shubham Gupta&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:About\"&gt;About&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:/about.html\"&gt;/about.html&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:https://github.com/goodhamgupta\"&gt;https://github.com/goodhamgupta&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-int-navbar:/index.xml\"&gt;/index.xml&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;div id=\"quarto-meta-markdown\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden\" data-render-id=\"quarto-metatitle\"&gt;Shubham Gupta - Curriculum Learning 🤝 DSPy: Modelling&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-twittercardtitle\"&gt;Shubham Gupta - Curriculum Learning 🤝 DSPy: Modelling&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-ogcardtitle\"&gt;Shubham Gupta - Curriculum Learning 🤝 DSPy: Modelling&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-metasitename\"&gt;Shubham Gupta&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-twittercarddesc\"&gt;Mapping ConvFinQA and crafting a curriculum for financial QA&lt;/span&gt; &lt;span class=\"hidden\" data-render-id=\"quarto-ogcardddesc\"&gt;Mapping ConvFinQA and crafting a curriculum for financial QA&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;/section&gt;\n&lt;/section&gt;\n\n&lt;/main&gt; &lt;!-- /main --&gt;\n&lt;script id = \"quarto-html-after-body\" type=\"application/javascript\"&gt;\nwindow.document.addEventListener(\"DOMContentLoaded\", function (event) {\n  const toggleBodyColorMode = (bsSheetEl) =&gt; {\n    const mode = bsSheetEl.getAttribute(\"data-mode\");\n    const bodyEl = window.document.querySelector(\"body\");\n    if (mode === \"dark\") {\n      bodyEl.classList.add(\"quarto-dark\");\n      bodyEl.classList.remove(\"quarto-light\");\n    } else {\n      bodyEl.classList.add(\"quarto-light\");\n      bodyEl.classList.remove(\"quarto-dark\");\n    }\n  }\n  const toggleBodyColorPrimary = () =&gt; {\n    const bsSheetEl = window.document.querySelector(\"link#quarto-bootstrap\");\n    if (bsSheetEl) {\n      toggleBodyColorMode(bsSheetEl);\n    }\n  }\n  toggleBodyColorPrimary();  \n  const disableStylesheet = (stylesheets) =&gt; {\n    for (let i=0; i &lt; stylesheets.length; i++) {\n      const stylesheet = stylesheets[i];\n      stylesheet.rel = 'prefetch';\n    }\n  }\n  const enableStylesheet = (stylesheets) =&gt; {\n    for (let i=0; i &lt; stylesheets.length; i++) {\n      const stylesheet = stylesheets[i];\n      stylesheet.rel = 'stylesheet';\n    }\n  }\n  const manageTransitions = (selector, allowTransitions) =&gt; {\n    const els = window.document.querySelectorAll(selector);\n    for (let i=0; i &lt; els.length; i++) {\n      const el = els[i];\n      if (allowTransitions) {\n        el.classList.remove('notransition');\n      } else {\n        el.classList.add('notransition');\n      }\n    }\n  }\n  const toggleGiscusIfUsed = (isAlternate, darkModeDefault) =&gt; {\n    const baseTheme = document.querySelector('#giscus-base-theme')?.value ?? 'light';\n    const alternateTheme = document.querySelector('#giscus-alt-theme')?.value ?? 'dark';\n    let newTheme = '';\n    if(darkModeDefault) {\n      newTheme = isAlternate ? baseTheme : alternateTheme;\n    } else {\n      newTheme = isAlternate ? alternateTheme : baseTheme;\n    }\n    const changeGiscusTheme = () =&gt; {\n      // From: https://github.com/giscus/giscus/issues/336\n      const sendMessage = (message) =&gt; {\n        const iframe = document.querySelector('iframe.giscus-frame');\n        if (!iframe) return;\n        iframe.contentWindow.postMessage({ giscus: message }, 'https://giscus.app');\n      }\n      sendMessage({\n        setConfig: {\n          theme: newTheme\n        }\n      });\n    }\n    const isGiscussLoaded = window.document.querySelector('iframe.giscus-frame') !== null;\n    if (isGiscussLoaded) {\n      changeGiscusTheme();\n    }\n  }\n  const toggleColorMode = (alternate) =&gt; {\n    // Switch the stylesheets\n    const alternateStylesheets = window.document.querySelectorAll('link.quarto-color-scheme.quarto-color-alternate');\n    manageTransitions('#quarto-margin-sidebar .nav-link', false);\n    if (alternate) {\n      enableStylesheet(alternateStylesheets);\n      for (const sheetNode of alternateStylesheets) {\n        if (sheetNode.id === \"quarto-bootstrap\") {\n          toggleBodyColorMode(sheetNode);\n        }\n      }\n    } else {\n      disableStylesheet(alternateStylesheets);\n      toggleBodyColorPrimary();\n    }\n    manageTransitions('#quarto-margin-sidebar .nav-link', true);\n    // Switch the toggles\n    const toggles = window.document.querySelectorAll('.quarto-color-scheme-toggle');\n    for (let i=0; i &lt; toggles.length; i++) {\n      const toggle = toggles[i];\n      if (toggle) {\n        if (alternate) {\n          toggle.classList.add(\"alternate\");     \n        } else {\n          toggle.classList.remove(\"alternate\");\n        }\n      }\n    }\n    // Hack to workaround the fact that safari doesn't\n    // properly recolor the scrollbar when toggling (#1455)\n    if (navigator.userAgent.indexOf('Safari') &gt; 0 && navigator.userAgent.indexOf('Chrome') == -1) {\n      manageTransitions(\"body\", false);\n      window.scrollTo(0, 1);\n      setTimeout(() =&gt; {\n        window.scrollTo(0, 0);\n        manageTransitions(\"body\", true);\n      }, 40);  \n    }\n  }\n  const isFileUrl = () =&gt; { \n    return window.location.protocol === 'file:';\n  }\n  const hasAlternateSentinel = () =&gt; {  \n    let styleSentinel = getColorSchemeSentinel();\n    if (styleSentinel !== null) {\n      return styleSentinel === \"alternate\";\n    } else {\n      return false;\n    }\n  }\n  const setStyleSentinel = (alternate) =&gt; {\n    const value = alternate ? \"alternate\" : \"default\";\n    if (!isFileUrl()) {\n      window.localStorage.setItem(\"quarto-color-scheme\", value);\n    } else {\n      localAlternateSentinel = value;\n    }\n  }\n  const getColorSchemeSentinel = () =&gt; {\n    if (!isFileUrl()) {\n      const storageValue = window.localStorage.getItem(\"quarto-color-scheme\");\n      return storageValue != null ? storageValue : localAlternateSentinel;\n    } else {\n      return localAlternateSentinel;\n    }\n  }\n  const darkModeDefault = false;\n  let localAlternateSentinel = darkModeDefault ? 'alternate' : 'default';\n  // Dark / light mode switch\n  window.quartoToggleColorScheme = () =&gt; {\n    // Read the current dark / light value \n    let toAlternate = !hasAlternateSentinel();\n    toggleColorMode(toAlternate);\n    setStyleSentinel(toAlternate);\n    toggleGiscusIfUsed(toAlternate, darkModeDefault);\n  };\n  // Ensure there is a toggle, if there isn't float one in the top right\n  if (window.document.querySelector('.quarto-color-scheme-toggle') === null) {\n    const a = window.document.createElement('a');\n    a.classList.add('top-right');\n    a.classList.add('quarto-color-scheme-toggle');\n    a.href = \"\";\n    a.onclick = function() { try { window.quartoToggleColorScheme(); } catch {} return false; };\n    const i = window.document.createElement(\"i\");\n    i.classList.add('bi');\n    a.appendChild(i);\n    window.document.body.appendChild(a);\n  }\n  // Switch to dark mode if need be\n  if (hasAlternateSentinel()) {\n    toggleColorMode(true);\n  } else {\n    toggleColorMode(false);\n  }\n  const icon = \"\";\n  const anchorJS = new window.AnchorJS();\n  anchorJS.options = {\n    placement: 'right',\n    icon: icon\n  };\n  anchorJS.add('.anchored');\n  const isCodeAnnotation = (el) =&gt; {\n    for (const clz of el.classList) {\n      if (clz.startsWith('code-annotation-')) {                     \n        return true;\n      }\n    }\n    return false;\n  }\n  const clipboard = new window.ClipboardJS('.code-copy-button', {\n    text: function(trigger) {\n      const codeEl = trigger.previousElementSibling.cloneNode(true);\n      for (const childEl of codeEl.children) {\n        if (isCodeAnnotation(childEl)) {\n          childEl.remove();\n        }\n      }\n      return codeEl.innerText;\n    }\n  });\n  clipboard.on('success', function(e) {\n    // button target\n    const button = e.trigger;\n    // don't keep focus\n    button.blur();\n    // flash \"checked\"\n    button.classList.add('code-copy-button-checked');\n    var currentTitle = button.getAttribute(\"title\");\n    button.setAttribute(\"title\", \"Copied!\");\n    let tooltip;\n    if (window.bootstrap) {\n      button.setAttribute(\"data-bs-toggle\", \"tooltip\");\n      button.setAttribute(\"data-bs-placement\", \"left\");\n      button.setAttribute(\"data-bs-title\", \"Copied!\");\n      tooltip = new bootstrap.Tooltip(button, \n        { trigger: \"manual\", \n          customClass: \"code-copy-button-tooltip\",\n          offset: [0, -8]});\n      tooltip.show();    \n    }\n    setTimeout(function() {\n      if (tooltip) {\n        tooltip.hide();\n        button.removeAttribute(\"data-bs-title\");\n        button.removeAttribute(\"data-bs-toggle\");\n        button.removeAttribute(\"data-bs-placement\");\n      }\n      button.setAttribute(\"title\", currentTitle);\n      button.classList.remove('code-copy-button-checked');\n    }, 1000);\n    // clear code selection\n    e.clearSelection();\n  });\n  const viewSource = window.document.getElementById('quarto-view-source') ||\n                     window.document.getElementById('quarto-code-tools-source');\n  if (viewSource) {\n    const sourceUrl = viewSource.getAttribute(\"data-quarto-source-url\");\n    viewSource.addEventListener(\"click\", function(e) {\n      if (sourceUrl) {\n        // rstudio viewer pane\n        if (/\\bcapabilities=\\b/.test(window.location)) {\n          window.open(sourceUrl);\n        } else {\n          window.location.href = sourceUrl;\n        }\n      } else {\n        const modal = new bootstrap.Modal(document.getElementById('quarto-embedded-source-code-modal'));\n        modal.show();\n      }\n      return false;\n    });\n  }\n  function toggleCodeHandler(show) {\n    return function(e) {\n      const detailsSrc = window.document.querySelectorAll(\".cell &gt; details &gt; .sourceCode\");\n      for (let i=0; i&lt;detailsSrc.length; i++) {\n        const details = detailsSrc[i].parentElement;\n        if (show) {\n          details.open = true;\n        } else {\n          details.removeAttribute(\"open\");\n        }\n      }\n      const cellCodeDivs = window.document.querySelectorAll(\".cell &gt; .sourceCode\");\n      const fromCls = show ? \"hidden\" : \"unhidden\";\n      const toCls = show ? \"unhidden\" : \"hidden\";\n      for (let i=0; i&lt;cellCodeDivs.length; i++) {\n        const codeDiv = cellCodeDivs[i];\n        if (codeDiv.classList.contains(fromCls)) {\n          codeDiv.classList.remove(fromCls);\n          codeDiv.classList.add(toCls);\n        } \n      }\n      return false;\n    }\n  }\n  const hideAllCode = window.document.getElementById(\"quarto-hide-all-code\");\n  if (hideAllCode) {\n    hideAllCode.addEventListener(\"click\", toggleCodeHandler(false));\n  }\n  const showAllCode = window.document.getElementById(\"quarto-show-all-code\");\n  if (showAllCode) {\n    showAllCode.addEventListener(\"click\", toggleCodeHandler(true));\n  }\n  function tippyHover(el, contentFn, onTriggerFn, onUntriggerFn) {\n    const config = {\n      allowHTML: true,\n      maxWidth: 500,\n      delay: 100,\n      arrow: false,\n      appendTo: function(el) {\n          return el.parentElement;\n      },\n      interactive: true,\n      interactiveBorder: 10,\n      theme: 'quarto',\n      placement: 'bottom-start',\n    };\n    if (contentFn) {\n      config.content = contentFn;\n    }\n    if (onTriggerFn) {\n      config.onTrigger = onTriggerFn;\n    }\n    if (onUntriggerFn) {\n      config.onUntrigger = onUntriggerFn;\n    }\n    window.tippy(el, config); \n  }\n  const xrefs = window.document.querySelectorAll('a.quarto-xref');\n  const processXRef = (id, note) =&gt; {\n    // Strip column container classes\n    const stripColumnClz = (el) =&gt; {\n      el.classList.remove(\"page-full\", \"page-columns\");\n      if (el.children) {\n        for (const child of el.children) {\n          stripColumnClz(child);\n        }\n      }\n    }\n    stripColumnClz(note)\n    if (id === null || id.startsWith('sec-')) {\n      // Special case sections, only their first couple elements\n      const container = document.createElement(\"div\");\n      if (note.children && note.children.length &gt; 2) {\n        container.appendChild(note.children[0].cloneNode(true));\n        for (let i = 1; i &lt; note.children.length; i++) {\n          const child = note.children[i];\n          if (child.tagName === \"P\" && child.innerText === \"\") {\n            continue;\n          } else {\n            container.appendChild(child.cloneNode(true));\n            break;\n          }\n        }\n        if (window.Quarto?.typesetMath) {\n          window.Quarto.typesetMath(container);\n        }\n        return container.innerHTML\n      } else {\n        if (window.Quarto?.typesetMath) {\n          window.Quarto.typesetMath(note);\n        }\n        return note.innerHTML;\n      }\n    } else {\n      // Remove any anchor links if they are present\n      const anchorLink = note.querySelector('a.anchorjs-link');\n      if (anchorLink) {\n        anchorLink.remove();\n      }\n      if (window.Quarto?.typesetMath) {\n        window.Quarto.typesetMath(note);\n      }\n      // TODO in 1.5, we should make sure this works without a callout special case\n      if (note.classList.contains(\"callout\")) {\n        return note.outerHTML;\n      } else {\n        return note.innerHTML;\n      }\n    }\n  }\n  for (var i=0; i&lt;xrefs.length; i++) {\n    const xref = xrefs[i];\n    tippyHover(xref, undefined, function(instance) {\n      instance.disable();\n      let url = xref.getAttribute('href');\n      let hash = undefined; \n      if (url.startsWith('#')) {\n        hash = url;\n      } else {\n        try { hash = new URL(url).hash; } catch {}\n      }\n      if (hash) {\n        const id = hash.replace(/^#\\/?/, \"\");\n        const note = window.document.getElementById(id);\n        if (note !== null) {\n          try {\n            const html = processXRef(id, note.cloneNode(true));\n            instance.setContent(html);\n          } finally {\n            instance.enable();\n            instance.show();\n          }\n        } else {\n          // See if we can fetch this\n          fetch(url.split('#')[0])\n          .then(res =&gt; res.text())\n          .then(html =&gt; {\n            const parser = new DOMParser();\n            const htmlDoc = parser.parseFromString(html, \"text/html\");\n            const note = htmlDoc.getElementById(id);\n            if (note !== null) {\n              const html = processXRef(id, note);\n              instance.setContent(html);\n            } \n          }).finally(() =&gt; {\n            instance.enable();\n            instance.show();\n          });\n        }\n      } else {\n        // See if we can fetch a full url (with no hash to target)\n        // This is a special case and we should probably do some content thinning / targeting\n        fetch(url)\n        .then(res =&gt; res.text())\n        .then(html =&gt; {\n          const parser = new DOMParser();\n          const htmlDoc = parser.parseFromString(html, \"text/html\");\n          const note = htmlDoc.querySelector('main.content');\n          if (note !== null) {\n            // This should only happen for chapter cross references\n            // (since there is no id in the URL)\n            // remove the first header\n            if (note.children.length &gt; 0 && note.children[0].tagName === \"HEADER\") {\n              note.children[0].remove();\n            }\n            const html = processXRef(null, note);\n            instance.setContent(html);\n          } \n        }).finally(() =&gt; {\n          instance.enable();\n          instance.show();\n        });\n      }\n    }, function(instance) {\n    });\n  }\n      let selectedAnnoteEl;\n      const selectorForAnnotation = ( cell, annotation) =&gt; {\n        let cellAttr = 'data-code-cell=\"' + cell + '\"';\n        let lineAttr = 'data-code-annotation=\"' +  annotation + '\"';\n        const selector = 'span[' + cellAttr + '][' + lineAttr + ']';\n        return selector;\n      }\n      const selectCodeLines = (annoteEl) =&gt; {\n        const doc = window.document;\n        const targetCell = annoteEl.getAttribute(\"data-target-cell\");\n        const targetAnnotation = annoteEl.getAttribute(\"data-target-annotation\");\n        const annoteSpan = window.document.querySelector(selectorForAnnotation(targetCell, targetAnnotation));\n        const lines = annoteSpan.getAttribute(\"data-code-lines\").split(\",\");\n        const lineIds = lines.map((line) =&gt; {\n          return targetCell + \"-\" + line;\n        })\n        let top = null;\n        let height = null;\n        let parent = null;\n        if (lineIds.length &gt; 0) {\n            //compute the position of the single el (top and bottom and make a div)\n            const el = window.document.getElementById(lineIds[0]);\n            top = el.offsetTop;\n            height = el.offsetHeight;\n            parent = el.parentElement.parentElement;\n          if (lineIds.length &gt; 1) {\n            const lastEl = window.document.getElementById(lineIds[lineIds.length - 1]);\n            const bottom = lastEl.offsetTop + lastEl.offsetHeight;\n            height = bottom - top;\n          }\n          if (top !== null && height !== null && parent !== null) {\n            // cook up a div (if necessary) and position it \n            let div = window.document.getElementById(\"code-annotation-line-highlight\");\n            if (div === null) {\n              div = window.document.createElement(\"div\");\n              div.setAttribute(\"id\", \"code-annotation-line-highlight\");\n              div.style.position = 'absolute';\n              parent.appendChild(div);\n            }\n            div.style.top = top - 2 + \"px\";\n            div.style.height = height + 4 + \"px\";\n            div.style.left = 0;\n            let gutterDiv = window.document.getElementById(\"code-annotation-line-highlight-gutter\");\n            if (gutterDiv === null) {\n              gutterDiv = window.document.createElement(\"div\");\n              gutterDiv.setAttribute(\"id\", \"code-annotation-line-highlight-gutter\");\n              gutterDiv.style.position = 'absolute';\n              const codeCell = window.document.getElementById(targetCell);\n              const gutter = codeCell.querySelector('.code-annotation-gutter');\n              gutter.appendChild(gutterDiv);\n            }\n            gutterDiv.style.top = top - 2 + \"px\";\n            gutterDiv.style.height = height + 4 + \"px\";\n          }\n          selectedAnnoteEl = annoteEl;\n        }\n      };\n      const unselectCodeLines = () =&gt; {\n        const elementsIds = [\"code-annotation-line-highlight\", \"code-annotation-line-highlight-gutter\"];\n        elementsIds.forEach((elId) =&gt; {\n          const div = window.document.getElementById(elId);\n          if (div) {\n            div.remove();\n          }\n        });\n        selectedAnnoteEl = undefined;\n      };\n        // Handle positioning of the toggle\n    window.addEventListener(\n      \"resize\",\n      throttle(() =&gt; {\n        elRect = undefined;\n        if (selectedAnnoteEl) {\n          selectCodeLines(selectedAnnoteEl);\n        }\n      }, 10)\n    );\n    function throttle(fn, ms) {\n    let throttle = false;\n    let timer;\n      return (...args) =&gt; {\n        if(!throttle) { // first call gets through\n            fn.apply(this, args);\n            throttle = true;\n        } else { // all the others get throttled\n            if(timer) clearTimeout(timer); // cancel #2\n            timer = setTimeout(() =&gt; {\n              fn.apply(this, args);\n              timer = throttle = false;\n            }, ms);\n        }\n      };\n    }\n      // Attach click handler to the DT\n      const annoteDls = window.document.querySelectorAll('dt[data-target-cell]');\n      for (const annoteDlNode of annoteDls) {\n        annoteDlNode.addEventListener('click', (event) =&gt; {\n          const clickedEl = event.target;\n          if (clickedEl !== selectedAnnoteEl) {\n            unselectCodeLines();\n            const activeEl = window.document.querySelector('dt[data-target-cell].code-annotation-active');\n            if (activeEl) {\n              activeEl.classList.remove('code-annotation-active');\n            }\n            selectCodeLines(clickedEl);\n            clickedEl.classList.add('code-annotation-active');\n          } else {\n            // Unselect the line\n            unselectCodeLines();\n            clickedEl.classList.remove('code-annotation-active');\n          }\n        });\n      }\n  const findCites = (el) =&gt; {\n    const parentEl = el.parentElement;\n    if (parentEl) {\n      const cites = parentEl.dataset.cites;\n      if (cites) {\n        return {\n          el,\n          cites: cites.split(' ')\n        };\n      } else {\n        return findCites(el.parentElement)\n      }\n    } else {\n      return undefined;\n    }\n  };\n  var bibliorefs = window.document.querySelectorAll('a[role=\"doc-biblioref\"]');\n  for (var i=0; i&lt;bibliorefs.length; i++) {\n    const ref = bibliorefs[i];\n    const citeInfo = findCites(ref);\n    if (citeInfo) {\n      tippyHover(citeInfo.el, function() {\n        var popup = window.document.createElement('div');\n        citeInfo.cites.forEach(function(cite) {\n          var citeDiv = window.document.createElement('div');\n          citeDiv.classList.add('hanging-indent');\n          citeDiv.classList.add('csl-entry');\n          var biblioDiv = window.document.getElementById('ref-' + cite);\n          if (biblioDiv) {\n            citeDiv.innerHTML = biblioDiv.innerHTML;\n          }\n          popup.appendChild(citeDiv);\n        });\n        return popup.innerHTML;\n      });\n    }\n  }\n});\n&lt;/script&gt;\n&lt;script src=\"https://giscus.app/client.js\"\n        data-repo=\"goodhamgupta/personal_blog\"\n        data-repo-id=\"R_kgDOLXv-xA\"\n        data-category=\"General\"\n        data-category-id=\"DIC_kwDOLXv-xM4Cdogy\"\n        data-mapping=\"title\"\n        data-reactions-enabled=\"1\"\n        data-emit-metadata=\"0\"\n        data-input-position=\"top\"\n        data-theme=\"light\"\n        data-lang=\"en\"\n        crossorigin=\"anonymous\"\n        async&gt;\n&lt;/script&gt;\n&lt;input type=\"hidden\" id=\"giscus-base-theme\" value=\"light\"&gt;\n&lt;input type=\"hidden\" id=\"giscus-alt-theme\" value=\"dark\"&gt;\n&lt;/div&gt; &lt;!-- /content --&gt;\n&lt;script&gt;var lightboxQuarto = GLightbox({\"loop\":false,\"closeEffect\":\"zoom\",\"descPosition\":\"bottom\",\"openEffect\":\"zoom\",\"selector\":\".lightbox\"});\nwindow.onload = () =&gt; {\n  lightboxQuarto.on('slide_before_load', (data) =&gt; {\n    const { slideIndex, slideNode, slideConfig, player, trigger } = data;\n    const href = trigger.getAttribute('href');\n    if (href !== null) {\n      const imgEl = window.document.querySelector(`a[href=\"${href}\"] img`);\n      if (imgEl !== null) {\n        const srcAttr = imgEl.getAttribute(\"src\");\n        if (srcAttr && srcAttr.startsWith(\"data:\")) {\n          slideConfig.href = srcAttr;\n        }\n      }\n    } \n  });\n\n  lightboxQuarto.on('slide_after_load', (data) =&gt; {\n    const { slideIndex, slideNode, slideConfig, player, trigger } = data;\n    if (window.Quarto?.typesetMath) {\n      window.Quarto.typesetMath(slideNode);\n    }\n  });\n\n};\n          &lt;/script&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;"
  },
  {
    "objectID": "posts/2025-09-01-cl-dspy-modelling/index.html",
    "href": "posts/2025-09-01-cl-dspy-modelling/index.html",
    "title": "Curriculum Learning 🤝 DSPy: Modelling",
    "section": "",
    "text": "&lt;!DOCTYPE html&gt;\n\n\n\n\n\n_2025-09-01-cl-dspy-modelling\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntitle: “Curriculum Learning 🤝 DSPy: Modelling” author: Shubham Gupta date: ‘2025-09-01’ image: cl_dspy/curriculum_learning_data.png description: Mapping ConvFinQA and crafting a curriculum for financial QA lightbox: true toc: true footnotes-hover: false format: html: highlight-style: gruvbox code-overflow: wrap code-fold: true code-tools: true df-print: paged\n\n\ncategories:\n\n\n\nprogramming\n\n\ndspy\n\n\ncurriculum-learning\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIn our previous exploration, we analyzed 3,458 ConvFinQA records and established a curriculum learning framework with three difficulty stages: Easy (≤2 ops, simple context), Medium (2-3 ops, moderate complexity), and Hard (≥4 ops, complex multi-turn reasoning).\n\n\nNow it’s time to put this curriculum to work by implementing and evaluating our models.\n\n\nFrom Prompting to Programming¶\n\n\nTraditionally, LLM applications rely on hand-rolled prompts—carefully crafted text instructions that are often brittle and difficult to optimize, especially for complex multi-step reasoning tasks like financial QA.\n\n\nOur curriculum learning approach demands systematic experimentation across models, difficulty levels, and optimization strategies. This makes DSPy the ideal framework, as it transforms prompting from an art into systematic, testable code.\n\n\nWhy DSPy for curriculum learning?\n\n\n\nReproducible experiments: Prompts become Python objects → diffable, unit-testable, version-controlled\n\n\nSystematic optimization: Built-in optimizers (LabeledFewShot, BootstrapFewShot) auto-search the prompt space across our curriculum stages\n\n\nClean evaluation pipeline: First-class metrics support—plug in exact match, hit .compile(), get train/val loops with curriculum-aware sampling\n\n\nModel flexibility: Test curriculum effects across GPT-4, o4-mini, Gemini, and open-source models with one-line swaps\n\n\nEfficient iteration: Caching and threading speed up development cycles crucial for curriculum experiments\n\n\n\nThis systematic approach lets us rigorously test whether our Easy→Medium→Hard curriculum improves financial reasoning compared to random sampling.\n\n\nResources: DSPy Documentation\n\n\n\n\n\n\n\n\n\n\n\n\n\nEvaluation Metrics¶\n\n\n\n\n\n\n\n\n\n\n\n\n\nFor this exploratory analysis, we need a clear metric to measure model performance across our curriculum learning experiments. Following the original ConvFinQA paper, we adopt Exact Match (EM) as our primary evaluation metric.\n\n\nPrimary Metric: Turn-level EM¶\n\n\nTurn-level EM measures whether the generated answer for a specific dialogue turn exactly matches the gold standard answer. This binary metric (1 for exact match, 0 otherwise) provides a strict but interpretable measure of performance that directly aligns with the task requirements.\n\n\nWe choose this as our primary metric for several reasons:\n\n\n\nSimplicity: Easy to implement and interpret for initial experimentation\n\n\nStrictness: Financial reasoning requires precision—approximate answers can be misleading\n\n\nComparability: Direct comparison with baseline results from the original paper\n\n\nCurriculum sensitivity: Clear signal for measuring improvement across difficulty levels\n\n\n\nAdditional Metrics (Future Work)¶\n\n\nThere are several other metrics could be useful:\n\n\nConversation-level metrics like Dialogue Mean EM and Joint EM would better capture multi-turn reasoning dependencies, but add complexity to curriculum design. Since our curriculum is based on individual example difficulty rather than conversation-level complexity, turn-level metrics are more appropriate for this phase.\n\n\nDiagnostic metrics such as Exec-agree % and numeric error analysis would help distinguish between reasoning failures and execution errors. However, for establishing whether curriculum learning improves over random sampling, the binary success signal from exact match provides sufficient discriminative power.\n\n\nEfficiency metrics like program length and evidence tokens could reveal interesting patterns about how curriculum learning affects model behavior, but are secondary to establishing basic performance improvements.\n\n\nWe’ve skipped the other metrics for now for the sake of brevity.\n\n\n\n\n\n\n\n\n\n\n\n\n\nModel List¶\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe state of language models has significantly changed since the paper was released. It no longer makes sense to use the exact same model(s) as the paper.\n\n\nInstead, we will use the following categories of model:\n\n\n\nNon-Reasoning Models\n\n\nThese models are the usual next-token prediction models, and start generating an answer immediately.\n\n\nWe will benchmark the following models here:\n\n\nGPT-4.1\n\n\nGPT-4.1-mini\n\n\n\n\n\n\nReasoning Models\n\n\nThese models are the latest language models that are capable of reasoning and generating answers based on the context provided.\n\n\nReasoning models are designed to perform multi-step, explicit logical inference to arrive at a conclusion.\n\n\nWe will benchmark the following models here:\n\n\nOAI o4-mini\n\n\nAnthropic Sonnet 4.0\n\n\nGoogle Gemini Flash 2.5\n\n\nGoogle Gemini Flash 2.5 Lite\n\n\n\n\n\n\nFrontier Models\n\n\nThese are the true “large” language models, developed by frontier labs. They excel in instruction following, reasoning and solving a variety of tasks.\n\n\nHowever, these models are expensive. As such, we will try to avoid using them for a final solution.\n\n\nWe will benchmark the following models here:\n\n\nOAI o3\n\n\nAnthropic Opus 4.0\n\n\nGoogle Gemini Pro 2.5\n\n\n\n\n\n\nOpen Source\n\n\nWe also want to measure the performance of open-source models, as it will help quantify the gap between them and proprietary models.\n\n\nOpen-source models are especially required in domains where data sovereignty is a concern.\n\n\nWe will only benchmark:\n\n\nQwen3-32B\n\n\n\n\n\n\n\nModel Selection¶\n\n\nDue to cost and time constraints, we can’t afford to optimise all models. Hence, we’ll aim to narrow down the list of models to a few “promising” models. Specifically, instead of just using the performance of the models on the “easy” validation set, we will use a combination of two datasets:\n\n\n\nGate - 50 Easy dialogs, teacher - forced. Drop model if Turn-EM &lt; 0.55.\n\n\nProbe - 30-dialog mixed micro-set (15 Medium + 15 Hard, closed loop). Keep model only if Final-Turn EM ≥ 0.35, Dialogue-mean EM ≥ 0.35\n\n\n\nThis two-stage filter zaps obviously weak models fast yet retains ones whose strength shows up on multi-step reasoning / long context.\n\n\nMetrics Tracking¶\n\n\nGiven that we plan on iterating over multiple datasets, multiple models, multiple algorithms with different hyperparameters, we will a solution to efficiency track our progress.\n\n\nWe aim to use MLFlow, as it has the following features:\n\n\n\nMLflow Tracking: logs training, runs, and artifacts for DSPy.\n\n\nMLflow Model: packages DSPy programs for reproducible deployment.\n\n\nMLflow Evaluate: natively evaluates GenAI outputs for fast iteration.\n\n\nMLflow Tracing: auto-logs and debugs DSPy internals with one command.\n\n\n\nIn production, the deployment pipeline would look as follows:\n\n\n   DSPy Production deployment with MLFlow. Source: MLFlow Docs \n\n\n\n\n\n\n\n\n\n\n\n\n\nSetup¶\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;Experiment: artifact_location='mlflow-artifacts:/1', creation_time=1753611058221, experiment_id='1', last_update_time=1753611058221, lifecycle_stage='active', name='DSPy', tags={}&gt;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nopenai/gpt-4.1-2025-04-14: Today's date is June 13, 2024.\nopenai/gpt-4.1-mini-2025-04-14: The current date is June 15, 2024.\nopenai/o4-mini-2025-04-16 Reasoning: The user asked for the current date. I will provide today's date in a clear, human-readable format.\nopenai/o4-mini-2025-04-16: The current date is May 30, 2024.\nanthropic/claude-sonnet-4-20250514 Reasoning: The user is asking for the current date. However, I don't have access to real-time information or the ability to know what the current date is. I should explain that I cannot provide the current date and suggest how they can find this information.\nanthropic/claude-sonnet-4-20250514: I don't have access to real-time information, so I cannot tell you the current date. To find today's date, you can:\n- Check your computer, phone, or other device\n- Search \"what is today's date\" in a search engine\n- Ask a voice assistant like Siri, Alexa, or Google Assistant\ngemini/gemini-2.5-flash Reasoning: The user is asking for the current date. I will provide today's date.\ngemini/gemini-2.5-flash: June 10, 2024\ngemini/gemini-2.5-flash-lite Reasoning: The user is asking for the current date. I need to access the current date and format it as requested.\ngemini/gemini-2.5-flash-lite: The current date is October 26, 2023.\nopenai/o3-2025-04-16 Reasoning: I don’t have real-time access to the system clock, so I’m unable to determine the exact current date at the moment of this response.\nopenai/o3-2025-04-16: I’m sorry, I don’t have access to real-time information to tell today’s date.\nanthropic/claude-opus-4-20250514 Reasoning: The user is asking for the current date. However, as an AI assistant, I don't have access to real-time information and cannot provide the current date. I should explain this limitation clearly to the user.\nanthropic/claude-opus-4-20250514: I don't have access to real-time information, so I cannot tell you today's date. To get the current date, you can check your device's calendar, search \"what's today's date\" in a search engine, or ask a voice assistant with real-time capabilities.\ngemini/gemini-2.5-pro Reasoning: The user has asked for the current date. I will access my internal system's real-time clock to provide the current calendar date.\ngemini/gemini-2.5-pro: Today's date is September 10, 2024.\nollama/qwen3:32b Reasoning: I cannot access real-time data or the current date. My knowledge is static and up to July 2024. To find the current date, please check your device's clock or calendar.\nollama/qwen3:32b: I cannot provide the current date as I do not have access to real-time information. Please check your device's clock or calendar for the current date.\n🏃 View run Setup at: http://localhost:5000/#/experiments/1/runs/20df48ca1ad2461d9dcc0b1575caec6d\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n\n\n\n\n\n\n\n\nCollapse MLflow Trace\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nModel Selection¶\n\n\n\n\n\n\n\n\n\n\n\n\n\nIn the easy problems stage, we will select a relatively straightforward implementation. Specifically, we will provide the model with all context, and ask it to answer the question in a zero-shot manner.\n\n\nThis will help us identify strong baseline performance, and identify any issues with the model’s ability to understand the problem.\n\n\nFirst, we will create the DSPy signatures for our dataset. Signatures are used to define the input and output of a model.\n\n\nSpecifically, we will have two types of signatures: one that doesn’t support reasoning model(for direct prediction models like GPT-4.1), and one that does support reasoning mode(for the reasoning models like o3, gemini pro, etc.)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNext, we define a few helper functions to format our dataset for the DSPy model. We intentionally don’t spend too much time here for now, and will come back to this later, during the optimization phase.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNext, we will create the DSPy metric, used to evaluate the performance of our model.\n\n\nWe will focus on 2 parts to our metric:\n\n\n\nIf the answer is a floating point number, we will aim to compare it with the ground truth with some tolerance.\n\n\nIf the answer is a string, we will aim to perform exact match via DSPy’s exact_match metric.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNext, we will prepare our datasets.\n\n\nWe will aim to use the splits as follows:\n\n\n\ntrain: Used primarily for the optimisation phase. This will be discussed shortly.\n\n\nvalid: Used to evaluate the performance of an LM on an optimised model trained using the train dataset.\n\n\ntest: Used to evaluate the performance of an LM on a held-out dataset. This will determine the overall stage performance.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\n\n\ndoc_pre_text\n\n\ndoc_post_text\n\n\ndoc_table\n\n\ndialogue_conv_questions\n\n\ndialogue_conv_answers\n\n\ndialogue_turn_program\n\n\ndialogue_executed_answers\n\n\ndialogue_qa_split\n\n\nfeatures_num_dialogue_turns\n\n\nfeatures_has_type2_question\n\n\nfeatures_has_duplicate_columns\n\n\nfeatures_has_non_numeric_values\n\n\n\n\n\n\n0\n\n\nSingle_JKHY/2009/page_28.pdf-3\n\n\n26 | 2009 annual report in fiscal 2008 , revenues in the credit un…\n\n\nyear ended june 30 , cash provided by operations increased $ 25587…\n\n\n{‘Year ended June 30, 2009’: {‘net income’: 103102.0, ’non-cash ex…\n\n\n[what is the net cash from operating activities in 2009?, what abo…\n\n\n[206588, 181001, 25587, 14.1%]\n\n\n[206588, 181001, subtract(206588, 181001), subtract(206588, 181001…\n\n\n[206588.0, 181001.0, 25587.0, 0.14136]\n\n\n[False, False, False, False]\n\n\n4\n\n\nFalse\n\n\nFalse\n\n\nFalse\n\n\n\n\n1\n\n\nSingle_RSG/2008/page_114.pdf-2\n\n\nsubstantially all of the goodwill and other intangible assets reco…\n\n\nthe above unaudited pro forma financial information includes adjus…\n\n\n{‘year ended december 31 2008 ( unaudited )’: {‘revenue’: 9362.2, …\n\n\n[what were revenues in 2008?, what were they in 2007?, what was th…\n\n\n[9362.2, 9244.9, 117.3, 1.3%]\n\n\n[9362.2, 9244.9, subtract(9362.2, 9244.9), subtract(9362.2, 9244.9…\n\n\n[9362.2, 9244.9, 117.3, 0.01269]\n\n\n[False, False, False, False]\n\n\n4\n\n\nFalse\n\n\nFalse\n\n\nFalse\n\n\n\n\n2\n\n\nSingle_AAPL/2002/page_23.pdf-1\n\n\nin a new business model such as the retail segment is inherently r…\n\n\n.\n\n\n{‘2002’: {‘net sales’: 5742.0, ‘cost of sales’: 4139.0, ’gross mar…\n\n\n[what was the total of net sales in 2001?, and what was that in 20…\n\n\n[5363, 7983, -2620, -32%]\n\n\n[5363, 7983, subtract(5363, 7983), subtract(5363, 7983), divide(#0…\n\n\n[5363.0, 7983.0, -2620.0, -0.3282]\n\n\n[False, False, False, False]\n\n\n4\n\n\nFalse\n\n\nFalse\n\n\nFalse\n\n\n\n\n3\n\n\nSingle_UPS/2009/page_33.pdf-2\n\n\n( 1 ) includes shares repurchased through our publicly announced s…\n\n\n.\n\n\n{‘12/31/04’: {‘united parcel service inc .’: 100.0, ’s&p 500 index…\n\n\n[what was the change in the performance of the united parcel servi…\n\n\n[-24.05, -24.05%, 102.11, 2.11, 2.11%, -26.16%]\n\n\n[subtract(75.95, const_100), subtract(75.95, const_100), divide(#0…\n\n\n[-24.05, -0.2405, 102.11, 2.11, 0.0211, -0.2616]\n\n\n[False, False, False, False, False, False]\n\n\n6\n\n\nFalse\n\n\nFalse\n\n\nFalse\n\n\n\n\n4\n\n\nDouble_UPS/2009/page_33.pdf\n\n\n( 1 ) includes shares repurchased through our publicly announced s…\n\n\n.\n\n\n{‘12/31/04’: {‘united parcel service inc .’: 100.0, ’s&p 500 index…\n\n\n[what was the fluctuation of the performance price of the ups from…\n\n\n[-8.94, -8.9%, -24.05, -24.05%, 2.11, 2.11%, -26.16%]\n\n\n[subtract(91.06, const_100), subtract(91.06, const_100), divide(#0…\n\n\n[-8.94, -0.0894, -24.05, -0.2405, 2.11, 0.0211, -0.2616]\n\n\n[False, False, True, True, True, True, True]\n\n\n7\n\n\nTrue\n\n\nFalse\n\n\nFalse\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n852\n\n\n\n\n\n\n\n\n\n\n\n\n\nWe will used DSPy’s Evaluate class to run our evals in parallel(internally, this is just implemented via threads)\n\n\n\n\n\n\n\n\n\n\n\n\n\nTo ensure our setup works as expected, we will run a simple test first.\n\n\n\n\n\n\n\n\n\n\n\n\n\nAverage Metric: 8.00 / 10 (80.0%): 100%|██████████| 10/10 [00:02&lt;00:00,  3.48it/s]\n\n\n\n\n2025/07/28 18:18:42 INFO dspy.evaluate.evaluate: Average Metric: 8.0 / 10 (80.0%)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconversation_context\n\n\nevidence_snippets\n\n\ntable\n\n\nquestion\n\n\nid\n\n\ndoc_pre_text\n\n\ndoc_post_text\n\n\ndoc_table\n\n\ndialogue_conv_questions\n\n\ndialogue_conv_answers\n\n\n…\n\n\ndialogue_executed_answers\n\n\ndialogue_qa_split\n\n\nfeatures_num_dialogue_turns\n\n\nfeatures_has_type2_question\n\n\nfeatures_has_duplicate_columns\n\n\nfeatures_has_non_numeric_values\n\n\nexample_answer\n\n\nops\n\n\npred_answer\n\n\nturn_em_metric\n\n\n\n\n\n\n0\n\n\nNone\n\n\n[PRE] entergy corporation and subsidiaries management’s financial …\n\n\nRow | 2009 net revenue | volume/weather | retail electric price …\n\nwhat was the difference in net revenue between 2009 and 2010?\n\n\nSingle_ETR/2011/page_22.pdf-3\n\n\nentergy corporation and subsidiaries management’s financial discus…\n\n\nthe volume/weather variance is primarily due to an increase of 836…\n\n\n{‘amount ( in millions )’: {‘2009 net revenue’: 4694.0, ’volume/we…\n\n\n[‘what was the difference in net revenue between 2009 and 2010?’, …\n\n\n[357, 4694, 7.61%]\n\n\n…\n\n\n[357.0, 4694.0, 0.07605]\n\n\n[False, False, False]\n\n\n3\n\n\nFalse\n\n\nFalse\n\n\nFalse\n\n\n357.00000\n\n\nsubtract(2010 net revenue, 2009 net revenue)\n\n\n357.0\n\n\n✔️ [1.000]\n\n\n\n\n1\n\n\nQ1: what was the difference in net revenue between 2009 and 2010?...\n\n\n[PRE] entergy corporation and subsidiaries management’s financial …\n\n\nRow | 2009 net revenue | volume/weather | retail electric price …\n\nand the specific value for 2009 again?\n\n\nSingle_ETR/2011/page_22.pdf-3\n\n\nentergy corporation and subsidiaries management’s financial discus…\n\n\nthe volume/weather variance is primarily due to an increase of 836…\n\n\n{‘amount ( in millions )’: {‘2009 net revenue’: 4694.0, ’volume/we…\n\n\n[‘what was the difference in net revenue between 2009 and 2010?’, …\n\n\n[357, 4694, 7.61%]\n\n\n…\n\n\n[357.0, 4694.0, 0.07605]\n\n\n[False, False, False]\n\n\n3\n\n\nFalse\n\n\nFalse\n\n\nFalse\n\n\n4694.00000\n\n\n4694.0\n\n\n4694.0\n\n\n✔️ [1.000]\n\n\n\n\n2\n\n\nQ1: what was the difference in net revenue between 2009 and 2010?...\n\n\n[PRE] entergy corporation and subsidiaries management’s financial …\n\n\nRow | 2009 net revenue | volume/weather | retail electric price …\n\nso what was the percentage change during this time?\n\n\nSingle_ETR/2011/page_22.pdf-3\n\n\nentergy corporation and subsidiaries management’s financial discus…\n\n\nthe volume/weather variance is primarily due to an increase of 836…\n\n\n{‘amount ( in millions )’: {‘2009 net revenue’: 4694.0, ’volume/we…\n\n\n[‘what was the difference in net revenue between 2009 and 2010?’, …\n\n\n[357, 4694, 7.61%]\n\n\n…\n\n\n[357.0, 4694.0, 0.07605]\n\n\n[False, False, False]\n\n\n3\n\n\nFalse\n\n\nFalse\n\n\nFalse\n\n\n0.07605\n\n\nsubtract(5051.0, 4694.0), divide(#0, 4694.0), multiply(#1, const_100)\n\n\n7.61\n\n\n\n\n\n\n3\n\n\nNone\n\n\n[PRE] entergy new orleans , inc . management’s financial discussio…\n\n\nRow | 2003 net revenue | base rates | volume/weather | 2004 defe…\n\nwhat was the net revenue in 2004?\n\n\nSingle_ETR/2004/page_258.pdf-4\n\n\nentergy new orleans , inc . management’s financial discussion and …\n\n\nthe increase in base rates was effective june 2003 . the rate incr…\n\n\n{‘( in millions )’: {‘2003 net revenue’: 208.3, ‘base rates’: 10.6…\n\n\n[what was the net revenue in 2004?, what was the net revenue in 20…\n\n\n[239.0, 208.3, 30.7, 14.7%]\n\n\n…\n\n\n[239.0, 208.3, 30.7, 0.14738]\n\n\n[False, False, False, False]\n\n\n4\n\n\nFalse\n\n\nFalse\n\n\nFalse\n\n\n239.00000\n\n\nNone\n\n\n239.0\n\n\n✔️ [1.000]\n\n\n\n\n4\n\n\nQ1: what was the net revenue in 2004?: 239.0\n\n\n[PRE] entergy new orleans , inc . management’s financial discussio…\n\n\nRow | 2003 net revenue | base rates | volume/weather | 2004 defe…\n\nwhat was the net revenue in 2003?\n\n\nSingle_ETR/2004/page_258.pdf-4\n\n\nentergy new orleans , inc . management’s financial discussion and …\n\n\nthe increase in base rates was effective june 2003 . the rate incr…\n\n\n{‘( in millions )’: {‘2003 net revenue’: 208.3, ‘base rates’: 10.6…\n\n\n[what was the net revenue in 2004?, what was the net revenue in 20…\n\n\n[239.0, 208.3, 30.7, 14.7%]\n\n\n…\n\n\n[239.0, 208.3, 30.7, 0.14738]\n\n\n[False, False, False, False]\n\n\n4\n\n\nFalse\n\n\nFalse\n\n\nFalse\n\n\n208.30000\n\n\nNone\n\n\n208.3\n\n\n✔️ [1.000]\n\n\n\n\n5\n\n\nQ1: what was the net revenue in 2004?: 239.0: what was the…\n\n\n[PRE] entergy new orleans , inc . management’s financial discussio…\n\n\nRow | 2003 net revenue | base rates | volume/weather | 2004 defe…\n\nwhat was the change in value?\n\n\nSingle_ETR/2004/page_258.pdf-4\n\n\nentergy new orleans , inc . management’s financial discussion and …\n\n\nthe increase in base rates was effective june 2003 . the rate incr…\n\n\n{‘( in millions )’: {‘2003 net revenue’: 208.3, ‘base rates’: 10.6…\n\n\n[what was the net revenue in 2004?, what was the net revenue in 20…\n\n\n[239.0, 208.3, 30.7, 14.7%]\n\n\n…\n\n\n[239.0, 208.3, 30.7, 0.14738]\n\n\n[False, False, False, False]\n\n\n4\n\n\nFalse\n\n\nFalse\n\n\nFalse\n\n\n30.70000\n\n\nsubtract(239.0, 208.3)\n\n\n30.7\n\n\n✔️ [1.000]\n\n\n\n\n6\n\n\nQ1: what was the net revenue in 2004? A1: 239.0 Q2: what was the n…\n\n\n[PRE] entergy new orleans , inc . management’s financial discussio…\n\n\nRow | 2003 net revenue | base rates | volume/weather | 2004 defe…\n\nwhat is the percent change?\n\n\nSingle_ETR/2004/page_258.pdf-4\n\n\nentergy new orleans , inc . management’s financial discussion and …\n\n\nthe increase in base rates was effective june 2003 . the rate incr…\n\n\n{‘( in millions )’: {‘2003 net revenue’: 208.3, ‘base rates’: 10.6…\n\n\n[what was the net revenue in 2004?, what was the net revenue in 20…\n\n\n[239.0, 208.3, 30.7, 14.7%]\n\n\n…\n\n\n[239.0, 208.3, 30.7, 0.14738]\n\n\n[False, False, False, False]\n\n\n4\n\n\nFalse\n\n\nFalse\n\n\nFalse\n\n\n0.14738\n\n\nsubtract(239.0, 208.3), divide(#0, 208.3), multiply(#1, 100)\n\n\n14.72\n\n\n\n\n\n\n7\n\n\nNone\n\n\n[PRE] nike , inc . notes to consolidated financial statements 2014…\n\n\nRow | severance and related costs | cash payments | non-cash sto…\n\nwhat was the value of the sale of the starter brand?\n\n\nSingle_NKE/2009/page_81.pdf-1\n\n\nnike , inc . notes to consolidated financial statements 2014 ( con…\n\n\nthe accrual balance as of may 31 , 2009 will be relieved throughou…\n\n\n{‘$ 2014’: {‘severance and related costs’: 195.0, ‘cash payments’:…\n\n\n[‘what was the value of the sale of the starter brand?’, ’what was…\n\n\n[60.0, 28.6, 31.4, 91%]\n\n\n…\n\n\n[60.0, 28.6, 31.4, 0.91083]\n\n\n[False, False, False, False]\n\n\n4\n\n\nFalse\n\n\nFalse\n\n\nFalse\n\n\n60.00000\n\n\nNone\n\n\n60.0\n\n\n✔️ [1.000]\n\n\n\n\n8\n\n\nQ1: what was the value of the sale of the starter brand?: 60.0\n\n\n[PRE] nike , inc . notes to consolidated financial statements 2014…\n\n\nRow | severance and related costs | cash payments | non-cash sto…\n\nwhat was the gain resulting from the sale?\n\n\nSingle_NKE/2009/page_81.pdf-1\n\n\nnike , inc . notes to consolidated financial statements 2014 ( con…\n\n\nthe accrual balance as of may 31 , 2009 will be relieved throughou…\n\n\n{‘$ 2014’: {‘severance and related costs’: 195.0, ‘cash payments’:…\n\n\n[‘what was the value of the sale of the starter brand?’, ’what was…\n\n\n[60.0, 28.6, 31.4, 91%]\n\n\n…\n\n\n[60.0, 28.6, 31.4, 0.91083]\n\n\n[False, False, False, False]\n\n\n4\n\n\nFalse\n\n\nFalse\n\n\nFalse\n\n\n28.60000\n\n\nNone\n\n\n28.6\n\n\n✔️ [1.000]\n\n\n\n\n9\n\n\nQ1: what was the value of the sale of the starter brand?: 60.0…\n\n\n[PRE] nike , inc . notes to consolidated financial statements 2014…\n\n\nRow | severance and related costs | cash payments | non-cash sto…\n\nwhat was the change in value?\n\n\nSingle_NKE/2009/page_81.pdf-1\n\n\nnike , inc . notes to consolidated financial statements 2014 ( con…\n\n\nthe accrual balance as of may 31 , 2009 will be relieved throughou…\n\n\n{‘$ 2014’: {‘severance and related costs’: 195.0, ‘cash payments’:…\n\n\n[‘what was the value of the sale of the starter brand?’, ’what was…\n\n\n[60.0, 28.6, 31.4, 91%]\n\n\n…\n\n\n[60.0, 28.6, 31.4, 0.91083]\n\n\n[False, False, False, False]\n\n\n4\n\n\nFalse\n\n\nFalse\n\n\nFalse\n\n\n31.40000\n\n\nsubtract(60.0, 28.6)\n\n\n31.4\n\n\n✔️ [1.000]\n\n\n\n\n\n10 rows × 21 columns\n\n\n\n\n\n\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/a5433773d6ef4e359825412ad138c520\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n\n\n\n\n\n\n\n\nCollapse MLflow Trace\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGoing to sample between 1 and 3 traces per predictor.\nWill attempt to bootstrap 5 candidate sets.\nAverage Metric: 45.00 / 70 (64.3%): 100%|██████████| 70/70 [00:00&lt;00:00, 87.74it/s] \n\n\n\n\n2025/07/29 01:03:08 INFO dspy.evaluate.evaluate: Average Metric: 45.0 / 70 (64.3%)\n\n\n\n\n\n🏃 View run eval_0 at: http://localhost:5000/#/experiments/3/runs/fcce9b07d50e41609bc04c3d9c2235c7\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nNew best score: 64.29 for seed -3\nScores so far: [64.29]\nBest score so far: 64.29\n  0%|          | 0/70 [00:00&lt;?, ?it/s]\n\n\n\n\n2025/07/29 01:03:08 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 26.00 / 38 (68.4%):  53%|█████▎    | 37/70 [00:00&lt;00:00, 82.89it/s]\n\n\n\n\n2025/07/29 01:03:08 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 46.00 / 70 (65.7%): 100%|██████████| 70/70 [00:00&lt;00:00, 76.35it/s]\n\n\n\n\n2025/07/29 01:03:09 INFO dspy.evaluate.evaluate: Average Metric: 46.0 / 70 (65.7%)\n\n\n\n\n\n🏃 View run eval_1 at: http://localhost:5000/#/experiments/3/runs/7575401319f442499f871ca8d849bfd1\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nNew best score: 65.71 for seed -2\nScores so far: [64.29, 65.71]\nBest score so far: 65.71\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\n  4%|▍         | 3/70 [00:00&lt;00:04, 13.83it/s]2025/07/29 01:03:09 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n  9%|▊         | 6/70 [00:00&lt;00:03, 16.05it/s]\n\n\n\n\nBootstrapped 3 full traces after 6 examples for up to 1 rounds, amounting to 6 attempts.\n\n\n\n\n\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\nAverage Metric: 47.00 / 70 (67.1%): 100%|██████████| 70/70 [00:01&lt;00:00, 62.67it/s]\n\n\n\n\n2025/07/29 01:03:11 INFO dspy.evaluate.evaluate: Average Metric: 47.0 / 70 (67.1%)\n\n\n\n\n\n🏃 View run eval_2 at: http://localhost:5000/#/experiments/3/runs/3406309f3f0a4041a580021eaf5eff13\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nNew best score: 67.14 for seed -1\nScores so far: [64.29, 65.71, 67.14]\nBest score so far: 67.14\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\n  3%|▎         | 2/70 [00:00&lt;00:02, 32.62it/s]\n\n\n\n\nBootstrapped 2 full traces after 2 examples for up to 1 rounds, amounting to 2 attempts.\n\n\n\n\n\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\nAverage Metric: 48.00 / 70 (68.6%): 100%|██████████| 70/70 [00:01&lt;00:00, 52.08it/s]\n\n\n\n\n2025/07/29 01:03:12 INFO dspy.evaluate.evaluate: Average Metric: 48.0 / 70 (68.6%)\n\n\n\n\n\n🏃 View run eval_3 at: http://localhost:5000/#/experiments/3/runs/8cad7a93fb494289a4d6691d5796f84e\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nNew best score: 68.57 for seed 0\nScores so far: [64.29, 65.71, 67.14, 68.57]\nBest score so far: 68.57\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\n  1%|▏         | 1/70 [00:00&lt;00:03, 18.44it/s]\n\n\n\n\nBootstrapped 1 full traces after 1 examples for up to 1 rounds, amounting to 1 attempts.\n\n\n\n\n\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\nAverage Metric: 46.00 / 70 (65.7%): 100%|██████████| 70/70 [00:01&lt;00:00, 54.10it/s]\n\n\n\n\n2025/07/29 01:03:15 INFO dspy.evaluate.evaluate: Average Metric: 46.0 / 70 (65.7%)\n\n\n\n\n\n🏃 View run eval_4 at: http://localhost:5000/#/experiments/3/runs/ab8c076e18394080bbf9634eeff7af35\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nScores so far: [64.29, 65.71, 67.14, 68.57, 65.71]\nBest score so far: 68.57\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\n  1%|▏         | 1/70 [00:00&lt;00:02, 24.59it/s]\n\n\n\n\nBootstrapped 1 full traces after 1 examples for up to 1 rounds, amounting to 1 attempts.\n\n\n\n\n\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\nAverage Metric: 45.00 / 70 (64.3%): 100%|██████████| 70/70 [00:01&lt;00:00, 44.09it/s]\n\n\n\n\n2025/07/29 01:03:17 INFO dspy.evaluate.evaluate: Average Metric: 45.0 / 70 (64.3%)\n\n\n\n\n\n🏃 View run eval_5 at: http://localhost:5000/#/experiments/3/runs/679c914720674946a877f4a6a91665ee\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nScores so far: [64.29, 65.71, 67.14, 68.57, 65.71, 64.29]\nBest score so far: 68.57\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\n  1%|▏         | 1/70 [00:00&lt;00:12,  5.70it/s]\n\n\n\n\n\nBootstrapped 1 full traces after 1 examples for up to 1 rounds, amounting to 1 attempts.\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\nAverage Metric: 47.00 / 70 (67.1%): 100%|██████████| 70/70 [00:01&lt;00:00, 61.09it/s]\n\n\n\n\n2025/07/29 01:03:19 INFO dspy.evaluate.evaluate: Average Metric: 47.0 / 70 (67.1%)\n\n\n\n\n\n🏃 View run eval_6 at: http://localhost:5000/#/experiments/3/runs/ab818ec11652430b9bd68e17dc197665\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nScores so far: [64.29, 65.71, 67.14, 68.57, 65.71, 64.29, 67.14]\nBest score so far: 68.57\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\n  1%|▏         | 1/70 [00:00&lt;00:02, 28.38it/s]\n\n\n\n\nBootstrapped 1 full traces after 1 examples for up to 1 rounds, amounting to 1 attempts.\n\n\n\n\n\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\nAverage Metric: 51.00 / 70 (72.9%): 100%|██████████| 70/70 [00:01&lt;00:00, 51.33it/s]\n\n\n\n\n2025/07/29 01:03:21 INFO dspy.evaluate.evaluate: Average Metric: 51.0 / 70 (72.9%)\n\n\n\n\n\n🏃 View run eval_7 at: http://localhost:5000/#/experiments/3/runs/f9f17e61c1334a9ea6903ae3a1105fd8\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nNew best score: 72.86 for seed 4\nScores so far: [64.29, 65.71, 67.14, 68.57, 65.71, 64.29, 67.14, 72.86]\nBest score so far: 72.86\n8 candidate programs found.\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\n🏃 View run bootstrap_few_shot_rs_openai_o4-mini-2025-04-16 at: http://localhost:5000/#/experiments/3/runs/b08500752c9041d5acccbc261bd33931\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nGoing to sample between 1 and 3 traces per predictor.\nWill attempt to bootstrap 5 candidate sets.\n  0%|          | 0/70 [00:00&lt;?, ?it/s]\n\n\n\n\n2025/07/29 01:03:21 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 43.00 / 70 (61.4%): 100%|██████████| 70/70 [00:01&lt;00:00, 48.03it/s]\n\n\n\n\n2025/07/29 01:03:22 INFO dspy.evaluate.evaluate: Average Metric: 43.0 / 70 (61.4%)\n\n\n\n\n\n🏃 View run eval_0 at: http://localhost:5000/#/experiments/3/runs/578a2f04172f4ecbb41d04350201b2d5\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nNew best score: 61.43 for seed -3\nScores so far: [61.43]\nBest score so far: 61.43\n  0%|          | 0/70 [00:00&lt;?, ?it/s]\n\n\n\n\n2025/07/29 01:03:23 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 29.00 / 42 (69.0%):  59%|█████▊    | 41/70 [00:01&lt;00:00, 32.19it/s]\n\n\n\n\n2025/07/29 01:03:24 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 35.00 / 51 (68.6%):  71%|███████▏  | 50/70 [00:01&lt;00:00, 42.39it/s]\n\n\n\n\n2025/07/29 01:03:24 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 47.00 / 70 (67.1%): 100%|██████████| 70/70 [00:01&lt;00:00, 43.35it/s]\n\n\n\n\n2025/07/29 01:03:24 INFO dspy.evaluate.evaluate: Average Metric: 47.0 / 70 (67.1%)\n\n\n\n\n\n🏃 View run eval_1 at: http://localhost:5000/#/experiments/3/runs/cf868ddb4c5945149422186e878e4ee8\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nNew best score: 67.14 for seed -2\nScores so far: [61.43, 67.14]\nBest score so far: 67.14\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\n  9%|▊         | 6/70 [00:00&lt;00:03, 16.98it/s]\n\n\n\n\nBootstrapped 3 full traces after 6 examples for up to 1 rounds, amounting to 6 attempts.\n\n\n\n\n\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\nAverage Metric: 46.00 / 70 (65.7%): 100%|██████████| 70/70 [00:01&lt;00:00, 65.12it/s]\n\n\n\n\n2025/07/29 01:03:27 INFO dspy.evaluate.evaluate: Average Metric: 46.0 / 70 (65.7%)\n\n\n\n\n\n🏃 View run eval_2 at: http://localhost:5000/#/experiments/3/runs/a83ba7facae34ee2b495fd0bcb478044\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nScores so far: [61.43, 67.14, 65.71]\nBest score so far: 67.14\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\n  3%|▎         | 2/70 [00:00&lt;00:03, 21.93it/s]\n\n\n\n\nBootstrapped 2 full traces after 2 examples for up to 1 rounds, amounting to 2 attempts.\n\n\n\n\n\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\nAverage Metric: 46.00 / 70 (65.7%): 100%|██████████| 70/70 [00:01&lt;00:00, 36.63it/s]\n\n\n\n\n2025/07/29 01:03:30 INFO dspy.evaluate.evaluate: Average Metric: 46.0 / 70 (65.7%)\n\n\n\n\n\n🏃 View run eval_3 at: http://localhost:5000/#/experiments/3/runs/343b2f8e893044da9a9bee74f6be8853\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nScores so far: [61.43, 67.14, 65.71, 65.71]\nBest score so far: 67.14\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\n  1%|▏         | 1/70 [00:00&lt;00:02, 28.87it/s]\n\n\n\n\nBootstrapped 1 full traces after 1 examples for up to 1 rounds, amounting to 1 attempts.\n\n\n\n\n\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\nAverage Metric: 45.00 / 70 (64.3%): 100%|██████████| 70/70 [00:01&lt;00:00, 37.96it/s]\n\n\n\n\n2025/07/29 01:03:32 INFO dspy.evaluate.evaluate: Average Metric: 45.0 / 70 (64.3%)\n\n\n\n\n\n🏃 View run eval_4 at: http://localhost:5000/#/experiments/3/runs/3ad1f0eea05b4d7b88e7c47e2c0c29ab\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nScores so far: [61.43, 67.14, 65.71, 65.71, 64.29]\nBest score so far: 67.14\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\n  1%|▏         | 1/70 [00:00&lt;00:02, 25.21it/s]\n\n\n\n\nBootstrapped 1 full traces after 1 examples for up to 1 rounds, amounting to 1 attempts.\n\n\n\n\n\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\nAverage Metric: 47.00 / 70 (67.1%): 100%|██████████| 70/70 [00:01&lt;00:00, 35.34it/s]\n\n\n\n\n2025/07/29 01:03:34 INFO dspy.evaluate.evaluate: Average Metric: 47.0 / 70 (67.1%)\n\n\n\n\n\n🏃 View run eval_5 at: http://localhost:5000/#/experiments/3/runs/29b7cf7738bc47d89e81309a65595be0\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nScores so far: [61.43, 67.14, 65.71, 65.71, 64.29, 67.14]\nBest score so far: 67.14\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\n  1%|▏         | 1/70 [00:00&lt;00:10,  6.34it/s]\n\n\n\n\n\nBootstrapped 1 full traces after 1 examples for up to 1 rounds, amounting to 1 attempts.\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\nAverage Metric: 48.00 / 70 (68.6%): 100%|██████████| 70/70 [00:02&lt;00:00, 31.53it/s]\n\n\n\n\n2025/07/29 01:03:38 INFO dspy.evaluate.evaluate: Average Metric: 48.0 / 70 (68.6%)\n\n\n\n\n\n🏃 View run eval_6 at: http://localhost:5000/#/experiments/3/runs/d3a6322d0555421784dbb34087099455\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nNew best score: 68.57 for seed 3\nScores so far: [61.43, 67.14, 65.71, 65.71, 64.29, 67.14, 68.57]\nBest score so far: 68.57\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\n  1%|▏         | 1/70 [00:00&lt;00:05, 13.59it/s]\n\n\n\n\nBootstrapped 1 full traces after 1 examples for up to 1 rounds, amounting to 1 attempts.\n\n\n\n\n\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\nAverage Metric: 60.00 / 70 (85.7%): 100%|██████████| 70/70 [00:02&lt;00:00, 28.22it/s] \n\n\n\n\n2025/07/29 01:03:41 INFO dspy.evaluate.evaluate: Average Metric: 60.0 / 70 (85.7%)\n\n\n\n\n\n🏃 View run eval_7 at: http://localhost:5000/#/experiments/3/runs/93c1cafdbb6b440699788970eb6ffa88\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nNew best score: 85.71 for seed 4\nScores so far: [61.43, 67.14, 65.71, 65.71, 64.29, 67.14, 68.57, 85.71]\nBest score so far: 85.71\n8 candidate programs found.\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\n🏃 View run bootstrap_few_shot_rs_gemini_gemini-2_5-flash at: http://localhost:5000/#/experiments/3/runs/621ba195ed244875a4370e2050418a06\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nGoing to sample between 1 and 3 traces per predictor.\nWill attempt to bootstrap 5 candidate sets.\n  0%|          | 0/70 [00:00&lt;?, ?it/s]\n\n\n\n\n2025/07/29 01:03:42 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:03:42 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:03:42 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/29 01:03:43 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 22.00 / 29 (75.9%):  40%|████      | 28/70 [00:00&lt;00:00, 71.01it/s]\n\n\n\n\n2025/07/29 01:03:43 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 36.00 / 49 (73.5%):  69%|██████▊   | 48/70 [00:01&lt;00:00, 69.84it/s]\n\n\n\n\n2025/07/29 01:03:44 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 52.00 / 70 (74.3%): 100%|██████████| 70/70 [00:01&lt;00:00, 37.98it/s]\n\n\n\n\n2025/07/29 01:03:44 INFO dspy.evaluate.evaluate: Average Metric: 52.0 / 70 (74.3%)\n\n\n\n\n\n🏃 View run eval_0 at: http://localhost:5000/#/experiments/3/runs/377a453f2e0745e38fc89508f7ab1d26\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nNew best score: 74.29 for seed -3\nScores so far: [74.29]\nBest score so far: 74.29\n  0%|          | 0/70 [00:00&lt;?, ?it/s]\n\n\n\n\n2025/07/29 01:03:44 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 1.00 / 4 (25.0%):   4%|▍         | 3/70 [00:00&lt;00:17,  3.91it/s] \n\n\n\n\n2025/07/29 01:03:45 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 5.00 / 8 (62.5%):  10%|█         | 7/70 [00:00&lt;00:16,  3.91it/s]\n\n\n\n\n2025/07/29 01:03:45 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 13.00 / 16 (81.2%):  23%|██▎       | 16/70 [00:00&lt;00:01, 39.80it/s]\n\n\n\n\n2025/07/29 01:03:45 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 30.00 / 41 (73.2%):  57%|█████▋    | 40/70 [00:01&lt;00:01, 17.35it/s]\n\n\n\n\n2025/07/29 01:03:46 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 33.00 / 44 (75.0%):  61%|██████▏   | 43/70 [00:01&lt;00:01, 17.35it/s]\n\n\n\n\n2025/07/29 01:03:46 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 52.00 / 70 (74.3%): 100%|██████████| 70/70 [00:01&lt;00:00, 36.77it/s]\n\n\n\n\n2025/07/29 01:03:46 INFO dspy.evaluate.evaluate: Average Metric: 52.0 / 70 (74.3%)\n\n\n\n\n\n🏃 View run eval_1 at: http://localhost:5000/#/experiments/3/runs/d9e37616e88748d8890de6056370f801\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nScores so far: [74.29, 74.29]\nBest score so far: 74.29\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\n  6%|▌         | 4/70 [00:00&lt;00:04, 15.37it/s]\n\n\n\n\nBootstrapped 3 full traces after 4 examples for up to 1 rounds, amounting to 4 attempts.\n\n\n\n\n\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\nAverage Metric: 52.00 / 70 (74.3%): 100%|██████████| 70/70 [00:01&lt;00:00, 35.80it/s]\n\n\n\n\n2025/07/29 01:03:49 INFO dspy.evaluate.evaluate: Average Metric: 52.0 / 70 (74.3%)\n\n\n\n\n\n🏃 View run eval_2 at: http://localhost:5000/#/experiments/3/runs/7bfc22c9728f4862931e5bb8bf4d379e\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nScores so far: [74.29, 74.29, 74.29]\nBest score so far: 74.29\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\n  3%|▎         | 2/70 [00:12&lt;06:55,  6.11s/it]\n\n\n\n\nBootstrapped 2 full traces after 2 examples for up to 1 rounds, amounting to 2 attempts.\n\n\n\n\n\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\nAverage Metric: 43.00 / 53 (81.1%):  76%|███████▌  | 53/70 [00:22&lt;00:09,  1.74it/s] \n\n\n\n\n2025/07/29 01:04:25 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 50.00 / 68 (73.5%):  97%|█████████▋| 68/70 [00:55&lt;00:04,  2.16s/it]\n\n\n\n\n2025/07/29 01:05:26 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 51.00 / 70 (72.9%): 100%|██████████| 70/70 [01:56&lt;00:00,  1.66s/it]\n\n\n\n\n2025/07/29 01:05:59 INFO dspy.evaluate.evaluate: Average Metric: 51.0 / 70 (72.9%)\n\n\n\n\n\n🏃 View run eval_3 at: http://localhost:5000/#/experiments/3/runs/7cc38c776c8c40ad983a78690454b768\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nScores so far: [74.29, 74.29, 74.29, 72.86]\nBest score so far: 74.29\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\n  1%|▏         | 1/70 [00:05&lt;06:47,  5.90s/it]\n\n\n\n\nBootstrapped 1 full traces after 1 examples for up to 1 rounds, amounting to 1 attempts.\n\n\n\n\n\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\nAverage Metric: 34.00 / 37 (91.9%):  53%|█████▎    | 37/70 [00:16&lt;00:15,  2.18it/s] \n\n\n\n\n2025/07/29 01:06:22 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 49.00 / 62 (79.0%):  89%|████████▊ | 62/70 [00:33&lt;00:07,  1.03it/s]\n\n\n\n\n2025/07/29 01:06:40 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 52.00 / 70 (74.3%): 100%|██████████| 70/70 [00:52&lt;00:00,  1.34it/s]\n\n\n\n\n2025/07/29 01:06:57 INFO dspy.evaluate.evaluate: Average Metric: 52.0 / 70 (74.3%)\n\n\n\n\n\n🏃 View run eval_4 at: http://localhost:5000/#/experiments/3/runs/3d4799840b5145f38c55cd04a510b4eb\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nScores so far: [74.29, 74.29, 74.29, 72.86, 74.29]\nBest score so far: 74.29\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\n  1%|▏         | 1/70 [00:03&lt;04:04,  3.55s/it]\n\n\n\n\nBootstrapped 1 full traces after 1 examples for up to 1 rounds, amounting to 1 attempts.\n\n\n\n\n\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\nAverage Metric: 53.00 / 70 (75.7%): 100%|██████████| 70/70 [00:49&lt;00:00,  1.41it/s] \n\n\n\n\n2025/07/29 01:07:51 INFO dspy.evaluate.evaluate: Average Metric: 53.0 / 70 (75.7%)\n\n\n\n\n\n🏃 View run eval_5 at: http://localhost:5000/#/experiments/3/runs/826af9f09c4e4410b2b21424430e67f1\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nNew best score: 75.71 for seed 2\nScores so far: [74.29, 74.29, 74.29, 72.86, 74.29, 75.71]\nBest score so far: 75.71\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\n  1%|▏         | 1/70 [00:05&lt;06:22,  5.54s/it]\n\n\n\n\nBootstrapped 1 full traces after 1 examples for up to 1 rounds, amounting to 1 attempts.\n\n\n\n\n\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\nAverage Metric: 44.00 / 48 (91.7%):  69%|██████▊   | 48/70 [00:18&lt;00:08,  2.53it/s] \n\n\n\n\n2025/07/29 01:08:16 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 53.00 / 70 (75.7%): 100%|██████████| 70/70 [01:02&lt;00:00,  1.13it/s]\n\n\n\n\n2025/07/29 01:08:59 INFO dspy.evaluate.evaluate: Average Metric: 53.0 / 70 (75.7%)\n\n\n\n\n\n🏃 View run eval_6 at: http://localhost:5000/#/experiments/3/runs/a029e23cfbe14b92a2ba6ce26146642b\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nScores so far: [74.29, 74.29, 74.29, 72.86, 74.29, 75.71, 75.71]\nBest score so far: 75.71\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\n  1%|▏         | 1/70 [00:04&lt;04:43,  4.11s/it]\n\n\n\n\nBootstrapped 1 full traces after 1 examples for up to 1 rounds, amounting to 1 attempts.\n\n\n\n\n\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\nAverage Metric: 56.00 / 70 (80.0%): 100%|██████████| 70/70 [00:44&lt;00:00,  1.58it/s] \n\n\n\n\n2025/07/29 01:09:48 INFO dspy.evaluate.evaluate: Average Metric: 56.0 / 70 (80.0%)\n\n\n\n\n\n🏃 View run eval_7 at: http://localhost:5000/#/experiments/3/runs/861f0c753b754e6a8eb3372287edd9bc\n🧪 View experiment at: http://localhost:5000/#/experiments/3\nNew best score: 80.0 for seed 4\nScores so far: [74.29, 74.29, 74.29, 72.86, 74.29, 75.71, 75.71, 80.0]\nBest score so far: 80.0\n8 candidate programs found.\n\n\n\n\n\nDownloading artifacts:   0%|          | 0/1 [00:00&lt;?, ?it/s]\n\n\n\n\n🏃 View run bootstrap_few_shot_rs_openai_o3-2025-04-16 at: http://localhost:5000/#/experiments/3/runs/8576b067ea60468ebc37cda1a17be1dc\n🧪 View experiment at: http://localhost:5000/#/experiments/3\n🏃 View run bootstrap_few_shot_rs_easy at: http://localhost:5000/#/experiments/3/runs/b5f08a070a634f74888fb8c42f24bfa3\n🧪 View experiment at: http://localhost:5000/#/experiments/3\n\n\n\n\n\n\n\n\nCollapse MLflow Trace\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFrom the above, it looks like GPT-4.1 gives an score of 80% on the validation set, WITHOUT ANY PROMPT ENGINEERING/FEW-SHOT PROMPTING. This is great!\n\n\nAs mentioned earlier, due to cost and time constraints, we want to first narrow down the list of models we want to test on the harder stages.\n\n\nAs a recap, our implementation strategy here will be as follows: instead of just using the performance of the models on the “easy” validation set, we will use a combination of two datasets:\n\n\n\nGate - 50 Easy dialogs, teacher - forced. Drop model if Turn-EM &lt; 0.55.\n\n\nProbe - 30-dialog mixed micro-set (15 Medium + 15 Hard, closed loop). Keep model only if Final-Turn EM ≥ 0.35, Dialogue-mean EM ≥ 0.35\n\n\n\nWe will now create our “gate” and “probe” datasets.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWe will also save the gate and probe dataset ids, to compare performance of different models on them.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n{'conversation_context': 'None',\n 'evidence_snippets': \"[PRE]\\nentergy corporation and subsidiaries management's financial discussion and analysis refer to 201cselected financial data - five-year comparison of entergy corporation and subsidiaries 201d which accompanies entergy corporation 2019s financial statements in this report for further information with respect to operating statistics . in november 2007 the board approved a plan to pursue a separation of entergy 2019s non-utility nuclear business from entergy through a spin-off of the business to entergy shareholders . in april 2010 , entergy announced that it planned to unwind the business infrastructure associated with the proposed spin-off transaction . as a result of the plan to unwind the business infrastructure , entergy recorded expenses in 2010 for the write-off of certain capitalized costs incurred in connection with the planned spin-off transaction . these costs are discussed in more detail below and throughout this section . net revenue utility following is an analysis of the change in net revenue comparing 2010 to 2009 . amount ( in millions ) .\\n[/PRE]\\n[POST]\\nthe volume/weather variance is primarily due to an increase of 8362 gwh , or 8% ( 8 % ) , in billed electricity usage in all retail sectors , including the effect on the residential sector of colder weather in the first quarter 2010 compared to 2009 and warmer weather in the second and third quarters 2010 compared to 2009 . the industrial sector reflected strong sales growth on continuing signs of economic recovery . the improvement in this sector was primarily driven by inventory restocking and strong exports with the chemicals , refining , and miscellaneous manufacturing sectors leading the improvement . the retail electric price variance is primarily due to : increases in the formula rate plan riders at entergy gulf states louisiana effective november 2009 , january 2010 , and september 2010 , at entergy louisiana effective november 2009 , and at entergy mississippi effective july 2009 ; a base rate increase at entergy arkansas effective july 2010 ; rate actions at entergy texas , including base rate increases effective in may and august 2010 ; a formula rate plan provision of $ 16.6 million recorded in the third quarter 2009 for refunds that were made to customers in accordance with settlements approved by the lpsc ; and the recovery in 2009 by entergy arkansas of 2008 extraordinary storm costs , as approved by the apsc , which ceased in january 2010 . the recovery of storm costs is offset in other operation and maintenance expenses . see note 2 to the financial statements for further discussion of the proceedings referred to above. .\\n[/POST]\",\n 'table': '| Row | 2009 net revenue | volume/weather | retail electric price | provision for regulatory proceedings | rough production cost equalization | ano decommissioning trust | fuel recovery | other | 2010 net revenue |\\n|---|---|---|---|---|---|---|---|---|---|\\n| amount ( in millions ) | 4694.0 | 231.0 | 137.0 | 26.0 | 19.0 | -24.0 | -44.0 | 12.0 | 5051.0 |',\n 'question': 'what was the difference in net revenue between 2009 and 2010?',\n 'id': 'Single_ETR/2011/page_22.pdf-3',\n 'doc_pre_text': \"entergy corporation and subsidiaries management's financial discussion and analysis refer to 201cselected financial data - five-year comparison of entergy corporation and subsidiaries 201d which accompanies entergy corporation 2019s financial statements in this report for further information with respect to operating statistics . in november 2007 the board approved a plan to pursue a separation of entergy 2019s non-utility nuclear business from entergy through a spin-off of the business to entergy shareholders . in april 2010 , entergy announced that it planned to unwind the business infrastructure associated with the proposed spin-off transaction . as a result of the plan to unwind the business infrastructure , entergy recorded expenses in 2010 for the write-off of certain capitalized costs incurred in connection with the planned spin-off transaction . these costs are discussed in more detail below and throughout this section . net revenue utility following is an analysis of the change in net revenue comparing 2010 to 2009 . amount ( in millions ) .\",\n 'doc_post_text': 'the volume/weather variance is primarily due to an increase of 8362 gwh , or 8% ( 8 % ) , in billed electricity usage in all retail sectors , including the effect on the residential sector of colder weather in the first quarter 2010 compared to 2009 and warmer weather in the second and third quarters 2010 compared to 2009 . the industrial sector reflected strong sales growth on continuing signs of economic recovery . the improvement in this sector was primarily driven by inventory restocking and strong exports with the chemicals , refining , and miscellaneous manufacturing sectors leading the improvement . the retail electric price variance is primarily due to : increases in the formula rate plan riders at entergy gulf states louisiana effective november 2009 , january 2010 , and september 2010 , at entergy louisiana effective november 2009 , and at entergy mississippi effective july 2009 ; a base rate increase at entergy arkansas effective july 2010 ; rate actions at entergy texas , including base rate increases effective in may and august 2010 ; a formula rate plan provision of $ 16.6 million recorded in the third quarter 2009 for refunds that were made to customers in accordance with settlements approved by the lpsc ; and the recovery in 2009 by entergy arkansas of 2008 extraordinary storm costs , as approved by the apsc , which ceased in january 2010 . the recovery of storm costs is offset in other operation and maintenance expenses . see note 2 to the financial statements for further discussion of the proceedings referred to above. .',\n 'doc_table': {'amount ( in millions )': {'2009 net revenue': 4694.0,\n   'volume/weather': 231.0,\n   'retail electric price': 137.0,\n   'provision for regulatory proceedings': 26.0,\n   'rough production cost equalization': 19.0,\n   'ano decommissioning trust': -24.0,\n   'fuel recovery': -44.0,\n   'other': 12.0,\n   '2010 net revenue': 5051.0}},\n 'dialogue_conv_questions': ['what was the difference in net revenue between 2009 and 2010?',\n  'and the specific value for 2009 again?',\n  'so what was the percentage change during this time?'],\n 'dialogue_conv_answers': ['357', '4694', '7.61%'],\n 'dialogue_turn_program': ['subtract(5051, 4694)',\n  '4694',\n  'subtract(5051, 4694), divide(#0, 4694)'],\n 'dialogue_executed_answers': [357.0, 4694.0, 0.07605],\n 'dialogue_qa_split': [False, False, False],\n 'features_num_dialogue_turns': 3,\n 'features_has_type2_question': False,\n 'features_has_duplicate_columns': False,\n 'features_has_non_numeric_values': False,\n 'answer': 357.0}\n\n\n\n\n\n\n\n\n\n\n\n\n\n{'conversation_context': 'None',\n 'evidence_snippets': \"[PRE]\\nentergy corporation and subsidiaries management's financial discussion and analysis refer to 201cselected financial data - five-year comparison of entergy corporation and subsidiaries 201d which accompanies entergy corporation 2019s financial statements in this report for further information with respect to operating statistics . in november 2007 the board approved a plan to pursue a separation of entergy 2019s non-utility nuclear business from entergy through a spin-off of the business to entergy shareholders . in april 2010 , entergy announced that it planned to unwind the business infrastructure associated with the proposed spin-off transaction . as a result of the plan to unwind the business infrastructure , entergy recorded expenses in 2010 for the write-off of certain capitalized costs incurred in connection with the planned spin-off transaction . these costs are discussed in more detail below and throughout this section . net revenue utility following is an analysis of the change in net revenue comparing 2010 to 2009 . amount ( in millions ) .\\n[/PRE]\\n[POST]\\nthe volume/weather variance is primarily due to an increase of 8362 gwh , or 8% ( 8 % ) , in billed electricity usage in all retail sectors , including the effect on the residential sector of colder weather in the first quarter 2010 compared to 2009 and warmer weather in the second and third quarters 2010 compared to 2009 . the industrial sector reflected strong sales growth on continuing signs of economic recovery . the improvement in this sector was primarily driven by inventory restocking and strong exports with the chemicals , refining , and miscellaneous manufacturing sectors leading the improvement . the retail electric price variance is primarily due to : increases in the formula rate plan riders at entergy gulf states louisiana effective november 2009 , january 2010 , and september 2010 , at entergy louisiana effective november 2009 , and at entergy mississippi effective july 2009 ; a base rate increase at entergy arkansas effective july 2010 ; rate actions at entergy texas , including base rate increases effective in may and august 2010 ; a formula rate plan provision of $ 16.6 million recorded in the third quarter 2009 for refunds that were made to customers in accordance with settlements approved by the lpsc ; and the recovery in 2009 by entergy arkansas of 2008 extraordinary storm costs , as approved by the apsc , which ceased in january 2010 . the recovery of storm costs is offset in other operation and maintenance expenses . see note 2 to the financial statements for further discussion of the proceedings referred to above. .\\n[/POST]\",\n 'table': '| Row | 2009 net revenue | volume/weather | retail electric price | provision for regulatory proceedings | rough production cost equalization | ano decommissioning trust | fuel recovery | other | 2010 net revenue |\\n|---|---|---|---|---|---|---|---|---|---|\\n| amount ( in millions ) | 4694.0 | 231.0 | 137.0 | 26.0 | 19.0 | -24.0 | -44.0 | 12.0 | 5051.0 |',\n 'question': 'what was the difference in net revenue between 2009 and 2010?'}\n\n\n\n\n\n\n\n\n\n\n\n\n\nGate Dataset Results¶\n\n\n\n\n\n\n\n\n\n\n\n\n\nAverage Metric: 8.00 / 10 (80.0%): 100%|██████████| 10/10 [00:00&lt;00:00, 65.65it/s]\n\n\n\n\n2025/07/28 18:19:36 INFO dspy.evaluate.evaluate: Average Metric: 8.0 / 10 (80.0%)\n\n\n\n\n\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/502b5457f9db44339a5afce34d13d847\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_openai_gpt-4_1-2025-04-14 at: http://localhost:5000/#/experiments/1/runs/7e61e1f47f4e408c8cec59ee1bf9c0dd\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 5.00 / 10 (50.0%): 100%|██████████| 10/10 [00:00&lt;00:00, 58.97it/s]\n\n\n\n\n2025/07/28 18:19:37 INFO dspy.evaluate.evaluate: Average Metric: 5.0 / 10 (50.0%)\n\n\n\n\n\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/1b4ea94ac47e4660b30234d6ad78c8d8\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_openai_gpt-4_1-mini-2025-04-14 at: http://localhost:5000/#/experiments/1/runs/fa03278692c848e996a3e43e6422099f\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 6.00 / 10 (60.0%): 100%|██████████| 10/10 [00:00&lt;00:00, 79.01it/s]\n\n\n\n\n2025/07/28 18:19:37 INFO dspy.evaluate.evaluate: Average Metric: 6.0 / 10 (60.0%)\n\n\n\n\n\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/ce1366eaa8c146eabba86650fae12f74\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_openai_o4-mini-2025-04-16 at: http://localhost:5000/#/experiments/1/runs/3d1fb9c72b914d5a942312db0a6a5088\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 6.00 / 10 (60.0%): 100%|██████████| 10/10 [00:00&lt;00:00, 81.33it/s]\n\n\n\n\n2025/07/28 18:19:37 INFO dspy.evaluate.evaluate: Average Metric: 6.0 / 10 (60.0%)\n\n\n\n\n\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/9e00a96bfd114bbaa9e47dcb478b4423\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_anthropic_claude-sonnet-4-20250514 at: http://localhost:5000/#/experiments/1/runs/76c2180b1f3c4510ab13158d3b0d36eb\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 7.00 / 10 (70.0%): 100%|██████████| 10/10 [00:00&lt;00:00, 65.50it/s]\n\n\n\n\n2025/07/28 18:19:37 INFO dspy.evaluate.evaluate: Average Metric: 7.0 / 10 (70.0%)\n\n\n\n\n\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/4a3c7957aaab4a4e972b06a7754fe6d4\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_gemini_gemini-2_5-flash at: http://localhost:5000/#/experiments/1/runs/aa191551b2844b57bb9d2db37e50c4f0\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n  0%|          | 0/10 [00:00&lt;?, ?it/s]\n\n\n\n\n2025/07/28 18:19:37 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:19:37 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 7.00 / 10 (70.0%): 100%|██████████| 10/10 [00:00&lt;00:00, 61.55it/s]\n\n\n\n\n2025/07/28 18:19:38 INFO dspy.evaluate.evaluate: Average Metric: 7.0 / 10 (70.0%)\n\n\n\n\n\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/809ee64fbd164475b3592ff2340b2595\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_gemini_gemini-2_5-flash-lite at: http://localhost:5000/#/experiments/1/runs/90ea53b2a2484cc0a5302b7c8245184e\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 8.00 / 10 (80.0%): 100%|██████████| 10/10 [00:00&lt;00:00, 74.80it/s]\n\n\n\n\n2025/07/28 18:19:38 INFO dspy.evaluate.evaluate: Average Metric: 8.0 / 10 (80.0%)\n\n\n\n\n\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/6f1bec87d6ce4137b10e055e94bf54d4\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_openai_o3-2025-04-16 at: http://localhost:5000/#/experiments/1/runs/7e4f8e42c8244b94af37787cacd12ee5\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 7.00 / 10 (70.0%): 100%|██████████| 10/10 [00:00&lt;00:00, 86.48it/s]\n\n\n\n\n2025/07/28 18:19:38 INFO dspy.evaluate.evaluate: Average Metric: 7.0 / 10 (70.0%)\n\n\n\n\n\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/ab105090285e4b55a93205dc6f1bde64\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_anthropic_claude-opus-4-20250514 at: http://localhost:5000/#/experiments/1/runs/58c90aae89644af8a1d2c7dc845b0c07\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 8.00 / 10 (80.0%): 100%|██████████| 10/10 [00:00&lt;00:00, 39.63it/s]\n\n\n\n\n2025/07/28 18:19:38 INFO dspy.evaluate.evaluate: Average Metric: 8.0 / 10 (80.0%)\n\n\n\n\n\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/e786a0b633844e7ebdb6a165561b81ec\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_gemini_gemini-2_5-pro at: http://localhost:5000/#/experiments/1/runs/9e1f42bcc8064a9383ed590c1add4d01\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 7.00 / 10 (70.0%): 100%|██████████| 10/10 [00:00&lt;00:00, 71.29it/s]\n\n\n\n\n2025/07/28 18:19:39 INFO dspy.evaluate.evaluate: Average Metric: 7.0 / 10 (70.0%)\n\n\n\n\n\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/f4ae2cb32a2b401aa5ab8f7b02dc7b86\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_ollama_qwen3_32b at: http://localhost:5000/#/experiments/1/runs/ca6c0d988ca94f2998eb08f339fdf22a\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_dataset_results at: http://localhost:5000/#/experiments/1/runs/0b0e82f0b3724ec1afedde0d7a036dfe\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n\n\n\n\n\n\n\n\nCollapse MLflow Trace\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                                  LLM  Evaluation Score\n0           openai/gpt-4.1-2025-04-14              80.0\n1      openai/gpt-4.1-mini-2025-04-14              50.0\n2           openai/o4-mini-2025-04-16              60.0\n3  anthropic/claude-sonnet-4-20250514              60.0\n4             gemini/gemini-2.5-flash              70.0\n5        gemini/gemini-2.5-flash-lite              70.0\n6                openai/o3-2025-04-16              80.0\n7    anthropic/claude-opus-4-20250514              70.0\n8               gemini/gemini-2.5-pro              80.0\n9                    ollama/qwen3:32b              70.0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFrom the small test above, we see that most of the models score in a similar range. I think it’s expected that GPT-4.1-mini performs poorly, given that it’s a much smaller model compared to all the competetiors.\n\n\nFrom the MLFlow logs, we also see that while Qwen3:32b has a relatively high score, inference is quite slow. For now, we will skip this model during the model selection phase, and revisit it later.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAverage Metric: 95.00 / 151 (62.9%): 100%|██████████| 151/151 [00:02&lt;00:00, 74.97it/s]\n\n\n\n\n2025/07/28 18:21:32 INFO dspy.evaluate.evaluate: Average Metric: 95.0 / 151 (62.9%)\n\n\n\n\n\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/e18f45df89fb4a0e9e98e6f01d74bf71\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_openai_gpt-4_1-2025-04-14 at: http://localhost:5000/#/experiments/1/runs/f15c1d3760fc489b95ec5950f3e992b9\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 81.00 / 151 (53.6%): 100%|██████████| 151/151 [00:02&lt;00:00, 74.18it/s]\n\n\n\n\n2025/07/28 18:21:34 INFO dspy.evaluate.evaluate: Average Metric: 81.0 / 151 (53.6%)\n\n\n\n\n\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/9f40a5f2dc2a4e09977f8b8c53822605\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_openai_gpt-4_1-mini-2025-04-14 at: http://localhost:5000/#/experiments/1/runs/c882d7c82d5f4a3abb510bf57d506c53\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 31.00 / 55 (56.4%):  36%|███▌      | 54/151 [00:00&lt;00:01, 53.34it/s]\n\n\n\n\n2025/07/28 18:21:35 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 44.00 / 72 (61.1%):  47%|████▋     | 71/151 [00:01&lt;00:01, 73.76it/s]\n\n\n\n\n2025/07/28 18:21:35 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 62.00 / 106 (58.5%):  70%|██████▉   | 105/151 [00:01&lt;00:00, 82.16it/s]\n\n\n\n\n2025/07/28 18:21:36 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 95.00 / 151 (62.9%): 100%|██████████| 151/151 [00:02&lt;00:00, 71.71it/s]\n\n\n\n\n2025/07/28 18:21:36 INFO dspy.evaluate.evaluate: Average Metric: 95.0 / 151 (62.9%)\n\n\n\n\n\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/8154049643d040d39c7642b56ac6d7c5\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_openai_o4-mini-2025-04-16 at: http://localhost:5000/#/experiments/1/runs/938b45e4b5204804b4e4660feebf563a\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 95.00 / 151 (62.9%): 100%|██████████| 151/151 [00:02&lt;00:00, 70.44it/s]\n\n\n\n\n2025/07/28 18:21:38 INFO dspy.evaluate.evaluate: Average Metric: 95.0 / 151 (62.9%)\n\n\n\n\n\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/599e8c7040b04b8c8f0ca24c6dc94d37\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_anthropic_claude-sonnet-4-20250514 at: http://localhost:5000/#/experiments/1/runs/4442e20dc743456b966821c18219c23e\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n  0%|          | 0/151 [00:00&lt;?, ?it/s]\n\n\n\n\n2025/07/28 18:21:39 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:39 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 31.00 / 47 (66.0%):  30%|███       | 46/151 [00:01&lt;00:02, 47.10it/s]\n\n\n\n\n2025/07/28 18:21:40 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 57.00 / 93 (61.3%):  62%|██████▏   | 93/151 [00:01&lt;00:00, 79.96it/s]\n\n\n\n\n2025/07/28 18:21:40 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 73.00 / 122 (59.8%):  80%|████████  | 121/151 [00:01&lt;00:00, 89.94it/s]\n\n\n\n\n2025/07/28 18:21:40 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 96.00 / 151 (63.6%): 100%|██████████| 151/151 [00:02&lt;00:00, 67.06it/s]\n\n\n\n\n2025/07/28 18:21:41 INFO dspy.evaluate.evaluate: Average Metric: 96.0 / 151 (63.6%)\n\n\n\n\n\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/bcea3ffb8c6f4cbb98725e43e88cbdd0\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_gemini_gemini-2_5-flash at: http://localhost:5000/#/experiments/1/runs/7db59c48c06c4948adf754477705c360\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n  0%|          | 0/151 [00:00&lt;?, ?it/s]\n\n\n\n\n2025/07/28 18:21:41 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:41 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:41 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:41 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:41 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:41 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:41 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:41 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:41 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:41 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 8.00 / 12 (66.7%):   7%|▋         | 11/151 [00:00&lt;00:03, 38.23it/s]\n\n\n\n\n2025/07/28 18:21:41 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:41 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 9.00 / 13 (69.2%):   8%|▊         | 12/151 [00:00&lt;00:03, 38.23it/s]\n\n\n\n\n2025/07/28 18:21:41 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:41 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 18.00 / 29 (62.1%):  19%|█▉        | 29/151 [00:00&lt;00:01, 62.69it/s]\n\n\n\n\n2025/07/28 18:21:42 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:42 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 20.00 / 32 (62.5%):  21%|██        | 31/151 [00:00&lt;00:01, 62.69it/s]\n\n\n\n\n2025/07/28 18:21:42 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n\n\n\n\n\nAverage Metric: 20.00 / 33 (60.6%):  21%|██        | 32/151 [00:00&lt;00:01, 62.69it/s]\n\n\n\n\n2025/07/28 18:21:42 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:21:42 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n\n\n\n\n\nAverage Metric: 21.00 / 34 (61.8%):  22%|██▏       | 33/151 [00:00&lt;00:01, 62.69it/s]\n\n\n\n\n2025/07/28 18:21:42 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 22.00 / 38 (57.9%):  25%|██▍       | 37/151 [00:00&lt;00:01, 61.42it/s]\n\n\n\n\n2025/07/28 18:21:42 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:42 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 44.00 / 75 (58.7%):  49%|████▉     | 74/151 [00:01&lt;00:01, 57.41it/s]\n\n\n\n\n2025/07/28 18:21:42 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n\n\n\n\n\nAverage Metric: 44.00 / 76 (57.9%):  50%|████▉     | 75/151 [00:01&lt;00:01, 57.41it/s]\n\n\n\n\n2025/07/28 18:21:42 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 44.00 / 78 (56.4%):  51%|█████     | 77/151 [00:01&lt;00:01, 58.30it/s]\n\n\n\n\n2025/07/28 18:21:42 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 47.00 / 84 (56.0%):  56%|█████▌    | 84/151 [00:01&lt;00:01, 60.44it/s]\n\n\n\n\n2025/07/28 18:21:42 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:42 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 51.00 / 89 (57.3%):  58%|█████▊    | 88/151 [00:01&lt;00:01, 60.44it/s]\n\n\n\n\n2025/07/28 18:21:43 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:43 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:43 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 52.00 / 90 (57.8%):  59%|█████▉    | 89/151 [00:01&lt;00:01, 60.44it/s]\n\n\n\n\n2025/07/28 18:21:43 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 55.00 / 96 (57.3%):  63%|██████▎   | 95/151 [00:01&lt;00:00, 60.62it/s]\n\n\n\n\n2025/07/28 18:21:43 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n\n\n\n\n\nAverage Metric: 56.00 / 97 (57.7%):  64%|██████▎   | 96/151 [00:01&lt;00:00, 60.62it/s]\n\n\n\n\n2025/07/28 18:21:43 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 59.00 / 107 (55.1%):  70%|███████   | 106/151 [00:01&lt;00:00, 67.41it/s]\n\n\n\n\n2025/07/28 18:21:43 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n\n\n\n\n\nAverage Metric: 59.00 / 108 (54.6%):  72%|███████▏  | 108/151 [00:01&lt;00:00, 69.63it/s]\n\n\n\n\n2025/07/28 18:21:43 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 62.00 / 112 (55.4%):  74%|███████▎  | 111/151 [00:01&lt;00:00, 69.63it/s]\n\n\n\n\n2025/07/28 18:21:43 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:43 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 69.00 / 123 (56.1%):  81%|████████  | 122/151 [00:01&lt;00:00, 69.40it/s]\n\n\n\n\n2025/07/28 18:21:43 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:21:43 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 87.00 / 151 (57.6%): 100%|██████████| 151/151 [00:02&lt;00:00, 60.17it/s]\n\n\n\n\n2025/07/28 18:21:43 INFO dspy.evaluate.evaluate: Average Metric: 87.0 / 151 (57.6%)\n\n\n\n\n\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/c348c68458124441865ac735d0b7d641\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_gemini_gemini-2_5-flash-lite at: http://localhost:5000/#/experiments/1/runs/598582fb690540e7baca55a097fee220\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 22.00 / 32 (68.8%):  21%|██        | 31/151 [00:00&lt;00:01, 64.25it/s]\n\n\n\n\n2025/07/28 18:21:44 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 69.00 / 100 (69.0%):  66%|██████▌   | 99/151 [00:01&lt;00:00, 62.91it/s]\n\n\n\n\n2025/07/28 18:21:45 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 106.00 / 151 (70.2%): 100%|██████████| 151/151 [00:02&lt;00:00, 51.93it/s]\n\n\n\n\n2025/07/28 18:21:47 INFO dspy.evaluate.evaluate: Average Metric: 106.0 / 151 (70.2%)\n\n\n\n\n\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/853504669f224faf8773cf2d9436fb41\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_openai_o3-2025-04-16 at: http://localhost:5000/#/experiments/1/runs/f122d81f9c1d46d582ce64553f6ee3ea\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 103.00 / 151 (68.2%): 100%|██████████| 151/151 [00:02&lt;00:00, 67.19it/s]\n\n\n\n\n2025/07/28 18:21:49 INFO dspy.evaluate.evaluate: Average Metric: 103.0 / 151 (68.2%)\n\n\n\n\n\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/96826db5718c45d6a2dc0b2c5526441e\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_anthropic_claude-opus-4-20250514 at: http://localhost:5000/#/experiments/1/runs/d329de90de1e40e0b467681f0442656a\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 103.00 / 151 (68.2%): 100%|██████████| 151/151 [00:02&lt;00:00, 71.07it/s] \n\n\n\n\n2025/07/28 18:21:51 INFO dspy.evaluate.evaluate: Average Metric: 103.0 / 151 (68.2%)\n\n\n\n\n\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/1fbbc1c758204d438fd050d77d524632\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_gemini_gemini-2_5-pro at: http://localhost:5000/#/experiments/1/runs/6e2dd13cb21f455c905159caa8335678\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run gate_dataset_results_full at: http://localhost:5000/#/experiments/1/runs/51176a64c2af4fbc803a1e1f0775e924\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n\n\n\n\n\n\n\n\nCollapse MLflow Trace\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWe will now run the evaluation suite over the entire gate dataset for all the models in the above list.\n\n\n\n\n\n\n\n\n\n\n\n\n\n                                  LLM  Evaluation Score\n0           openai/gpt-4.1-2025-04-14             62.91\n1      openai/gpt-4.1-mini-2025-04-14             53.64\n2           openai/o4-mini-2025-04-16             62.91\n3  anthropic/claude-sonnet-4-20250514             62.91\n4             gemini/gemini-2.5-flash             63.58\n5        gemini/gemini-2.5-flash-lite             57.62\n6                openai/o3-2025-04-16             70.20\n7    anthropic/claude-opus-4-20250514             68.21\n8               gemini/gemini-2.5-pro             68.21\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFrom the above table, we see a few interesting things:\n\n\n\nBy default, most of the reasoning models perform better on the “gate” dataset, with OAI O3 performing the best with a score of 70.20%\n\n\nReasoning models from the remaining two frontier labs score the same i.e 68.21%\n\n\nWe also see that the smaller reasoning models perform similar across the labs, with an average score of 63.58%, but at a significantly lower cost.\n\n\nThe outputs from sonnet-4 failed the structured output test, but this could be fixed using the DSPy TypingPredictor in the future. More on this later!\n\n\nFinally, while a non-reasoning model like GPT-4.1 performs as well as the small reasoning models, the price of input/outputs tokens for GPT-4.1 is significantly higher compared to it’s counterparts.\n\n\n\nWe will also run the test over the “probe” dataset, before deciding our final list of LLMs based on the performance-to-cost ratio.\n\n\n\n\n\n\n\n\n\n\n\n\n\nProbe Dataset Results¶\n\n\n\n\n\n\n\n\n\n\n\n\n\nAverage Metric: 150.00 / 200 (75.0%): 100%|██████████| 200/200 [00:02&lt;00:00, 69.58it/s]\n\n\n\n\n2025/07/28 18:22:15 INFO dspy.evaluate.evaluate: Average Metric: 150.0 / 200 (75.0%)\n\n\n\n\n\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/6cccc46d61ae4365b9921586ed0ef193\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run probe_openai_gpt-4_1-2025-04-14 at: http://localhost:5000/#/experiments/1/runs/3b839cca27264ffaaace2643e23975c7\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 130.00 / 200 (65.0%): 100%|██████████| 200/200 [00:03&lt;00:00, 60.95it/s]\n\n\n\n\n2025/07/28 18:22:18 INFO dspy.evaluate.evaluate: Average Metric: 130.0 / 200 (65.0%)\n\n\n\n\n\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/8c371daf948343eb8a18370f1756a850\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run probe_openai_gpt-4_1-mini-2025-04-14 at: http://localhost:5000/#/experiments/1/runs/dcfce79bf36446929e2924273e0a2db5\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 79.00 / 102 (77.5%):  50%|█████     | 101/200 [00:02&lt;00:02, 36.80it/s]\n\n\n\n\n2025/07/28 18:22:20 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 122.00 / 157 (77.7%):  78%|███████▊  | 156/200 [00:03&lt;00:00, 48.01it/s]\n\n\n\n\n2025/07/28 18:22:21 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 157.00 / 200 (78.5%): 100%|██████████| 200/200 [00:03&lt;00:00, 53.12it/s]\n\n\n\n\n2025/07/28 18:22:22 INFO dspy.evaluate.evaluate: Average Metric: 157.0 / 200 (78.5%)\n\n\n\n\n\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/758a3867a75541c2a3eab91ac6faf42b\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run probe_openai_o4-mini-2025-04-16 at: http://localhost:5000/#/experiments/1/runs/aafc2286d5ab4819aa467440328eed77\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 150.00 / 200 (75.0%): 100%|██████████| 200/200 [00:04&lt;00:00, 49.31it/s]\n\n\n\n\n2025/07/28 18:22:26 INFO dspy.evaluate.evaluate: Average Metric: 150.0 / 200 (75.0%)\n\n\n\n\n\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/3b6644b108a241f99e8dd0e2e1d051fa\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run probe_anthropic_claude-sonnet-4-20250514 at: http://localhost:5000/#/experiments/1/runs/3b4f42a464cd4e3496f4b1755decd7ce\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 24.00 / 31 (77.4%):  15%|█▌        | 30/200 [00:00&lt;00:03, 50.11it/s]\n\n\n\n\n2025/07/28 18:22:27 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 148.00 / 200 (74.0%): 100%|██████████| 200/200 [00:03&lt;00:00, 51.35it/s]\n\n\n\n\n2025/07/28 18:22:30 INFO dspy.evaluate.evaluate: Average Metric: 148.0 / 200 (74.0%)\n\n\n\n\n\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/99af33e15c234269aa69333eebecb916\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run probe_gemini_gemini-2_5-flash at: http://localhost:5000/#/experiments/1/runs/7d11aa5ec28841adafa6b0e66733e13d\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n  0%|          | 0/200 [00:00&lt;?, ?it/s]\n\n\n\n\n2025/07/28 18:22:30 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:30 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:30 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:30 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 11.00 / 16 (68.8%):   8%|▊         | 15/200 [00:00&lt;00:04, 41.77it/s]\n\n\n\n\n2025/07/28 18:22:31 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:31 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 18.00 / 24 (75.0%):  12%|█▏        | 23/200 [00:00&lt;00:03, 50.59it/s]\n\n\n\n\n2025/07/28 18:22:31 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:31 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 19.00 / 26 (73.1%):  12%|█▎        | 25/200 [00:00&lt;00:03, 50.59it/s]\n\n\n\n\n2025/07/28 18:22:31 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:31 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 21.00 / 31 (67.7%):  15%|█▌        | 30/200 [00:00&lt;00:02, 58.14it/s]\n\n\n\n\n2025/07/28 18:22:31 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:31 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 22.00 / 33 (66.7%):  16%|█▌        | 32/200 [00:00&lt;00:02, 58.14it/s]\n\n\n\n\n2025/07/28 18:22:31 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:31 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 27.00 / 42 (64.3%):  20%|██        | 41/200 [00:01&lt;00:04, 33.61it/s]\n\n\n\n\n2025/07/28 18:22:31 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:31 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 32.00 / 53 (60.4%):  26%|██▌       | 52/200 [00:01&lt;00:03, 43.63it/s]\n\n\n\n\n2025/07/28 18:22:31 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:32 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 36.00 / 61 (59.0%):  30%|███       | 60/200 [00:01&lt;00:02, 49.53it/s]\n\n\n\n\n2025/07/28 18:22:32 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:32 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:32 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n\n\n\n\n\nAverage Metric: 39.00 / 65 (60.0%):  32%|███▏      | 64/200 [00:01&lt;00:02, 60.32it/s]\n\n\n\n\n2025/07/28 18:22:32 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 39.00 / 66 (59.1%):  32%|███▎      | 65/200 [00:01&lt;00:02, 60.32it/s]\n\n\n\n\n2025/07/28 18:22:32 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n\n\n\n\n\nAverage Metric: 41.00 / 68 (60.3%):  34%|███▎      | 67/200 [00:01&lt;00:02, 60.32it/s]\n\n\n\n\n2025/07/28 18:22:32 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:32 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:32 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 54.00 / 84 (64.3%):  42%|████▏     | 83/200 [00:01&lt;00:01, 69.98it/s]\n\n\n\n\n2025/07/28 18:22:32 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 60.00 / 93 (64.5%):  46%|████▌     | 92/200 [00:01&lt;00:01, 70.30it/s]\n\n\n\n\n2025/07/28 18:22:32 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:32 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 62.00 / 96 (64.6%):  48%|████▊     | 95/200 [00:01&lt;00:01, 70.30it/s]\n\n\n\n\n2025/07/28 18:22:32 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n\n\n\n\n\nAverage Metric: 62.00 / 97 (63.9%):  48%|████▊     | 96/200 [00:01&lt;00:01, 70.30it/s]\n\n\n\n\n2025/07/28 18:22:32 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 62.00 / 98 (63.3%):  49%|████▉     | 98/200 [00:01&lt;00:01, 74.90it/s]\n\n\n\n\n2025/07/28 18:22:32 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n\n\n\n\n\nAverage Metric: 63.00 / 99 (63.6%):  49%|████▉     | 98/200 [00:01&lt;00:01, 74.90it/s]\n\n\n\n\n2025/07/28 18:22:32 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 64.00 / 102 (62.7%):  50%|█████     | 101/200 [00:01&lt;00:01, 74.90it/s]\n\n\n\n\n2025/07/28 18:22:32 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n\n\n\n\n\nAverage Metric: 65.00 / 103 (63.1%):  51%|█████     | 102/200 [00:01&lt;00:01, 74.90it/s]\n\n\n\n\n2025/07/28 18:22:32 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 73.00 / 115 (63.5%):  57%|█████▋    | 114/200 [00:02&lt;00:01, 56.16it/s]\n\n\n\n\n2025/07/28 18:22:32 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:32 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 76.00 / 119 (63.9%):  59%|█████▉    | 118/200 [00:02&lt;00:01, 56.16it/s]\n\n\n\n\n2025/07/28 18:22:33 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:33 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 78.00 / 123 (63.4%):  61%|██████    | 122/200 [00:02&lt;00:01, 53.09it/s]\n\n\n\n\n2025/07/28 18:22:33 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:33 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 82.00 / 129 (63.6%):  64%|██████▍   | 128/200 [00:02&lt;00:01, 45.61it/s]\n\n\n\n\n2025/07/28 18:22:33 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:33 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 82.00 / 130 (63.1%):  64%|██████▍   | 129/200 [00:02&lt;00:01, 45.61it/s]\n\n\n\n\n2025/07/28 18:22:33 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:33 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 82.00 / 134 (61.2%):  66%|██████▋   | 133/200 [00:02&lt;00:01, 46.87it/s]\n\n\n\n\n2025/07/28 18:22:33 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n\n\n\n\n\nAverage Metric: 83.00 / 135 (61.5%):  67%|██████▋   | 134/200 [00:02&lt;00:01, 46.87it/s]\n\n\n\n\n2025/07/28 18:22:33 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 99.00 / 159 (62.3%):  80%|███████▉  | 159/200 [00:03&lt;00:00, 46.30it/s]\n\n\n\n\n2025/07/28 18:22:33 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n2025/07/28 18:22:33 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 104.00 / 165 (63.0%):  82%|████████▏ | 164/200 [00:03&lt;00:01, 35.61it/s]\n\n\n\n\n2025/07/28 18:22:34 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n\n\n\n\n\nAverage Metric: 105.00 / 166 (63.3%):  82%|████████▎ | 165/200 [00:03&lt;00:00, 35.61it/s]\n\n\n\n\n2025/07/28 18:22:34 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 18:22:34 WARNING dspy.clients.lm: LM response was truncated due to exceeding max_tokens=20000. You can inspect the latest LM interactions with `dspy.inspect_history()`. To avoid truncation, consider passing a larger max_tokens when setting up dspy.LM. You may also consider increasing the temperature (currently 0.0)  if the reason for truncation is repetition.\n\n\n\n\n\nAverage Metric: 105.00 / 167 (62.9%):  83%|████████▎ | 166/200 [00:03&lt;00:00, 35.61it/s]\n\n\n\n\n2025/07/28 18:22:34 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 128.00 / 200 (64.0%): 100%|██████████| 200/200 [00:03&lt;00:00, 52.47it/s]\n\n\n\n\n2025/07/28 18:22:34 INFO dspy.evaluate.evaluate: Average Metric: 128.0 / 200 (64.0%)\n\n\n\n\n\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/20a1fa6983f349a0888cca2696bcae76\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run probe_gemini_gemini-2_5-flash-lite at: http://localhost:5000/#/experiments/1/runs/0c5ca9e2a1e84041b2937cd264727d94\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 48.00 / 61 (78.7%):  30%|███       | 60/200 [00:01&lt;00:03, 45.14it/s]\n\n\n\n\n2025/07/28 18:22:35 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 66.00 / 83 (79.5%):  41%|████      | 82/200 [00:01&lt;00:01, 76.08it/s]\n\n\n\n\n2025/07/28 18:22:36 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n\n\n\n\n\nAverage Metric: 162.00 / 200 (81.0%): 100%|██████████| 200/200 [00:03&lt;00:00, 52.77it/s]\n\n\n\n\n2025/07/28 18:22:38 INFO dspy.evaluate.evaluate: Average Metric: 162.0 / 200 (81.0%)\n\n\n\n\n\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/513ceb4b58c44816894f0196c05f1d27\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run probe_openai_o3-2025-04-16 at: http://localhost:5000/#/experiments/1/runs/07039e1be0154904a14bf5b215b36bfb\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 160.00 / 200 (80.0%): 100%|██████████| 200/200 [00:04&lt;00:00, 46.05it/s]\n\n\n\n\n2025/07/28 18:22:43 INFO dspy.evaluate.evaluate: Average Metric: 160.0 / 200 (80.0%)\n\n\n\n\n\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/fa3840a6fc86489195ff4b93ba3525d3\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run probe_anthropic_claude-opus-4-20250514 at: http://localhost:5000/#/experiments/1/runs/242a848220a34df18fefcd752c6b1edf\n🧪 View experiment at: http://localhost:5000/#/experiments/1\nAverage Metric: 157.00 / 200 (78.5%): 100%|██████████| 200/200 [00:20&lt;00:00,  9.94it/s]\n\n\n\n\n2025/07/28 18:23:03 INFO dspy.evaluate.evaluate: Average Metric: 157.0 / 200 (78.5%)\n\n\n\n\n\n🏃 View run eval at: http://localhost:5000/#/experiments/1/runs/28468bf07dea42438e3b2835cf8bd5d1\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run probe_gemini_gemini-2_5-pro at: http://localhost:5000/#/experiments/1/runs/b9decff973db41ce9863d93d41eff7c3\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n🏃 View run probe_dataset_results_full at: http://localhost:5000/#/experiments/1/runs/7f0b1ff0f4e94143b9fb5509ed6319be\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n\n\n\n\n\n\n\n\nCollapse MLflow Trace\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                                  LLM  Evaluation Score\n0           openai/gpt-4.1-2025-04-14              75.0\n1      openai/gpt-4.1-mini-2025-04-14              65.0\n2           openai/o4-mini-2025-04-16              78.5\n3  anthropic/claude-sonnet-4-20250514              75.0\n4             gemini/gemini-2.5-flash              74.0\n5        gemini/gemini-2.5-flash-lite              64.0\n6                openai/o3-2025-04-16              81.0\n7    anthropic/claude-opus-4-20250514              80.0\n8               gemini/gemini-2.5-pro              78.5\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFrom the above, we see that:\n\n\n\nSimilar to the gate-only results, the probe dataset results should that OAI o3 performs the best, with 81% accuracy.\n\n\nAnthropic Opus is a close second, with 80% accuracy. However, it is significantly more expensive, at $15/Million tokens 😱\n\n\nGoogle’s Frontier model Gemini-pro is third, with 78% accuracy.\n\n\nWe see that the smaller reasoning models do quite well, with o4-mini getting around 78.5% accuracy, Anthropic sonnet-4 around 75% accuracy, and Google Gemini 2.5-flash at 74%. Note that, even here, Anthropic’s costs are significantly higher than the other models.\n\n\nWe also see that the “mini/lite” version of models provided by Google and OAI have similar performance, around ~65%.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven the above insights, we can now select our models:\n\n\n\nAnthropic Cost\n\n\nAll Anthropic models are significantly more expensive than the competitors, and have a performance on par or below the competetiors.\n\n\nHence, from our final list, we will exclude Anthropic models.\n\n\n\n\nFrontier Model Cost\n\n\nFrontier models are generally quite expensive.\n\n\nFrom our tests, we see that OAI o3 has the best performace, with Google Gemini 2.5-pro having a performance on or below o3.\n\n\nTo save costs, we will keep only one frontier model in the final list i.e o3\n\n\n\n\nSmaller Reasoning Models\n\n\nWe also see the following models showing promising results across the board:\n\n\no4-mini\n\n\ngemini-2.5-flash\n\n\n\n\n\n\nNon reaosning models\n\n\nGPT-4.1 seems to perform as well as the smaller reasoning models, but it is about 50% more expensive($2/Million input tokens).\n\n\nGiven that we already plan to include models with similar reasoning capabilities, we will exclude GPT-4.1 from our final list.\n\n\n\n\nSmall models\n\n\nCurrently, the small models variants of all models are significantly behind the larger models.\n\n\nWhile they are cost effective, and likely their performance can be increased with improvements to the prompts, fine-tuning, etc., we will skip this models for now due to time constraits.\n\n\n\n\n\nHence, our final list of models will be:\n\n\n\no3\n\n\no4-mini\n\n\ngemini-2.5-flash\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nError Analysis¶\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven that we have the results for the gate and probe datasets, we can perform some quick preliminary error analysis to understand the performance of the models on these datasets.\n\n\nWe will restrict our analysis to the final list of models(o3, o4-mini and gemini-2.5-flash).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n18\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n{'model_name': 'openai/o4-mini-2025-04-16',\n 'turn_em_metric_score': 1.0,\n 'conversation_context': 'None',\n 'evidence_snippets': \"[PRE]\\nentergy corporation and subsidiaries management's financial discussion and analysis refer to 201cselected financial data - five-year comparison of entergy corporation and subsidiaries 201d which accompanies entergy corporation 2019s financial statements in this report for further information with respect to operating statistics . in november 2007 the board approved a plan to pursue a separation of entergy 2019s non-utility nuclear business from entergy through a spin-off of the business to entergy shareholders . in april 2010 , entergy announced that it planned to unwind the business infrastructure associated with the proposed spin-off transaction . as a result of the plan to unwind the business infrastructure , entergy recorded expenses in 2010 for the write-off of certain capitalized costs incurred in connection with the planned spin-off transaction . these costs are discussed in more detail below and throughout this section . net revenue utility following is an analysis of the change in net revenue comparing 2010 to 2009 . amount ( in millions ) .\\n[/PRE]\\n[POST]\\nthe volume/weather variance is primarily due to an increase of 8362 gwh , or 8% ( 8 % ) , in billed electricity usage in all retail sectors , including the effect on the residential sector of colder weather in the first quarter 2010 compared to 2009 and warmer weather in the second and third quarters 2010 compared to 2009 . the industrial sector reflected strong sales growth on continuing signs of economic recovery . the improvement in this sector was primarily driven by inventory restocking and strong exports with the chemicals , refining , and miscellaneous manufacturing sectors leading the improvement . the retail electric price variance is primarily due to : increases in the formula rate plan riders at entergy gulf states louisiana effective november 2009 , january 2010 , and september 2010 , at entergy louisiana effective november 2009 , and at entergy mississippi effective july 2009 ; a base rate increase at entergy arkansas effective july 2010 ; rate actions at entergy texas , including base rate increases effective in may and august 2010 ; a formula rate plan provision of $ 16.6 million recorded in the third quarter 2009 for refunds that were made to customers in accordance with settlements approved by the lpsc ; and the recovery in 2009 by entergy arkansas of 2008 extraordinary storm costs , as approved by the apsc , which ceased in january 2010 . the recovery of storm costs is offset in other operation and maintenance expenses . see note 2 to the financial statements for further discussion of the proceedings referred to above. .\\n[/POST]\",\n 'table': '| Row | 2009 net revenue | volume/weather | retail electric price | provision for regulatory proceedings | rough production cost equalization | ano decommissioning trust | fuel recovery | other | 2010 net revenue |\\n|---|---|---|---|---|---|---|---|---|---|\\n| amount ( in millions ) | 4694.0 | 231.0 | 137.0 | 26.0 | 19.0 | -24.0 | -44.0 | 12.0 | 5051.0 |',\n 'question': 'what was the difference in net revenue between 2009 and 2010?',\n 'id': 'Single_ETR/2011/page_22.pdf-3',\n 'doc_pre_text': \"entergy corporation and subsidiaries management's financial discussion and analysis refer to 201cselected financial data - five-year comparison of entergy corporation and subsidiaries 201d which accompanies entergy corporation 2019s financial statements in this report for further information with respect to operating statistics . in november 2007 the board approved a plan to pursue a separation of entergy 2019s non-utility nuclear business from entergy through a spin-off of the business to entergy shareholders . in april 2010 , entergy announced that it planned to unwind the business infrastructure associated with the proposed spin-off transaction . as a result of the plan to unwind the business infrastructure , entergy recorded expenses in 2010 for the write-off of certain capitalized costs incurred in connection with the planned spin-off transaction . these costs are discussed in more detail below and throughout this section . net revenue utility following is an analysis of the change in net revenue comparing 2010 to 2009 . amount ( in millions ) .\",\n 'doc_post_text': 'the volume/weather variance is primarily due to an increase of 8362 gwh , or 8% ( 8 % ) , in billed electricity usage in all retail sectors , including the effect on the residential sector of colder weather in the first quarter 2010 compared to 2009 and warmer weather in the second and third quarters 2010 compared to 2009 . the industrial sector reflected strong sales growth on continuing signs of economic recovery . the improvement in this sector was primarily driven by inventory restocking and strong exports with the chemicals , refining , and miscellaneous manufacturing sectors leading the improvement . the retail electric price variance is primarily due to : increases in the formula rate plan riders at entergy gulf states louisiana effective november 2009 , january 2010 , and september 2010 , at entergy louisiana effective november 2009 , and at entergy mississippi effective july 2009 ; a base rate increase at entergy arkansas effective july 2010 ; rate actions at entergy texas , including base rate increases effective in may and august 2010 ; a formula rate plan provision of $ 16.6 million recorded in the third quarter 2009 for refunds that were made to customers in accordance with settlements approved by the lpsc ; and the recovery in 2009 by entergy arkansas of 2008 extraordinary storm costs , as approved by the apsc , which ceased in january 2010 . the recovery of storm costs is offset in other operation and maintenance expenses . see note 2 to the financial statements for further discussion of the proceedings referred to above. .',\n 'doc_table': {'amount ( in millions )': {'2009 net revenue': 4694.0,\n   'volume/weather': 231.0,\n   'retail electric price': 137.0,\n   'provision for regulatory proceedings': 26.0,\n   'rough production cost equalization': 19.0,\n   'ano decommissioning trust': -24.0,\n   'fuel recovery': -44.0,\n   'other': 12.0,\n   '2010 net revenue': 5051.0}},\n 'dialogue_conv_questions': ['what was the difference in net revenue between 2009 and 2010?',\n  'and the specific value for 2009 again?',\n  'so what was the percentage change during this time?'],\n 'dialogue_conv_answers': ['357', '4694', '7.61%'],\n 'dialogue_turn_program': ['subtract(5051, 4694)',\n  '4694',\n  'subtract(5051, 4694), divide(#0, 4694)'],\n 'dialogue_executed_answers': [357.0, 4694.0, 0.07605],\n 'dialogue_qa_split': [False, False, False],\n 'features_num_dialogue_turns': 3,\n 'features_has_type2_question': False,\n 'features_has_duplicate_columns': False,\n 'features_has_non_numeric_values': False,\n 'ground_truth_answer': 357.0,\n 'reasoning': 'The table shows 2009 net revenue of 4,694.0 million and 2010 net revenue of 5,051.0 million. The difference is 5,051.0 minus 4,694.0, which equals 357.0 million.',\n 'ops': 'subtract(const_5051.0, const_4694.0)',\n 'answer': '357.0'}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n{'model_name': 'openai/o4-mini-2025-04-16',\n 'turn_em_metric_score': 1.0,\n 'conversation_context': 'None',\n 'evidence_snippets': \"[PRE]\\nentergy corporation and subsidiaries management's financial discussion and analysis refer to 201cselected financial data - five-year comparison of entergy corporation and subsidiaries 201d which accompanies entergy corporation 2019s financial statements in this report for further information with respect to operating statistics . in november 2007 the board approved a plan to pursue a separation of entergy 2019s non-utility nuclear business from entergy through a spin-off of the business to entergy shareholders . in april 2010 , entergy announced that it planned to unwind the business infrastructure associated with the proposed spin-off transaction . as a result of the plan to unwind the business infrastructure , entergy recorded expenses in 2010 for the write-off of certain capitalized costs incurred in connection with the planned spin-off transaction . these costs are discussed in more detail below and throughout this section . net revenue utility following is an analysis of the change in net revenue comparing 2010 to 2009 . amount ( in millions ) .\\n[/PRE]\\n[POST]\\nthe volume/weather variance is primarily due to an increase of 8362 gwh , or 8% ( 8 % ) , in billed electricity usage in all retail sectors , including the effect on the residential sector of colder weather in the first quarter 2010 compared to 2009 and warmer weather in the second and third quarters 2010 compared to 2009 . the industrial sector reflected strong sales growth on continuing signs of economic recovery . the improvement in this sector was primarily driven by inventory restocking and strong exports with the chemicals , refining , and miscellaneous manufacturing sectors leading the improvement . the retail electric price variance is primarily due to : increases in the formula rate plan riders at entergy gulf states louisiana effective november 2009 , january 2010 , and september 2010 , at entergy louisiana effective november 2009 , and at entergy mississippi effective july 2009 ; a base rate increase at entergy arkansas effective july 2010 ; rate actions at entergy texas , including base rate increases effective in may and august 2010 ; a formula rate plan provision of $ 16.6 million recorded in the third quarter 2009 for refunds that were made to customers in accordance with settlements approved by the lpsc ; and the recovery in 2009 by entergy arkansas of 2008 extraordinary storm costs , as approved by the apsc , which ceased in january 2010 . the recovery of storm costs is offset in other operation and maintenance expenses . see note 2 to the financial statements for further discussion of the proceedings referred to above. .\\n[/POST]\",\n 'table': '| Row | 2009 net revenue | volume/weather | retail electric price | provision for regulatory proceedings | rough production cost equalization | ano decommissioning trust | fuel recovery | other | 2010 net revenue |\\n|---|---|---|---|---|---|---|---|---|---|\\n| amount ( in millions ) | 4694.0 | 231.0 | 137.0 | 26.0 | 19.0 | -24.0 | -44.0 | 12.0 | 5051.0 |',\n 'question': 'what was the difference in net revenue between 2009 and 2010?',\n 'id': 'Single_ETR/2011/page_22.pdf-3',\n 'doc_pre_text': \"entergy corporation and subsidiaries management's financial discussion and analysis refer to 201cselected financial data - five-year comparison of entergy corporation and subsidiaries 201d which accompanies entergy corporation 2019s financial statements in this report for further information with respect to operating statistics . in november 2007 the board approved a plan to pursue a separation of entergy 2019s non-utility nuclear business from entergy through a spin-off of the business to entergy shareholders . in april 2010 , entergy announced that it planned to unwind the business infrastructure associated with the proposed spin-off transaction . as a result of the plan to unwind the business infrastructure , entergy recorded expenses in 2010 for the write-off of certain capitalized costs incurred in connection with the planned spin-off transaction . these costs are discussed in more detail below and throughout this section . net revenue utility following is an analysis of the change in net revenue comparing 2010 to 2009 . amount ( in millions ) .\",\n 'doc_post_text': 'the volume/weather variance is primarily due to an increase of 8362 gwh , or 8% ( 8 % ) , in billed electricity usage in all retail sectors , including the effect on the residential sector of colder weather in the first quarter 2010 compared to 2009 and warmer weather in the second and third quarters 2010 compared to 2009 . the industrial sector reflected strong sales growth on continuing signs of economic recovery . the improvement in this sector was primarily driven by inventory restocking and strong exports with the chemicals , refining , and miscellaneous manufacturing sectors leading the improvement . the retail electric price variance is primarily due to : increases in the formula rate plan riders at entergy gulf states louisiana effective november 2009 , january 2010 , and september 2010 , at entergy louisiana effective november 2009 , and at entergy mississippi effective july 2009 ; a base rate increase at entergy arkansas effective july 2010 ; rate actions at entergy texas , including base rate increases effective in may and august 2010 ; a formula rate plan provision of $ 16.6 million recorded in the third quarter 2009 for refunds that were made to customers in accordance with settlements approved by the lpsc ; and the recovery in 2009 by entergy arkansas of 2008 extraordinary storm costs , as approved by the apsc , which ceased in january 2010 . the recovery of storm costs is offset in other operation and maintenance expenses . see note 2 to the financial statements for further discussion of the proceedings referred to above. .',\n 'doc_table': {'amount ( in millions )': {'2009 net revenue': 4694.0,\n   'volume/weather': 231.0,\n   'retail electric price': 137.0,\n   'provision for regulatory proceedings': 26.0,\n   'rough production cost equalization': 19.0,\n   'ano decommissioning trust': -24.0,\n   'fuel recovery': -44.0,\n   'other': 12.0,\n   '2010 net revenue': 5051.0}},\n 'dialogue_conv_questions': ['what was the difference in net revenue between 2009 and 2010?',\n  'and the specific value for 2009 again?',\n  'so what was the percentage change during this time?'],\n 'dialogue_conv_answers': ['357', '4694', '7.61%'],\n 'dialogue_turn_program': ['subtract(5051, 4694)',\n  '4694',\n  'subtract(5051, 4694), divide(#0, 4694)'],\n 'dialogue_executed_answers': [357.0, 4694.0, 0.07605],\n 'dialogue_qa_split': [False, False, False],\n 'features_num_dialogue_turns': 3,\n 'features_has_type2_question': False,\n 'features_has_duplicate_columns': False,\n 'features_has_non_numeric_values': False,\n 'ground_truth_answer': 357.0,\n 'reasoning': 'The table shows 2009 net revenue of 4,694.0 million and 2010 net revenue of 5,051.0 million. The difference is 5,051.0 minus 4,694.0, which equals 357.0 million.',\n 'ops': 'subtract(const_5051.0, const_4694.0)',\n 'answer': '357.0'}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWe’ll use Gemini Flash 2.5 as our judge model, for classifying the generated predictions for error analysis\n\n\n\n\n\n\n\n\n\n\n\n\n\nJudging examples:   1%|          | 2/289 [00:00&lt;00:17, 16.77it/s]2025/07/28 20:07:50 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:   1%|▏         | 4/289 [00:00&lt;00:19, 14.79it/s]2025/07/28 20:07:50 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:   2%|▏         | 6/289 [00:00&lt;00:19, 14.85it/s]2025/07/28 20:07:50 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:50 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:   4%|▍         | 11/289 [00:00&lt;00:22, 12.42it/s]2025/07/28 20:07:51 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:   5%|▍         | 14/289 [00:00&lt;00:18, 15.05it/s]2025/07/28 20:07:51 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:51 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:   6%|▌         | 17/289 [00:01&lt;00:15, 18.13it/s]2025/07/28 20:07:51 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:51 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:   7%|▋         | 20/289 [00:01&lt;00:13, 19.77it/s]2025/07/28 20:07:51 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:   8%|▊         | 24/289 [00:01&lt;00:11, 23.48it/s]2025/07/28 20:07:51 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  10%|▉         | 28/289 [00:01&lt;00:09, 26.52it/s]2025/07/28 20:07:51 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  11%|█         | 32/289 [00:01&lt;00:09, 27.24it/s]2025/07/28 20:07:51 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:52 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:52 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  12%|█▏        | 35/289 [00:01&lt;00:10, 23.43it/s]2025/07/28 20:07:52 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  13%|█▎        | 38/289 [00:01&lt;00:10, 23.92it/s]2025/07/28 20:07:52 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:52 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  14%|█▍        | 41/289 [00:01&lt;00:10, 23.64it/s]2025/07/28 20:07:52 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  15%|█▌        | 44/289 [00:02&lt;00:10, 24.06it/s]2025/07/28 20:07:52 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:52 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  16%|█▋        | 47/289 [00:02&lt;00:09, 24.36it/s]2025/07/28 20:07:52 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  17%|█▋        | 50/289 [00:02&lt;00:09, 24.44it/s]2025/07/28 20:07:52 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:52 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:52 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  18%|█▊        | 53/289 [00:02&lt;00:10, 23.14it/s]2025/07/28 20:07:52 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:53 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  20%|██        | 59/289 [00:02&lt;00:11, 20.29it/s]2025/07/28 20:07:53 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  21%|██▏       | 62/289 [00:03&lt;00:13, 16.86it/s]2025/07/28 20:07:53 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:53 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  22%|██▏       | 65/289 [00:03&lt;00:11, 19.32it/s]2025/07/28 20:07:53 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:53 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:53 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  24%|██▎       | 68/289 [00:03&lt;00:10, 20.77it/s]2025/07/28 20:07:53 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:53 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:53 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  25%|██▍       | 71/289 [00:03&lt;00:09, 22.32it/s]2025/07/28 20:07:53 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  26%|██▌       | 74/289 [00:03&lt;00:09, 22.84it/s]2025/07/28 20:07:53 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  27%|██▋       | 77/289 [00:03&lt;00:09, 22.32it/s]2025/07/28 20:07:54 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  28%|██▊       | 80/289 [00:03&lt;00:10, 20.68it/s]2025/07/28 20:07:54 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  30%|██▉       | 86/289 [00:04&lt;00:09, 21.69it/s]2025/07/28 20:07:54 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:54 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:54 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  31%|███       | 89/289 [00:04&lt;00:09, 21.10it/s]2025/07/28 20:07:54 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  32%|███▏      | 92/289 [00:04&lt;00:09, 21.50it/s]2025/07/28 20:07:54 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:54 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  33%|███▎      | 95/289 [00:04&lt;00:08, 22.81it/s]2025/07/28 20:07:54 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  34%|███▍      | 98/289 [00:04&lt;00:07, 23.91it/s]2025/07/28 20:07:55 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  35%|███▍      | 101/289 [00:04&lt;00:07, 24.41it/s]2025/07/28 20:07:55 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:55 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  36%|███▌      | 104/289 [00:04&lt;00:08, 20.70it/s]2025/07/28 20:07:55 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:55 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  37%|███▋      | 107/289 [00:05&lt;00:11, 16.11it/s]2025/07/28 20:07:55 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  38%|███▊      | 110/289 [00:05&lt;00:09, 18.39it/s]2025/07/28 20:07:55 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:55 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  39%|███▉      | 114/289 [00:05&lt;00:08, 21.66it/s]2025/07/28 20:07:55 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:55 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:55 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  41%|████      | 118/289 [00:05&lt;00:07, 24.12it/s]2025/07/28 20:07:56 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:56 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  42%|████▏     | 122/289 [00:05&lt;00:06, 25.92it/s]2025/07/28 20:07:56 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  44%|████▍     | 128/289 [00:05&lt;00:06, 23.89it/s]2025/07/28 20:07:56 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:56 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  45%|████▌     | 131/289 [00:06&lt;00:06, 22.85it/s]2025/07/28 20:07:56 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  46%|████▋     | 134/289 [00:06&lt;00:06, 23.46it/s]2025/07/28 20:07:56 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  47%|████▋     | 137/289 [00:06&lt;00:06, 23.90it/s]2025/07/28 20:07:56 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:56 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  48%|████▊     | 140/289 [00:06&lt;00:06, 23.84it/s]2025/07/28 20:07:56 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  52%|█████▏    | 149/289 [00:06&lt;00:05, 24.60it/s]2025/07/28 20:07:57 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:57 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:57 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  54%|█████▎    | 155/289 [00:07&lt;00:06, 22.09it/s]2025/07/28 20:07:57 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:57 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:57 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  55%|█████▍    | 158/289 [00:07&lt;00:07, 18.30it/s]2025/07/28 20:07:57 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:57 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  56%|█████▌    | 161/289 [00:07&lt;00:06, 19.50it/s]2025/07/28 20:07:57 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:57 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  57%|█████▋    | 164/289 [00:07&lt;00:05, 21.21it/s]2025/07/28 20:07:58 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:58 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  58%|█████▊    | 168/289 [00:07&lt;00:05, 23.87it/s]2025/07/28 20:07:58 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  60%|█████▉    | 172/289 [00:07&lt;00:04, 25.66it/s]2025/07/28 20:07:58 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:58 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  61%|██████    | 175/289 [00:07&lt;00:04, 26.17it/s]2025/07/28 20:07:58 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  62%|██████▏   | 178/289 [00:08&lt;00:05, 20.48it/s]2025/07/28 20:07:58 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  63%|██████▎   | 181/289 [00:08&lt;00:05, 19.97it/s]2025/07/28 20:07:58 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:58 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  64%|██████▎   | 184/289 [00:08&lt;00:04, 21.03it/s]2025/07/28 20:07:58 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:58 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:58 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  65%|██████▍   | 187/289 [00:08&lt;00:04, 21.89it/s]2025/07/28 20:07:59 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:59 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:59 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  66%|██████▌   | 190/289 [00:08&lt;00:04, 20.94it/s]2025/07/28 20:07:59 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  67%|██████▋   | 193/289 [00:08&lt;00:04, 21.33it/s]2025/07/28 20:07:59 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  68%|██████▊   | 196/289 [00:09&lt;00:04, 21.37it/s]2025/07/28 20:07:59 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:07:59 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  69%|██████▉   | 199/289 [00:09&lt;00:05, 17.97it/s]2025/07/28 20:07:59 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  70%|██████▉   | 201/289 [00:09&lt;00:05, 16.87it/s]2025/07/28 20:07:59 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  70%|███████   | 203/289 [00:09&lt;00:05, 14.73it/s]2025/07/28 20:08:00 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:00 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  71%|███████▏  | 206/289 [00:09&lt;00:04, 17.68it/s]2025/07/28 20:08:00 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  74%|███████▎  | 213/289 [00:09&lt;00:03, 23.63it/s]2025/07/28 20:08:00 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  75%|███████▍  | 216/289 [00:10&lt;00:02, 24.77it/s]2025/07/28 20:08:00 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  76%|███████▌  | 219/289 [00:10&lt;00:02, 25.95it/s]2025/07/28 20:08:00 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:00 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  77%|███████▋  | 222/289 [00:10&lt;00:02, 22.83it/s]2025/07/28 20:08:00 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:00 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  78%|███████▊  | 225/289 [00:10&lt;00:03, 19.59it/s]2025/07/28 20:08:00 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:00 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:01 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  79%|███████▉  | 228/289 [00:10&lt;00:03, 19.79it/s]2025/07/28 20:08:01 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  80%|███████▉  | 231/289 [00:10&lt;00:02, 20.88it/s]2025/07/28 20:08:01 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  81%|████████  | 234/289 [00:10&lt;00:02, 22.36it/s]2025/07/28 20:08:01 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  82%|████████▏ | 237/289 [00:11&lt;00:02, 22.83it/s]2025/07/28 20:08:01 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:01 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:01 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  83%|████████▎ | 240/289 [00:11&lt;00:02, 22.23it/s]2025/07/28 20:08:01 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:01 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  84%|████████▍ | 243/289 [00:11&lt;00:02, 21.50it/s]2025/07/28 20:08:01 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:01 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  85%|████████▌ | 246/289 [00:11&lt;00:02, 14.67it/s]2025/07/28 20:08:02 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  86%|████████▌ | 249/289 [00:11&lt;00:02, 16.99it/s]2025/07/28 20:08:02 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:02 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:02 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  87%|████████▋ | 252/289 [00:11&lt;00:01, 19.29it/s]2025/07/28 20:08:02 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  89%|████████▊ | 256/289 [00:12&lt;00:01, 22.46it/s]2025/07/28 20:08:02 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:02 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  90%|████████▉ | 260/289 [00:12&lt;00:01, 24.88it/s]2025/07/28 20:08:02 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:02 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  91%|█████████ | 263/289 [00:12&lt;00:01, 24.21it/s]2025/07/28 20:08:02 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  92%|█████████▏| 266/289 [00:12&lt;00:00, 25.37it/s]2025/07/28 20:08:02 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:02 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  93%|█████████▎| 269/289 [00:12&lt;00:00, 20.30it/s]2025/07/28 20:08:03 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  94%|█████████▍| 272/289 [00:12&lt;00:00, 19.67it/s]2025/07/28 20:08:03 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:03 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  95%|█████████▌| 275/289 [00:12&lt;00:00, 20.71it/s]2025/07/28 20:08:03 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:03 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  96%|█████████▌| 278/289 [00:13&lt;00:00, 21.31it/s]2025/07/28 20:08:03 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:03 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  97%|█████████▋| 281/289 [00:13&lt;00:00, 22.55it/s]2025/07/28 20:08:03 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:03 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  98%|█████████▊| 284/289 [00:13&lt;00:00, 22.90it/s]2025/07/28 20:08:03 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples:  99%|█████████▉| 287/289 [00:13&lt;00:00, 23.65it/s]2025/07/28 20:08:03 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\n2025/07/28 20:08:03 WARNING dspy.adapters.json_adapter: Failed to use structured output format, falling back to JSON mode.\nJudging examples: 100%|██████████| 289/289 [00:13&lt;00:00, 21.43it/s]\n\n\n\n\n🏃 View run error_analysis_gemini_2.5_flash at: http://localhost:5000/#/experiments/1/runs/d415524ddcf94cd086f2f221c2f6f177\n🧪 View experiment at: http://localhost:5000/#/experiments/1\n\n\n\n\n\n\n\n\n\n\n\n\n\nCollapse MLflow Trace\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFrom the analysis above, we see that:\n\n\n\nMajority of the errors for all our selected models are due to incorrect ground truth.\n\n\nWe also see cases where the model was unable to generate the answer in the format as expected by the ground truth.\n\n\nFinally, somewhat surpringly, we see some results marked as “OK”, even though we only selected records that didn’t match the ground truth using our exact match metric.\n\n\n\nLet’s look through this more closely:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\n\n\nmodel_name\n\n\nquestion\n\n\nground_truth_answer\n\n\npredicted_answer\n\n\nassessment_answer\n\n\nassessment_reasoning\n\n\n\n\n\n\n0\n\n\nSingle_ETR/2011/page_22.pdf-3\n\n\nopenai/o4-mini-2025-04-16\n\n\nso what was the percentage change during this time?\n\n\n7.605000e-02\n\n\n7.6%\n\n\nGROUND_TRUTH_INCORRECT\n\n\nThe question asks for a “percentage change”. The model correctly c…\n\n\n\n\n1\n\n\nSingle_ETR/2004/page_258.pdf-4\n\n\nopenai/o4-mini-2025-04-16\n\n\nwhat is the percent change?\n\n\n1.473800e-01\n\n\n14.7%\n\n\nGROUND_TRUTH_INCORRECT\n\n\nThe question asks for the “percent change”. The predicted answer p…\n\n\n\n\n3\n\n\nSingle_ADI/2011/page_83.pdf-2\n\n\nopenai/o4-mini-2025-04-16\n\n\nwhat growth rate does this represent?\n\n\n8.290600e-01\n\n\n82.9%\n\n\nGROUND_TRUTH_INCORRECT\n\n\nThe question asks for a ‘growth rate’, which is typically expresse…\n\n\n\n\n4\n\n\nSingle_CB/2008/page_243.pdf-3\n\n\nopenai/o4-mini-2025-04-16\n\n\nwhat was the percent change?\n\n\n7.368000e-02\n\n\n7.37\n\n\nGROUND_TRUTH_INCORRECT\n\n\nThe question asks for the “percent change”. The model correctly ca…\n\n\n\n\n5\n\n\nSingle_AMT/2015/page_50.pdf-1\n\n\nopenai/o4-mini-2025-04-16\n\n\nwhat was the low for share price for the quarter ended 12/31/15?\n\n\n8.732000e+01\n\n\n90.2\n\n\nGROUND_TRUTH_INCORRECT\n\n\nThe question asks for the low share price for the quarter ended 12…\n\n\n\n\n…\n\n\n…\n\n\n…\n\n\n…\n\n\n…\n\n\n…\n\n\n…\n\n\n…\n\n\n\n\n282\n\n\nSingle_SLG/2017/page_114.pdf-3\n\n\nopenai/o3-2025-04-16\n\n\nso what was the percentage of pension plan contributions out of th…\n\n\n2.302800e-01\n\n\n23.03\n\n\nGROUND_TRUTH_INCORRECT\n\n\nThe question asks for a “percentage”. The model correctly calculat…\n\n\n\n\n283\n\n\nSingle_JPM/2008/page_177.pdf-4\n\n\nopenai/o3-2025-04-16\n\n\nwhat was the total amount of resale agreements in 2008, in millions?\n\n\n2.080000e+04\n\n\n200,265\n\n\nGROUND_TRUTH_INCORRECT\n\n\nThe question asks for the ’total amount of resale agreements in 20…\n\n\n\n\n284\n\n\nDouble_IPG/2014/page_95.pdf\n\n\nopenai/o3-2025-04-16\n\n\nand what is it for the the 2009 one?\n\n\n1.218121e+07\n\n\n435259\n\n\nGROUND_TRUTH_INCORRECT\n\n\nThe question asks for the value for “the 2009 one”. The previous t…\n\n\n\n\n286\n\n\nSingle_APTV/2018/page_36.pdf-2\n\n\nopenai/o3-2025-04-16\n\n\nhow much does the change in the value of the aptiv plc represent i…\n\n\n3.080000e-01\n\n\n30.8%\n\n\nGROUND_TRUTH_INCORRECT\n\n\nThe question asks for the answer “in percentage”. The model correc…\n\n\n\n\n288\n\n\nSingle_RCL/2016/page_7.pdf-3\n\n\nopenai/o3-2025-04-16\n\n\nwhat percentage change does this represent?\n\n\n1.600000e-01\n\n\n16.0\n\n\nGROUND_TRUTH_INCORRECT\n\n\nThe question asks for a ‘percentage change’. The model correctly c…\n\n\n\n\n\n226 rows × 7 columns\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAha! We see that while the predicted answer didnt match the ground truth exactly, it’s actually correct for all these cases. We can further use these examples to improve our exact match metric implementation!\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe above results are not conclusive by any means, since the LLM-as-a-judge approach also has known flaws. However, it does give us some pointers on how to improve the model performance from here!"
  }
]